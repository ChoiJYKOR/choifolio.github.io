import{Q as P,H as r,aS as o,aV as d}from"./index-1fe3a1ef.js";import{u as l}from"./useMutation-31c06883.js";const p=()=>P({queryKey:["videoPlaylists"],queryFn:async()=>{var t;const e=await o.getAll();return((t=e.data)==null?void 0:t.data)||e.data||[]},staleTime:5*60*1e3}),C=e=>P({queryKey:["videoPlaylist",e],queryFn:async()=>{var s;if(!e)throw new Error("ID가 필요합니다");const t=await o.getById(e);return((s=t.data)==null?void 0:s.data)||t.data},enabled:!!e,staleTime:5*60*1e3}),F=e=>P({queryKey:["playlistVideos",e],queryFn:async()=>{var s;if(!e)return[];const t=await d.getByPlaylist(e);return((s=t.data)==null?void 0:s.data)||t.data||[]},enabled:!!e,staleTime:5*60*1e3}),q=()=>{const e=r();return l({mutationFn:t=>o.create(t),onSuccess:()=>{e.invalidateQueries({queryKey:["videoPlaylists"]})}})},m=()=>{const e=r();return l({mutationFn:({id:t,data:s})=>o.update(t,s),onSuccess:(t,s)=>{e.invalidateQueries({queryKey:["videoPlaylists"]}),e.invalidateQueries({queryKey:["videoPlaylist",s.id]})}})},V=()=>{const e=r();return l({mutationFn:t=>o.delete(t),onSuccess:()=>{e.invalidateQueries({queryKey:["videoPlaylists"]})}})},w=()=>{const e=r();return l({mutationFn:t=>d.create(t),onSuccess:(t,s)=>{e.invalidateQueries({queryKey:["playlistVideos",s.playlistId]})}})},S=()=>{const e=r();return l({mutationFn:({id:t,data:s})=>d.update(t,s),onSuccess:t=>{var c,y;const s=(y=(c=t.data)==null?void 0:c.data)==null?void 0:y.playlistId;s&&e.invalidateQueries({queryKey:["playlistVideos",s]})}})},A=()=>{const e=r();return l({mutationFn:t=>d.delete(t),onSuccess:()=>{e.invalidateQueries({queryKey:["playlistVideos"]})}})},M=()=>{const{data:e=[],isLoading:t}=p(),s=q(),c=m(),y=V();return{playlists:e,isLoading:t,createPlaylist:async i=>{var n,u;try{console.log("🎬 재생 목록 생성 시도:",i);const a=await s.mutateAsync(i);return console.log("✅ 재생 목록 생성 성공:",a),{success:!0}}catch(a){return console.error("❌ 재생 목록 생성 실패:",a),console.error("❌ 에러 상세:",{message:a==null?void 0:a.message,response:(n=a==null?void 0:a.response)==null?void 0:n.data,status:(u=a==null?void 0:a.response)==null?void 0:u.status}),{success:!1,error:a}}},updatePlaylist:async(i,n)=>{try{return await c.mutateAsync({id:i,data:n}),{success:!0}}catch(u){return console.error("재생 목록 수정 실패:",u),{success:!1,error:u}}},deletePlaylist:async i=>{try{return await y.mutateAsync(i),{success:!0}}catch(n){return console.error("재생 목록 삭제 실패:",n),{success:!1,error:n}}}}};export{C as a,F as b,V as c,S as d,M as e,w as f,A as g,p as u};
