{"version":3,"file":"chunk-9a18e39e.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/@tanstack/query-core/build/modern/subscribable.js","../../node_modules/@tanstack/query-core/build/modern/timeoutManager.js","../../node_modules/@tanstack/query-core/build/modern/utils.js","../../node_modules/@tanstack/query-core/build/modern/focusManager.js","../../node_modules/@tanstack/query-core/build/modern/thenable.js","../../node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../node_modules/@tanstack/query-core/build/modern/retryer.js","../../node_modules/@tanstack/query-core/build/modern/removable.js","../../node_modules/@tanstack/query-core/build/modern/query.js","../../node_modules/@tanstack/query-core/build/modern/queryObserver.js","../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../node_modules/@tanstack/query-core/build/modern/mutationObserver.js","../../node_modules/@tanstack/query-core/build/modern/queryCache.js","../../node_modules/@tanstack/query-core/build/modern/queryClient.js","../../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js","../../node_modules/@tanstack/react-query/build/modern/IsRestoringProvider.js","../../node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js","../../node_modules/@tanstack/react-query/build/modern/suspense.js","../../node_modules/@tanstack/react-query/build/modern/useBaseQuery.js","../../node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js","../../node_modules/@tanstack/react-query/build/modern/useQuery.js","../../node_modules/@tanstack/react-query/build/modern/useMutation.js"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/timeoutManager.ts\nvar defaultTimeoutProvider = {\n  // We need the wrapper function syntax below instead of direct references to\n  // global setTimeout etc.\n  //\n  // BAD: `setTimeout: setTimeout`\n  // GOOD: `setTimeout: (cb, delay) => setTimeout(cb, delay)`\n  //\n  // If we use direct references here, then anything that wants to spy on or\n  // replace the global setTimeout (like tests) won't work since we'll already\n  // have a hard reference to the original implementation at the time when this\n  // file was imported.\n  setTimeout: (callback, delay) => setTimeout(callback, delay),\n  clearTimeout: (timeoutId) => clearTimeout(timeoutId),\n  setInterval: (callback, delay) => setInterval(callback, delay),\n  clearInterval: (intervalId) => clearInterval(intervalId)\n};\nvar TimeoutManager = class {\n  // We cannot have TimeoutManager<T> as we must instantiate it with a concrete\n  // type at app boot; and if we leave that type, then any new timer provider\n  // would need to support ReturnType<typeof setTimeout>, which is infeasible.\n  //\n  // We settle for type safety for the TimeoutProvider type, and accept that\n  // this class is unsafe internally to allow for extension.\n  #provider = defaultTimeoutProvider;\n  #providerCalled = false;\n  setTimeoutProvider(provider) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (this.#providerCalled && provider !== this.#provider) {\n        console.error(\n          `[timeoutManager]: Switching provider after calls to previous provider might result in unexpected behavior.`,\n          { previous: this.#provider, provider }\n        );\n      }\n    }\n    this.#provider = provider;\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = false;\n    }\n  }\n  setTimeout(callback, delay) {\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = true;\n    }\n    return this.#provider.setTimeout(callback, delay);\n  }\n  clearTimeout(timeoutId) {\n    this.#provider.clearTimeout(timeoutId);\n  }\n  setInterval(callback, delay) {\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = true;\n    }\n    return this.#provider.setInterval(callback, delay);\n  }\n  clearInterval(intervalId) {\n    this.#provider.clearInterval(intervalId);\n  }\n};\nvar timeoutManager = new TimeoutManager();\nfunction systemSetTimeoutZero(callback) {\n  setTimeout(callback, 0);\n}\nexport {\n  TimeoutManager,\n  defaultTimeoutProvider,\n  systemSetTimeoutZero,\n  timeoutManager\n};\n//# sourceMappingURL=timeoutManager.js.map","// src/utils.ts\nimport { timeoutManager } from \"./timeoutManager.js\";\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (!array && !(isPlainObject(a) && isPlainObject(b))) return b;\n  const aItems = array ? a : Object.keys(a);\n  const aSize = aItems.length;\n  const bItems = array ? b : Object.keys(b);\n  const bSize = bItems.length;\n  const copy = array ? new Array(bSize) : {};\n  let equalItems = 0;\n  for (let i = 0; i < bSize; i++) {\n    const key = array ? i : bItems[i];\n    const aItem = a[key];\n    const bItem = b[key];\n    if (aItem === bItem) {\n      copy[key] = aItem;\n      if (array ? i < aSize : hasOwn.call(a, key)) equalItems++;\n      continue;\n    }\n    if (aItem === null || bItem === null || typeof aItem !== \"object\" || typeof bItem !== \"object\") {\n      copy[key] = bItem;\n      continue;\n    }\n    const v = replaceEqualDeep(aItem, bItem);\n    copy[key] = v;\n    if (v === aItem) equalItems++;\n  }\n  return aSize === bSize && equalItems === aSize ? a : copy;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    timeoutManager.setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nfunction shouldThrowError(throwOnError, params) {\n  if (typeof throwOnError === \"function\") {\n    return throwOnError(...params);\n  }\n  return !!throwOnError;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  shouldThrowError,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/thenable.ts\nimport { noop } from \"./utils.js\";\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nfunction tryResolveSync(promise) {\n  let data;\n  promise.then((result) => {\n    data = result;\n    return result;\n  }, noop)?.catch(noop);\n  if (data !== void 0) {\n    return { data };\n  }\n  return void 0;\n}\nexport {\n  pendingThenable,\n  tryResolveSync\n};\n//# sourceMappingURL=thenable.js.map","// src/notifyManager.ts\nimport { systemSetTimeoutZero } from \"./timeoutManager.js\";\nvar defaultScheduler = systemSetTimeoutZero;\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = defaultScheduler;\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  defaultScheduler,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let continueFn;\n  const thenable = pendingThenable();\n  const isResolved = () => thenable.status !== \"pending\";\n  const cancel = (cancelOptions) => {\n    if (!isResolved()) {\n      const error = new CancelledError(cancelOptions);\n      reject(error);\n      config.onCancel?.(error);\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved() || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved()) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved()) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved()) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    status: () => thenable.status,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/removable.ts\nimport { timeoutManager } from \"./timeoutManager.js\";\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = timeoutManager.setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      timeoutManager.clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { CancelledError, canFetch, createRetryer } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n    if (this.state && this.state.data === void 0) {\n      const defaultState = getDefaultState(this.options);\n      if (defaultState.data !== void 0) {\n        this.setData(defaultState.data, {\n          updatedAt: defaultState.dataUpdatedAt,\n          manual: true\n        });\n        this.#initialState = defaultState;\n      }\n    }\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStatic() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => resolveStaleTime(observer.options.staleTime, this) === \"static\"\n      );\n    }\n    return false;\n  }\n  isStale() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0 || this.state.isInvalidated;\n  }\n  isStaleByTime(staleTime = 0) {\n    if (this.state.data === void 0) {\n      return true;\n    }\n    if (staleTime === \"static\") {\n      return false;\n    }\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  async fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\" && // If the promise in the retyer is already rejected, we have to definitely\n    // re-start the fetch; there is a chance that the query is still in a\n    // pending state when that happens\n    this.#retryer?.status() !== \"rejected\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const createQueryFnContext = () => {\n        const queryFnContext2 = {\n          client: this.#client,\n          queryKey: this.queryKey,\n          meta: this.meta\n        };\n        addSignalProperty(queryFnContext2);\n        return queryFnContext2;\n      };\n      const queryFnContext = createQueryFnContext();\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const createFetchContext = () => {\n      const context2 = {\n        fetchOptions,\n        options: this.options,\n        queryKey: this.queryKey,\n        client: this.#client,\n        state: this.state,\n        fetchFn\n      };\n      addSignalProperty(context2);\n      return context2;\n    };\n    const context = createFetchContext();\n    this.options.behavior?.onFetch(context, this);\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      onCancel: (error) => {\n        if (error instanceof CancelledError && error.revert) {\n          this.setState({\n            ...this.#revertState,\n            fetchStatus: \"idle\"\n          });\n        }\n        abortController.abort();\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    try {\n      const data = await this.#retryer.start();\n      if (data === void 0) {\n        if (process.env.NODE_ENV !== \"production\") {\n          console.error(\n            `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n          );\n        }\n        throw new Error(`${this.queryHash} data is undefined`);\n      }\n      this.setData(data);\n      this.#cache.config.onSuccess?.(data, this);\n      this.#cache.config.onSettled?.(\n        data,\n        this.state.error,\n        this\n      );\n      return data;\n    } catch (error) {\n      if (error instanceof CancelledError) {\n        if (error.silent) {\n          return this.#retryer.promise;\n        } else if (error.revert) {\n          if (this.state.data === void 0) {\n            throw error;\n          }\n          return this.state.data;\n        }\n      }\n      this.#dispatch({\n        type: \"error\",\n        error\n      });\n      this.#cache.config.onError?.(\n        error,\n        this\n      );\n      this.#cache.config.onSettled?.(\n        this.state.data,\n        error,\n        this\n      );\n      throw error;\n    } finally {\n      this.scheduleGc();\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          const newState = {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n          this.#revertState = action.manual ? newState : void 0;\n          return newState;\n        case \"error\":\n          const error = action.error;\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryObserver.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { fetchState } from \"./query.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale\n} from \"./utils.js\";\nimport { timeoutManager } from \"./timeoutManager.js\";\nvar QueryObserver = class extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.options = options;\n    this.#client = client;\n    this.#selectError = null;\n    this.#currentThenable = pendingThenable();\n    this.bindMethods();\n    this.setOptions(options);\n  }\n  #client;\n  #currentQuery = void 0;\n  #currentQueryInitialState = void 0;\n  #currentResult = void 0;\n  #currentResultState;\n  #currentResultOptions;\n  #currentThenable;\n  #selectError;\n  #selectFn;\n  #selectResult;\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData;\n  #staleTimeoutId;\n  #refetchIntervalId;\n  #currentRefetchInterval;\n  #trackedProps = /* @__PURE__ */ new Set();\n  bindMethods() {\n    this.refetch = this.refetch.bind(this);\n  }\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this);\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch();\n      } else {\n        this.updateResult();\n      }\n      this.#updateTimers();\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect\n    );\n  }\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus\n    );\n  }\n  destroy() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.#clearStaleTimeout();\n    this.#clearRefetchInterval();\n    this.#currentQuery.removeObserver(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    const prevQuery = this.#currentQuery;\n    this.options = this.#client.defaultQueryOptions(options);\n    if (this.options.enabled !== void 0 && typeof this.options.enabled !== \"boolean\" && typeof this.options.enabled !== \"function\" && typeof resolveEnabled(this.options.enabled, this.#currentQuery) !== \"boolean\") {\n      throw new Error(\n        \"Expected enabled to be a boolean or a callback that returns a boolean\"\n      );\n    }\n    this.#updateQuery();\n    this.#currentQuery.setOptions(this.options);\n    if (prevOptions._defaulted && !shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getQueryCache().notify({\n        type: \"observerOptionsUpdated\",\n        query: this.#currentQuery,\n        observer: this\n      });\n    }\n    const mounted = this.hasListeners();\n    if (mounted && shouldFetchOptionally(\n      this.#currentQuery,\n      prevQuery,\n      this.options,\n      prevOptions\n    )) {\n      this.#executeFetch();\n    }\n    this.updateResult();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || resolveStaleTime(this.options.staleTime, this.#currentQuery) !== resolveStaleTime(prevOptions.staleTime, this.#currentQuery))) {\n      this.#updateStaleTimeout();\n    }\n    const nextRefetchInterval = this.#computeRefetchInterval();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) {\n      this.#updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n  getOptimisticResult(options) {\n    const query = this.#client.getQueryCache().build(this.#client, options);\n    const result = this.createResult(query, options);\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      this.#currentResult = result;\n      this.#currentResultOptions = this.options;\n      this.#currentResultState = this.#currentQuery.state;\n    }\n    return result;\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  trackResult(result, onPropTracked) {\n    return new Proxy(result, {\n      get: (target, key) => {\n        this.trackProp(key);\n        onPropTracked?.(key);\n        if (key === \"promise\" && !this.options.experimental_prefetchInRender && this.#currentThenable.status === \"pending\") {\n          this.#currentThenable.reject(\n            new Error(\n              \"experimental_prefetchInRender feature flag is not enabled\"\n            )\n          );\n        }\n        return Reflect.get(target, key);\n      }\n    });\n  }\n  trackProp(key) {\n    this.#trackedProps.add(key);\n  }\n  getCurrentQuery() {\n    return this.#currentQuery;\n  }\n  refetch({ ...options } = {}) {\n    return this.fetch({\n      ...options\n    });\n  }\n  fetchOptimistic(options) {\n    const defaultedOptions = this.#client.defaultQueryOptions(options);\n    const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n  fetch(fetchOptions) {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true\n    }).then(() => {\n      this.updateResult();\n      return this.#currentResult;\n    });\n  }\n  #executeFetch(fetchOptions) {\n    this.#updateQuery();\n    let promise = this.#currentQuery.fetch(\n      this.options,\n      fetchOptions\n    );\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop);\n    }\n    return promise;\n  }\n  #updateStaleTimeout() {\n    this.#clearStaleTimeout();\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery\n    );\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return;\n    }\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime);\n    const timeout = time + 1;\n    this.#staleTimeoutId = timeoutManager.setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n  #computeRefetchInterval() {\n    return (typeof this.options.refetchInterval === \"function\" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;\n  }\n  #updateRefetchInterval(nextInterval) {\n    this.#clearRefetchInterval();\n    this.#currentRefetchInterval = nextInterval;\n    if (isServer || resolveEnabled(this.options.enabled, this.#currentQuery) === false || !isValidTimeout(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {\n      return;\n    }\n    this.#refetchIntervalId = timeoutManager.setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.#executeFetch();\n      }\n    }, this.#currentRefetchInterval);\n  }\n  #updateTimers() {\n    this.#updateStaleTimeout();\n    this.#updateRefetchInterval(this.#computeRefetchInterval());\n  }\n  #clearStaleTimeout() {\n    if (this.#staleTimeoutId) {\n      timeoutManager.clearTimeout(this.#staleTimeoutId);\n      this.#staleTimeoutId = void 0;\n    }\n  }\n  #clearRefetchInterval() {\n    if (this.#refetchIntervalId) {\n      timeoutManager.clearInterval(this.#refetchIntervalId);\n      this.#refetchIntervalId = void 0;\n    }\n  }\n  createResult(query, options) {\n    const prevQuery = this.#currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.#currentResult;\n    const prevResultState = this.#currentResultState;\n    const prevResultOptions = this.#currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;\n    const { state } = query;\n    let newState = { ...state };\n    let isPlaceholderData = false;\n    let data;\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options)\n        };\n      }\n      if (options._optimisticResults === \"isRestoring\") {\n        newState.fetchStatus = \"idle\";\n      }\n    }\n    let { error, errorUpdatedAt, status } = newState;\n    data = newState.data;\n    let skipSelect = false;\n    if (options.placeholderData !== void 0 && data === void 0 && status === \"pending\") {\n      let placeholderData;\n      if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {\n        placeholderData = prevResult.data;\n        skipSelect = true;\n      } else {\n        placeholderData = typeof options.placeholderData === \"function\" ? options.placeholderData(\n          this.#lastQueryWithDefinedData?.state.data,\n          this.#lastQueryWithDefinedData\n        ) : options.placeholderData;\n      }\n      if (placeholderData !== void 0) {\n        status = \"success\";\n        data = replaceData(\n          prevResult?.data,\n          placeholderData,\n          options\n        );\n        isPlaceholderData = true;\n      }\n    }\n    if (options.select && data !== void 0 && !skipSelect) {\n      if (prevResult && data === prevResultState?.data && options.select === this.#selectFn) {\n        data = this.#selectResult;\n      } else {\n        try {\n          this.#selectFn = options.select;\n          data = options.select(data);\n          data = replaceData(prevResult?.data, data, options);\n          this.#selectResult = data;\n          this.#selectError = null;\n        } catch (selectError) {\n          this.#selectError = selectError;\n        }\n      }\n    }\n    if (this.#selectError) {\n      error = this.#selectError;\n      data = this.#selectResult;\n      errorUpdatedAt = Date.now();\n      status = \"error\";\n    }\n    const isFetching = newState.fetchStatus === \"fetching\";\n    const isPending = status === \"pending\";\n    const isError = status === \"error\";\n    const isLoading = isPending && isFetching;\n    const hasData = data !== void 0;\n    const result = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === \"success\",\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === \"paused\",\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable,\n      isEnabled: resolveEnabled(options.enabled, query) !== false\n    };\n    const nextResult = result;\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable) => {\n        if (nextResult.status === \"error\") {\n          thenable.reject(nextResult.error);\n        } else if (nextResult.data !== void 0) {\n          thenable.resolve(nextResult.data);\n        }\n      };\n      const recreateThenable = () => {\n        const pending = this.#currentThenable = nextResult.promise = pendingThenable();\n        finalizeThenableIfPossible(pending);\n      };\n      const prevThenable = this.#currentThenable;\n      switch (prevThenable.status) {\n        case \"pending\":\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable);\n          }\n          break;\n        case \"fulfilled\":\n          if (nextResult.status === \"error\" || nextResult.data !== prevThenable.value) {\n            recreateThenable();\n          }\n          break;\n        case \"rejected\":\n          if (nextResult.status !== \"error\" || nextResult.error !== prevThenable.reason) {\n            recreateThenable();\n          }\n          break;\n      }\n    }\n    return nextResult;\n  }\n  updateResult() {\n    const prevResult = this.#currentResult;\n    const nextResult = this.createResult(this.#currentQuery, this.options);\n    this.#currentResultState = this.#currentQuery.state;\n    this.#currentResultOptions = this.options;\n    if (this.#currentResultState.data !== void 0) {\n      this.#lastQueryWithDefinedData = this.#currentQuery;\n    }\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n    this.#currentResult = nextResult;\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n      const { notifyOnChangeProps } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === \"function\" ? notifyOnChangeProps() : notifyOnChangeProps;\n      if (notifyOnChangePropsValue === \"all\" || !notifyOnChangePropsValue && !this.#trackedProps.size) {\n        return true;\n      }\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps\n      );\n      if (this.options.throwOnError) {\n        includedProps.add(\"error\");\n      }\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key;\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n    this.#notify({ listeners: shouldNotifyListeners() });\n  }\n  #updateQuery() {\n    const query = this.#client.getQueryCache().build(this.#client, this.options);\n    if (query === this.#currentQuery) {\n      return;\n    }\n    const prevQuery = this.#currentQuery;\n    this.#currentQuery = query;\n    this.#currentQueryInitialState = query.state;\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n  onQueryUpdate() {\n    this.updateResult();\n    if (this.hasListeners()) {\n      this.#updateTimers();\n    }\n  }\n  #notify(notifyOptions) {\n    notifyManager.batch(() => {\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult);\n        });\n      }\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: \"observerResultsUpdated\"\n      });\n    });\n  }\n};\nfunction shouldLoadOnMount(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === \"error\" && options.retryOnMount === false);\n}\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\nfunction shouldFetchOn(query, options, field) {\n  if (resolveEnabled(options.enabled, query) !== false && resolveStaleTime(options.staleTime, query) !== \"static\") {\n    const value = typeof field === \"function\" ? field(query) : field;\n    return value === \"always\" || value !== false && isStale(query, options);\n  }\n  return false;\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return (query !== prevQuery || resolveEnabled(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== \"error\") && isStale(query, options);\n}\nfunction isStale(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.isStaleByTime(resolveStaleTime(options.staleTime, query));\n}\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult) {\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  }\n  return false;\n}\nexport {\n  QueryObserver\n};\n//# sourceMappingURL=queryObserver.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const createQueryFnContext = () => {\n            const queryFnContext2 = {\n              client: context.client,\n              queryKey: context.queryKey,\n              pageParam: param,\n              direction: previous ? \"backward\" : \"forward\",\n              meta: context.options.meta\n            };\n            addSignalProperty(queryFnContext2);\n            return queryFnContext2;\n          };\n          const queryFnContext = createQueryFnContext();\n          const page = await queryFn(queryFnContext);\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data) return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam) return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #client;\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.#client = config.client;\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const onContinue = () => {\n      this.#dispatch({ type: \"continue\" });\n    };\n    const mutationFnContext = {\n      client: this.#client,\n      meta: this.options.meta,\n      mutationKey: this.options.mutationKey\n    };\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables, mutationFnContext);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (restored) {\n        onContinue();\n      } else {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this,\n          mutationFnContext\n        );\n        const context = await this.options.onMutate?.(\n          variables,\n          mutationFnContext\n        );\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this,\n        mutationFnContext\n      );\n      await this.options.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        mutationFnContext\n      );\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this,\n        mutationFnContext\n      );\n      await this.options.onSettled?.(\n        data,\n        null,\n        variables,\n        this.state.context,\n        mutationFnContext\n      );\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this,\n          mutationFnContext\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context,\n          mutationFnContext\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this,\n          mutationFnContext\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context,\n          mutationFnContext\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Set();\n    this.#scopes = /* @__PURE__ */ new Map();\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #scopes;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      client,\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = this.#scopes.get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        this.#scopes.set(scope, [mutation]);\n      }\n    }\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = this.#scopes.get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === \"pending\"\n      );\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: \"removed\", mutation });\n      });\n      this.#mutations.clear();\n      this.#scopes.clear();\n    });\n  }\n  getAll() {\n    return Array.from(this.#mutations);\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/mutationObserver.ts\nimport { getDefaultState } from \"./mutation.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { hashKey, shallowEqualObjects } from \"./utils.js\";\nvar MutationObserver = class extends Subscribable {\n  #client;\n  #currentResult = void 0;\n  #currentMutation;\n  #mutateOptions;\n  constructor(client, options) {\n    super();\n    this.#client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.#updateResult();\n  }\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    this.options = this.#client.defaultMutationOptions(options);\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: \"observerOptionsUpdated\",\n        mutation: this.#currentMutation,\n        observer: this\n      });\n    }\n    if (prevOptions?.mutationKey && this.options.mutationKey && hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)) {\n      this.reset();\n    } else if (this.#currentMutation?.state.status === \"pending\") {\n      this.#currentMutation.setOptions(this.options);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this);\n    }\n  }\n  onMutationUpdate(action) {\n    this.#updateResult();\n    this.#notify(action);\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  reset() {\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = void 0;\n    this.#updateResult();\n    this.#notify();\n  }\n  mutate(variables, options) {\n    this.#mutateOptions = options;\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = this.#client.getMutationCache().build(this.#client, this.options);\n    this.#currentMutation.addObserver(this);\n    return this.#currentMutation.execute(variables);\n  }\n  #updateResult() {\n    const state = this.#currentMutation?.state ?? getDefaultState();\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === \"pending\",\n      isSuccess: state.status === \"success\",\n      isError: state.status === \"error\",\n      isIdle: state.status === \"idle\",\n      mutate: this.mutate,\n      reset: this.reset\n    };\n  }\n  #notify(action) {\n    notifyManager.batch(() => {\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables;\n        const onMutateResult = this.#currentResult.context;\n        const context = {\n          client: this.#client,\n          meta: this.options.meta,\n          mutationKey: this.options.mutationKey\n        };\n        if (action?.type === \"success\") {\n          this.#mutateOptions.onSuccess?.(\n            action.data,\n            variables,\n            onMutateResult,\n            context\n          );\n          this.#mutateOptions.onSettled?.(\n            action.data,\n            null,\n            variables,\n            onMutateResult,\n            context\n          );\n        } else if (action?.type === \"error\") {\n          this.#mutateOptions.onError?.(\n            action.error,\n            variables,\n            onMutateResult,\n            context\n          );\n          this.#mutateOptions.onSettled?.(\n            void 0,\n            action.error,\n            variables,\n            onMutateResult,\n            context\n          );\n        }\n      }\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult);\n      });\n    });\n  }\n};\nexport {\n  MutationObserver\n};\n//# sourceMappingURL=mutationObserver.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1) return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0) return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(\n      options.queryHash\n    )?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(\n        {\n          type: \"active\",\n          ...filters\n        },\n        options\n      );\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? \"active\"\n        },\n        options\n      );\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled() && !query.isStatic()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","\"use client\";\n\n// src/QueryClientProvider.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar QueryClientContext = React.createContext(\n  void 0\n);\nvar useQueryClient = (queryClient) => {\n  const client = React.useContext(QueryClientContext);\n  if (queryClient) {\n    return queryClient;\n  }\n  if (!client) {\n    throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n  }\n  return client;\n};\nvar QueryClientProvider = ({\n  client,\n  children\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n  return /* @__PURE__ */ jsx(QueryClientContext.Provider, { value: client, children });\n};\nexport {\n  QueryClientContext,\n  QueryClientProvider,\n  useQueryClient\n};\n//# sourceMappingURL=QueryClientProvider.js.map","\"use client\";\n\n// src/IsRestoringProvider.ts\nimport * as React from \"react\";\nvar IsRestoringContext = React.createContext(false);\nvar useIsRestoring = () => React.useContext(IsRestoringContext);\nvar IsRestoringProvider = IsRestoringContext.Provider;\nexport {\n  IsRestoringProvider,\n  useIsRestoring\n};\n//# sourceMappingURL=IsRestoringProvider.js.map","\"use client\";\n\n// src/QueryErrorResetBoundary.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\nvar QueryErrorResetBoundaryContext = React.createContext(createValue());\nvar useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext);\nvar QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /* @__PURE__ */ jsx(QueryErrorResetBoundaryContext.Provider, { value, children: typeof children === \"function\" ? children(value) : children });\n};\nexport {\n  QueryErrorResetBoundary,\n  useQueryErrorResetBoundary\n};\n//# sourceMappingURL=QueryErrorResetBoundary.js.map","// src/suspense.ts\nvar defaultThrowOnError = (_error, query) => query.state.data === void 0;\nvar ensureSuspenseTimers = (defaultedOptions) => {\n  if (defaultedOptions.suspense) {\n    const MIN_SUSPENSE_TIME_MS = 1e3;\n    const clamp = (value) => value === \"static\" ? value : Math.max(value ?? MIN_SUSPENSE_TIME_MS, MIN_SUSPENSE_TIME_MS);\n    const originalStaleTime = defaultedOptions.staleTime;\n    defaultedOptions.staleTime = typeof originalStaleTime === \"function\" ? (...args) => clamp(originalStaleTime(...args)) : clamp(originalStaleTime);\n    if (typeof defaultedOptions.gcTime === \"number\") {\n      defaultedOptions.gcTime = Math.max(\n        defaultedOptions.gcTime,\n        MIN_SUSPENSE_TIME_MS\n      );\n    }\n  }\n};\nvar willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nvar shouldSuspend = (defaultedOptions, result) => defaultedOptions?.suspense && result.isPending;\nvar fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).catch(() => {\n  errorResetBoundary.clearReset();\n});\nexport {\n  defaultThrowOnError,\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n};\n//# sourceMappingURL=suspense.js.map","\"use client\";\n\n// src/useBaseQuery.ts\nimport * as React from \"react\";\nimport { isServer, noop, notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nimport { useQueryErrorResetBoundary } from \"./QueryErrorResetBoundary.js\";\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n} from \"./errorBoundaryUtils.js\";\nimport { useIsRestoring } from \"./IsRestoringProvider.js\";\nimport {\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n} from \"./suspense.js\";\nfunction useBaseQuery(options, Observer, queryClient) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof options !== \"object\" || Array.isArray(options)) {\n      throw new Error(\n        'Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object'\n      );\n    }\n  }\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const client = useQueryClient(queryClient);\n  const defaultedOptions = client.defaultQueryOptions(options);\n  client.getDefaultOptions().queries?._experimental_beforeQuery?.(\n    defaultedOptions\n  );\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!defaultedOptions.queryFn) {\n      console.error(\n        `[${defaultedOptions.queryHash}]: No queryFn was passed as an option, and no default queryFn was found. The queryFn parameter is only optional when using a default queryFn. More info here: https://tanstack.com/query/latest/docs/framework/react/guides/default-query-function`\n      );\n    }\n  }\n  defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n  ensureSuspenseTimers(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);\n  const [observer] = React.useState(\n    () => new Observer(\n      client,\n      defaultedOptions\n    )\n  );\n  const result = observer.getOptimisticResult(defaultedOptions);\n  const shouldSubscribe = !isRestoring && options.subscribed !== false;\n  React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = shouldSubscribe ? observer.subscribe(notifyManager.batchCalls(onStoreChange)) : noop;\n        observer.updateResult();\n        return unsubscribe;\n      },\n      [observer, shouldSubscribe]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  React.useEffect(() => {\n    observer.setOptions(defaultedOptions);\n  }, [defaultedOptions, observer]);\n  if (shouldSuspend(defaultedOptions, result)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  }\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    throwOnError: defaultedOptions.throwOnError,\n    query: client.getQueryCache().get(defaultedOptions.queryHash),\n    suspense: defaultedOptions.suspense\n  })) {\n    throw result.error;\n  }\n  ;\n  client.getDefaultOptions().queries?._experimental_afterQuery?.(\n    defaultedOptions,\n    result\n  );\n  if (defaultedOptions.experimental_prefetchInRender && !isServer && willFetch(result, isRestoring)) {\n    const promise = isNewCacheEntry ? (\n      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n      fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n    ) : (\n      // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n      client.getQueryCache().get(defaultedOptions.queryHash)?.promise\n    );\n    promise?.catch(noop).finally(() => {\n      observer.updateResult();\n    });\n  }\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\nexport {\n  useBaseQuery\n};\n//# sourceMappingURL=useBaseQuery.js.map","\"use client\";\n\n// src/errorBoundaryUtils.ts\nimport * as React from \"react\";\nimport { shouldThrowError } from \"@tanstack/query-core\";\nvar ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.throwOnError || options.experimental_prefetchInRender) {\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nvar useClearResetErrorBoundary = (errorResetBoundary) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nvar getHasError = ({\n  result,\n  errorResetBoundary,\n  throwOnError,\n  query,\n  suspense\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && query && (suspense && result.data === void 0 || shouldThrowError(throwOnError, [result.error, query]));\n};\nexport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n};\n//# sourceMappingURL=errorBoundaryUtils.js.map","\"use client\";\n\n// src/useQuery.ts\nimport { QueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useQuery(options, queryClient) {\n  return useBaseQuery(options, QueryObserver, queryClient);\n}\nexport {\n  useQuery\n};\n//# sourceMappingURL=useQuery.js.map","\"use client\";\n\n// src/useMutation.ts\nimport * as React from \"react\";\nimport {\n  MutationObserver,\n  noop,\n  notifyManager,\n  shouldThrowError\n} from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nfunction useMutation(options, queryClient) {\n  const client = useQueryClient(queryClient);\n  const [observer] = React.useState(\n    () => new MutationObserver(\n      client,\n      options\n    )\n  );\n  React.useEffect(() => {\n    observer.setOptions(options);\n  }, [observer, options]);\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  const mutate = React.useCallback(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop);\n    },\n    [observer]\n  );\n  if (result.error && shouldThrowError(observer.options.throwOnError, [result.error])) {\n    throw result.error;\n  }\n  return { ...result, mutate, mutateAsync: result.mutate };\n}\nexport {\n  useMutation\n};\n//# sourceMappingURL=useMutation.js.map"],"names":["f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","Subscribable","constructor","this","listeners","Set","subscribe","bind","listener","add","onSubscribe","delete","onUnsubscribe","hasListeners","size","defaultTimeoutProvider","setTimeout","callback","delay","clearTimeout","timeoutId","setInterval","clearInterval","intervalId","timeoutManager","_a","__privateAdd","_provider","_providerCalled","setTimeoutProvider","provider","__privateSet","__privateGet","WeakMap","isServer","window","globalThis","noop","isValidTimeout","value","Infinity","timeUntilStale","updatedAt","staleTime","Math","max","Date","now","resolveStaleTime","query","resolveEnabled","enabled","matchQuery","filters","exact","fetchStatus","predicate","queryKey","stale","queryHash","hashQueryKeyByOptions","options","partialMatchKey","isActive","isStale","state","matchMutation","mutation","status","mutationKey","hashKey","queryKeyHashFn","JSON","stringify","_","val","isPlainObject","keys","sort","reduce","result","every","hasOwn","replaceEqualDeep","array","isPlainArray","aSize","length","bItems","bSize","copy","Array","equalItems","i","aItem","bItem","v","shallowEqualObjects","isArray","o","hasObjectPrototype","ctor","prot","getPrototypeOf","toString","replaceData","prevData","data","structuralSharing","addToEnd","items","item","newItems","slice","addToStart","skipToken","ensureQueryFn","fetchOptions","queryFn","initialPromise","Promise","reject","Error","shouldThrowError","throwOnError","params","focusManager","_b","_focused","_cleanup","_setup","onFocus","addEventListener","removeEventListener","setEventListener","setup","focused","setFocused","isFocused","forEach","document","visibilityState","pendingThenable","resolve","thenable","_resolve","_reject","finalize","assign","catch","reason","defaultScheduler","notifyManager","queue","transactions","notifyFn","batchNotifyFn","scheduleFn","schedule","push","batch","originalQueue","batchCalls","args","setNotifyFunction","fn","setBatchNotifyFunction","setScheduler","createNotifyManager","onlineManager","_c","_online","onOnline","onlineListener","offlineListener","setOnline","online","isOnline","defaultRetryDelay","failureCount","min","canFetch","networkMode","CancelledError","super","revert","silent","createRetryer","config","continueFn","isRetryCancelled","isResolved","canContinue","canRun","canStart","pause","continueResolve","onPause","then","onContinue","run","promiseOrValue","error","retry","retryDelay","shouldRetry","timeout","onFail","promise","cancel","cancelOptions","onCancel","continue","cancelRetry","continueRetry","start","Removable","_d","_gcTimeout","destroy","clearGcTimeout","scheduleGc","gcTime","optionalRemove","updateGcTime","newGcTime","Query","_e","_dispatch","_initialState","_revertState","_cache","_client","_retryer","_defaultOptions","_abortSignalConsumed","defaultOptions","setOptions","observers","client","getQueryCache","getDefaultState","meta","defaultState","setData","dataUpdatedAt","manual","remove","newData","__privateMethod","setState","setStateOptions","reset","some","observer","isDisabled","getObserversCount","dataUpdateCount","errorUpdateCount","isStatic","getCurrentResult","isInvalidated","isStaleByTime","find","x","shouldFetchOnWindowFocus","refetch","cancelRefetch","shouldFetchOnReconnect","addObserver","includes","notify","removeObserver","filter","invalidate","dispatch_fn","fetch","abortController","AbortController","addSignalProperty","object","defineProperty","enumerable","get","signal","fetchFn","queryFnContext","queryFnContext2","createQueryFnContext","persister","context","context2","createFetchContext","behavior","onFetch","fetchMeta","abort","_f","onSuccess","_h","_g","onSettled","_j","_i","onError","_l","_k","WeakSet","action","fetchFailureCount","fetchFailureReason","fetchState","newState","errorUpdatedAt","reducer","onQueryUpdate","initialData","hasData","initialDataUpdatedAt","QueryObserver","_executeFetch","_updateStaleTimeout","_computeRefetchInterval","_updateRefetchInterval","_updateTimers","_clearStaleTimeout","_clearRefetchInterval","_updateQuery","_notify","_currentQuery","_currentQueryInitialState","_currentResult","_currentResultState","_currentResultOptions","_currentThenable","_selectError","_selectFn","_selectResult","_lastQueryWithDefinedData","_staleTimeoutId","_refetchIntervalId","_currentRefetchInterval","_trackedProps","bindMethods","shouldFetchOnMount","executeFetch_fn","updateResult","updateTimers_fn","shouldFetchOn","refetchOnReconnect","refetchOnWindowFocus","clearStaleTimeout_fn","clearRefetchInterval_fn","prevOptions","prevQuery","defaultQueryOptions","updateQuery_fn","_defaulted","mounted","shouldFetchOptionally","updateStaleTimeout_fn","nextRefetchInterval","computeRefetchInterval_fn","getOptimisticResult","build","createResult","optimisticResult","shouldAssignObserverCurrentProperties","trackResult","onPropTracked","Proxy","target","trackProp","experimental_prefetchInRender","Reflect","getCurrentQuery","fetchOptimistic","defaultedOptions","prevResult","prevResultState","prevResultOptions","queryInitialState","isPlaceholderData","_optimisticResults","fetchOnMount","fetchOptionally","skipSelect","placeholderData","select","selectError","isFetching","isPending","isError","isLoading","nextResult","isSuccess","isInitialLoading","failureReason","isFetched","isFetchedAfterMount","isRefetching","isLoadingError","isPaused","isRefetchError","isEnabled","finalizeThenableIfPossible","recreateThenable","pending","prevThenable","notify_fn","notifyOnChangeProps","notifyOnChangePropsValue","includedProps","typedKey","has","shouldNotifyListeners","refetchInterval","updateRefetchInterval_fn","nextInterval","refetchIntervalInBackground","notifyOptions","retryOnMount","shouldLoadOnMount","refetchOnMount","field","suspense","infiniteQueryBehavior","pages","direction","fetchMore","oldPages","oldPageParams","pageParams","currentPage","async","cancelled","fetchPage","param","previous","pageParam","aborted","page","maxPages","addTo","oldData","getPreviousPageParam","getNextPageParam","remainingPages","initialPageParam","lastIndex","Mutation","_observers","_mutationCache","mutationId","mutationCache","variables","submittedAt","execute","mutationFnContext","mutationFn","restored","onMutate","_n","_m","_p","_o","_r","_q","_t","_s","runNext","onMutationUpdate","MutationCache","_mutations","_scopes","_mutationId","Map","__privateWrapper","defaultMutationOptions","scope","scopeFor","scopedMutations","set","index","indexOf","splice","mutationsWithSameScope","firstPendingMutation","foundMutation","clear","getAll","from","defaultedFilters","findAll","event","resumePausedMutations","pausedMutations","all","map","id","MutationObserver","_updateResult","_currentMutation","_mutateOptions","updateResult_fn","mutate","getMutationCache","isIdle","onMutateResult","QueryCache","_queries","getQueryDefaults","queryInMap","values","queries","QueryClient","_queryCache","_queryDefaults","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","queryCache","mount","unmount","isMutating","getQueryData","ensureQueryData","cachedData","fetchQuery","revalidateIfStale","prefetchQuery","getQueriesData","setQueryData","updater","input","functionalUpdate","setQueriesData","getQueryState","removeQueries","resetQueries","refetchQueries","cancelQueries","defaultedCancelOptions","promises","invalidateQueries","refetchType","fetchInfiniteQuery","prefetchInfiniteQuery","ensureInfiniteQueryData","getDefaultOptions","setDefaultOptions","setQueryDefaults","defaults","queryDefault","setMutationDefaults","getMutationDefaults","mutations","QueryClientContext","React.createContext","createContext","useQueryClient","queryClient","React.useContext","QueryClientProvider","children","React.useEffect","Provider","IsRestoringContext","QueryErrorResetBoundaryContext","isReset","clearReset","createValue","errorResetBoundary","useBaseQuery","Observer","isRestoring","useContext","_experimental_beforeQuery","MIN_SUSPENSE_TIME_MS","clamp","originalStaleTime","ensureSuspenseTimers","ensurePreventErrorBoundaryRetry","useClearResetErrorBoundary","isNewCacheEntry","React.useState","useState","shouldSubscribe","subscribed","reactExports","useSyncExternalStore","React.useCallback","useCallback","onStoreChange","unsubscribe","shouldSuspend","getHasError","_experimental_afterQuery","willFetch","finally","useQuery","useMutation","React.useSyncExternalStore","mutateOptions","mutateAsync"],"mappings":"4tBASiBA,GAAEC,GAAiBC,GAAEC,OAAOC,IAAI,iBAAiBC,GAAEF,OAAOC,IAAI,kBAAkBE,GAAEC,OAAOC,UAAUC,eAAeC,GAAEV,GAAEW,mDAAmDC,kBAAkBC,GAAE,CAACC,KAAI,EAAGC,KAAI,EAAGC,QAAO,EAAGC,UAAS,GAChP,SAASC,GAAEC,EAAEC,EAAEC,GAAG,IAAIC,EAAEC,EAAE,GAAGC,EAAE,KAAKC,EAAE,KAAiF,IAAIH,UAAvE,IAAAD,IAAIG,EAAE,GAAGH,QAAG,IAASD,EAAEN,MAAMU,EAAE,GAAGJ,EAAEN,UAAc,IAAAM,EAAEL,MAAMU,EAAEL,EAAEL,KAAcK,EAAEd,GAAEoB,KAAKN,EAAEE,KAAKT,GAAEJ,eAAea,KAAKC,EAAED,GAAGF,EAAEE,IAAI,GAAGH,GAAGA,EAAEQ,aAAiB,IAAAL,KAAKF,EAAED,EAAEQ,kBAAe,IAASJ,EAAED,KAAKC,EAAED,GAAGF,EAAEE,IAAI,MAAM,CAACM,SAAS1B,GAAE2B,KAAKV,EAAEL,IAAIU,EAAET,IAAIU,EAAEK,MAAMP,EAAEQ,OAAOrB,GAAEsB,QAAQ,aAAkB3B,GAAa4B,GAAAC,IAAChB,GAAEe,GAAAE,KAAajB,GCPxWkB,GAAAC,QAAiBpC,qBCFfqC,GAAe,MACjB,WAAAC,GACOC,KAAAC,cAAgCC,IACrCF,KAAKG,UAAYH,KAAKG,UAAUC,KAAKJ,KACtC,CACD,SAAAG,CAAUE,GAGR,OAFKL,KAAAC,UAAUK,IAAID,GACnBL,KAAKO,cACE,KACAP,KAAAC,UAAUO,OAAOH,GACtBL,KAAKS,gBAER,CACD,YAAAC,GACS,OAAAV,KAAKC,UAAUU,KAAO,CAC9B,CACD,WAAAJ,GACC,CACD,aAAAE,GACC,GCnBCG,GAAyB,CAW3BC,WAAY,CAACC,EAAUC,IAAUF,WAAWC,EAAUC,GACtDC,aAAeC,GAAcD,aAAaC,GAC1CC,YAAa,CAACJ,EAAUC,IAAUG,YAAYJ,EAAUC,GACxDI,cAAgBC,GAAeD,cAAcC,IA4C3CC,GAAiB,IA1CAC,EAAM,MAAN,WAAAvB,GAOPwB,GAAAvB,KAAAwB,EAAAZ,IACMW,GAAAvB,KAAAyB,GAAA,EAAA,CAClB,kBAAAC,CAAmBC,GASjBC,GAAA5B,KAAKwB,EAAYG,EAIlB,CACD,UAAAd,CAAWC,EAAUC,GAInB,OAAOc,GAAK7B,KAAAwB,GAAUX,WAAWC,EAAUC,EAC5C,CACD,YAAAC,CAAaC,GACNY,GAAA7B,KAAAwB,GAAUR,aAAaC,EAC7B,CACD,WAAAC,CAAYJ,EAAUC,GAIpB,OAAOc,GAAK7B,KAAAwB,GAAUN,YAAYJ,EAAUC,EAC7C,CACD,aAAAI,CAAcC,GACPS,GAAA7B,KAAAwB,GAAUL,cAAcC,EAC9B,GAjCDI,cACAC,EARmB,IAAAK,QAAAR,GCfrB,IAAIS,GAA6B,oBAAXC,QAA0B,SAAUC,WAC1D,SAASC,KACT,CAIA,SAASC,GAAeC,GACtB,MAAwB,iBAAVA,GAAsBA,GAAS,GAAKA,IAAUC,GAC9D,CACA,SAASC,GAAeC,EAAWC,GAC1B,OAAAC,KAAKC,IAAIH,GAAaC,GAAa,GAAKG,KAAKC,MAAO,EAC7D,CACA,SAASC,GAAiBL,EAAWM,GACnC,MAA4B,mBAAdN,EAA2BA,EAAUM,GAASN,CAC9D,CACA,SAASO,GAAeC,EAASF,GAC/B,MAA0B,mBAAZE,EAAyBA,EAAQF,GAASE,CAC1D,CACA,SAASC,GAAWC,EAASJ,GACrB,MAAAzD,KACJA,EAAO,MAAA8D,MACPA,EAAAC,YACAA,EAAAC,UACAA,EAAAC,SACAA,EAAAC,MACAA,GACEL,EACJ,GAAII,EACF,GAAIH,GACF,GAAIL,EAAMU,YAAcC,GAAsBH,EAAUR,EAAMY,SACrD,OAAA,WAECC,GAAgBb,EAAMQ,SAAUA,GACnC,OAAA,EAGX,GAAa,QAATjE,EAAgB,CACZ,MAAAuE,EAAWd,EAAMc,WACnB,GAAS,WAATvE,IAAsBuE,EACjB,OAAA,EAEL,GAAS,aAATvE,GAAuBuE,EAClB,OAAA,CAEV,CACD,OAAqB,kBAAVL,GAAuBT,EAAMe,YAAcN,OAGlDH,GAAeA,IAAgBN,EAAMgB,MAAMV,gBAG3CC,IAAcA,EAAUP,IAI9B,CACA,SAASiB,GAAcb,EAASc,GAC9B,MAAMb,MAAEA,EAAAc,OAAOA,EAAQZ,UAAAA,EAAAa,YAAWA,GAAgBhB,EAClD,GAAIgB,EAAa,CACX,IAACF,EAASN,QAAQQ,YACb,OAAA,EAET,GAAIf,GACF,GAAIgB,GAAQH,EAASN,QAAQQ,eAAiBC,GAAQD,GAC7C,OAAA,WAECP,GAAgBK,EAASN,QAAQQ,YAAaA,GACjD,OAAA,CAEV,CACD,QAAID,GAAUD,EAASF,MAAMG,SAAWA,MAGpCZ,IAAcA,EAAUW,GAI9B,CACA,SAASP,GAAsBH,EAAUI,GAEvC,cADeA,WAASU,iBAAkBD,IAC5Bb,EAChB,CACA,SAASa,GAAQb,GACf,OAAOe,KAAKC,UACVhB,EACA,CAACiB,EAAGC,IAAQC,GAAcD,GAAOzG,OAAO2G,KAAKF,GAAKG,OAAOC,OAAO,CAACC,EAAQvG,KAChEuG,EAAAvG,GAAOkG,EAAIlG,GACXuG,GACN,CAAA,GAAML,EAEb,CACA,SAASb,GAAgB/E,EAAGE,GAC1B,OAAIF,IAAME,UAGCF,UAAaE,OAGpBF,IAAKE,GAAkB,iBAANF,GAA+B,iBAANE,IACrCf,OAAO2G,KAAK5F,GAAGgG,MAAOxG,GAAQqF,GAAgB/E,EAAEN,GAAMQ,EAAER,KAGnE,CACA,IAAIyG,GAAShH,OAAOC,UAAUC,eAC9B,SAAS+G,GAAiBpG,EAAGE,GAC3B,GAAIF,IAAME,EACD,OAAAF,EAET,MAAMqG,EAAQC,GAAatG,IAAMsG,GAAapG,GAC9C,KAAKmG,GAAWR,GAAc7F,IAAM6F,GAAc3F,IAAY,OAAAA,EAC9D,MACMqG,GADSF,EAAQrG,EAAIb,OAAO2G,KAAK9F,IAClBwG,OACfC,EAASJ,EAAQnG,EAAIf,OAAO2G,KAAK5F,GACjCwG,EAAQD,EAAOD,OACfG,EAAON,EAAQ,IAAIO,MAAMF,GAAS,CAAA,EACxC,IAAIG,EAAa,EACjB,IAAA,IAASC,EAAI,EAAGA,EAAIJ,EAAOI,IAAK,CAC9B,MAAMpH,EAAM2G,EAAQS,EAAIL,EAAOK,GACzBC,EAAQ/G,EAAEN,GACVsH,EAAQ9G,EAAER,GAChB,GAAIqH,IAAUC,EAAO,CACnBL,EAAKjH,GAAOqH,GACRV,EAAQS,EAAIP,EAAQJ,GAAO7F,KAAKN,EAAGN,KAAMmH,IAC7C,QACD,CACG,GAAU,OAAVE,GAA4B,OAAVC,GAAmC,iBAAVD,GAAuC,iBAAVC,EAAoB,CAC9FL,EAAKjH,GAAOsH,EACZ,QACD,CACK,MAAAC,EAAIb,GAAiBW,EAAOC,GAClCL,EAAKjH,GAAOuH,EACRA,IAAMF,GAAOF,GAClB,CACD,OAAON,IAAUG,GAASG,IAAeN,EAAQvG,EAAI2G,CACvD,CACA,SAASO,GAAoBlH,EAAGE,GAC1B,IAACA,GAAKf,OAAO2G,KAAK9F,GAAGwG,SAAWrH,OAAO2G,KAAK5F,GAAGsG,OAC1C,OAAA,EAET,IAAA,MAAW9G,KAAOM,EAChB,GAAIA,EAAEN,KAASQ,EAAER,GACR,OAAA,EAGJ,OAAA,CACT,CACA,SAAS4G,GAAa9C,GACb,OAAAoD,MAAMO,QAAQ3D,IAAUA,EAAMgD,SAAWrH,OAAO2G,KAAKtC,GAAOgD,MACrE,CACA,SAASX,GAAcuB,GACjB,IAACC,GAAmBD,GACf,OAAA,EAET,MAAME,EAAOF,EAAEjG,YACf,QAAa,IAATmG,EACK,OAAA,EAET,MAAMC,EAAOD,EAAKlI,UACd,QAACiI,GAAmBE,OAGnBA,EAAKlI,eAAe,kBAGrBF,OAAOqI,eAAeJ,KAAOjI,OAAOC,UAI1C,CACA,SAASiI,GAAmBD,GAC1B,MAA6C,oBAAtCjI,OAAOC,UAAUqI,SAASnH,KAAK8G,EACxC,CAMA,SAASM,GAAYC,EAAUC,EAAM9C,GAC/B,MAAqC,mBAA9BA,EAAQ+C,kBACV/C,EAAQ+C,kBAAkBF,EAAUC,IACJ,IAA9B9C,EAAQ+C,kBAWVzB,GAAiBuB,EAAUC,GAE7BA,CACT,CAIA,SAASE,GAASC,EAAOC,EAAMlE,EAAM,GACnC,MAAMmE,EAAW,IAAIF,EAAOC,GAC5B,OAAOlE,GAAOmE,EAASzB,OAAS1C,EAAMmE,EAASC,MAAM,GAAKD,CAC5D,CACA,SAASE,GAAWJ,EAAOC,EAAMlE,EAAM,GACrC,MAAMmE,EAAW,CAACD,KAASD,GACpB,OAAAjE,GAAOmE,EAASzB,OAAS1C,EAAMmE,EAASC,MAAM,MAASD,CAChE,CACA,IAAIG,GAAYrJ,SAChB,SAASsJ,GAAcvD,EAASwD,GAQ9B,OAAKxD,EAAQyD,UAAW,MAAAD,OAAA,EAAAA,EAAcE,gBAC7B,IAAMF,EAAaE,eAEvB1D,EAAQyD,SAAWzD,EAAQyD,UAAYH,GAGrCtD,EAAQyD,QAFN,IAAME,QAAQC,OAAO,IAAIC,MAAM,qBAAqB7D,EAAQF,cAGvE,CACA,SAASgE,GAAiBC,EAAcC,GAClC,MAAwB,mBAAjBD,EACFA,KAAgBC,KAEhBD,CACX,CCnOA,IA2DIE,GAAe,IA3DAC,gBAAc9H,GAI/B,WAAAC,WAHAwB,GAAAvB,KAAA6H,OAAA,GACAtG,GAAAvB,KAAA8H,OAAA,GACAvG,GAAAvB,KAAA+H,OAAA,GAGOnG,GAAA5B,KAAA+H,EAAUC,IACT,IAACjG,IAAYC,OAAOiG,iBAAkB,CAClC,MAAA5H,EAAW,IAAM2H,IAEvB,OADOhG,OAAAiG,iBAAiB,mBAAoB5H,GAAU,GAC/C,KACE2B,OAAAkG,oBAAoB,mBAAoB7H,GAElD,GAGJ,CACD,WAAAE,GACOsB,QAAKiG,IACH9H,KAAAmI,iBAAiBtG,QAAKkG,GAE9B,CACD,aAAAtH,SACOT,KAAKU,iBACR,OAAAY,EAAAO,GAAA7B,KAAK8H,KAALxG,EAAApC,KAAAc,MACA4B,GAAA5B,KAAK8H,OAAW,GAEnB,CACD,gBAAAK,CAAiBC,SACfxG,GAAA5B,KAAK+H,EAASK,GACd,OAAA9G,EAAAO,GAAA7B,KAAK8H,KAALxG,EAAApC,KAAAc,MACK4B,GAAA5B,KAAA8H,EAAWM,EAAOC,IACE,kBAAZA,EACTrI,KAAKsI,WAAWD,GAEhBrI,KAAKgI,YAGV,CACD,UAAAM,CAAWD,GACOxG,QAAKgG,KAAaQ,IAEhCzG,GAAA5B,KAAK6H,EAAWQ,GAChBrI,KAAKgI,UAER,CACD,OAAAA,GACQ,MAAAO,EAAYvI,KAAKuI,YAClBvI,KAAAC,UAAUuI,QAASnI,IACtBA,EAASkI,IAEZ,CACD,SAAAA,SACM,MAAyB,kBAAlB1G,GAAK7B,KAAA6H,GACPhG,GAAK7B,KAAA6H,GAEkC,YAAzC,OAAAvG,EAAAW,WAAWwG,eAAX,EAAAnH,EAAqBoH,gBAC7B,GAxDDb,EAAA,IAAA/F,QACAgG,cACAC,EAHiB,IAAAjG,QAAA8F,GCDnB,SAASe,KACH,IAAAC,EACAtB,EACJ,MAAMuB,EAAW,IAAIxB,QAAQ,CAACyB,EAAUC,KAC5BH,EAAAE,EACDxB,EAAAyB,IAKX,SAASC,EAASxC,GACTzI,OAAAkL,OAAOJ,EAAUrC,UACjBqC,EAASD,eACTC,EAASvB,MACjB,CAeM,OAtBPuB,EAAS5E,OAAS,UAClB4E,EAASK,MAAM,QAONL,EAAAD,QAAWxG,IACT4G,EAAA,CACP/E,OAAQ,YACR7B,UAEFwG,EAAQxG,IAEDyG,EAAAvB,OAAU6B,IACRH,EAAA,CACP/E,OAAQ,WACRkF,WAEF7B,EAAO6B,IAEFN,CACT,CC9BA,IAAIO,GJ0DJ,SAA8BtI,GAC5BD,WAAWC,EAAU,EACvB,EIiBA,IAAIuI,GA5EJ,WACE,IAAIC,EAAQ,GACRC,EAAe,EACfC,EAAY1I,SAGZ2I,EAAiB3I,SAGjB4I,EAAaN,GACX,MAAAO,EAAY7I,IACZyI,EACFD,EAAMM,KAAK9I,GAEX4I,EAAW,KACTF,EAAS1I,MAiBR,MAAA,CACL+I,MAAQ/I,IACF,IAAA+D,EACJ0E,IACI,IACF1E,EAAS/D,GACjB,CAAgB,QACRyI,IACKA,GArBG,MACZ,MAAMO,EAAgBR,EACtBA,EAAQ,GACJQ,EAAc1E,QAChBsE,EAAW,KACTD,EAAc,KACEK,EAAAtB,QAAS1H,IACrB0I,EAAS1I,YAiBd,CACM,OAAA+D,GAKTkF,WAAajJ,GACJ,IAAIkJ,KACTL,EAAS,KACP7I,KAAYkJ,MAIlBL,WAKAM,kBAAoBC,IACPV,EAAAU,GAMbC,uBAAyBD,IACPT,EAAAS,GAElBE,aAAeF,IACAR,EAAAQ,GAGnB,CACoBG,GC3BhBC,GAAgB,IAjDAC,gBAAczK,GAIhC,WAAAC,WAHUwB,GAAAvB,KAAAwK,GAAA,GACVjJ,GAAAvB,KAAA8H,OAAA,GACAvG,GAAAvB,KAAA+H,OAAA,GAGOA,GAAAA,KAAAA,EAAU0C,IACT,IAAC1I,IAAYC,OAAOiG,iBAAkB,CAClC,MAAAyC,EAAiB,IAAMD,GAAS,GAChCE,EAAkB,IAAMF,GAAS,GAGvC,OAFOzI,OAAAiG,iBAAiB,SAAUyC,GAAgB,GAC3C1I,OAAAiG,iBAAiB,UAAW0C,GAAiB,GAC7C,KACE3I,OAAAkG,oBAAoB,SAAUwC,GAC9B1I,OAAAkG,oBAAoB,UAAWyC,GAEzC,GAGJ,CACD,WAAApK,GACOsB,QAAKiG,IACH9H,KAAAmI,iBAAiBtG,QAAKkG,GAE9B,CACD,aAAAtH,SACOT,KAAKU,iBACR,OAAAY,EAAAO,GAAA7B,KAAK8H,KAALxG,EAAApC,KAAAc,MACA4B,GAAA5B,KAAK8H,OAAW,GAEnB,CACD,gBAAAK,CAAiBC,SACfxG,GAAA5B,KAAK+H,EAASK,GACd,OAAA9G,EAAAO,GAAA7B,KAAK8H,KAALxG,EAAApC,KAAAc,MACA4B,GAAA5B,KAAK8H,EAAWM,EAAMpI,KAAK4K,UAAUxK,KAAKJ,OAC3C,CACD,SAAA4K,CAAUC,GACQhJ,QAAK2I,KAAYK,IAE/BjJ,GAAA5B,KAAKwK,EAAUK,GACV7K,KAAAC,UAAUuI,QAASnI,IACtBA,EAASwK,KAGd,CACD,QAAAC,GACE,OAAOjJ,GAAK7B,KAAAwK,EACb,GA9CDA,EACA1C,IAAAA,QAAAA,EAAA,IACAC,QAAAA,EAAA,IAHkBjG,QAAAyI,GCEpB,SAASQ,GAAkBC,GACzB,OAAOvI,KAAKwI,IAAI,IAAM,GAAKD,EAAc,IAC3C,CACA,SAASE,GAASC,GAChB,MAAqC,YAA7BA,GAAe,WAAyBb,GAAcQ,UAChE,CACA,IAAIM,GAAiB,cAAc7D,MACjC,WAAAxH,CAAY2D,GACV2H,MAAM,kBACNrL,KAAKsL,OAAkB,MAAT5H,OAAS,EAAAA,EAAA4H,OACvBtL,KAAKuL,OAAkB,MAAT7H,OAAS,EAAAA,EAAA6H,MACxB,GAKH,SAASC,GAAcC,GACrB,IAEIC,EAFAC,GAAmB,EACnBX,EAAe,EAEnB,MAAMnC,EAAWF,KACXiD,EAAa,IAA0B,YAApB/C,EAAS5E,OAc5B4H,EAAc,IAAMlE,GAAaY,cAAuC,WAAvBkD,EAAON,aAA4Bb,GAAcQ,aAAeW,EAAOK,SACxHC,EAAW,IAAMb,GAASO,EAAON,cAAgBM,EAAOK,SACxDlD,EAAWxG,IACVwJ,MACH,MAAAF,GAAAA,IACA7C,EAASD,QAAQxG,KAGfkF,EAAUlF,IACTwJ,MACH,MAAAF,GAAAA,IACA7C,EAASvB,OAAOlF,KAGd4J,EAAQ,IACL,IAAI3E,QAAS4E,UAClBP,EAActJ,KACRwJ,KAAgBC,MAClBI,EAAgB7J,IAGpB,OAAAd,EAAAmK,EAAOS,UAAP5K,EAAApC,KAAAuM,KACCU,KAAK,WACOT,OAAA,EACRE,KACH,OAAAtK,EAAAmK,EAAOW,aAAP9K,EAAApC,KAAAuM,KAIAY,EAAM,KACV,GAAIT,IACF,OAEE,IAAAU,EACJ,MAAMlF,EAAkC,IAAjB4D,EAAqBS,EAAOrE,oBAAiB,EAChE,IACekF,EAAAlF,GAAkBqE,EAAOvB,IAC3C,OAAQqC,GACUD,EAAAjF,QAAQC,OAAOiF,EACjC,CACOlF,QAAAuB,QAAQ0D,GAAgBH,KAAKvD,GAASM,MAAOqD,UACnD,GAAIX,IACF,OAEF,MAAMY,EAAQf,EAAOe,QAAUzK,GAAW,EAAI,GACxC0K,EAAahB,EAAOgB,YAAc1B,GAClChK,EAA8B,mBAAf0L,EAA4BA,EAAWzB,EAAcuB,GAASE,EAC7EC,GAAwB,IAAVF,GAAmC,iBAAVA,GAAsBxB,EAAewB,GAA0B,mBAAVA,GAAwBA,EAAMxB,EAAcuB,GLuFpJ,IAAeI,GKtFLhB,GAAqBe,GAIzB1B,IACA,OAAA1J,EAAAmK,EAAOmB,SAAPtL,EAAApC,OAAgB8L,EAAcuB,ILiFrBI,EKhFH5L,ELiFH,IAAIsG,QAASuB,IACHvH,GAAAR,WAAW+H,EAAS+D,MKlFpBR,KAAK,IACTN,SAAgB,EAASG,KAC/BG,KAAK,KACFR,EACFrE,EAAOiF,UATTjF,EAAOiF,MAgBN,MAAA,CACLM,QAAShE,EACT5E,OAAQ,IAAM4E,EAAS5E,OACvB6I,OAjFcC,UACV,IAACnB,IAAc,CACX,MAAAW,EAAQ,IAAInB,GAAe2B,GACjCzF,EAAOiF,GACP,OAAAjL,EAAAmK,EAAOuB,WAAP1L,EAAApC,KAAkBuM,EAAAc,EACnB,GA6EDU,SAAU,KACR,MAAAvB,GAAAA,IACO7C,GAETqE,YA/EkB,KACCvB,GAAA,GA+EnBwB,cA7EoB,KACDxB,GAAA,GA6EnBI,WACAqB,MAAO,KACDrB,QAGKC,IAACG,KAAKE,GAERxD,GAGb,CC1HA,IAAIwE,IAAYC,EAAM,MAAN,WAAAvN,GACdwB,GAAAvB,KAAAuN,OAAA,EAAA,CACA,OAAAC,GACExN,KAAKyN,gBACN,CACD,UAAAC,GACE1N,KAAKyN,iBACDtL,GAAenC,KAAK2N,SACjB/L,GAAA5B,KAAAuN,EAAalM,GAAeR,WAAW,KAC1Cb,KAAK4N,kBACJ5N,KAAK2N,QAEX,CACD,YAAAE,CAAaC,GACX9N,KAAK2N,OAASlL,KAAKC,IACjB1C,KAAK2N,QAAU,EACfG,IAAc/L,GAAWM,IAAW,KAEvC,CACD,cAAAoL,GACM5L,QAAK0L,KACQlM,GAAAL,aAAaa,QAAK0L,IACjC3L,GAAA5B,KAAKuN,OAAa,GAErB,GAvBDA,EADc,IAAAzL,QAAAwL,GCUZS,IAAQC,gBAAcX,GAQxB,WAAAtN,CAAY0L,WAwSZlK,GAAAvB,KAAAiO,GA/SA1M,GAAAvB,KAAAkO,OAAA,GACA3M,GAAAvB,KAAAmO,OAAA,GACA5M,GAAAvB,KAAAoO,OAAA,GACA7M,GAAAvB,KAAAqO,OAAA,GACA9M,GAAAvB,KAAAsO,OAAA,GACA/M,GAAAvB,KAAAuO,OAAA,GACAhN,GAAAvB,KAAAwO,OAAA,GAGE5M,GAAA5B,KAAKwO,GAAuB,GAC5B5M,GAAA5B,KAAKuO,EAAkB9C,EAAOgD,gBACzBzO,KAAA0O,WAAWjD,EAAO/H,SACvB1D,KAAK2O,UAAY,GACjB/M,GAAA5B,KAAKqO,EAAU5C,EAAOmD,QACjBhN,GAAA5B,KAAAoO,EAASvM,GAAK7B,KAAAqO,GAAQQ,iBAC3B7O,KAAKsD,SAAWmI,EAAOnI,SACvBtD,KAAKwD,UAAYiI,EAAOjI,UACnB5B,GAAA5B,KAAAkO,EAAgBY,GAAgB9O,KAAK0D,UACrC1D,KAAA8D,MAAQ2H,EAAO3H,OAASjC,GAAK7B,KAAAkO,GAClClO,KAAK0N,YACN,CACD,QAAIqB,GACF,OAAO/O,KAAK0D,QAAQqL,IACrB,CACD,WAAIlC,SACF,OAAO,OAAAvL,EAAAO,GAAA7B,KAAKsO,SAAL,EAAAhN,EAAeuL,OACvB,CACD,UAAA6B,CAAWhL,GAGT,GAFA1D,KAAK0D,QAAU,IAAK7B,GAAK7B,KAAAuO,MAAoB7K,GACxC1D,KAAA6N,aAAa7N,KAAK0D,QAAQiK,QAC3B3N,KAAK8D,YAA6B,IAApB9D,KAAK8D,MAAM0C,KAAiB,CACtC,MAAAwI,EAAeF,GAAgB9O,KAAK0D,cAChB,IAAtBsL,EAAaxI,OACVxG,KAAAiP,QAAQD,EAAaxI,KAAM,CAC9BjE,UAAWyM,EAAaE,cACxBC,QAAQ,IAEVvN,GAAA5B,KAAKkO,EAAgBc,GAExB,CACF,CACD,cAAApB,GACO5N,KAAK2O,UAAUvJ,QAAqC,SAA3BpF,KAAK8D,MAAMV,aAClCvB,GAAA7B,KAAAoO,GAAOgB,OAAOpP,KAEtB,CACD,OAAAiP,CAAQI,EAAS3L,GACf,MAAM8C,EAAOF,GAAYtG,KAAK8D,MAAM0C,KAAM6I,EAASrP,KAAK0D,SAOjD,OANP4L,GAAAtP,KAAKiO,KAAL/O,KAAec,KAAA,CACbwG,OACAnH,KAAM,UACN6P,cAAwB,MAATxL,OAAS,EAAAA,EAAAnB,UACxB4M,OAAiB,MAATzL,OAAS,EAAAA,EAAAyL,SAEZ3I,CACR,CACD,QAAA+I,CAASzL,EAAO0L,GACdF,GAAAtP,KAAKiO,KAAL/O,KAAec,KAAA,CAAEX,KAAM,WAAYyE,QAAO0L,mBAC3C,CACD,MAAA1C,CAAOpJ,WACL,MAAMmJ,EAAU,OAAAvL,EAAAO,GAAK7B,KAAAsO,WAALhN,EAAeuL,QAExB,OADP,OAAAjF,EAAA/F,GAAA7B,KAAKsO,KAAL1G,EAAekF,OAAOpJ,GACfmJ,EAAUA,EAAQV,KAAKjK,IAAMgH,MAAMhH,IAAQmF,QAAQuB,SAC3D,CACD,OAAA4E,GACEnC,MAAMmC,UACNxN,KAAK8M,OAAO,CAAEvB,QAAQ,GACvB,CACD,KAAAkE,GACEzP,KAAKwN,UACAxN,KAAAuP,SAAS1N,QAAKqM,GACpB,CACD,QAAAtK,GACE,OAAO5D,KAAK2O,UAAUe,KACnBC,IAAgE,IAAnD5M,GAAe4M,EAASjM,QAAQV,QAAShD,MAE1D,CACD,UAAA4P,GACM,OAAA5P,KAAK6P,oBAAsB,GACrB7P,KAAK4D,WAER5D,KAAK0D,QAAQyD,UAAYH,IAAahH,KAAK8D,MAAMgM,gBAAkB9P,KAAK8D,MAAMiM,mBAAqB,CAC3G,CACD,QAAAC,GACM,OAAAhQ,KAAK6P,oBAAsB,GACtB7P,KAAK2O,UAAUe,KACnBC,GAAoE,WAAvD9M,GAAiB8M,EAASjM,QAAQlB,UAAWxC,MAIhE,CACD,OAAA6D,GACM,OAAA7D,KAAK6P,oBAAsB,EACtB7P,KAAK2O,UAAUe,KACnBC,GAAaA,EAASM,mBAAmBpM,cAGnB,IAApB7D,KAAK8D,MAAM0C,MAAmBxG,KAAK8D,MAAMoM,aACjD,CACD,aAAAC,CAAc3N,EAAY,GACpB,YAAoB,IAApBxC,KAAK8D,MAAM0C,MAGG,WAAdhE,MAGAxC,KAAK8D,MAAMoM,gBAGP5N,GAAetC,KAAK8D,MAAMoL,cAAe1M,GAClD,CACD,OAAAwF,SACQ,MAAA2H,EAAW3P,KAAK2O,UAAUyB,KAAMC,GAAMA,EAAEC,4BACpC,MAAAX,GAAAA,EAAAY,QAAQ,CAAEC,eAAe,IACnC,OAAAlP,EAAAO,GAAA7B,KAAKsO,KAALhN,EAAe2L,UAChB,CACD,QAAAxC,SACQ,MAAAkF,EAAW3P,KAAK2O,UAAUyB,KAAMC,GAAMA,EAAEI,0BACpC,MAAAd,GAAAA,EAAAY,QAAQ,CAAEC,eAAe,IACnC,OAAAlP,EAAAO,GAAA7B,KAAKsO,KAALhN,EAAe2L,UAChB,CACD,WAAAyD,CAAYf,GACL3P,KAAK2O,UAAUgC,SAAShB,KACtB3P,KAAA2O,UAAU/E,KAAK+F,GACpB3P,KAAKyN,iBACA5L,GAAA7B,KAAAoO,GAAOwC,OAAO,CAAEvR,KAAM,gBAAiByD,MAAO9C,KAAM2P,aAE5D,CACD,cAAAkB,CAAelB,GACT3P,KAAK2O,UAAUgC,SAAShB,KAC1B3P,KAAK2O,UAAY3O,KAAK2O,UAAUmC,OAAQT,GAAMA,IAAMV,GAC/C3P,KAAK2O,UAAUvJ,SACdvD,QAAKyM,KACHzM,QAAK2M,GACP3M,GAAA7B,KAAKsO,GAASxB,OAAO,CAAExB,QAAQ,IAE/BzJ,GAAA7B,KAAKsO,GAASpB,eAGlBlN,KAAK0N,cAEF7L,GAAA7B,KAAAoO,GAAOwC,OAAO,CAAEvR,KAAM,kBAAmByD,MAAO9C,KAAM2P,aAE9D,CACD,iBAAAE,GACE,OAAO7P,KAAK2O,UAAUvJ,MACvB,CACD,UAAA2L,GACO/Q,KAAK8D,MAAMoM,eACdZ,GAAAtP,KAAKiO,EAAL+C,GAAA9R,KAAAc,KAAe,CAAEX,KAAM,cAE1B,CACD,WAAM4R,CAAMvN,EAASwD,+BACf,GAA2B,SAA3BlH,KAAK8D,MAAMV,aAGa,cAA5B,OAAA9B,EAAAO,GAAK7B,KAAAsO,SAALhN,EAAAA,EAAe2C,UACb,QAAwB,IAApBjE,KAAK8D,MAAM0C,aAAmBU,WAAcsJ,eAC9CxQ,KAAK8M,OAAO,CAAEvB,QAAQ,SAC9B,GAAiB1J,QAAKyM,GAEd,OADAzM,GAAA7B,KAAKsO,GAASnB,gBACPtL,QAAKyM,GAASzB,QAMrB,GAHAnJ,GACF1D,KAAK0O,WAAWhL,IAEb1D,KAAK0D,QAAQyD,QAAS,CACnB,MAAAwI,EAAW3P,KAAK2O,UAAUyB,KAAMC,GAAMA,EAAE3M,QAAQyD,SAClDwI,GACG3P,KAAA0O,WAAWiB,EAASjM,QAE5B,CAQK,MAAAwN,EAAkB,IAAIC,gBACtBC,EAAqBC,IAClBtT,OAAAuT,eAAeD,EAAQ,SAAU,CACtCE,YAAY,EACZC,IAAK,KACH5P,GAAA5B,KAAKwO,GAAuB,GACrB0C,EAAgBO,WAIvBC,EAAU,KACd,MAAMvK,EAAUF,GAAcjH,KAAK0D,QAASwD,GAUtCyK,EATuB,MAC3B,MAAMC,EAAkB,CACtBhD,OAAQ/M,GAAK7B,KAAAqO,GACb/K,SAAUtD,KAAKsD,SACfyL,KAAM/O,KAAK+O,MAGN,OADPqC,EAAkBQ,GACXA,GAEcC,GAEnB,OADJjQ,GAAA5B,KAAKwO,GAAuB,GACxBxO,KAAK0D,QAAQoO,UACR9R,KAAK0D,QAAQoO,UAClB3K,EACAwK,EACA3R,MAGGmH,EAAQwK,IAcXI,EAZqB,MACzB,MAAMC,EAAW,CACf9K,eACAxD,QAAS1D,KAAK0D,QACdJ,SAAUtD,KAAKsD,SACfsL,OAAQ/M,GAAK7B,KAAAqO,GACbvK,MAAO9D,KAAK8D,MACZ4N,WAGK,OADPN,EAAkBY,GACXA,GAEOC,GAChB,OAAArK,EAAA5H,KAAK0D,QAAQwO,WAAbtK,EAAuBuK,QAAQJ,EAAS/R,MACxC4B,GAAA5B,KAAKmO,EAAenO,KAAK8D,OACM,SAA3B9D,KAAK8D,MAAMV,aAA0BpD,KAAK8D,MAAMsO,aAAc,OAAA7H,EAAAwH,EAAQ7K,mBAARqD,EAAAA,EAAsBwE,OACjFO,GAAAtP,KAAAiO,EAAA+C,GAAL9R,KAAec,KAAA,CAAEX,KAAM,QAAS0P,KAAM,OAAAzB,EAAAyE,EAAQ7K,mBAARoG,EAAAA,EAAsByB,OAE9DnN,GAAA5B,KAAKsO,EAAW9C,GAAc,CAC5BpE,eAA8B,MAAdF,OAAc,EAAAA,EAAAE,eAC9B8C,GAAI6H,EAAQL,QACZ1E,SAAWT,IACLA,aAAiBnB,IAAkBmB,EAAMjB,QAC3CtL,KAAKuP,SAAS,IACT1N,GAAK7B,KAAAmO,GACR/K,YAAa,SAGjB8N,EAAgBmB,SAElBzF,OAAQ,CAAC5B,EAAcuB,KACrB+C,GAAAtP,KAAKiO,KAAL/O,KAAec,KAAA,CAAEX,KAAM,SAAU2L,eAAcuB,WAEjDL,QAAS,KACPoD,GAAAtP,KAAKiO,EAAL+C,GAAA9R,KAAAc,KAAe,CAAEX,KAAM,WAEzB+M,WAAY,KACVkD,GAAAtP,KAAKiO,EAAL+C,GAAA9R,KAAAc,KAAe,CAAEX,KAAM,cAEzBmN,MAAOuF,EAAQrO,QAAQ8I,MACvBC,WAAYsF,EAAQrO,QAAQ+I,WAC5BtB,YAAa4G,EAAQrO,QAAQyH,YAC7BW,OAAQ,KAAM,KAEZ,IACF,MAAMtF,QAAa3E,GAAK7B,KAAAsO,GAASlB,QACjC,QAAa,IAAT5G,EAMF,MAAM,IAAIe,MAAM,GAAGvH,KAAKwD,+BASnB,OAPPxD,KAAKiP,QAAQzI,GACb,OAAA8L,GAAAtE,EAAAnM,GAAA7B,KAAKoO,GAAO3C,QAAO8G,YAAnBD,EAAApT,KAAA8O,EAA+BxH,EAAMxG,MACrC,OAAAwS,GAAAC,EAAA5Q,GAAA7B,KAAKoO,GAAO3C,QAAOiH,YAAnBF,EAAAtT,KAAAuT,EACEjM,EACAxG,KAAK8D,MAAMyI,MACXvM,MAEKwG,CACR,OAAQ+F,GACP,GAAIA,aAAiBnB,GAAgB,CACnC,GAAImB,EAAMhB,OACR,OAAO1J,QAAKyM,GAASzB,QAC/B,GAAmBN,EAAMjB,OAAQ,CACnB,QAAoB,IAApBtL,KAAK8D,MAAM0C,KACP,MAAA+F,EAER,OAAOvM,KAAK8D,MAAM0C,IACnB,CACF,CAcK,MAbN8I,GAAAtP,KAAKiO,KAAL/O,KAAec,KAAA,CACbX,KAAM,QACNkN,UAEF,OAAAoG,GAAAC,EAAA/Q,GAAA7B,KAAKoO,GAAO3C,QAAOoH,UAAnBF,EAAAzT,KAAA0T,EACErG,EACAvM,MAEF,OAAA8S,GAAAC,EAAAlR,GAAA7B,KAAKoO,GAAO3C,QAAOiH,YAAnBI,EAAA5T,KAAA6T,EACE/S,KAAK8D,MAAM0C,KACX+F,EACAvM,MAEIuM,CACZ,CAAc,QACRvM,KAAK0N,YACN,CACF,GA9SDQ,EAAA,IAAApM,QACAqM,cACAC,EACA,IAAAtM,QAAAuM,EAAA,IAAAvM,QACAwM,cACAC,EACA,IAAAzM,QAAA0M,EAAA,IAAA1M,QAySAmM,EAAS,IAAA+E,QAAAhC,EAAA,SAACiC,GAkEHjT,KAAA8D,MAjEW,CAACA,IACf,OAAQmP,EAAO5T,MACb,IAAK,SACI,MAAA,IACFyE,EACHoP,kBAAmBD,EAAOjI,aAC1BmI,mBAAoBF,EAAO1G,OAE/B,IAAK,QACI,MAAA,IACFzI,EACHV,YAAa,UAEjB,IAAK,WACI,MAAA,IACFU,EACHV,YAAa,YAEjB,IAAK,QACI,MAAA,IACFU,KACAsP,GAAWtP,EAAM0C,KAAMxG,KAAK0D,SAC/B0O,UAAWa,EAAOlE,MAAQ,MAE9B,IAAK,UACH,MAAMsE,EAAW,IACZvP,EACH0C,KAAMyM,EAAOzM,KACbsJ,gBAAiBhM,EAAMgM,gBAAkB,EACzCZ,cAAe+D,EAAO/D,eAAiBvM,KAAKC,MAC5C2J,MAAO,KACP2D,eAAe,EACfjM,OAAQ,cACJgP,EAAO9D,QAAU,CACnB/L,YAAa,OACb8P,kBAAmB,EACnBC,mBAAoB,OAIjB,OADFvR,GAAA5B,KAAAmO,EAAe8E,EAAO9D,OAASkE,OAAW,GACxCA,EACT,IAAK,QACH,MAAM9G,EAAQ0G,EAAO1G,MACd,MAAA,IACFzI,EACHyI,QACAwD,iBAAkBjM,EAAMiM,iBAAmB,EAC3CuD,eAAgB3Q,KAAKC,MACrBsQ,kBAAmBpP,EAAMoP,kBAAoB,EAC7CC,mBAAoB5G,EACpBnJ,YAAa,OACba,OAAQ,SAEZ,IAAK,aACI,MAAA,IACFH,EACHoM,eAAe,GAEnB,IAAK,WACI,MAAA,IACFpM,KACAmP,EAAOnP,SAILyP,CAAQvT,KAAK8D,OAC1BuF,GAAcQ,MAAM,KACb7J,KAAA2O,UAAUnG,QAASmH,IACtBA,EAAS6D,kBAEN3R,GAAA7B,KAAAoO,GAAOwC,OAAO,CAAE9N,MAAO9C,KAAMX,KAAM,UAAW4T,YAEtD,EAzXSjF,GA2XZ,SAASoF,GAAW5M,EAAM9C,GACjB,MAAA,CACLwP,kBAAmB,EACnBC,mBAAoB,KACpB/P,YAAa8H,GAASxH,EAAQyH,aAAe,WAAa,iBAC9C,IAAT3E,GAAmB,CACpB+F,MAAO,KACPtI,OAAQ,WAGd,CACA,SAAS6K,GAAgBpL,GACjB,MAAA8C,EAAsC,mBAAxB9C,EAAQ+P,YAA6B/P,EAAQ+P,cAAgB/P,EAAQ+P,YACnFC,OAAmB,IAATlN,EACVmN,EAAuBD,EAAkD,mBAAjChQ,EAAQiQ,qBAAsCjQ,EAAQiQ,uBAAyBjQ,EAAQiQ,qBAAuB,EACrJ,MAAA,CACLnN,OACAsJ,gBAAiB,EACjBZ,cAAewE,EAAUC,GAAwBhR,KAAKC,MAAQ,EAC9D2J,MAAO,KACPwD,iBAAkB,EAClBuD,eAAgB,EAChBJ,kBAAmB,EACnBC,mBAAoB,KACpBf,UAAW,KACXlC,eAAe,EACfjM,OAAQyP,EAAU,UAAY,UAC9BtQ,YAAa,OAEjB,CCpZA,IAAIwQ,IAAgBtB,iBAAcxS,GAChC,WAAAC,CAAY6O,EAAQlL,WA2JpBnC,GAAAvB,KAAA6T,GAWAtS,GAAAvB,KAAA8T,GAiBAvS,GAAAvB,KAAA+T,GAGAxS,GAAAvB,KAAAgU,GAYAzS,GAAAvB,KAAAiU,GAIA1S,GAAAvB,KAAAkU,GAMA3S,GAAAvB,KAAAmU,GAmLA5S,GAAAvB,KAAAoU,GAmBA7S,GAAAvB,KAAAqU,IA7YA9S,GAAAvB,KAAAqO,OAAA,GACgB9M,GAAAvB,KAAAsU,OAAA,GACY/S,GAAAvB,KAAAuU,OAAA,GACXhT,GAAAvB,KAAAwU,OAAA,GACjBjT,GAAAvB,KAAAyU,OAAA,GACAlT,GAAAvB,KAAA0U,OAAA,GACAnT,GAAAvB,KAAA2U,OAAA,GACApT,GAAAvB,KAAA4U,OAAA,GACArT,GAAAvB,KAAA6U,OAAA,GACAtT,GAAAvB,KAAA8U,OAAA,GAGAvT,GAAAvB,KAAA+U,OAAA,GACAxT,GAAAvB,KAAAgV,OAAA,GACAzT,GAAAvB,KAAAiV,OAAA,GACA1T,GAAAvB,KAAAkV,OAAA,GACA3T,GAAAvB,KAAAmV,MAAoCjV,KAvBlCF,KAAK0D,QAAUA,EACf9B,GAAA5B,KAAKqO,EAAUO,GACfhN,GAAA5B,KAAK4U,EAAe,MACpBhT,GAAA5B,KAAK2U,EAAmBhM,MACxB3I,KAAKoV,cACLpV,KAAK0O,WAAWhL,EACjB,CAkBD,WAAA0R,GACEpV,KAAKuQ,QAAUvQ,KAAKuQ,QAAQnQ,KAAKJ,KAClC,CACD,WAAAO,GAC8B,IAAxBP,KAAKC,UAAUU,OACZkB,GAAA7B,KAAAsU,GAAc5D,YAAY1Q,MAC3BqV,GAAmBxT,GAAA7B,KAAKsU,GAAetU,KAAK0D,SAC9C4L,GAAAtP,KAAK6T,EAALyB,GAAApW,KAAAc,MAEAA,KAAKuV,eAEPjG,GAAAtP,KAAKiU,EAALuB,GAAAtW,KAAAc,MAEH,CACD,aAAAS,GACOT,KAAKU,gBACRV,KAAKwN,SAER,CACD,sBAAAiD,GACS,OAAAgF,GACL5T,GAAK7B,KAAAsU,GACLtU,KAAK0D,QACL1D,KAAK0D,QAAQgS,mBAEhB,CACD,wBAAApF,GACS,OAAAmF,GACL5T,GAAK7B,KAAAsU,GACLtU,KAAK0D,QACL1D,KAAK0D,QAAQiS,qBAEhB,CACD,OAAAnI,GACOxN,KAAAC,cAAgCC,IACrCoP,GAAAtP,KAAKkU,EAAL0B,GAAA1W,KAAAc,MACAsP,GAAAtP,KAAKmU,EAAL0B,GAAA3W,KAAAc,MACK6B,GAAA7B,KAAAsU,GAAczD,eAAe7Q,KACnC,CACD,UAAA0O,CAAWhL,GACT,MAAMoS,EAAc9V,KAAK0D,QACnBqS,EAAYlU,GAAK7B,KAAAsU,GAEnB,GADJtU,KAAK0D,QAAU7B,GAAA7B,KAAKqO,GAAQ2H,oBAAoBtS,QACnB,IAAzB1D,KAAK0D,QAAQV,SAAsD,kBAAzBhD,KAAK0D,QAAQV,SAAyD,mBAAzBhD,KAAK0D,QAAQV,SAA8F,kBAA7DD,GAAe/C,KAAK0D,QAAQV,QAASnB,GAAA7B,KAAKsU,IACjL,MAAM,IAAI/M,MACR,yEAGJ+H,GAAAtP,KAAKoU,EAAL6B,GAAA/W,KAAAc,MACK6B,GAAA7B,KAAAsU,GAAc5F,WAAW1O,KAAK0D,SAC/BoS,EAAYI,aAAepQ,GAAoB9F,KAAK0D,QAASoS,IAC1DzH,GAAAA,KAAAA,GAAQQ,gBAAgB+B,OAAO,CAClCvR,KAAM,yBACNyD,MAAOjB,GAAK7B,KAAAsU,GACZ3E,SAAU3P,OAGR,MAAAmW,EAAUnW,KAAKU,eACjByV,GAAWC,GACbvU,GAAK7B,KAAAsU,GACLyB,EACA/V,KAAK0D,QACLoS,IAEAxG,GAAAtP,KAAK6T,EAALyB,GAAApW,KAAAc,MAEFA,KAAKuV,gBACDY,GAAYtU,GAAA7B,KAAKsU,KAAkByB,GAAahT,GAAe/C,KAAK0D,QAAQV,QAASnB,GAAK7B,KAAAsU,MAAmBvR,GAAe+S,EAAY9S,QAASnB,GAAK7B,KAAAsU,KAAkBzR,GAAiB7C,KAAK0D,QAAQlB,UAAWX,GAAA7B,KAAKsU,MAAmBzR,GAAiBiT,EAAYtT,UAAWX,GAAA7B,KAAKsU,KACxRhF,GAAAtP,KAAK8T,EAALuC,GAAAnX,KAAAc,MAEI,MAAAsW,EAAsBhH,QAAKyE,EAALwC,GAAArX,KAAAc,OACxBmW,GAAYtU,GAAK7B,KAAAsU,KAAkByB,GAAahT,GAAe/C,KAAK0D,QAAQV,QAASnB,GAAA7B,KAAKsU,MAAmBvR,GAAe+S,EAAY9S,QAASnB,GAAA7B,KAAKsU,KAAkBgC,IAAwBzU,QAAKqT,IACvM5F,GAAAtP,KAAKgU,KAAL9U,KAA4Bc,KAAAsW,EAE/B,CACD,mBAAAE,CAAoB9S,GACZ,MAAAZ,EAAQjB,QAAKwM,GAAQQ,gBAAgB4H,MAAM5U,GAAA7B,KAAKqO,GAAS3K,GACzDmB,EAAS7E,KAAK0W,aAAa5T,EAAOY,GAMjC,OA0UX,SAA+CiM,EAAUgH,GACvD,IAAK7Q,GAAoB6J,EAASM,mBAAoB0G,GAC7C,OAAA,EAEF,OAAA,CACT,CApVQC,CAAsC5W,KAAM6E,KAC9CjD,GAAA5B,KAAKwU,EAAiB3P,GACtBjD,GAAA5B,KAAK0U,EAAwB1U,KAAK0D,SAC7B9B,GAAA5B,KAAAyU,EAAsB5S,QAAKyS,GAAcxQ,QAEzCe,CACR,CACD,gBAAAoL,GACE,OAAOpO,GAAK7B,KAAAwU,EACb,CACD,WAAAqC,CAAYhS,EAAQiS,GACX,OAAA,IAAIC,MAAMlS,EAAQ,CACvB2M,IAAK,CAACwF,EAAQ1Y,KACZ0B,KAAKiX,UAAU3Y,GACC,MAAAwY,GAAAA,EAAAxY,GACJ,YAARA,GAAsB0B,KAAK0D,QAAQwT,+BAAkE,YAAjCrV,GAAA7B,KAAK2U,GAAiB1Q,QAC5FpC,GAAA7B,KAAK2U,GAAiBrN,OACpB,IAAIC,MACF,8DAIC4P,QAAQ3F,IAAIwF,EAAQ1Y,KAGhC,CACD,SAAA2Y,CAAU3Y,GACHuD,GAAA7B,KAAAmV,GAAc7U,IAAIhC,EACxB,CACD,eAAA8Y,GACE,OAAOvV,GAAK7B,KAAAsU,EACb,CACD,OAAA/D,KAAa7M,GAAY,IACvB,OAAO1D,KAAKiR,MAAM,IACbvN,GAEN,CACD,eAAA2T,CAAgB3T,GACd,MAAM4T,EAAmBzV,GAAA7B,KAAKqO,GAAQ2H,oBAAoBtS,GACpDZ,EAAQjB,QAAKwM,GAAQQ,gBAAgB4H,MAAM5U,GAAA7B,KAAKqO,GAASiJ,GACxD,OAAAxU,EAAMmO,QAAQ9E,KAAK,IAAMnM,KAAK0W,aAAa5T,EAAOwU,GAC1D,CACD,KAAArG,CAAM/J,GACG,OAAAoI,GAAAtP,KAAK6T,KAAL3U,KAAmBc,KAAA,IACrBkH,EACHsJ,cAAetJ,EAAasJ,gBAAiB,IAC5CrE,KAAK,KACNnM,KAAKuV,eACE1T,GAAK7B,KAAAwU,IAEf,CA4DD,YAAAkC,CAAa5T,EAAOY,SAClB,MAAMqS,EAAYlU,GAAK7B,KAAAsU,GACjBwB,EAAc9V,KAAK0D,QACnB6T,EAAa1V,GAAK7B,KAAAwU,GAClBgD,EAAkB3V,GAAK7B,KAAAyU,GACvBgD,EAAoB5V,GAAK7B,KAAA0U,GAEzBgD,EADc5U,IAAUiT,EACUjT,EAAMgB,MAAQjC,GAAK7B,KAAAuU,IACrDzQ,MAAEA,GAAUhB,EACd,IAEA0D,EAFA6M,EAAW,IAAKvP,GAChB6T,GAAoB,EAExB,GAAIjU,EAAQkU,mBAAoB,CACxB,MAAAzB,EAAUnW,KAAKU,eACfmX,GAAgB1B,GAAWd,GAAmBvS,EAAOY,GACrDoU,EAAkB3B,GAAWC,GAAsBtT,EAAOiT,EAAWrS,EAASoS,IAChF+B,GAAgBC,KACPzE,EAAA,IACNA,KACAD,GAAWtP,EAAM0C,KAAM1D,EAAMY,WAGD,gBAA/BA,EAAQkU,qBACVvE,EAASjQ,YAAc,OAE1B,CACD,IAAImJ,MAAEA,EAAA+G,eAAOA,EAAgBrP,OAAAA,GAAWoP,EACxC7M,EAAO6M,EAAS7M,KAChB,IAAIuR,GAAa,EACjB,QAAgC,IAA5BrU,EAAQsU,sBAAuC,IAATxR,GAA8B,YAAXvC,EAAsB,CAC7E,IAAA+T,GACY,MAAZT,OAAY,EAAAA,EAAAI,oBAAqBjU,EAAQsU,yBAAoBP,WAAmBO,kBAClFA,EAAkBT,EAAW/Q,KAChBuR,GAAA,GAEbC,EAAqD,mBAA5BtU,EAAQsU,gBAAiCtU,EAAQsU,gBACxE,OAAA1W,EAAAO,GAAA7B,KAAK+U,SAAL,EAAAzT,EAAgCwC,MAAM0C,KACtC3E,GAAK7B,KAAA+U,IACHrR,EAAQsU,qBAEU,IAApBA,IACO/T,EAAA,UACFuC,EAAAF,GACO,MAAZiR,OAAY,EAAAA,EAAA/Q,KACZwR,EACAtU,GAEkBiU,GAAA,EAEvB,CACD,GAAIjU,EAAQuU,aAAmB,IAATzR,IAAoBuR,EACxC,GAAIR,GAAc/Q,KAAS,MAAAgR,OAAA,EAAAA,EAAiBhR,OAAQ9C,EAAQuU,SAAWpW,QAAKgT,GAC1ErO,EAAO3E,GAAK7B,KAAA8U,QAER,IACFlT,GAAA5B,KAAK6U,EAAYnR,EAAQuU,QAClBzR,EAAA9C,EAAQuU,OAAOzR,GACtBA,EAAOF,GAAY,MAAAiR,OAAA,EAAAA,EAAY/Q,KAAMA,EAAM9C,GAC3C9B,GAAA5B,KAAK8U,EAAgBtO,GACrB5E,GAAA5B,KAAK4U,EAAe,KACrB,OAAQsD,GACPtW,GAAA5B,KAAK4U,EAAesD,EACrB,CAGDrW,QAAK+S,KACPrI,EAAQ1K,GAAK7B,KAAA4U,GACbpO,EAAO3E,GAAK7B,KAAA8U,GACZxB,EAAiB3Q,KAAKC,MACbqB,EAAA,SAEL,MAAAkU,EAAsC,aAAzB9E,EAASjQ,YACtBgV,EAAuB,YAAXnU,EACZoU,EAAqB,UAAXpU,EACVqU,EAAYF,GAAaD,EACzBzE,OAAmB,IAATlN,EA6BV+R,EA5BS,CACbtU,SACAb,YAAaiQ,EAASjQ,YACtBgV,YACAI,UAAsB,YAAXvU,EACXoU,UACAI,iBAAkBH,EAClBA,YACA9R,OACA0I,cAAemE,EAASnE,cACxB3C,QACA+G,iBACAtI,aAAcqI,EAASH,kBACvBwF,cAAerF,EAASF,mBACxBpD,iBAAkBsD,EAAStD,iBAC3B4I,UAAWtF,EAASvD,gBAAkB,GAAKuD,EAAStD,iBAAmB,EACvE6I,oBAAqBvF,EAASvD,gBAAkB4H,EAAkB5H,iBAAmBuD,EAAStD,iBAAmB2H,EAAkB3H,iBACnIoI,aACAU,aAAcV,IAAeC,EAC7BU,eAAgBT,IAAY3E,EAC5BqF,SAAmC,WAAzB1F,EAASjQ,YACnBuU,oBACAqB,eAAgBX,GAAW3E,EAC3B7P,QAASA,GAAQf,EAAOY,GACxB6M,QAASvQ,KAAKuQ,QACd1D,QAAShL,GAAK7B,KAAA2U,GACdsE,WAAsD,IAA3ClW,GAAeW,EAAQV,QAASF,IAGzC,GAAA9C,KAAK0D,QAAQwT,8BAA+B,CACxC,MAAAgC,EAA8BrQ,IACR,UAAtB0P,EAAWtU,OACJ4E,EAAAvB,OAAOiR,EAAWhM,YACE,IAApBgM,EAAW/R,MACXqC,EAAAD,QAAQ2P,EAAW/R,OAG1B2S,EAAmB,KACvB,MAAMC,EAAUxX,GAAA5B,KAAK2U,EAAmB4D,EAAW1L,QAAUlE,MAC7DuQ,EAA2BE,IAEvBC,EAAexX,GAAK7B,KAAA2U,GAC1B,OAAQ0E,EAAapV,QACnB,IAAK,UACCnB,EAAMU,YAAcuS,EAAUvS,WAChC0V,EAA2BG,GAE7B,MACF,IAAK,YACuB,UAAtBd,EAAWtU,QAAsBsU,EAAW/R,OAAS6S,EAAajX,WAGtE,MACF,IAAK,WACuB,UAAtBmW,EAAWtU,QAAsBsU,EAAWhM,QAAU8M,EAAalQ,YAK5E,CACM,OAAAoP,CACR,CACD,YAAAhD,GACE,MAAMgC,EAAa1V,GAAK7B,KAAAwU,GAClB+D,EAAavY,KAAK0W,aAAa7U,GAAK7B,KAAAsU,GAAetU,KAAK0D,SAM1D,GALC9B,GAAA5B,KAAAyU,EAAsB5S,QAAKyS,GAAcxQ,OAC9ClC,GAAA5B,KAAK0U,EAAwB1U,KAAK0D,cACI,IAAlC7B,GAAA7B,KAAKyU,GAAoBjO,MAC3B5E,GAAA5B,KAAK+U,EAA4BlT,GAAK7B,KAAAsU,IAEpCxO,GAAoByS,EAAYhB,GAClC,OAEF3V,GAAA5B,KAAKwU,EAAiB+D,GAsBtBjJ,GAAAtP,KAAKqU,GAALiF,IAAApa,KAAAc,KAAa,CAAEC,UArBe,MAC5B,IAAKsX,EACI,OAAA,EAEH,MAAAgC,oBAAEA,GAAwBvZ,KAAK0D,QAC/B8V,EAA0D,mBAAxBD,EAAqCA,IAAwBA,EACrG,GAAiC,QAA7BC,IAAuCA,IAA6B3X,GAAA7B,KAAKmV,GAAcxU,KAClF,OAAA,EAET,MAAM8Y,EAAgB,IAAIvZ,IACxBsZ,GAA4B3X,GAAK7B,KAAAmV,IAKnC,OAHInV,KAAK0D,QAAQ+D,cACfgS,EAAcnZ,IAAI,SAEbvC,OAAO2G,KAAK7C,GAAA7B,KAAKwU,IAAgB9E,KAAMpR,IAC5C,MAAMob,EAAWpb,EAEV,OADSuD,GAAK7B,KAAAwU,GAAekF,KAAcnC,EAAWmC,IAC3CD,EAAcE,IAAID,MAGdE,IAC3B,CAcD,aAAApG,GACExT,KAAKuV,eACDvV,KAAKU,gBACP4O,GAAAtP,KAAKiU,EAALuB,GAAAtW,KAAAc,KAEH,GA5YDqO,EAAA,IACAvM,QAAAwS,EAAA,IAAAxS,QACAyS,cACAC,EACA,IAAA1S,QAAA2S,EAAA,IAAA3S,QACA4S,cACAC,EACA,IAAA7S,QAAA8S,EAAA,IAAA9S,QACA+S,EACA,IAAA/S,QAAAgT,EAAA,IAAAhT,QAGAiT,cACAC,EACA,IAAAlT,QAAAmT,EAAA,IAAAnT,QACAoT,cACAC,EAkIA,IAAArT,QAAA+R,EAAA,IAAAb,QAAAsC,EAAa,SAACpO,GACZoI,GAAAtP,KAAKoU,EAAL6B,GAAA/W,KAAAc,MACI,IAAA6M,EAAUhL,QAAKyS,GAAcrD,MAC/BjR,KAAK0D,QACLwD,GAKK,aAHFA,WAAcO,gBACPoF,EAAAA,EAAQ3D,MAAMhH,KAEnB2K,CACR,EACDiH,gBAAmB,WACjBxE,GAAAtP,KAAKkU,EAAL0B,GAAA1W,KAAAc,MACA,MAAMwC,EAAYK,GAChB7C,KAAK0D,QAAQlB,UACbX,GAAK7B,KAAAsU,IAEP,GAAIvS,IAAYF,GAAK7B,KAAAwU,GAAe3Q,UAAY1B,GAAeK,GAC7D,OAEF,MACMmK,EADOrK,GAAeT,GAAK7B,KAAAwU,GAAetF,cAAe1M,GACxC,EAClBZ,GAAA5B,KAAAgV,EAAkB3T,GAAeR,WAAW,KAC1CgB,GAAK7B,KAAAwU,GAAe3Q,SACvB7D,KAAKuV,gBAEN5I,GACJ,EACDoH,gBAAuB,WACrB,OAAgD,mBAAjC/T,KAAK0D,QAAQmW,gBAAiC7Z,KAAK0D,QAAQmW,gBAAgBhY,GAAK7B,KAAAsU,IAAiBtU,KAAK0D,QAAQmW,mBAAoB,CAClJ,EACD7F,EAAA,IAAAhB,QAAA8G,EAAsB,SAACC,GACrBzK,GAAAtP,KAAKmU,EAAL0B,GAAA3W,KAAAc,MACA4B,GAAA5B,KAAKkV,EAA0B6E,IAC3BhY,KAAyE,IAA7DgB,GAAe/C,KAAK0D,QAAQV,QAASnB,QAAKyS,KAA6BnS,GAAeN,GAAK7B,KAAAkV,KAA6D,IAAjCrT,GAAA7B,KAAKkV,IAGvItT,GAAA5B,KAAAiV,EAAqB5T,GAAeH,YAAY,MAC/ClB,KAAK0D,QAAQsW,6BAA+BrS,GAAaY,cAC3D+G,GAAAtP,KAAK6T,EAALyB,GAAApW,KAAAc,OAED6B,QAAKqT,IACT,EACDjB,gBAAa,WACX3E,GAAAtP,KAAK8T,EAALuC,GAAAnX,KAAAc,MACKsP,GAAAtP,KAAAgU,EAAA8F,GAAL5a,KAA4Bc,KAAAsP,GAAAtP,KAAK+T,EAALwC,GAAArX,KAAAc,MAC7B,EACDkU,gBAAkB,WACZrS,QAAKmT,KACQ3T,GAAAL,aAAaa,QAAKmT,IACjCpT,GAAA5B,KAAKgV,OAAkB,GAE1B,EACDb,gBAAqB,WACftS,QAAKoT,KACQ5T,GAAAF,cAAcU,QAAKoT,IAClCrT,GAAA5B,KAAKiV,OAAqB,GAE7B,EA8KDb,gBAAY,WACJ,MAAAtR,EAAQjB,QAAKwM,GAAQQ,gBAAgB4H,MAAM5U,GAAA7B,KAAKqO,GAASrO,KAAK0D,SAChE,GAAAZ,IAAUjB,QAAKyS,GACjB,OAEF,MAAMyB,EAAYlU,GAAK7B,KAAAsU,GACvB1S,GAAA5B,KAAKsU,EAAgBxR,GACrBlB,GAAA5B,KAAKuU,EAA4BzR,EAAMgB,OACnC9D,KAAKU,iBACP,MAAAqV,GAAAA,EAAWlF,eAAe7Q,MAC1B8C,EAAM4N,YAAY1Q,MAErB,EAODqU,GAAA,IAAArB,QAAAsG,GAAO,SAACW,GACN5Q,GAAcQ,MAAM,KACdoQ,EAAcha,WACXD,KAAAC,UAAUuI,QAASnI,IACtBA,EAASwB,QAAK2S,MAGbnG,GAAAA,KAAAA,GAAQQ,gBAAgB+B,OAAO,CAClC9N,MAAOjB,GAAK7B,KAAAsU,GACZjV,KAAM,4BAGX,EAnaiBiT,IAwapB,SAAS+C,GAAmBvS,EAAOY,GACjC,OAJF,SAA2BZ,EAAOY,GAChC,OAAkD,IAA3CX,GAAeW,EAAQV,QAASF,SAAyC,IAArBA,EAAMgB,MAAM0C,QAA4C,UAAvB1D,EAAMgB,MAAMG,SAA+C,IAAzBP,EAAQwW,aACxI,CAESC,CAAkBrX,EAAOY,SAAiC,IAArBZ,EAAMgB,MAAM0C,MAAmBiP,GAAc3S,EAAOY,EAASA,EAAQ0W,eACnH,CACA,SAAS3E,GAAc3S,EAAOY,EAAS2W,GACjC,IAA2C,IAA3CtX,GAAeW,EAAQV,QAASF,IAAmE,WAA/CD,GAAiBa,EAAQlB,UAAWM,GAAqB,CAC/G,MAAMV,EAAyB,mBAAViY,EAAuBA,EAAMvX,GAASuX,EAC3D,MAAiB,WAAVjY,IAAgC,IAAVA,GAAmByB,GAAQf,EAAOY,EAChE,CACM,OAAA,CACT,CACA,SAAS0S,GAAsBtT,EAAOiT,EAAWrS,EAASoS,GACxD,OAAQhT,IAAUiT,IAA4D,IAA/ChT,GAAe+S,EAAY9S,QAASF,OAAuBY,EAAQ4W,UAAmC,UAAvBxX,EAAMgB,MAAMG,SAAuBJ,GAAQf,EAAOY,EAClK,CACA,SAASG,GAAQf,EAAOY,GACtB,OAAkD,IAA3CX,GAAeW,EAAQV,QAASF,IAAoBA,EAAMqN,cAActN,GAAiBa,EAAQlB,UAAWM,GACrH,CCtcA,SAASyX,GAAsBC,GACtB,MAAA,CACLrI,QAAS,CAACJ,EAASjP,mBACjB,MAAMY,EAAUqO,EAAQrO,QAClB+W,EAAY,OAAAlQ,EAAA,OAAA3C,EAAA,OAAAtG,EAAAyQ,EAAQ7K,mBAAR5F,EAAAA,EAAsByN,WAAtB,EAAAnH,EAA4B8S,kBAA5BnQ,EAAuCkQ,UACnDE,GAAW,OAAArN,EAAAyE,EAAQjO,MAAM0C,WAAd8G,EAAAA,EAAoBkN,QAAS,GACxCI,GAAgB,OAAA5M,EAAA+D,EAAQjO,MAAM0C,WAAdwH,EAAAA,EAAoB6M,aAAc,GACxD,IAAIhW,EAAS,CAAE2V,MAAO,GAAIK,WAAY,IAClCC,EAAc,EAClB,MAAMpJ,EAAUqJ,UACd,IAAIC,GAAY,EACV,MAeA7T,EAAUF,GAAc8K,EAAQrO,QAASqO,EAAQ7K,cACjD+T,EAAYF,MAAOvU,EAAM0U,EAAOC,KACpC,GAAIH,EACF,OAAO3T,QAAQC,SAEjB,GAAa,MAAT4T,GAAiB1U,EAAKgU,MAAMpV,OACvB,OAAAiC,QAAQuB,QAAQpC,GAEzB,MAWMmL,EAXuB,MAC3B,MAAMC,EAAkB,CACtBhD,OAAQmD,EAAQnD,OAChBtL,SAAUyO,EAAQzO,SAClB8X,UAAWF,EACXT,UAAWU,EAAW,WAAa,UACnCpM,KAAMgD,EAAQrO,QAAQqL,MA7BF,IAACsC,EAgChB,OAhCgBA,EA+BLO,EA9Bb7T,OAAAuT,eAAeD,EAAQ,SAAU,CACtCE,YAAY,EACZC,IAAK,KACCO,EAAQN,OAAO4J,QACLL,GAAA,EAEJjJ,EAAAN,OAAOxJ,iBAAiB,QAAS,KAC3B+S,GAAA,IAGTjJ,EAAQN,UAqBVG,GAEcC,GACjByJ,QAAanU,EAAQwK,IACrB4J,SAAEA,GAAaxJ,EAAQrO,QACvB8X,EAAQL,EAAWpU,GAAaL,GAC/B,MAAA,CACL8T,MAAOgB,EAAMhV,EAAKgU,MAAOc,EAAMC,GAC/BV,WAAYW,EAAMhV,EAAKqU,WAAYK,EAAOK,KAG1C,GAAAd,GAAaE,EAASvV,OAAQ,CAChC,MAAM+V,EAAyB,aAAdV,EAEXgB,EAAU,CACdjB,MAAOG,EACPE,WAAYD,GAERM,GALcC,EAAWO,GAAuBC,IAK5BjY,EAAS+X,GACnC5W,QAAeoW,EAAUQ,EAASP,EAAOC,EACnD,KAAe,CACC,MAAAS,EAAiBpB,GAASG,EAASvV,OACtC,EAAA,CACK,MAAA8V,EAAwB,IAAhBJ,EAAoBF,EAAc,IAAMlX,EAAQmY,iBAAmBF,GAAiBjY,EAASmB,GACvG,GAAAiW,EAAc,GAAc,MAATI,EACrB,MAEOrW,QAAMoW,EAAUpW,EAAQqW,GACjCJ,GACZ,OAAmBA,EAAcc,EACxB,CACM,OAAA/W,GAELkN,EAAQrO,QAAQoO,UAClBC,EAAQL,QAAU,aAChB,OAAO,OAAA9J,GAAAtG,EAAAyQ,EAAQrO,SAAQoO,kBAAhBlK,EAAA1I,KAAAoC,EACLoQ,EACA,CACE9C,OAAQmD,EAAQnD,OAChBtL,SAAUyO,EAAQzO,SAClByL,KAAMgD,EAAQrO,QAAQqL,KACtB0C,OAAQM,EAAQN,QAElB3O,IAIJiP,EAAQL,QAAUA,GAI1B,CACA,SAASiK,GAAiBjY,GAAS8W,MAAEA,EAAAK,WAAOA,IACpC,MAAAiB,EAAYtB,EAAMpV,OAAS,EAC1B,OAAAoV,EAAMpV,OAAS,EAAI1B,EAAQiY,iBAChCnB,EAAMsB,GACNtB,EACAK,EAAWiB,GACXjB,QACE,CACN,CACA,SAASa,GAAqBhY,GAAS8W,MAAEA,EAAAK,WAAOA,UAC9C,OAAOL,EAAMpV,OAAS,EAAI,OAAA9D,EAAAoC,EAAQgY,2BAARpa,EAAAA,EAAApC,KAA+BwE,EAAA8W,EAAM,GAAIA,EAAOK,EAAW,GAAIA,QAAc,CACzG,CCxGA,IAAIkB,IAAWtJ,iBAAcpF,GAK3B,WAAAtN,CAAY0L,WA4KZwC,GAAAA,KAAAA,IAhLA1M,GAAAvB,KAAAqO,QAAA,GACA9M,GAAAvB,KAAAgc,QAAA,GACAza,GAAAvB,KAAAic,QAAA,GACA1a,GAAAvB,KAAAsO,QAAA,GAGE1M,GAAA5B,KAAKqO,GAAU5C,EAAOmD,QACtB5O,KAAKkc,WAAazQ,EAAOyQ,WACzBta,GAAA5B,KAAKic,GAAiBxQ,EAAO0Q,eAC7Bva,GAAA5B,KAAKgc,GAAa,IACbhc,KAAA8D,MAAQ2H,EAAO3H,OA0Of,CACLiO,aAAS,EACTvL,UAAM,EACN+F,MAAO,KACPvB,aAAc,EACd0N,cAAe,KACfK,UAAU,EACV9U,OAAQ,OACRmY,eAAW,EACXC,YAAa,GAlPRrc,KAAA0O,WAAWjD,EAAO/H,SACvB1D,KAAK0N,YACN,CACD,UAAAgB,CAAWhL,GACT1D,KAAK0D,QAAUA,EACV1D,KAAA6N,aAAa7N,KAAK0D,QAAQiK,OAChC,CACD,QAAIoB,GACF,OAAO/O,KAAK0D,QAAQqL,IACrB,CACD,WAAA2B,CAAYf,GACL9N,GAAA7B,KAAKgc,IAAWrL,SAAShB,KACvB9N,GAAA7B,KAAAgc,IAAWpS,KAAK+F,GACrB3P,KAAKyN,iBACL5L,GAAA7B,KAAKic,IAAerL,OAAO,CACzBvR,KAAM,gBACN2E,SAAUhE,KACV2P,aAGL,CACD,cAAAkB,CAAelB,GACb/N,GAAA5B,KAAKgc,GAAana,GAAK7B,KAAAgc,IAAWlL,OAAQT,GAAMA,IAAMV,IACtD3P,KAAK0N,aACL7L,GAAA7B,KAAKic,IAAerL,OAAO,CACzBvR,KAAM,kBACN2E,SAAUhE,KACV2P,YAEH,CACD,cAAA/B,GACO/L,GAAK7B,KAAAgc,IAAW5W,SACO,YAAtBpF,KAAK8D,MAAMG,OACbjE,KAAK0N,aAEA7L,GAAA7B,KAAAic,IAAe7M,OAAOpP,MAGhC,CACD,iBACE,OAAO,OAAAsB,EAAAO,GAAA7B,KAAKsO,UAAL,EAAAhN,EAAe2L,aACtBjN,KAAKsc,QAAQtc,KAAK8D,MAAMsY,UACzB,CACD,aAAME,CAAQF,+CACZ,MAAMhQ,EAAa,KACjBkD,GAAAtP,KAAKiO,GAAA+C,IAAL9R,KAAec,KAAA,CAAEX,KAAM,cAEnBkd,EAAoB,CACxB3N,OAAQ/M,GAAKwM,KAAAA,IACbU,KAAM/O,KAAK0D,QAAQqL,KACnB7K,YAAalE,KAAK0D,QAAQQ,aAE5BtC,GAAA5B,KAAKsO,GAAW9C,GAAc,CAC5BtB,GAAI,IACGlK,KAAK0D,QAAQ8Y,WAGXxc,KAAK0D,QAAQ8Y,WAAWJ,EAAWG,GAFjClV,QAAQC,OAAO,IAAIC,MAAM,wBAIpCqF,OAAQ,CAAC5B,EAAcuB,KACrB+C,GAAAtP,KAAKiO,GAAA+C,IAAL9R,KAAAc,KAAe,CAAEX,KAAM,SAAU2L,eAAcuB,WAEjDL,QAAS,KACPoD,GAAAtP,KAAKiO,GAAA+C,IAAL9R,KAAec,KAAA,CAAEX,KAAM,WAEzB+M,aACAI,MAAOxM,KAAK0D,QAAQ8I,OAAS,EAC7BC,WAAYzM,KAAK0D,QAAQ+I,WACzBtB,YAAanL,KAAK0D,QAAQyH,YAC1BW,OAAQ,IAAMjK,GAAK7B,KAAAic,IAAenQ,OAAO9L,SAErC,MAAAyc,EAAiC,YAAtBzc,KAAK8D,MAAMG,OACtB8U,GAAYlX,GAAKyM,KAAAA,IAASvC,WAC5B,IACF,GAAI0Q,UAEG,CACLnN,GAAAtP,KAAKiO,GAAA+C,IAAL9R,KAAAc,KAAe,CAAEX,KAAM,UAAW+c,YAAWrD,mBACvC,OAAAnR,GAAAtG,EAAAO,GAAA7B,KAAKic,IAAexQ,QAAOiR,iBAA3B9U,EAAA1I,KAAAoC,EACJ8a,EACApc,KACAuc,IAEI,MAAAxK,QAAgB,OAAAzE,GAAA/C,EAAAvK,KAAK0D,SAAQgZ,iBAAbpP,EAAApO,KAAAqL,EACpB6R,EACAG,IAEExK,IAAY/R,KAAK8D,MAAMiO,SACpB9D,GAAAA,KAAAA,GAAA+C,IAAL9R,KAAec,KAAA,CACbX,KAAM,UACN0S,UACAqK,YACArD,YAGL,CACD,MAAMvS,QAAa3E,GAAKyM,KAAAA,IAASlB,QA8B1B,aA7BD,OAAAkF,GAAAtE,EAAAnM,GAAA7B,KAAKic,IAAexQ,QAAO8G,kBAA3BD,EAAApT,KAAA8O,EACJxH,EACA4V,EACApc,KAAK8D,MAAMiO,QACX/R,KACAuc,UAEI,OAAA/J,GAAAC,EAAAzS,KAAK0D,SAAQ6O,kBAAbC,EAAAtT,KAAAuT,EACJjM,EACA4V,EACApc,KAAK8D,MAAMiO,QACXwK,UAEI,OAAA5J,GAAAC,EAAA/Q,GAAA7B,KAAKic,IAAexQ,QAAOiH,kBAA3BC,EAAAzT,KAAA0T,EACJpM,EACA,KACAxG,KAAK8D,MAAMsY,UACXpc,KAAK8D,MAAMiO,QACX/R,KACAuc,UAEI,OAAAzJ,GAAAC,EAAA/S,KAAK0D,SAAQgP,gBAAb,EAAAI,EAAA5T,KAAA6T,EACJvM,EACA,KACA4V,EACApc,KAAK8D,MAAMiO,QACXwK,IAEFjN,GAAAtP,KAAKiO,GAAA+C,IAAL9R,KAAAc,KAAe,CAAEX,KAAM,UAAWmH,SAC3BA,CACR,OAAQ+F,GACH,IA6BI,YA5BA,OAAAoQ,GAAAC,EAAA/a,GAAA7B,KAAKic,IAAexQ,QAAOoH,cAA3B,EAAA8J,EAAAzd,KAAA0d,EACJrQ,EACA6P,EACApc,KAAK8D,MAAMiO,QACX/R,KACAuc,UAEI,OAAAM,GAAAC,EAAA9c,KAAK0D,SAAQmP,cAAb,EAAAgK,EAAA3d,KAAA4d,EACJvQ,EACA6P,EACApc,KAAK8D,MAAMiO,QACXwK,UAEI,OAAAQ,GAAAC,EAAAnb,GAAA7B,KAAKic,IAAexQ,QAAOiH,gBAA3B,EAAAqK,EAAA7d,KAAA8d,OACJ,EACAzQ,EACAvM,KAAK8D,MAAMsY,UACXpc,KAAK8D,MAAMiO,QACX/R,KACAuc,UAEI,OAAAU,GAAAC,EAAAld,KAAK0D,SAAQgP,gBAAb,EAAAuK,EAAA/d,KAAAge,OACJ,EACA3Q,EACA6P,EACApc,KAAK8D,MAAMiO,QACXwK,IAEIhQ,CACd,CAAgB,QACR+C,GAAAtP,KAAKiO,GAAA+C,IAAL9R,KAAAc,KAAe,CAAEX,KAAM,QAASkN,SACjC,CACP,CAAc,QACH1K,GAAA7B,KAAAic,IAAekB,QAAQnd,KAC7B,CACF,GA/KDqO,GAAA,IACAvM,QAAAka,GAAA,IAAAla,QACAma,GACA3N,IAAAA,QAAAA,GAAA,YA6KAL,GAAA,IAAA+E,QAAAhC,GAAS,SAACiC,GAsDHjT,KAAA8D,MArDW,CAACA,IACf,OAAQmP,EAAO5T,MACb,IAAK,SACI,MAAA,IACFyE,EACHkH,aAAciI,EAAOjI,aACrB0N,cAAezF,EAAO1G,OAE1B,IAAK,QACI,MAAA,IACFzI,EACHiV,UAAU,GAEd,IAAK,WACI,MAAA,IACFjV,EACHiV,UAAU,GAEd,IAAK,UACI,MAAA,IACFjV,EACHiO,QAASkB,EAAOlB,QAChBvL,UAAM,EACNwE,aAAc,EACd0N,cAAe,KACfnM,MAAO,KACPwM,SAAU9F,EAAO8F,SACjB9U,OAAQ,UACRmY,UAAWnJ,EAAOmJ,UAClBC,YAAa1Z,KAAKC,OAEtB,IAAK,UACI,MAAA,IACFkB,EACH0C,KAAMyM,EAAOzM,KACbwE,aAAc,EACd0N,cAAe,KACfnM,MAAO,KACPtI,OAAQ,UACR8U,UAAU,GAEd,IAAK,QACI,MAAA,IACFjV,EACH0C,UAAM,EACN+F,MAAO0G,EAAO1G,MACdvB,aAAclH,EAAMkH,aAAe,EACnC0N,cAAezF,EAAO1G,MACtBwM,UAAU,EACV9U,OAAQ,WAIHsP,CAAQvT,KAAK8D,OAC1BuF,GAAcQ,MAAM,KACbhI,GAAA7B,KAAAgc,IAAWxT,QAASmH,IACvBA,EAASyN,iBAAiBnK,KAE5BpR,GAAA7B,KAAKic,IAAerL,OAAO,CACzB5M,SAAUhE,KACVX,KAAM,UACN4T,YAGL,EAlPYR,ICCf,IAAI4K,IAAgB7K,iBAAc1S,GAChC,WAAAC,CAAY0L,EAAS,YAOrBlK,GAAAvB,KAAAsd,QAAA,GACA/b,GAAAvB,KAAAud,QAAA,GACAhc,GAAAvB,KAAAwd,QAAA,GAPExd,KAAKyL,OAASA,EACT7J,GAAA5B,KAAAsd,OAAiCpd,KACjC0B,GAAA5B,KAAAud,OAA8BE,KACnC7b,GAAA5B,KAAKwd,GAAc,EACpB,CAID,KAAA/G,CAAM7H,EAAQlL,EAASI,GACf,MAAAE,EAAW,IAAI+X,GAAS,CAC5BnN,SACAuN,cAAenc,KACfkc,aAAcwB,GAAA1d,KAAKwd,IAALjZ,EACdb,QAASkL,EAAO+O,uBAAuBja,GACvCI,UAGK,OADP9D,KAAKM,IAAI0D,GACFA,CACR,CACD,GAAA1D,CAAI0D,GACGnC,GAAA7B,KAAAsd,IAAWhd,IAAI0D,GACd,MAAA4Z,EAAQC,GAAS7Z,GACnB,GAAiB,iBAAV4Z,EAAoB,CAC7B,MAAME,EAAkBjc,GAAA7B,KAAKud,IAAQ/L,IAAIoM,GACrCE,EACFA,EAAgBlU,KAAK5F,GAErBnC,GAAA7B,KAAKud,IAAQQ,IAAIH,EAAO,CAAC5Z,GAE5B,CACDhE,KAAK4Q,OAAO,CAAEvR,KAAM,QAAS2E,YAC9B,CACD,MAAAoL,CAAOpL,GACL,GAAInC,GAAK7B,KAAAsd,IAAW9c,OAAOwD,GAAW,CAC9B,MAAA4Z,EAAQC,GAAS7Z,GACnB,GAAiB,iBAAV4Z,EAAoB,CAC7B,MAAME,EAAkBjc,GAAA7B,KAAKud,IAAQ/L,IAAIoM,GACzC,GAAIE,EACE,GAAAA,EAAgB1Y,OAAS,EAAG,CACxB,MAAA4Y,EAAQF,EAAgBG,QAAQja,IACpB,IAAdga,GACcF,EAAAI,OAAOF,EAAO,EAEjC,MAAUF,EAAgB,KAAO9Z,GAC3BnC,GAAA7B,KAAAud,IAAQ/c,OAAOod,EAGzB,CACF,CACD5d,KAAK4Q,OAAO,CAAEvR,KAAM,UAAW2E,YAChC,CACD,MAAA8H,CAAO9H,GACC,MAAA4Z,EAAQC,GAAS7Z,GACnB,GAAiB,iBAAV4Z,EAAoB,CAC7B,MAAMO,EAAyBtc,GAAA7B,KAAKud,IAAQ/L,IAAIoM,GAC1CQ,EAA+C,MAAxBD,OAAwB,EAAAA,EAAA/N,KAClDtS,GAAyB,YAAnBA,EAAEgG,MAAMG,QAEV,OAACma,GAAwBA,IAAyBpa,CAC/D,CACa,OAAA,CAEV,CACD,OAAAmZ,CAAQnZ,SACA,MAAA4Z,EAAQC,GAAS7Z,GACnB,GAAiB,iBAAV4Z,EAAoB,CAC7B,MAAMS,EAAgB,OAAA/c,EAAAO,GAAK7B,KAAAud,IAAQ/L,IAAIoM,SAAjBtc,EAAAA,EAAyB8O,KAAMtS,GAAMA,IAAMkG,GAAYlG,EAAEgG,MAAMiV,UAC9E,OAAA,MAAAsF,OAAA,EAAAA,EAAepR,aAAc5F,QAAQuB,SAClD,CACM,OAAOvB,QAAQuB,SAElB,CACD,KAAA0V,GACEjV,GAAcQ,MAAM,KACbhI,GAAA7B,KAAAsd,IAAW9U,QAASxE,IACvBhE,KAAK4Q,OAAO,CAAEvR,KAAM,UAAW2E,eAEjCnC,GAAA7B,KAAKsd,IAAWgB,QAChBzc,GAAA7B,KAAKud,IAAQe,SAEhB,CACD,MAAAC,GACS,OAAA/Y,MAAMgZ,KAAK3c,GAAA7B,KAAKsd,IACxB,CACD,IAAAlN,CAAKlN,GACH,MAAMub,EAAmB,CAAEtb,OAAO,KAASD,GACpC,OAAAlD,KAAKue,SAASnO,KAClBpM,GAAaD,GAAc0a,EAAkBza,GAEjD,CACD,OAAA0a,CAAQxb,EAAU,IACT,OAAAlD,KAAKue,SAASzN,OAAQ9M,GAAaD,GAAcb,EAASc,GAClE,CACD,MAAA4M,CAAO+N,GACLtV,GAAcQ,MAAM,KACb7J,KAAAC,UAAUuI,QAASnI,IACtBA,EAASse,MAGd,CACD,qBAAAC,GACQ,MAAAC,EAAkB7e,KAAKue,SAASzN,OAAQT,GAAMA,EAAEvM,MAAMiV,UAC5D,OAAO1P,GAAcQ,MACnB,IAAMxC,QAAQyX,IACZD,EAAgBE,IAAK/a,GAAaA,EAASiJ,WAAW/D,MAAMhH,MAGjE,GAtGDob,GAAA,IAAAxb,QACAyb,eACAC,GAVkB,IAAA1b,QAAA0Q,IAgHpB,SAASqL,GAAS7Z,SAChB,OAAO,OAAA1C,EAAA0C,EAASN,QAAQka,cAAjBtc,EAAwB0d,EACjC,CClHA,IAAIC,IAAmBrM,iBAAc9S,GAKnC,WAAAC,CAAY6O,EAAQlL,WAoDpBnC,GAAAvB,KAAAkf,IAYA7K,GAAAA,KAAAA,IApEA9S,GAAAvB,KAAAqO,QAAA,GACA9M,GAAAvB,KAAAwU,QAAiB,GACjBjT,GAAAvB,KAAAmf,QAAA,GACA5d,GAAAvB,KAAAof,QAAA,GAGExd,GAAA5B,KAAKqO,GAAUO,GACf5O,KAAK0O,WAAWhL,GAChB1D,KAAKoV,cACL9F,GAAAtP,KAAKkf,GAALG,IAAAngB,KAAAc,KACD,CACD,WAAAoV,GACEpV,KAAKsf,OAAStf,KAAKsf,OAAOlf,KAAKJ,MAC/BA,KAAKyP,MAAQzP,KAAKyP,MAAMrP,KAAKJ,KAC9B,CACD,UAAA0O,CAAWhL,SACT,MAAMoS,EAAc9V,KAAK0D,QACzB1D,KAAK0D,QAAU7B,GAAA7B,KAAKqO,IAAQsP,uBAAuBja,GAC9CoC,GAAoB9F,KAAK0D,QAASoS,IAChCzH,GAAAA,KAAAA,IAAQkR,mBAAmB3O,OAAO,CACrCvR,KAAM,yBACN2E,SAAUnC,GAAK7B,KAAAmf,IACfxP,SAAU3P,QAGG,MAAb8V,OAAa,EAAAA,EAAA5R,cAAelE,KAAK0D,QAAQQ,aAAeC,GAAQ2R,EAAY5R,eAAiBC,GAAQnE,KAAK0D,QAAQQ,aACpHlE,KAAKyP,QAC4C,aAAxC,OAAAnO,EAAAO,GAAK7B,KAAAmf,YAAL7d,EAAuBwC,MAAMG,SACjCpC,GAAA7B,KAAAmf,IAAiBzQ,WAAW1O,KAAK0D,QAEzC,CACD,aAAAjD,SACOT,KAAKU,gBACR,OAAAY,EAAAO,GAAA7B,KAAKmf,MAAL7d,EAAuBuP,eAAe7Q,KAEzC,CACD,gBAAAod,CAAiBnK,GACf3D,GAAAtP,KAAKkf,GAALG,IAAAngB,KAAAc,MACKqU,GAAAA,KAAAA,GAAAiF,IAALpa,KAAac,KAAAiT,EACd,CACD,gBAAAhD,GACE,OAAOpO,GAAK2S,KAAAA,GACb,CACD,KAAA/E,SACE,OAAAnO,EAAAO,GAAA7B,KAAKmf,MAAL7d,EAAuBuP,eAAe7Q,MACtC4B,GAAA5B,KAAKmf,QAAmB,GACxB7P,GAAAtP,KAAKkf,GAALG,IAAAngB,KAAAc,MACAsP,GAAAtP,KAAKqU,GAAAiF,IAALpa,KAAAc,KACD,CACD,MAAAsf,CAAOlD,EAAW1Y,SAKT,OAJP9B,GAAA5B,KAAKof,GAAiB1b,GACtB,OAAApC,EAAAO,GAAA7B,KAAKmf,MAAL7d,EAAuBuP,eAAe7Q,MACjC4B,GAAA5B,KAAAmf,GAAmBtd,QAAKwM,IAAQkR,mBAAmB9I,MAAM5U,GAAA7B,KAAKqO,IAASrO,KAAK0D,UAC5E7B,GAAA7B,KAAAmf,IAAiBzO,YAAY1Q,MAC3B6B,GAAA7B,KAAKmf,IAAiB7C,QAAQF,EACtC,GAvDD/N,GAAA,IACAmG,QAAAA,GAAA,YACA2K,GACA,IAAArd,QAAAsd,GAAA,IAAAtd,QAqDAod,kBAAa,iBACX,MAAMpb,GAAQ,OAAAxC,EAAAO,GAAA7B,KAAKmf,UAAL7d,EAAAA,EAAuBwC,QF0LhC,CACLiO,aAAS,EACTvL,UAAM,EACN+F,MAAO,KACPvB,aAAc,EACd0N,cAAe,KACfK,UAAU,EACV9U,OAAQ,OACRmY,eAAW,EACXC,YAAa,GElMbza,GAAA5B,KAAKwU,GAAiB,IACjB1Q,EACHsU,UAA4B,YAAjBtU,EAAMG,OACjBuU,UAA4B,YAAjB1U,EAAMG,OACjBoU,QAA0B,UAAjBvU,EAAMG,OACfub,OAAyB,SAAjB1b,EAAMG,OACdqb,OAAQtf,KAAKsf,OACb7P,MAAOzP,KAAKyP,OAEf,EACD4E,GAAA,IAAArB,QAAAsG,GAAO,SAACrG,GACN5J,GAAcQ,MAAM,yBAClB,GAAIhI,GAAK7B,KAAAof,KAAkBpf,KAAKU,eAAgB,CACxC,MAAA0b,EAAYva,QAAK2S,IAAe4H,UAChCqD,EAAiB5d,QAAK2S,IAAezC,QACrCA,EAAU,CACdnD,OAAQ/M,GAAKwM,KAAAA,IACbU,KAAM/O,KAAK0D,QAAQqL,KACnB7K,YAAalE,KAAK0D,QAAQQ,aAEP,aAAjB,MAAA+O,OAAA,EAAAA,EAAQ5T,OACV,OAAAuI,GAAAtG,EAAAO,GAAA7B,KAAKof,KAAe7M,YAApB3K,EAAA1I,KAAAoC,EACE2R,EAAOzM,KACP4V,EACAqD,EACA1N,GAEF,OAAAzE,GAAA/C,EAAA1I,GAAA7B,KAAKof,KAAe1M,YAApBpF,EAAApO,KAAAqL,EACE0I,EAAOzM,KACP,KACA4V,EACAqD,EACA1N,IAEwB,WAAT,MAARkB,OAAQ,EAAAA,EAAA5T,QACjB,OAAAiT,GAAAtE,EAAAnM,GAAA7B,KAAKof,KAAevM,UAApBP,EAAApT,KAAA8O,EACEiF,EAAO1G,MACP6P,EACAqD,EACA1N,GAEF,OAAAS,GAAAC,EAAA5Q,GAAA7B,KAAKof,KAAe1M,YAApBF,EAAAtT,KAAAuT,OACE,EACAQ,EAAO1G,MACP6P,EACAqD,EACA1N,GAGL,CACI/R,KAAAC,UAAUuI,QAASnI,IACtBA,EAASwB,QAAK2S,QAGnB,EAjHoB5B,ICAnB8M,IAAa/M,iBAAc7S,GAC7B,WAAAC,CAAY0L,EAAS,YAKrBlK,GAAAvB,KAAA2f,QAAA,GAHE3f,KAAKyL,OAASA,EACT7J,GAAA5B,KAAA2f,OAA+BlC,IACrC,CAED,KAAAhH,CAAM7H,EAAQlL,EAASI,GACrB,MAAMR,EAAWI,EAAQJ,SACnBE,EAAYE,EAAQF,WAAaC,GAAsBH,EAAUI,GACnE,IAAAZ,EAAQ9C,KAAKwR,IAAIhO,GAYd,OAXFV,IACHA,EAAQ,IAAIiL,GAAM,CAChBa,SACAtL,WACAE,YACAE,QAASkL,EAAOoH,oBAAoBtS,GACpCI,QACA2K,eAAgBG,EAAOgR,iBAAiBtc,KAE1CtD,KAAKM,IAAIwC,IAEJA,CACR,CACD,GAAAxC,CAAIwC,GACGjB,GAAK7B,KAAA2f,IAAShG,IAAI7W,EAAMU,aAC3B3B,GAAA7B,KAAK2f,IAAS5B,IAAIjb,EAAMU,UAAWV,GACnC9C,KAAK4Q,OAAO,CACVvR,KAAM,QACNyD,UAGL,CACD,MAAAsM,CAAOtM,GACL,MAAM+c,EAAahe,GAAA7B,KAAK2f,IAASnO,IAAI1O,EAAMU,WACvCqc,IACF/c,EAAM0K,UACFqS,IAAe/c,GACZjB,GAAA7B,KAAA2f,IAASnf,OAAOsC,EAAMU,WAE7BxD,KAAK4Q,OAAO,CAAEvR,KAAM,UAAWyD,UAElC,CACD,KAAAwb,GACEjV,GAAcQ,MAAM,KAClB7J,KAAKue,SAAS/V,QAAS1F,IACrB9C,KAAKoP,OAAOtM,MAGjB,CACD,GAAA0O,CAAIhO,GACK,OAAA3B,GAAA7B,KAAK2f,IAASnO,IAAIhO,EAC1B,CACD,MAAA+a,GACE,MAAO,IAAI1c,GAAK7B,KAAA2f,IAASG,SAC1B,CACD,IAAA1P,CAAKlN,GACH,MAAMub,EAAmB,CAAEtb,OAAO,KAASD,GACpC,OAAAlD,KAAKue,SAASnO,KAClBtN,GAAUG,GAAWwb,EAAkB3b,GAE3C,CACD,OAAA4b,CAAQxb,EAAU,IACV,MAAA6c,EAAU/f,KAAKue,SACrB,OAAOxgB,OAAO2G,KAAKxB,GAASkC,OAAS,EAAI2a,EAAQjP,OAAQhO,GAAUG,GAAWC,EAASJ,IAAUid,CAClG,CACD,MAAAnP,CAAO+N,GACLtV,GAAcQ,MAAM,KACb7J,KAAAC,UAAUuI,QAASnI,IACtBA,EAASse,MAGd,CACD,OAAA3W,GACEqB,GAAcQ,MAAM,KAClB7J,KAAKue,SAAS/V,QAAS1F,IACrBA,EAAMkF,aAGX,CACD,QAAAyC,GACEpB,GAAcQ,MAAM,KAClB7J,KAAKue,SAAS/V,QAAS1F,IACrBA,EAAM2H,cAGX,GAhFDkV,GANe,IAAA7d,QAAA6Q,ICWbqN,IAAcjN,GAAM,MAStB,WAAAhT,CAAY0L,EAAS,IARrBlK,GAAAvB,KAAAigB,QAAA,GACA1e,GAAAvB,KAAAic,QAAA,GACA1a,GAAAvB,KAAAuO,QAAA,GACAhN,GAAAvB,KAAAkgB,QAAA,GACA3e,GAAAvB,KAAAmgB,QAAA,GACA5e,GAAAvB,KAAAogB,QAAA,GACA7e,GAAAvB,KAAAqgB,QAAA,GACA9e,GAAAvB,KAAAsgB,QAAA,GAEE1e,GAAA5B,KAAKigB,GAAcxU,EAAO8U,YAAc,IAAIb,IAC5C9d,GAAA5B,KAAKic,GAAiBxQ,EAAO0Q,eAAiB,IAAIkB,IAC7C9O,GAAAA,KAAAA,GAAkB9C,EAAOgD,gBAAkB,CAAA,GAC3C7M,GAAA5B,KAAAkgB,OAAqCzC,KACrC7b,GAAA5B,KAAAmgB,OAAwC1C,KAC7C7b,GAAA5B,KAAKogB,GAAc,EACpB,CACD,KAAAI,GACE9C,GAAA1d,KAAKogB,IAAL7b,IACyB,IAArB1C,QAAKue,MACTxe,GAAA5B,KAAKqgB,GAAoB1Y,GAAaxH,UAAU4a,MAAO1S,IACjDA,UACIrI,KAAK4e,wBACX/c,GAAA7B,KAAKigB,IAAYjY,cAGrBpG,GAAA5B,KAAKsgB,GAAqBhW,GAAcnK,UAAU4a,MAAOlQ,IACnDA,UACI7K,KAAK4e,wBACX/c,GAAA7B,KAAKigB,IAAYxV,eAGtB,CACD,OAAAgW,WACE/C,GAAA1d,KAAKogB,IAAL7b,IACyB,IAArB1C,QAAKue,MACT,OAAA9e,EAAAO,GAAA7B,KAAKqgB,MAAL/e,EAAApC,KAAAc,MACA4B,GAAA5B,KAAKqgB,QAAoB,GACzB,OAAAzY,EAAA/F,GAAA7B,KAAKsgB,MAAL1Y,EAAA1I,KAAAc,MACA4B,GAAA5B,KAAKsgB,QAAqB,GAC3B,CACD,UAAAnI,CAAWjV,GACF,OAAArB,GAAA7B,KAAKigB,IAAYvB,QAAQ,IAAKxb,EAASE,YAAa,aAAcgC,MAC1E,CACD,UAAAsb,CAAWxd,GACF,OAAArB,GAAA7B,KAAKic,IAAeyC,QAAQ,IAAKxb,EAASe,OAAQ,YAAamB,MACvE,CAQD,YAAAub,CAAard,SACX,MAAMI,EAAU1D,KAAKgW,oBAAoB,CAAE1S,aACpChC,OAAA,OAAAA,EAAAO,QAAKoe,IAAYzO,IAAI9N,EAAQF,iBAA7BlC,EAAAA,EAAyCwC,MAAM0C,IACvD,CACD,eAAAoa,CAAgBld,GACR,MAAA4T,EAAmBtX,KAAKgW,oBAAoBtS,GAC5CZ,EAAQjB,GAAA7B,KAAKigB,IAAYxJ,MAAMzW,KAAMsX,GACrCuJ,EAAa/d,EAAMgB,MAAM0C,KAC/B,YAAmB,IAAfqa,EACK7gB,KAAK8gB,WAAWpd,IAErBA,EAAQqd,mBAAqBje,EAAMqN,cAActN,GAAiByU,EAAiB9U,UAAWM,KAC3F9C,KAAKghB,cAAc1J,GAEnBjQ,QAAQuB,QAAQiY,GACxB,CACD,cAAAI,CAAe/d,GACN,OAAArB,GAAA7B,KAAKigB,IAAYvB,QAAQxb,GAAS6b,IAAI,EAAGzb,WAAUQ,WAEjD,CAACR,EADKQ,EAAM0C,MAGtB,CACD,YAAA0a,CAAa5d,EAAU6d,EAASzd,GAC9B,MAAM4T,EAAmBtX,KAAKgW,oBAAoB,CAAE1S,aAC9CR,EAAQjB,QAAKoe,IAAYzO,IAC7B8F,EAAiB9T,WAGbgD,Ed7FV,SAA0B2a,EAASC,GACjC,MAA0B,mBAAZD,EAAyBA,EAAQC,GAASD,CAC1D,Cc2FiBE,CAAiBF,QADbre,WAAOgB,MAAM0C,MAE9B,QAAa,IAATA,EAGJ,OAAO3E,GAAK7B,KAAAigB,IAAYxJ,MAAMzW,KAAMsX,GAAkBrI,QAAQzI,EAAM,IAAK9C,EAASyL,QAAQ,GAC3F,CACD,cAAAmS,CAAepe,EAASie,EAASzd,GAC/B,OAAO2F,GAAcQ,MACnB,IAAMhI,GAAK7B,KAAAigB,IAAYvB,QAAQxb,GAAS6b,IAAI,EAAGzb,cAAe,CAC5DA,EACAtD,KAAKkhB,aAAa5d,EAAU6d,EAASzd,KAG1C,CACD,aAAA6d,CAAcje,SACZ,MAAMI,EAAU1D,KAAKgW,oBAAoB,CAAE1S,aACpChC,OAAA,OAAAA,EAAAO,QAAKoe,IAAYzO,IACtB9N,EAAQF,mBADHlC,EAEJwC,KACJ,CACD,aAAA0d,CAActe,GACZ,MAAMqd,EAAa1e,GAAK7B,KAAAigB,IACxB5W,GAAcQ,MAAM,KAClB0W,EAAW7B,QAAQxb,GAASsF,QAAS1F,IACnCyd,EAAWnR,OAAOtM,MAGvB,CACD,YAAA2e,CAAave,EAASQ,GACpB,MAAM6c,EAAa1e,GAAK7B,KAAAigB,IACjB,OAAA5W,GAAcQ,MAAM,KACzB0W,EAAW7B,QAAQxb,GAASsF,QAAS1F,IACnCA,EAAM2M,UAEDzP,KAAK0hB,eACV,CACEriB,KAAM,YACH6D,GAELQ,IAGL,CACD,aAAAie,CAAcze,EAAS6J,EAAgB,IACrC,MAAM6U,EAAyB,CAAEtW,QAAQ,KAASyB,GAC5C8U,EAAWxY,GAAcQ,MAC7B,IAAMhI,GAAA7B,KAAKigB,IAAYvB,QAAQxb,GAAS6b,IAAKjc,GAAUA,EAAMgK,OAAO8U,KAE/D,OAAAva,QAAQyX,IAAI+C,GAAU1V,KAAKjK,IAAMgH,MAAMhH,GAC/C,CACD,iBAAA4f,CAAkB5e,EAASQ,EAAU,IAC5B,OAAA2F,GAAcQ,MAAM,KACzBhI,GAAA7B,KAAKigB,IAAYvB,QAAQxb,GAASsF,QAAS1F,IACzCA,EAAMiO,eAEqB,UAAzB,MAAA7N,OAAA,EAAAA,EAAS6e,aACJ1a,QAAQuB,UAEV5I,KAAK0hB,eACV,IACKxe,EACH7D,MAAM,MAAA6D,OAAA,EAAAA,EAAS6e,eAAe,MAAA7e,OAAA,EAAAA,EAAS7D,OAAQ,UAEjDqE,IAGL,CACD,cAAAge,CAAexe,EAASQ,EAAU,IAChC,MAAMwD,EAAe,IAChBxD,EACH8M,cAAe9M,EAAQ8M,gBAAiB,GAEpCqR,EAAWxY,GAAcQ,MAC7B,IAAMhI,QAAKoe,IAAYvB,QAAQxb,GAAS4N,OAAQhO,IAAWA,EAAM8M,eAAiB9M,EAAMkN,YAAY+O,IAAKjc,IACvG,IAAI+J,EAAU/J,EAAMmO,WAAM,EAAQ/J,GAIlC,OAHKA,EAAaO,eACNoF,EAAAA,EAAQ3D,MAAMhH,KAES,WAA5BY,EAAMgB,MAAMV,YAA2BiE,QAAQuB,UAAYiE,KAGtE,OAAOxF,QAAQyX,IAAI+C,GAAU1V,KAAKjK,GACnC,CACD,UAAA4e,CAAWpd,GACH,MAAA4T,EAAmBtX,KAAKgW,oBAAoBtS,QACnB,IAA3B4T,EAAiB9K,QACnB8K,EAAiB9K,OAAQ,GAE3B,MAAM1J,EAAQjB,GAAA7B,KAAKigB,IAAYxJ,MAAMzW,KAAMsX,GAC3C,OAAOxU,EAAMqN,cACXtN,GAAiByU,EAAiB9U,UAAWM,IAC3CA,EAAMmO,MAAMqG,GAAoBjQ,QAAQuB,QAAQ9F,EAAMgB,MAAM0C,KACjE,CACD,aAAAwa,CAActd,GACL,OAAA1D,KAAK8gB,WAAWpd,GAASyI,KAAKjK,IAAMgH,MAAMhH,GAClD,CACD,kBAAA8f,CAAmBte,GAEV,OADCA,EAAAwO,SAAWqI,GAAsB7W,EAAQ8W,OAC1Cxa,KAAK8gB,WAAWpd,EACxB,CACD,qBAAAue,CAAsBve,GACb,OAAA1D,KAAKgiB,mBAAmBte,GAASyI,KAAKjK,IAAMgH,MAAMhH,GAC1D,CACD,uBAAAggB,CAAwBxe,GAEf,OADCA,EAAAwO,SAAWqI,GAAsB7W,EAAQ8W,OAC1Cxa,KAAK4gB,gBAAgBld,EAC7B,CACD,qBAAAkb,GACM,OAAAtU,GAAcQ,WACTjJ,GAAA7B,KAAKic,IAAe2C,wBAEtBvX,QAAQuB,SAChB,CACD,aAAAiG,GACE,OAAOhN,GAAK7B,KAAAigB,GACb,CACD,gBAAAV,GACE,OAAO1d,GAAKoa,KAAAA,GACb,CACD,iBAAAkG,GACE,OAAOtgB,GAAK0M,KAAAA,GACb,CACD,iBAAA6T,CAAkB1e,GAChB9B,GAAA5B,KAAKuO,GAAkB7K,EACxB,CACD,gBAAA2e,CAAiB/e,EAAUI,GACzB7B,GAAA7B,KAAKkgB,IAAenC,IAAI5Z,GAAQb,GAAW,CACzCA,WACAmL,eAAgB/K,GAEnB,CACD,gBAAAkc,CAAiBtc,GACf,MAAMgf,EAAW,IAAIzgB,GAAK7B,KAAAkgB,IAAeJ,UACnCjb,EAAS,CAAA,EAMR,OALEyd,EAAA9Z,QAAS+Z,IACZ5e,GAAgBL,EAAUif,EAAajf,WAClCvF,OAAAkL,OAAOpE,EAAQ0d,EAAa9T,kBAGhC5J,CACR,CACD,mBAAA2d,CAAoBte,EAAaR,GAC/B7B,GAAA7B,KAAKmgB,IAAkBpC,IAAI5Z,GAAQD,GAAc,CAC/CA,cACAuK,eAAgB/K,GAEnB,CACD,mBAAA+e,CAAoBve,GAClB,MAAMoe,EAAW,IAAIzgB,GAAK7B,KAAAmgB,IAAkBL,UACtCjb,EAAS,CAAA,EAMR,OALEyd,EAAA9Z,QAAS+Z,IACZ5e,GAAgBO,EAAaqe,EAAare,cACrCnG,OAAAkL,OAAOpE,EAAQ0d,EAAa9T,kBAGhC5J,CACR,CACD,mBAAAmR,CAAoBtS,GAClB,GAAIA,EAAQwS,WACH,OAAAxS,EAET,MAAM4T,EAAmB,IACpBzV,QAAK0M,IAAgBwR,WACrB/f,KAAK4f,iBAAiBlc,EAAQJ,aAC9BI,EACHwS,YAAY,GAoBP,OAlBFoB,EAAiB9T,YACpB8T,EAAiB9T,UAAYC,GAC3B6T,EAAiBhU,SACjBgU,SAGwC,IAAxCA,EAAiB5B,qBACF4B,EAAA5B,mBAAsD,WAAjC4B,EAAiBnM,kBAEnB,IAAlCmM,EAAiB7P,eACF6P,EAAA7P,eAAiB6P,EAAiBgD,WAEhDhD,EAAiBnM,aAAemM,EAAiBxF,YACpDwF,EAAiBnM,YAAc,gBAE7BmM,EAAiBnQ,UAAYH,KAC/BsQ,EAAiBtU,SAAU,GAEtBsU,CACR,CACD,sBAAAqG,CAAuBja,GACrB,aAAIA,WAASwS,YACJxS,EAEF,IACF7B,QAAK0M,IAAgBmU,cACZ,MAAThf,OAAS,EAAAA,EAAAQ,cAAelE,KAAKyiB,oBAAoB/e,EAAQQ,gBACzDR,EACHwS,YAAY,EAEf,CACD,KAAAoI,GACEzc,GAAA7B,KAAKigB,IAAY3B,QACjBzc,GAAA7B,KAAKic,IAAeqC,OACrB,GA1RD2B,GAAA,IAAAne,QACAma,GAAA,IACA1N,QAAAA,GAAA,YACA2R,GACA,IAAApe,QAAAqe,GAAA,IAAAre,QACAse,GACA,IAAAte,QAAAue,GAAA,IAAAve,QACAwe,GARgB,IAAAxe,QAAAiR,ICXd4P,GAAqBC,GAAmBC,mBAC1C,GAEEC,GAAkBC,IACd,MAAAnU,EAASoU,cAAiBL,IAChC,GAAII,EACK,OAAAA,EAET,IAAKnU,EACG,MAAA,IAAIrH,MAAM,0DAEX,OAAAqH,GAELqU,GAAsB,EACxBrU,SACAsU,eAEAC,GAAAA,UAAgB,KACdvU,EAAO4R,QACA,KACL5R,EAAO6R,YAER,CAAC7R,IACmBlP,GAAAA,IAAIijB,GAAmBS,SAAU,CAAEhhB,MAAOwM,EAAQsU,cCxBvEG,GAAqBT,GAAAA,eAAoB,GAEnBS,GAAmBD,SCa7C,IAAIE,GAAiCV,GAAAA,cAdrC,WACE,IAAIW,GAAU,EACP,MAAA,CACLC,WAAY,KACAD,GAAA,GAEZ9T,MAAO,KACK8T,GAAA,GAEZA,QAAS,IACAA,EAGb,CACyDE,ICDrDpM,GAAkB,CAACC,EAAkB3H,EAAU+T,IAAuB/T,EAAS0H,gBAAgBC,GAAkBpO,MAAM,KACzHwa,EAAmBF,eCArB,SAASG,GAAajgB,EAASkgB,EAAUb,iBAQvC,MAAMc,EHtBmBb,cAAiBK,IGuBpCK,EFR+BV,GAAgBc,WAACR,IEShD1U,EAASkU,GAAeC,GACxBzL,EAAmB1I,EAAOoH,oBAAoBtS,GACpD,OAAAkE,EAAA,OAAAtG,EAAAsN,EAAOuT,oBAAoBpC,cAA3Bze,EAAAA,EAAoCyiB,4BAApCnc,EAAA1I,KAAAoC,EACEgW,GASeA,EAAAM,mBAAqBiM,EAAc,cAAgB,aDvC3C,CAACvM,IAC1B,GAAIA,EAAiBgD,SAAU,CAC7B,MAAM0J,EAAuB,IACvBC,EAAS7hB,GAAoB,WAAVA,EAAqBA,EAAQK,KAAKC,IAAIN,GAAS4hB,EAAsBA,GACxFE,EAAoB5M,EAAiB9U,UAC3C8U,EAAiB9U,UAAyC,mBAAtB0hB,EAAmC,IAAIla,IAASia,EAAMC,KAAqBla,IAASia,EAAMC,GACvF,iBAA5B5M,EAAiB3J,SAC1B2J,EAAiB3J,OAASlL,KAAKC,IAC7B4U,EAAiB3J,OACjBqW,GAGL,GC4BDG,CAAqB7M,GCrCe,EAAC5T,EAASggB,MAC1ChgB,EAAQ4W,UAAY5W,EAAQ+D,cAAgB/D,EAAQwT,iCACjDwM,EAAmBH,YACtB7f,EAAQwW,cAAe,KDmC3BkK,CAAgC9M,EAAkBoM,GC/BnB,CAACA,IAChCP,GAAAA,UAAgB,KACdO,EAAmBF,cAClB,CAACE,KD6BJW,CAA2BX,GAC3B,MAAMY,GAAmB1V,EAAOC,gBAAgB2C,IAAI8F,EAAiB9T,YAC9DmM,GAAY4U,GAAcC,SAC/B,IAAM,IAAIZ,EACRhV,EACA0I,IAGEzS,EAAS8K,EAAS6G,oBAAoBc,GACtCmN,GAAmBZ,IAAsC,IAAvBngB,EAAQghB,WAgB5C,GAfsBC,GAAAC,qBACxBC,GAAiBC,YACdC,IACO,MAAAC,EAAcP,EAAkB9U,EAASxP,UAAUkJ,GAAcU,WAAWgb,IAAkB7iB,GAE7F,OADPyN,EAAS4F,eACFyP,GAET,CAACrV,EAAU8U,IAEb,IAAM9U,EAASM,mBACf,IAAMN,EAASM,oBAEjBkT,GAAAA,UAAgB,KACdxT,EAASjB,WAAW4I,IACnB,CAACA,EAAkB3H,IDnDJ,EAAC2H,EAAkBzS,KAAW,MAAAyS,OAAA,EAAAA,EAAkBgD,WAAYzV,EAAOuT,UCoDjF6M,CAAc3N,EAAkBzS,GAC5B,MAAAwS,GAAgBC,EAAkB3H,EAAU+T,GAEpD,GCvDgB,GAChB7e,SACA6e,qBACAjc,eACA3E,QACAwX,cAEOzV,EAAOwT,UAAYqL,EAAmBH,YAAc1e,EAAOsT,YAAcrV,IAAUwX,QAA4B,IAAhBzV,EAAO2B,MAAmBgB,GAAiBC,EAAc,CAAC5C,EAAO0H,MAAOzJ,KDgD1KoiB,CAAY,CACdrgB,SACA6e,qBACAjc,aAAc6P,EAAiB7P,aAC/B3E,MAAO8L,EAAOC,gBAAgB2C,IAAI8F,EAAiB9T,WACnD8W,SAAUhD,EAAiBgD,WAE3B,MAAMzV,EAAO0H,MAOf,GAJA,OAAAe,EAAA,OAAA/C,EAAAqE,EAAOuT,oBAAoBpC,cAA3BxV,EAAAA,EAAoC4a,2BAApC7X,EAAApO,KAAAqL,EACE+M,EACAzS,GAEEyS,EAAiBJ,gCAAkCnV,IDtEzC,EAAC8C,EAAQgf,IAAgBhf,EAAOyT,WAAazT,EAAOsT,aAAe0L,ECsEduB,CAAUvgB,EAAQgf,GAAc,CACjG,MAAMhX,EAAUyX,EAEdjN,GAAgBC,EAAkB3H,EAAU+T,GAG5C,OAAA1V,EAAAY,EAAOC,gBAAgB2C,IAAI8F,EAAiB9T,iBAA5C,EAAAwK,EAAwDnB,QAEjD,MAAAA,GAAAA,EAAA3D,MAAMhH,IAAMmjB,QAAQ,KAC3B1V,EAAS4F,gBAEZ,CACD,OAAQ+B,EAAiBiC,oBAAqD1U,EAA/B8K,EAASkH,YAAYhS,EACtE,CE9FA,SAASygB,GAAS5hB,EAASqf,GAClB,OAAAY,GAAajgB,EAASkQ,GAAemP,EAC9C,CCIA,SAASwC,GAAY7hB,EAASqf,GACtB,MAAAnU,EAASkU,GAAeC,IACvBpT,GAAY4U,GAAcC,SAC/B,IAAM,IAAIvF,GACRrQ,EACAlL,IAGJyf,GAAAA,UAAgB,KACdxT,EAASjB,WAAWhL,IACnB,CAACiM,EAAUjM,IACd,MAAMmB,EAAS2gB,GAA0BZ,qBACvCC,GAAiBC,YACdC,GAAkBpV,EAASxP,UAAUkJ,GAAcU,WAAWgb,IAC/D,CAACpV,IAEH,IAAMA,EAASM,mBACf,IAAMN,EAASM,oBAEXqP,EAASuF,GAAiBC,YAC9B,CAAC1I,EAAWqJ,KACV9V,EAAS2P,OAAOlD,EAAWqJ,GAAevc,MAAMhH,KAElD,CAACyN,IAEC,GAAA9K,EAAO0H,OAAS/E,GAAiBmI,EAASjM,QAAQ+D,aAAc,CAAC5C,EAAO0H,QAC1E,MAAM1H,EAAO0H,MAEf,MAAO,IAAK1H,EAAQya,SAAQoG,YAAa7gB,EAAOya,OAClD","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}