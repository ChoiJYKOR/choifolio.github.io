{"version":3,"file":"chunk-eb05adab.js","sources":["../../src/components/ProtectedRoute.tsx","../../src/components/LoadScene.tsx","../../src/components/common/DynamicIcon.tsx","../../src/components/LanguageSwitcher.tsx","../../src/utils/i18nUtils.ts","../../src/components/Sidebar.tsx","../../src/components/LoginModal.tsx","../../src/components/AppLayout.tsx","../../src/components/Hero.tsx","../../src/utils/dateUtils.ts","../../src/components/BookCoverImage.tsx","../../src/components/common/ScrollToTopButton.tsx","../../src/utils/textUtils.ts","../../src/components/RichTextEditor.tsx","../../src/components/common/LearningItem.tsx","../../src/components/BookDetail.tsx","../../src/components/VideoLearningDetail.tsx","../../src/components/VideoPlaylistDetail.tsx","../../src/components/ProjectCard.tsx","../../src/components/ProjectDetail.tsx","../../src/components/ExperienceItem.tsx","../../src/components/admin/DashboardHome.tsx","../../src/components/common/ChapterLearningList.tsx","../../src/components/common/Toast.tsx","../../src/components/admin/BookManager.tsx","../../src/components/admin/VideoLearningManager.tsx","../../src/utils/categoryUtils.ts","../../src/components/admin/VideoPlaylistManager.tsx","../../src/components/common/LanguageTabs.tsx","../../src/components/admin/ExperienceManager.tsx","../../src/components/admin/ProjectManager.tsx","../../src/components/admin/MessageDetail.tsx","../../src/components/admin/MessageManager.tsx","../../src/components/admin/SortableCategoryCard.tsx","../../src/components/admin/SortableSkillItem.tsx","../../src/components/admin/SkillsManager.tsx","../../src/components/admin/CategoryManager.tsx","../../src/components/common/NotificationDropdown.tsx","../../src/components/common/BookFilterMenu.tsx","../../src/components/common/ExperienceFilterMenu.tsx","../../src/components/common/ProjectFilterMenu.tsx","../../src/components/common/SettingsMenu.tsx","../../src/components/common/RightSidebar.tsx","../../src/admin/settings/constants.ts","../../src/admin/settings/utils.ts","../../src/admin/settings/components/SettingField.tsx","../../src/admin/settings/components/SettingsSection.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\ninterface ProtectedRouteProps {\r\n  element: React.ComponentType\r\n}\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ element: Component }) => {\r\n  const { isAuthenticated, isLoading } = useAuth()\r\n\r\n  // 로딩 중일 때는 로딩 스피너 표시\r\n  if (isLoading) {\r\n    return (\r\n      <div style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100vh',\r\n        backgroundColor: '#f8fafc'\r\n      }}>\r\n        <div style={{\r\n          width: '32px',\r\n          height: '32px',\r\n          border: '4px solid #3b82f6',\r\n          borderTop: '4px solid transparent',\r\n          borderRadius: '50%',\r\n          animation: 'spin 1s linear infinite'\r\n        }}></div>\r\n        <span style={{\r\n          marginLeft: '12px',\r\n          color: '#6b7280',\r\n          fontSize: '16px'\r\n        }}>인증 확인 중...</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // 인증되지 않은 경우 로그인 페이지로 리디렉션\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/\" replace />\r\n  }\r\n\r\n  // 인증된 경우 해당 컴포넌트 렌더링\r\n  return <Component />\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport * as THREE from 'three'\r\nimport { gsap } from 'gsap'\r\n\r\ninterface LoadSceneProps {\r\n  onFirstVisitComplete?: () => void\r\n}\r\n\r\nconst LoadScene: React.FC<LoadSceneProps> = ({ onFirstVisitComplete }) => {\r\n  const [progress, setProgress] = useState(0)\r\n  const navigate = useNavigate()\r\n\r\n  // 해시 URL이 있는 경우 바로 홈으로 리다이렉트 (로딩 애니메이션 없음)\r\n  useEffect(() => {\r\n    const hash = window.location.hash\r\n    if (hash) {\r\n      navigate('/home', { replace: true })\r\n    }\r\n  }, [navigate])\r\n  const sceneRef = useRef<HTMLDivElement>(null)\r\n  const animationRef = useRef<number>()\r\n  const tlRef = useRef<gsap.core.Timeline>()\r\n  const textMeshesRef = useRef<THREE.Mesh[]>([])\r\n  const sceneInstanceRef = useRef<THREE.Scene>()\r\n  const cameraRef = useRef<THREE.PerspectiveCamera>()\r\n  const rendererRef = useRef<THREE.WebGLRenderer>()\r\n\r\n  useEffect(() => {\r\n    // 3D 씬 초기화\r\n    initThreeScene()\r\n    \r\n    // 애니메이션 타임라인 설정\r\n    setupAnimation()\r\n    \r\n    return () => {\r\n      cleanup()\r\n    }\r\n  }, [])\r\n\r\n  // Loading 완료 후 자동으로 홈 화면으로 이동\r\n  useEffect(() => {\r\n    const autoNavigateTimer = setTimeout(() => {\r\n      // 첫 방문 완료 플래그 설정\r\n      localStorage.setItem('hasVisited', 'true')\r\n      onFirstVisitComplete?.()\r\n      navigate('/home')\r\n    }, 6000) // 총 6초 후 자동 이동 (Loading 3초 + 추가 3초)\r\n\r\n    return () => clearTimeout(autoNavigateTimer)\r\n  }, [navigate, onFirstVisitComplete])\r\n\r\n  const cleanup = () => {\r\n    if (animationRef.current) {\r\n      cancelAnimationFrame(animationRef.current)\r\n    }\r\n    if (tlRef.current) {\r\n      tlRef.current.kill()\r\n    }\r\n    if (rendererRef.current && sceneRef.current) {\r\n      const canvas = rendererRef.current.domElement\r\n      if (sceneRef.current.contains(canvas)) {\r\n        sceneRef.current.removeChild(canvas)\r\n      }\r\n      rendererRef.current.dispose()\r\n    }\r\n    textMeshesRef.current = []\r\n  }\r\n\r\n  const initThreeScene = () => {\r\n    if (!sceneRef.current) return\r\n\r\n    // Three.js 씬 설정\r\n    const scene = new THREE.Scene()\r\n    scene.background = new THREE.Color(0x0a0a0a) // 매우 어두운 배경 (Eric 스타일)\r\n    \r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\r\n    const renderer = new THREE.WebGLRenderer({ alpha: false, antialias: true })\r\n    \r\n    renderer.setSize(window.innerWidth, window.innerHeight)\r\n    renderer.setClearColor(0x0a0a0a, 1)\r\n    renderer.shadowMap.enabled = true\r\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap\r\n    \r\n    sceneRef.current.appendChild(renderer.domElement)\r\n\r\n    // 조명 설정\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.3)\r\n    scene.add(ambientLight)\r\n    \r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8)\r\n    directionalLight.position.set(10, 10, 5)\r\n    directionalLight.castShadow = true\r\n    directionalLight.shadow.mapSize.width = 2048\r\n    directionalLight.shadow.mapSize.height = 2048\r\n    scene.add(directionalLight)\r\n    \r\n    // 포인트 라이트 추가 (텍스트에 더 나은 조명)\r\n    const pointLight = new THREE.PointLight(0x00ffff, 0.5, 100)\r\n    pointLight.position.set(-10, 0, 10)\r\n    scene.add(pointLight)\r\n    \r\n    const pointLight2 = new THREE.PointLight(0xff00ff, 0.5, 100)\r\n    pointLight2.position.set(10, 0, 10)\r\n    scene.add(pointLight2)\r\n\r\n    // 3D 텍스트 생성\r\n    create3DText(scene)\r\n    \r\n    // 카메라 위치\r\n    camera.position.z = 20\r\n    camera.lookAt(0, 0, 0)\r\n    \r\n    // 참조 저장\r\n    sceneInstanceRef.current = scene\r\n    cameraRef.current = camera\r\n    rendererRef.current = renderer\r\n    \r\n    // 렌더링 루프\r\n    const animate = () => {\r\n      animationRef.current = requestAnimationFrame(animate)\r\n      \r\n      // 텍스트 회전 애니메이션\r\n      textMeshesRef.current.forEach((mesh, index) => {\r\n        if (mesh) {\r\n          mesh.rotation.y += 0.008 + (index * 0.002)\r\n          mesh.rotation.x = Math.sin(Date.now() * 0.001 + index) * 0.1\r\n          mesh.position.y = Math.sin(Date.now() * 0.002 + index) * 0.5\r\n        }\r\n      })\r\n      \r\n      // 카메라 약간의 움직임 (Eric 스타일)\r\n      if (cameraRef.current) {\r\n        cameraRef.current.position.x = Math.sin(Date.now() * 0.0005) * 2\r\n        cameraRef.current.position.y = Math.cos(Date.now() * 0.0003) * 1\r\n        cameraRef.current.lookAt(0, 0, 0)\r\n      }\r\n      \r\n      renderer.render(scene, camera)\r\n    }\r\n    animate()\r\n\r\n    // 윈도우 리사이즈 처리\r\n    const handleResize = () => {\r\n      if (cameraRef.current && rendererRef.current) {\r\n        cameraRef.current.aspect = window.innerWidth / window.innerHeight\r\n        cameraRef.current.updateProjectionMatrix()\r\n        rendererRef.current.setSize(window.innerWidth, window.innerHeight)\r\n      }\r\n    }\r\n    window.addEventListener('resize', handleResize)\r\n    \r\n    return () => {\r\n      window.removeEventListener('resize', handleResize)\r\n    }\r\n  }\r\n\r\n  const create3DText = (scene: THREE.Scene) => {\r\n    // \"LOADING\" 텍스트를 기본 지오메트리로 생성\r\n    const loadingLetters = ['L', 'O', 'A', 'D', 'I', 'N', 'G']\r\n    \r\n    loadingLetters.forEach((letter, index) => {\r\n      // 각 글자를 위한 지오메트리 생성\r\n      let geometry: THREE.BufferGeometry\r\n      \r\n      // 글자별로 다른 지오메트리 사용\r\n      switch(letter) {\r\n        case 'L':\r\n          geometry = createLGeometry()\r\n          break\r\n        case 'O':\r\n          geometry = new THREE.TorusGeometry(1.2, 0.4, 16, 32)\r\n          break\r\n        case 'A':\r\n          geometry = new THREE.ConeGeometry(1.8, 4, 3)\r\n          break\r\n        case 'D':\r\n          geometry = createDGeometry()\r\n          break\r\n        case 'I':\r\n          geometry = new THREE.BoxGeometry(0.4, 4, 0.4)\r\n          break\r\n        case 'N':\r\n          geometry = createNGeometry()\r\n          break\r\n        case 'G':\r\n          geometry = createGGeometry()\r\n          break\r\n        default:\r\n          geometry = new THREE.BoxGeometry(1, 4, 0.5)\r\n      }\r\n      \r\n      // 재질 생성 (그라데이션 효과를 위한 색상)\r\n      const hue = (index / loadingLetters.length) * 360\r\n      const material = new THREE.MeshPhongMaterial({ \r\n        color: new THREE.Color().setHSL(hue / 360, 0.8, 0.6),\r\n        shininess: 100,\r\n        specular: 0x333333,\r\n        emissive: new THREE.Color().setHSL(hue / 360, 0.3, 0.1)\r\n      })\r\n      \r\n      const mesh = new THREE.Mesh(geometry, material)\r\n      mesh.castShadow = true\r\n      mesh.receiveShadow = true\r\n      \r\n      // 위치 설정\r\n      const spacing = 3.5\r\n      const startX = -(loadingLetters.length - 1) * spacing / 2\r\n      mesh.position.set(startX + index * spacing, 0, 0)\r\n      \r\n      // 초기 애니메이션 상태\r\n      mesh.scale.set(0.01, 0.01, 0.01)\r\n      mesh.rotation.x = Math.PI\r\n      mesh.rotation.z = Math.PI\r\n      \r\n      scene.add(mesh)\r\n      textMeshesRef.current.push(mesh)\r\n      \r\n      // GSAP으로 나타나는 애니메이션\r\n      gsap.to(mesh.scale, {\r\n        x: 1,\r\n        y: 1,\r\n        z: 1,\r\n        duration: 1.2,\r\n        delay: index * 0.15,\r\n        ease: \"back.out(2)\"\r\n      })\r\n      \r\n      gsap.to(mesh.rotation, {\r\n        x: 0,\r\n        z: 0,\r\n        duration: 1.2,\r\n        delay: index * 0.15,\r\n        ease: \"power2.out\"\r\n      })\r\n    })\r\n  }\r\n\r\n  // 커스텀 지오메트리 생성 함수들\r\n  const createLGeometry = () => {\r\n    const geometry = new THREE.BufferGeometry()\r\n    const vertices = []\r\n    \r\n    // L 모양 생성\r\n    vertices.push(-1, -2, 0, -1, 2, 0, -0.3, 2, 0) // 왼쪽 세로선\r\n    vertices.push(-1, -2, 0, -0.3, 2, 0, -0.3, -2, 0)\r\n    vertices.push(-0.3, -1.5, 0, 1, -1.5, 0, 1, -2, 0) // 아래 가로선\r\n    vertices.push(-0.3, -1.5, 0, 1, -2, 0, -0.3, -2, 0)\r\n    \r\n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3))\r\n    geometry.computeVertexNormals()\r\n    return geometry\r\n  }\r\n\r\n  const createDGeometry = () => {\r\n    const geometry = new THREE.BufferGeometry()\r\n    const vertices = []\r\n    \r\n    // D 모양 생성 (반원 + 직선)\r\n    for (let i = 0; i <= 16; i++) {\r\n      const angle = (i / 16) * Math.PI\r\n      const x = Math.cos(angle) * 1.5\r\n      const y = Math.sin(angle) * 2\r\n      vertices.push(x, y, 0, x, y, 0.5)\r\n    }\r\n    \r\n    // 왼쪽 직선 추가\r\n    vertices.push(-1.5, -2, 0, -1.5, 2, 0, -1.5, 2, 0.5)\r\n    vertices.push(-1.5, -2, 0, -1.5, 2, 0.5, -1.5, -2, 0.5)\r\n    \r\n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3))\r\n    geometry.computeVertexNormals()\r\n    return geometry\r\n  }\r\n\r\n  const createNGeometry = () => {\r\n    const geometry = new THREE.BufferGeometry()\r\n    const vertices = []\r\n    \r\n    // N 모양 생성\r\n    vertices.push(-1, -2, 0, -1, 2, 0, -0.3, 2, 0) // 왼쪽 세로선\r\n    vertices.push(-1, -2, 0, -0.3, 2, 0, -0.3, -2, 0)\r\n    vertices.push(-0.3, 1.5, 0, 1, -2, 0, 1, -1.5, 0) // 대각선\r\n    vertices.push(-0.3, 1.5, 0, 1, -1.5, 0, -0.3, -2, 0)\r\n    vertices.push(0.7, -2, 0, 0.7, 2, 0, 1, 2, 0) // 오른쪽 세로선\r\n    vertices.push(0.7, -2, 0, 1, 2, 0, 1, -2, 0)\r\n    \r\n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3))\r\n    geometry.computeVertexNormals()\r\n    return geometry\r\n  }\r\n\r\n  const createGGeometry = () => {\r\n    const geometry = new THREE.BufferGeometry()\r\n    const vertices = []\r\n    \r\n    // G 모양 생성 (불완전한 원 + 직선)\r\n    for (let i = 0; i <= 20; i++) {\r\n      const angle = (i / 20) * Math.PI * 1.8 // 거의 완전한 원\r\n      const x = Math.cos(angle) * 1.5\r\n      const y = Math.sin(angle) * 2\r\n      vertices.push(x, y, 0, x, y, 0.5)\r\n    }\r\n    \r\n    // 가로선 추가\r\n    vertices.push(-1.5, -2, 0, 0, -2, 0, 0, -1.5, 0)\r\n    vertices.push(-1.5, -2, 0, 0, -1.5, 0, -1.5, -1.5, 0)\r\n    \r\n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3))\r\n    geometry.computeVertexNormals()\r\n    return geometry\r\n  }\r\n\r\n\r\n  const setupAnimation = () => {\r\n    const tl = gsap.timeline()\r\n    tlRef.current = tl\r\n    \r\n    // 3초간 Loading 애니메이션\r\n    tl.to({}, {\r\n      duration: 3,\r\n      onUpdate: function() {\r\n        setProgress((this['progress']() * 100))\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 bg-black overflow-hidden\">\r\n      {/* 3D 씬 컨테이너 */}\r\n      <div ref={sceneRef} className=\"absolute inset-0\" />\r\n      \r\n      {/* UI 오버레이 */}\r\n      <div className=\"absolute inset-0 flex flex-col items-center justify-center pointer-events-none\">\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"text-center\"\r\n        >\r\n          <h2 className=\"text-5xl font-bold text-white mb-12 tracking-wider\">\r\n            Loading...\r\n          </h2>\r\n          \r\n          {/* 로딩 바 */}\r\n          <div className=\"w-96 h-3 bg-gray-800 rounded-full overflow-hidden\">\r\n            <motion.div\r\n              className=\"h-full bg-gradient-to-r from-cyan-500 via-blue-500 to-purple-600 rounded-full\"\r\n              style={{ width: `${progress}%` }}\r\n              transition={{ duration: 0.1 }}\r\n            />\r\n          </div>\r\n          <p className=\"text-lg text-gray-400 mt-6 font-mono\">\r\n            {Math.round(progress)}%\r\n          </p>\r\n        </motion.div>\r\n      </div>\r\n      \r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadScene","import React from 'react'\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport * as SiIcons from 'react-icons/si'\r\n\r\n// 모든 아이콘을 하나의 객체로 매핑\r\nconst IconMap: { [key: string]: React.ElementType } = {\r\n  ...FaIcons,\r\n  ...SiIcons,\r\n}\r\n\r\ninterface DynamicIconProps {\r\n  iconName: string\r\n  size?: number\r\n  className?: string\r\n}\r\n\r\nconst DynamicIcon: React.FC<DynamicIconProps> = ({ \r\n  iconName, \r\n  size = 16, \r\n  className = '' \r\n}) => {\r\n  const IconComponent = IconMap[iconName]\r\n\r\n  if (!IconComponent) {\r\n    // 유효하지 않은 아이콘 이름일 경우 기본 아이콘 표시\r\n    return <FaIcons.FaMicrochip size={size} className={className} />\r\n  }\r\n\r\n  return React.createElement(IconComponent, { size, className })\r\n}\r\n\r\nexport default DynamicIcon\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { FaGlobe } from 'react-icons/fa'\r\n\r\ninterface LanguageSwitcherProps {\r\n  variant?: 'default' | 'compact'\r\n}\r\n\r\ntype Language = 'ko' | 'en' | 'ja'\r\n\r\nconst LanguageSwitcher: React.FC<LanguageSwitcherProps> = ({ variant = 'default' }) => {\r\n  const { i18n } = useTranslation()\r\n\r\n  const changeLanguage = (lang: Language) => {\r\n    i18n.changeLanguage(lang)\r\n    localStorage.setItem('language', lang)\r\n  }\r\n\r\n  const languages = [\r\n    { code: 'ko' as Language, short: 'KOR', full: '한국어' },\r\n    { code: 'en' as Language, short: 'ENG', full: 'English' },\r\n    { code: 'ja' as Language, short: 'JPN', full: '日本語' }\r\n  ]\r\n\r\n  if (variant === 'compact') {\r\n    return (\r\n      <div className=\"flex flex-col gap-2\">\r\n        <div className=\"flex items-center gap-2 mb-1\">\r\n          <FaGlobe className=\"text-base text-gray-600 dark:text-gray-400\" />\r\n          <span className=\"text-xs text-gray-600 dark:text-gray-400 font-medium\">Language</span>\r\n        </div>\r\n        <div className=\"flex items-center gap-2\">\r\n          {languages.map((lang) => {\r\n            const isActive = i18n.language === lang.code\r\n            return (\r\n              <button\r\n                key={lang.code}\r\n                onClick={() => changeLanguage(lang.code)}\r\n                className={`px-3 py-2 rounded-lg text-xs font-semibold transition-all duration-200 ${\r\n                  isActive\r\n                    ? 'bg-blue-600 text-white shadow-md'\r\n                    : 'bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700'\r\n                }`}\r\n                aria-label={`${lang.full}로 변경`}\r\n                aria-current={isActive ? 'true' : 'false'}\r\n              >\r\n                {lang.short}\r\n              </button>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-3\">\r\n      <div className=\"flex items-center gap-2\">\r\n        <FaGlobe className=\"text-primary-600 dark:text-primary-400\" />\r\n        <span className=\"text-sm text-gray-700 dark:text-gray-300 font-medium\">언어 선택</span>\r\n      </div>\r\n      <div className=\"flex flex-wrap gap-2\">\r\n        {languages.map((lang) => {\r\n          const isActive = i18n.language === lang.code\r\n          return (\r\n            <button\r\n              key={lang.code}\r\n              onClick={() => changeLanguage(lang.code)}\r\n              className={`px-4 py-2 rounded-lg text-sm font-semibold transition-all duration-200 ${\r\n                isActive\r\n                  ? 'bg-primary-600 text-white shadow-lg'\r\n                  : 'bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-primary-100 dark:hover:bg-primary-900 hover:text-primary-700 dark:hover:text-primary-300'\r\n              }`}\r\n              aria-label={`${lang.full}로 변경`}\r\n              aria-current={isActive ? 'true' : 'false'}\r\n            >\r\n              {lang.full}\r\n            </button>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LanguageSwitcher\r\n\r\n","/**\r\n * 다국어 필드 선택 유틸리티\r\n * 현재 언어에 맞는 값을 반환하고, 없으면 한국어로 폴백\r\n */\r\n\r\nexport type Language = 'ko' | 'en' | 'ja'\r\n\r\n/**\r\n * 단일 필드에서 현재 언어에 맞는 값 추출\r\n */\r\nexport const getLocalizedField = (\r\n  currentLang: Language,\r\n  koValue: string | undefined,\r\n  enValue?: string,\r\n  jaValue?: string\r\n): string => {\r\n  if (currentLang === 'en' && enValue) return enValue\r\n  if (currentLang === 'ja' && jaValue) return jaValue\r\n  return koValue || ''\r\n}\r\n\r\n/**\r\n * 배열 필드에서 현재 언어에 맞는 값 추출\r\n */\r\nexport const getLocalizedArrayField = (\r\n  currentLang: Language,\r\n  koArray: string[] | undefined,\r\n  enArray?: string[],\r\n  jaArray?: string[]\r\n): string[] => {\r\n  if (currentLang === 'en' && enArray && enArray.length > 0) return enArray\r\n  if (currentLang === 'ja' && jaArray && jaArray.length > 0) return jaArray\r\n  return koArray || []\r\n}\r\n\r\n/**\r\n * 객체의 다국어 필드들을 현재 언어에 맞게 변환\r\n * 예: { title, titleEn, titleJa } -> 현재 언어에 맞는 title 반환\r\n */\r\nexport const getLocalizedObject = <T extends Record<string, any>>(\r\n  obj: T,\r\n  currentLang: Language,\r\n  fields: string[]\r\n): Partial<T> => {\r\n  const result: any = { ...obj }\r\n  \r\n  fields.forEach(field => {\r\n    const koValue = obj[field]\r\n    const enValue = obj[`${field}En`]\r\n    const jaValue = obj[`${field}Ja`]\r\n    \r\n    result[field] = getLocalizedField(currentLang, koValue, enValue, jaValue)\r\n  })\r\n  \r\n  return result\r\n}\r\n\r\n// =================================================================\r\n// Resource-Specific Localization Helpers\r\n// =================================================================\r\n\r\n/**\r\n * Get localized skill name\r\n * @param currentLang - Current language ('ko', 'en', 'ja')\r\n * @param skill - Skill object\r\n * @returns Localized skill name\r\n */\r\nexport const getLocalizedSkillName = (\r\n  currentLang: Language,\r\n  skill: { name: string; nameEn?: string; nameJa?: string }\r\n): string => {\r\n  return getLocalizedField(currentLang, skill.name, skill.nameEn, skill.nameJa)\r\n}\r\n\r\n/**\r\n * Get localized skill description\r\n * @param currentLang - Current language ('ko', 'en', 'ja')\r\n * @param skill - Skill object\r\n * @returns Localized skill description or empty string\r\n */\r\nexport const getLocalizedSkillDescription = (\r\n  currentLang: Language,\r\n  skill: { description?: string; descriptionEn?: string; descriptionJa?: string }\r\n): string => {\r\n  return getLocalizedField(currentLang, skill.description, skill.descriptionEn, skill.descriptionJa)\r\n}\r\n\r\n/**\r\n * Get localized category name\r\n * @param currentLang - Current language ('ko', 'en', 'ja')\r\n * @param category - Category object\r\n * @returns Localized category name\r\n */\r\nexport const getLocalizedCategoryName = (\r\n  currentLang: Language,\r\n  category: { name: string; nameEn?: string; nameJa?: string }\r\n): string => {\r\n  return getLocalizedField(currentLang, category.name, category.nameEn, category.nameJa)\r\n}\r\n\r\n/**\r\n * Get localized skill category title\r\n * @param currentLang - Current language ('ko', 'en', 'ja')\r\n * @param skillCategory - SkillCategory object\r\n * @returns Localized skill category title\r\n */\r\nexport const getLocalizedSkillCategoryTitle = (\r\n  currentLang: Language,\r\n  skillCategory: { title: string; titleEn?: string; titleJa?: string }\r\n): string => {\r\n  return getLocalizedField(currentLang, skillCategory.title, skillCategory.titleEn, skillCategory.titleJa)\r\n}\r\n\r\n","import React, { useState, useMemo, useCallback } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport { FaSun, FaMoon, FaBars, FaTimes, FaGithub, FaLinkedin, FaEnvelope, FaCode, FaBook, FaVideo, FaSignInAlt, FaUserShield, FaHome, FaUser, FaBriefcase, FaLaptopCode, FaWrench, FaCommentDots } from 'react-icons/fa'\r\nimport { IconType } from 'react-icons'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { useScrollSpy, scrollToSection, SectionId } from '../hooks/useScrollSpy'\r\nimport { useSidebarSkills } from '../hooks/useSidebarSkills'\r\nimport DynamicIcon from './common/DynamicIcon'\r\nimport LanguageSwitcher from './LanguageSwitcher'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { useSiteSettings } from '../hooks/useSiteSettings'\r\nimport { getLocalizedField, getLocalizedSkillName } from '../utils/i18nUtils'\r\n\r\n// AuthContext 타입 정의 (실제 AuthContext와 일치해야 함)\r\n// interface AuthContextType {\r\n//   isAuthenticated: boolean\r\n//   logout: () => void\r\n//   // 기타 인증 관련 상태/함수들...\r\n// }\r\n\r\n// 타입 정의\r\ninterface NavItem {\r\n  name: string\r\n  href: string\r\n  path: string\r\n  icon: IconType\r\n}\r\n\r\ninterface SidebarProps {\r\n  darkMode: boolean\r\n  toggleDarkMode: () => void\r\n  onLoginClick: () => void\r\n}\r\n\r\n// 네비게이션 항목 컴포넌트 분리\r\ninterface SidebarNavItemProps {\r\n  item: NavItem\r\n  location: ReturnType<typeof useLocation>\r\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>\r\n  activeSection: SectionId\r\n}\r\n\r\nconst SidebarNavItem: React.FC<SidebarNavItemProps> = ({ item, location, setIsOpen, activeSection }) => {\r\n  const navigate = useNavigate()\r\n  \r\n  // 간소화된 활성화 상태 로직\r\n  const isActive = useMemo(() => {\r\n    // 1. 홈 링크인 경우: 메인 페이지에서 hero 섹션이 활성화되었을 때\r\n    if (item.path === '/') {\r\n      return location.pathname === '/' && activeSection === 'hero'\r\n    }\r\n    \r\n    // 2. 별도 라우트인 경우: 경로 일치 (상세 페이지도 활성화하기 위해 startsWith 사용)\r\n    if (item.path !== '/') {\r\n      return location.pathname.startsWith(item.path)\r\n    }\r\n    \r\n    return false\r\n  }, [location.pathname, item.path, activeSection])\r\n\r\n  const IconComponent = item.icon\r\n  \r\n  const baseClasses = `flex items-center gap-2 px-4 py-3 rounded-xl transition-colors duration-200 font-medium`\r\n  const activeClasses = 'bg-coffee-100 dark:bg-dark-700 text-coffee-600 dark:text-coffee-400'\r\n  const inactiveClasses = 'text-dark-700 dark:text-dark-300 hover:bg-coffee-100 dark:hover:bg-dark-700 hover:text-coffee-600 dark:hover:text-coffee-400'\r\n\r\n  const classes = `${baseClasses} ${isActive ? activeClasses : inactiveClasses}`\r\n\r\n  // 개선된 네비게이션 핸들러\r\n  const handleNavigation = useCallback(() => {\r\n    // 홈 링크인 경우: 메인 페이지로 이동 후 hero 섹션으로 스크롤\r\n    if (item.path === '/') {\r\n      if (location.pathname === '/') {\r\n        // 이미 메인 페이지에 있으면 hero 섹션으로 스크롤\r\n        scrollToSection('hero', 80)\r\n      } else {\r\n        // 다른 페이지에 있으면 메인 페이지로 이동 후 스크롤\r\n        navigate('/#hero')\r\n      }\r\n    }\r\n    // 별도 라우트 이동 (예: /about, /experience, /skills, /projects, /books, /contact)\r\n    else {\r\n      navigate(item.href)\r\n    }\r\n    \r\n    setIsOpen(false)\r\n  }, [item.path, item.href, location.pathname, navigate, setIsOpen])\r\n\r\n  // 별도 라우트 (Link)\r\n  if (item.path !== '/') {\r\n    return (\r\n      <button\r\n        onClick={handleNavigation}\r\n        className={classes}\r\n      >\r\n        <IconComponent size={18} />\r\n        {item.name}\r\n      </button>\r\n    )\r\n  }\r\n\r\n  // 메인 페이지 섹션 링크 (button 태그와 네비게이션 핸들러)\r\n  return (\r\n    <button\r\n      onClick={handleNavigation}\r\n      className={classes}\r\n      aria-current={isActive ? 'page' : undefined}\r\n    >\r\n      <IconComponent size={18} />\r\n      {item.name}\r\n    </button>\r\n  )\r\n}\r\n\r\nconst Sidebar: React.FC<SidebarProps> = ({ darkMode, toggleDarkMode, onLoginClick }) => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const location = useLocation()\r\n  const { isAuthenticated, logout } = useAuth()\r\n  const { t, i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  const { settings: siteSettings } = useSiteSettings()\r\n  // 스크롤 스파이 훅 사용 (기본 옵션 적용)\r\n  const activeSection = useScrollSpy()\r\n  \r\n  // =================================================================\r\n  // 🔄 페이지 변경 감지 및 네비게이션 활성화\r\n  // =================================================================\r\n  \r\n  const navItems: NavItem[] = [\r\n    // 💡 메인 페이지 홈 링크만 남기고 나머지는 모두 별도 라우트로 분리\r\n    { name: t('nav.home'), href: '/', path: '/', icon: FaHome },\r\n    \r\n    // 💡 별도 라우트 링크: path와 href가 동일\r\n    { name: t('nav.about'), href: '/about', path: '/about', icon: FaUser },\r\n    { name: t('nav.experience'), href: '/experience', path: '/experience', icon: FaBriefcase },\r\n    { name: t('nav.skills'), href: '/skills', path: '/skills', icon: FaWrench },\r\n    { name: t('nav.projects'), href: '/projects', path: '/projects', icon: FaLaptopCode },\r\n    { name: t('nav.books'), href: '/books', path: '/books', icon: FaBook },\r\n    { name: t('nav.videoLearnings'), href: '/video-learnings', path: '/video-learnings', icon: FaVideo },\r\n    { name: t('nav.contact'), href: '/contact', path: '/contact', icon: FaCommentDots },\r\n  ]\r\n\r\n  // 커스텀 훅을 사용하여 스킬 데이터 가져오기\r\n  const { coreSkills, languageSkills, isLoadingSkills } = useSidebarSkills()\r\n\r\n  const socialLinks = [\r\n    { icon: FaGithub, href: '#', label: 'GitHub' },\r\n    { icon: FaLinkedin, href: '#', label: 'LinkedIn' },\r\n    { icon: FaEnvelope, href: 'mailto:juyeong_choi@naver.com', label: 'Email' },\r\n  ]\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* Mobile Menu Button */}\r\n      <button\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        className=\"lg:hidden fixed top-4 left-4 z-50 p-3 bg-coffee-600 text-white rounded-xl shadow-lg hover:bg-coffee-700 transition-colors\"\r\n        aria-label={isOpen ? \"사이드바 닫기\" : \"사이드바 열기\"}\r\n      >\r\n        {isOpen ? <FaTimes size={20} /> : <FaBars size={20} />}\r\n      </button>\r\n\r\n      {/* Overlay for mobile */}\r\n      {isOpen && (\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n          className=\"lg:hidden fixed inset-0 bg-black bg-opacity-50 z-40\"\r\n          onClick={() => setIsOpen(false)}\r\n          aria-label=\"사이드바 닫기\"\r\n        />\r\n      )}\r\n\r\n      {/* Sidebar */}\r\n      <aside\r\n        className={`fixed top-0 left-0 h-screen w-80 bg-white dark:bg-dark-800 border-r border-cream-200 dark:border-dark-700 z-40 transition-transform duration-300 lg:translate-x-0 ${\r\n          isOpen ? 'translate-x-0' : '-translate-x-full'\r\n        } overflow-y-auto custom-scrollbar`}\r\n        aria-label=\"주요 네비게이션\"\r\n      >\r\n        <div className=\"p-8 space-y-8\">\r\n          {/* Profile Section */}\r\n          <div className=\"text-center\">\r\n            <div className=\"relative w-32 h-32 mx-auto mb-6\">\r\n              <div className=\"w-full h-full rounded-full bg-coffee-600 flex items-center justify-center text-white text-4xl font-bold shadow-xl\">\r\n                {getLocalizedField(currentLang, siteSettings?.firstName, siteSettings?.firstNameEn, siteSettings?.firstNameJa) || '주영'}\r\n              </div>\r\n              <div \r\n                className=\"absolute bottom-0 right-0 w-10 h-10 bg-caramel-500 rounded-full flex items-center justify-center border-4 border-white dark:border-dark-800\"\r\n                aria-label=\"프로필 이미지\"\r\n              >\r\n                <FaCode className=\"text-white\" size={18} />\r\n              </div>\r\n            </div>\r\n            <h1 className=\"text-2xl font-bold text-dark-900 dark:text-cream-100 mb-2\">\r\n              {getLocalizedField(currentLang, siteSettings?.fullName, siteSettings?.fullNameEn, siteSettings?.fullNameJa) || '최주영'}\r\n            </h1>\r\n            <p className=\"text-coffee-600 dark:text-coffee-400 font-medium mb-1\">\r\n              {getLocalizedField(currentLang, siteSettings?.role, siteSettings?.roleEn, siteSettings?.roleJa) || '공장자동화 전문가'}\r\n            </p>\r\n            <p className=\"text-sm text-dark-600 dark:text-dark-400\">\r\n              {getLocalizedField(currentLang, siteSettings?.subtitle, siteSettings?.subtitleEn, siteSettings?.subtitleJa) || '바리스타 → 자동화 엔지니어'}\r\n            </p>\r\n          </div>\r\n\r\n          {/* Info Cards */}\r\n          <div className=\"space-y-4\">\r\n            <div className=\"bg-cream-100 dark:bg-dark-700 rounded-xl p-4\">\r\n              <div className=\"flex justify-between items-center mb-2\">\r\n                <span className=\"text-dark-700 dark:text-dark-300 text-sm\">{t('about.location')}</span>\r\n                <span className=\"text-dark-900 dark:text-cream-100 font-medium\">\r\n                  {getLocalizedField(currentLang, siteSettings?.location, siteSettings?.locationEn, siteSettings?.locationJa) || '부산'}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center mb-2\">\r\n                <span className=\"text-dark-700 dark:text-dark-300 text-sm\">{t('about.education')}</span>\r\n                <span className=\"text-dark-900 dark:text-cream-100 font-medium text-right text-xs\">\r\n                  {getLocalizedField(currentLang, siteSettings?.education, siteSettings?.educationEn, siteSettings?.educationJa) || '부산인력개발원'}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-dark-700 dark:text-dark-300 text-sm\">{t('about.yearsOfExperience')}</span>\r\n                <span className=\"text-dark-900 dark:text-cream-100 font-medium\">\r\n                  {getLocalizedField(currentLang, siteSettings?.yearsOfExperience, siteSettings?.yearsOfExperienceEn, siteSettings?.yearsOfExperienceJa) || '5년'}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Language Skills - Circular Progress */}\r\n          {languageSkills.length > 0 && (\r\n            <div>\r\n              <div className=\"flex justify-around items-center gap-2\">\r\n                {isLoadingSkills ? (\r\n                  [1, 2, 3].map((i) => (\r\n                    <div key={i} className=\"flex flex-col items-center\">\r\n                      <div className=\"w-16 h-16 rounded-full bg-gray-200 dark:bg-gray-700 animate-pulse\"></div>\r\n                      <div className=\"h-3 bg-gray-200 dark:bg-gray-700 rounded animate-pulse w-12 mt-2\"></div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  languageSkills.map((skill) => {\r\n                    // 🌟 한국어이고 100%면 \"모국어\"로 표시\r\n                    const skillName = getLocalizedSkillName(currentLang, skill)\r\n                    const isNative = skillName.includes('한국어') && skill.level === 100\r\n                    \r\n                    return (\r\n                      <div key={skill._id} className=\"flex flex-col items-center\">\r\n                        <div className=\"relative w-16 h-16\">\r\n                          {/* Background Circle */}\r\n                          <svg className=\"w-16 h-16 transform -rotate-90\">\r\n                            <circle\r\n                              cx=\"32\"\r\n                              cy=\"32\"\r\n                              r=\"28\"\r\n                              stroke=\"currentColor\"\r\n                              strokeWidth=\"4\"\r\n                              fill=\"none\"\r\n                              className=\"text-cream-200 dark:text-dark-700\"\r\n                            />\r\n                            {/* Progress Circle */}\r\n                            <circle\r\n                              cx=\"32\"\r\n                              cy=\"32\"\r\n                              r=\"28\"\r\n                              stroke={skill.color || '#8B4513'}\r\n                              strokeWidth=\"4\"\r\n                              fill=\"none\"\r\n                              strokeDasharray={`${(skill.level / 100) * 176} 176`}\r\n                              className=\"transition-all duration-1000 ease-out\"\r\n                              strokeLinecap=\"round\"\r\n                            />\r\n                          </svg>\r\n                          {/* Icon in Center */}\r\n                          <div className=\"absolute inset-0 flex items-center justify-center\">\r\n                            <DynamicIcon \r\n                              iconName={skill.icon} \r\n                              size={20} \r\n                              className=\"text-coffee-600 dark:text-coffee-400\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <span className=\"text-xs font-medium text-dark-700 dark:text-dark-300 mt-1 text-center\">\r\n                          {skillName}\r\n                        </span>\r\n                        <span className=\"text-xs font-bold text-coffee-600 dark:text-coffee-400\">\r\n                          {isNative ? '모국어' : `${skill.level}%`}\r\n                        </span>\r\n                      </div>\r\n                    )\r\n                  })\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Core Skills Progress */}\r\n          <div>\r\n            <h3 className=\"text-lg font-bold text-dark-900 dark:text-cream-100 mb-4\">\r\n              핵심 기술\r\n            </h3>\r\n            <div className=\"space-y-4\">\r\n              {isLoadingSkills ? (\r\n                // 로딩 상태\r\n                <div className=\"space-y-4\">\r\n                  {[1, 2, 3, 4].map((i) => (\r\n                    <div key={i}>\r\n                      <div className=\"flex justify-between mb-2\">\r\n                        <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded animate-pulse w-16\"></div>\r\n                        <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded animate-pulse w-8\"></div>\r\n                      </div>\r\n                      <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 animate-pulse\"></div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : coreSkills.length > 0 ? (\r\n                // 스킬 데이터 표시\r\n                coreSkills.map((skill) => (\r\n                  <div key={skill._id}>\r\n                    <div className=\"flex justify-between mb-2\">\r\n                      <span className=\"text-sm font-medium text-dark-700 dark:text-dark-300\">\r\n                        {getLocalizedSkillName(currentLang, skill)}\r\n                      </span>\r\n                      <span className=\"text-sm font-bold text-coffee-600 dark:text-coffee-400\">\r\n                        {skill.level}%\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"w-full bg-cream-200 dark:bg-dark-700 rounded-full h-2\">\r\n                      <motion.div\r\n                        initial={{ width: 0 }}\r\n                        animate={{ width: `${skill.level}%` }}\r\n                        transition={{ duration: 1, delay: 0.2 }}\r\n                        className=\"bg-coffee-600 h-2 rounded-full\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                // 데이터가 없을 때\r\n                <div className=\"text-center py-8\">\r\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                    스킬 데이터가 없습니다.\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Navigation */}\r\n          <nav>\r\n            <h3 className=\"text-lg font-bold text-dark-900 dark:text-cream-100 mb-4\">\r\n              메뉴\r\n            </h3>\r\n            <ul className=\"space-y-2\">\r\n              {navItems.map((item) => (\r\n                <li key={item.name}>\r\n                  <SidebarNavItem \r\n                    item={item} \r\n                    location={location} \r\n                    setIsOpen={setIsOpen}\r\n                    activeSection={activeSection}\r\n                  />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </nav>\r\n\r\n          {/* Admin Section */}\r\n          {isAuthenticated && (\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 10 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ duration: 0.3 }}\r\n            >\r\n              <Link\r\n                to=\"/admin\"\r\n                className=\"block px-4 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-xl transition-colors duration-200 font-medium text-center flex items-center justify-center gap-2\"\r\n                onClick={() => setIsOpen(false)}\r\n              >\r\n                <FaUserShield size={18} /> 관리자 대시보드\r\n              </Link>\r\n            </motion.div>\r\n          )}\r\n\r\n          {/* Social Links */}\r\n          <div>\r\n            <h3 className=\"text-lg font-bold text-dark-900 dark:text-cream-100 mb-4\">\r\n              소셜\r\n            </h3>\r\n            <div className=\"flex space-x-3\">\r\n              {socialLinks.map(({ icon: Icon, href, label }) => (\r\n                <a\r\n                  key={label}\r\n                  href={href}\r\n                  className=\"p-3 bg-cream-100 dark:bg-dark-700 rounded-xl hover:bg-coffee-100 dark:hover:bg-dark-600 text-dark-700 dark:text-dark-300 hover:text-coffee-600 dark:hover:text-coffee-400 transition-all duration-200\"\r\n                  aria-label={label}\r\n                >\r\n                  <Icon size={20} />\r\n                </a>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Language Switcher */}\r\n          <div className=\"mb-4\">\r\n            <LanguageSwitcher variant=\"compact\" />\r\n          </div>\r\n\r\n          {/* Dark Mode Toggle & Auth */}\r\n          <div className=\"space-y-2\">\r\n            <button\r\n              onClick={toggleDarkMode}\r\n              className=\"w-full py-3 px-4 bg-coffee-600 hover:bg-coffee-700 text-white rounded-xl transition-colors duration-200 flex items-center justify-center space-x-2 font-medium\"\r\n              aria-label={darkMode ? \"라이트 모드로 전환\" : \"다크 모드로 전환\"}\r\n            >\r\n              {darkMode ? (\r\n                <>\r\n                  <FaSun size={18} />\r\n                  <span>라이트 모드</span>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <FaMoon size={18} />\r\n                  <span>다크 모드</span>\r\n                </>\r\n              )}\r\n            </button>\r\n\r\n            {isAuthenticated ? (\r\n              <button\r\n                onClick={() => {\r\n                  logout()\r\n                  setIsOpen(false)\r\n                }}\r\n                className=\"w-full py-3 px-4 bg-red-600 hover:bg-red-700 text-white rounded-xl transition-colors duration-200 flex items-center justify-center space-x-2 font-medium\"\r\n                aria-label=\"관리자 로그아웃\"\r\n              >\r\n                <FaSignInAlt size={18} />\r\n                <span>로그아웃</span>\r\n              </button>\r\n            ) : (\r\n              <button\r\n                onClick={() => {\r\n                  onLoginClick()\r\n                  setIsOpen(false)\r\n                }}\r\n                className=\"w-full py-3 px-4 bg-green-600 hover:bg-green-700 text-white rounded-xl transition-colors duration-200 flex items-center justify-center space-x-2 font-medium\"\r\n                aria-label=\"관리자 로그인\"\r\n              >\r\n                <FaSignInAlt size={18} />\r\n                <span>관리자 로그인</span>\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n        </div>\r\n      </aside>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useState } from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport { FaTimes, FaUser, FaLock, FaCircleNotch } from 'react-icons/fa'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\ninterface LoginModalProps {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n}\r\n\r\nconst LoginModal: React.FC<LoginModalProps> = ({ isOpen, onClose }) => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [error, setError] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { login } = useAuth()\r\n  const navigate = useNavigate()\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    setError('')\r\n    setIsLoading(true)\r\n\r\n    try {\r\n      await login(username, password)\r\n      onClose()\r\n      navigate('/admin')\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (err: any) {\r\n      // 에러 메시지가 객체라면 문자열로 변환\r\n      const errorMessage = err.message || '로그인 중 알 수 없는 오류가 발생했습니다.'\r\n      setError(errorMessage)\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setUsername('')\r\n    setPassword('')\r\n    setError('')\r\n    onClose()\r\n  }\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {isOpen && (\r\n        <>\r\n          {/* Backdrop */}\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            onClick={handleClose}\r\n            className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50\"\r\n          />\r\n\r\n          {/* Modal */}\r\n          <div className=\"fixed inset-0 flex items-center justify-center z-50 p-4\">\r\n            <motion.div\r\n              initial={{ opacity: 0, scale: 0.9, y: 20 }}\r\n              animate={{ opacity: 1, scale: 1, y: 0 }}\r\n              exit={{ opacity: 0, scale: 0.9, y: 20 }}\r\n              role=\"dialog\"\r\n              aria-modal=\"true\"\r\n              aria-labelledby=\"login-title\"\r\n              className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-2xl w-full max-w-md p-8 relative\"\r\n            >\r\n              {/* Close button */}\r\n              <button\r\n                onClick={handleClose}\r\n                className=\"absolute top-4 right-4 p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\r\n                aria-label=\"닫기\"\r\n              >\r\n                <FaTimes className=\"text-gray-600 dark:text-gray-300\" />\r\n              </button>\r\n\r\n              {/* Header */}\r\n              <div className=\"text-center mb-8\">\r\n                <div className=\"w-16 h-16 bg-gradient-to-r from-blue-500 to-blue-600 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                  <FaUser className=\"text-white text-2xl\" />\r\n                </div>\r\n                <h2 id=\"login-title\" className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\r\n                  관리자 로그인\r\n                </h2>\r\n                <p className=\"text-gray-600 dark:text-gray-400\">\r\n                  포트폴리오 관리를 위해 로그인하세요\r\n                </p>\r\n              </div>\r\n\r\n              {/* Form */}\r\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n                {error && (\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: -10 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    className=\"bg-red-100 dark:bg-red-900/30 border border-red-400 dark:border-red-700 text-red-700 dark:text-red-300 px-4 py-3 rounded-lg text-sm\"\r\n                    role=\"alert\"\r\n                  >\r\n                    {error}\r\n                  </motion.div>\r\n                )}\r\n\r\n                <div>\r\n                  <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    아이디\r\n                  </label>\r\n                  <div className=\"relative\">\r\n                    <FaUser className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-400\" />\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"username\"\r\n                      value={username}\r\n                      onChange={(e) => setUsername(e.target.value)}\r\n                      className=\"w-full pl-10 pr-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                      placeholder=\"아이디를 입력하세요\"\r\n                      required\r\n                      autoComplete=\"username\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    비밀번호\r\n                  </label>\r\n                  <div className=\"relative\">\r\n                    <FaLock className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-400\" />\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                      className=\"w-full pl-10 pr-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                      placeholder=\"비밀번호를 입력하세요\"\r\n                      required\r\n                      autoComplete=\"current-password\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <motion.button\r\n                  type=\"submit\"\r\n                  disabled={isLoading}\r\n                  className=\"w-full bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white font-semibold py-3 rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2\"\r\n                  whileHover={{ scale: 1.02 }}\r\n                  whileTap={{ scale: 0.98 }}\r\n                >\r\n                  {isLoading ? (\r\n                    <>\r\n                      <FaCircleNotch className=\"animate-spin\" />\r\n                      로그인 중...\r\n                    </>\r\n                  ) : (\r\n                    '로그인'\r\n                  )}\r\n                </motion.button>\r\n              </form>\r\n            </motion.div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </AnimatePresence>\r\n  )\r\n}\r\n\r\nexport default LoginModal\r\n\r\n\r\n","import React, { Suspense } from 'react'\r\nimport { Outlet } from 'react-router-dom'\r\nimport Sidebar from './Sidebar'\r\nimport LoginModal from './LoginModal'\r\nimport LoadScene from './LoadScene'\r\n\r\ninterface AppLayoutProps {\r\n  darkMode: boolean\r\n  toggleDarkMode: () => void\r\n  showLoginModal: boolean\r\n  setShowLoginModal: (show: boolean) => void\r\n  isFirstVisit: boolean\r\n}\r\n\r\nconst AppLayout: React.FC<AppLayoutProps> = ({\r\n  darkMode,\r\n  toggleDarkMode,\r\n  showLoginModal,\r\n  setShowLoginModal,\r\n  isFirstVisit\r\n}) => {\r\n\r\n  // 간단한 로딩 스피너 컴포넌트\r\n  const SimpleLoadingSpinner = () => (\r\n    <div className=\"flex items-center justify-center h-64\">\r\n      <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen bg-cream-50 dark:bg-dark-900 transition-colors duration-300\">\r\n      {/* 고정된 왼쪽 사이드바 */}\r\n      <Sidebar \r\n        darkMode={darkMode} \r\n        toggleDarkMode={toggleDarkMode}\r\n        onLoginClick={() => setShowLoginModal(true)}\r\n      />\r\n      \r\n      {/* 오른쪽 스크롤 가능한 콘텐츠 */}\r\n      <main className=\"flex-1 ml-0 lg:ml-80 overflow-y-auto\">\r\n        <Suspense fallback={isFirstVisit ? <LoadScene /> : <SimpleLoadingSpinner />}>\r\n          <Outlet />\r\n        </Suspense>\r\n      </main>\r\n      \r\n      {/* 로그인 모달 */}\r\n      <LoginModal \r\n        isOpen={showLoginModal} \r\n        onClose={() => setShowLoginModal(false)} \r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppLayout\r\n","import React from 'react'\r\nimport { motion, useScroll, useTransform } from 'framer-motion'\r\nimport { FaDownload, FaArrowRight, FaCoffee, FaCog, FaCode } from 'react-icons/fa'\r\nimport { useSiteSettings } from '../hooks/useSiteSettings'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { getLocalizedField } from '../utils/i18nUtils'\r\n\r\nconst Hero: React.FC = () => {\r\n  const { settings, loading } = useSiteSettings()\r\n  const { t, i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n\r\n  // 패럴랙스 효과를 위한 스크롤 훅\r\n  const { scrollYProgress } = useScroll()\r\n  \r\n  // 스크롤 위치에 따라 요소의 Y축 위치를 변환\r\n  const yTop = useTransform(scrollYProgress, [0, 1], [0, 100])\r\n  const yBottom = useTransform(scrollYProgress, [0, 1], [0, -100])\r\n\r\n  const containerVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.3,\r\n      },\r\n    },\r\n  }\r\n\r\n  const itemVariants = {\r\n    hidden: { opacity: 0, y: 30 },\r\n    visible: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        duration: 0.8,\r\n        ease: 'easeOut',\r\n      },\r\n    },\r\n  }\r\n\r\n  // 로딩 중일 때\r\n  if (loading) {\r\n    return (\r\n      <section id=\"home\" className=\"min-h-screen flex items-center justify-center bg-cream-50 dark:bg-dark-900\">\r\n        <div className=\"w-12 h-12 border-4 border-coffee-600 border-t-transparent rounded-full animate-spin\"></div>\r\n      </section>\r\n    )\r\n  }\r\n\r\n  const stats = [\r\n    { \r\n      number: settings?.stat1Number || '5+', \r\n      label: getLocalizedField(currentLang, settings?.stat1Label, settings?.stat1LabelEn, settings?.stat1LabelJa) || '년 경력', \r\n      icon: FaCoffee \r\n    },\r\n    { \r\n      number: settings?.stat2Number || '3+', \r\n      label: getLocalizedField(currentLang, settings?.stat2Label, settings?.stat2LabelEn, settings?.stat2LabelJa) || '완료 프로젝트', \r\n      icon: FaCode \r\n    },\r\n    { \r\n      number: settings?.stat3Number || '10+', \r\n      label: getLocalizedField(currentLang, settings?.stat3Label, settings?.stat3LabelEn, settings?.stat3LabelJa) || '기술 스택', \r\n      icon: FaCog \r\n    },\r\n  ]\r\n\r\n  return (\r\n    <section id=\"home\" className=\"min-h-screen flex items-center justify-center bg-cream-50 dark:bg-dark-900 relative overflow-hidden\">\r\n      {/* Background decoration (패럴랙스 적용) */}\r\n      <div className=\"absolute inset-0 overflow-hidden\">\r\n        {/* 윗부분 장식: 스크롤 시 아래로 이동 */}\r\n        <motion.div \r\n          style={{ y: yTop }}\r\n          className=\"absolute -top-40 -right-40 w-80 h-80 bg-coffee-200 dark:bg-coffee-900 rounded-full opacity-20 blur-3xl\"\r\n        ></motion.div>\r\n        {/* 아랫부분 장식: 스크롤 시 위로 이동 */}\r\n        <motion.div \r\n          style={{ y: yBottom }}\r\n          className=\"absolute -bottom-40 -left-40 w-80 h-80 bg-caramel-200 dark:bg-caramel-900 rounded-full opacity-20 blur-3xl\"\r\n        ></motion.div>\r\n      </div>\r\n\r\n      <div className=\"section-padding w-full relative z-10\">\r\n        <motion.div\r\n          variants={containerVariants}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          className=\"max-w-4xl mx-auto\"\r\n        >\r\n          <motion.div\r\n            variants={itemVariants}\r\n            className=\"mb-8\"\r\n          >\r\n            <span className=\"inline-block px-4 py-2 bg-coffee-100 dark:bg-coffee-900 text-coffee-700 dark:text-coffee-300 rounded-full text-sm font-medium mb-6\">\r\n              {getLocalizedField(currentLang, settings?.heroTag, settings?.heroTagEn, settings?.heroTagJa) || '🎯 취업 준비 중'}\r\n            </span>\r\n          </motion.div>\r\n\r\n          <motion.h1\r\n            variants={itemVariants}\r\n            className=\"text-5xl md:text-7xl font-bold text-dark-900 dark:text-cream-100 mb-8 leading-tight\"\r\n          >\r\n            {getLocalizedField(currentLang, settings?.heroTitle, settings?.heroTitleEn, settings?.heroTitleJa) || '공장자동화 전문가'}\r\n          </motion.h1>\r\n\r\n          <motion.p\r\n            variants={itemVariants}\r\n            className=\"text-xl md:text-2xl text-dark-600 dark:text-dark-300 mb-12 leading-relaxed max-w-3xl whitespace-pre-line\"\r\n          >\r\n            {getLocalizedField(currentLang, settings?.heroSubtitle, settings?.heroSubtitleEn, settings?.heroSubtitleJa) || 'PLC 프로그래밍부터 데이터 분석까지, 스마트 팩토리의 미래를 만들어갑니다.'}\r\n          </motion.p>\r\n\r\n          <motion.div\r\n            variants={itemVariants}\r\n            className=\"flex flex-col sm:flex-row gap-4 mb-16\"\r\n          >\r\n            <motion.a \r\n              href=\"/projects\"\r\n              aria-label={t('hero.viewProjects')}\r\n              variants={itemVariants}\r\n              className=\"btn-primary text-lg px-8 py-4 flex items-center justify-center gap-2 group\"\r\n            >\r\n              {t('hero.viewProjects')}\r\n              <FaArrowRight className=\"group-hover:translate-x-1 transition-transform\" />\r\n            </motion.a>\r\n            <motion.a \r\n              href={settings?.heroCtaLink2 || '/resume.pdf'}\r\n              download={settings?.heroCtaLink2 ? true : false}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              aria-label={t('hero.contactMe')}\r\n              variants={itemVariants}\r\n              className=\"btn-secondary text-lg px-8 py-4 flex items-center justify-center gap-2\"\r\n            >\r\n              <FaDownload />\r\n              {t('hero.contactMe')}\r\n            </motion.a>\r\n          </motion.div>\r\n\r\n          {/* Stats */}\r\n          <motion.div\r\n            variants={itemVariants}\r\n            className=\"grid grid-cols-1 sm:grid-cols-3 gap-6\"\r\n          >\r\n            {stats.map((stat) => (\r\n              <motion.div\r\n                key={stat.label}\r\n                className=\"bg-white dark:bg-dark-800 rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 border border-cream-200 dark:border-dark-700\"\r\n                whileHover={{ y: -5 }}\r\n                role=\"status\"\r\n                aria-label={`${stat.label} 통계: ${stat.number}`}\r\n              >\r\n                <div className=\"flex items-center gap-4\">\r\n                  <div className=\"p-3 bg-coffee-100 dark:bg-coffee-900 rounded-xl\">\r\n                    <stat.icon className=\"text-coffee-600 dark:text-coffee-400\" size={24} />\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"text-3xl font-bold text-coffee-600 dark:text-coffee-400\">\r\n                      {stat.number}\r\n                    </div>\r\n                    <div className=\"text-sm text-dark-600 dark:text-dark-400\">\r\n                      {stat.label}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            ))}\r\n          </motion.div>\r\n        </motion.div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Hero","/**\r\n * 날짜 관련 유틸리티 함수들\r\n */\r\n\r\n/**\r\n * 날짜 문자열을 한국어 형식으로 포맷팅\r\n * @param dateString - 포맷팅할 날짜 문자열\r\n * @returns 한국어 형식의 날짜 문자열 (예: \"2024. 1. 15.\")\r\n */\r\nexport const formatDate = (dateString: string): string => {\r\n  try {\r\n    const date = new Date(dateString)\r\n    return date.toLocaleDateString('ko-KR')\r\n  } catch (error) {\r\n    console.error('날짜 포맷팅 오류:', error)\r\n    return '날짜 정보 없음'\r\n  }\r\n}\r\n\r\n/**\r\n * 날짜 문자열을 상대적 시간으로 포맷팅 (예: \"3분 전\", \"2시간 전\", \"3일 전\")\r\n * @param dateString - 포맷팅할 날짜 문자열\r\n * @returns 상대적 시간 문자열\r\n */\r\nexport const formatRelativeDate = (dateString: string): string => {\r\n  try {\r\n    const date = new Date(dateString)\r\n    const now = new Date()\r\n    const diffInMs = now.getTime() - date.getTime()\r\n    \r\n    // 음수인 경우 미래 날짜 (방금 전으로 처리)\r\n    if (diffInMs < 0) return '방금 전'\r\n    \r\n    // 분 단위 계산\r\n    const diffInMinutes = Math.floor(diffInMs / (1000 * 60))\r\n    if (diffInMinutes < 1) return '방금 전'\r\n    if (diffInMinutes < 60) return `${diffInMinutes}분 전`\r\n    \r\n    // 시간 단위 계산\r\n    const diffInHours = Math.floor(diffInMs / (1000 * 60 * 60))\r\n    if (diffInHours < 24) return `${diffInHours}시간 전`\r\n    \r\n    // 일 단위 계산\r\n    const diffInDays = Math.floor(diffInMs / (1000 * 60 * 60 * 24))\r\n    if (diffInDays === 1) return '어제'\r\n    if (diffInDays < 7) return `${diffInDays}일 전`\r\n    \r\n    // 주 단위 계산\r\n    const diffInWeeks = Math.floor(diffInDays / 7)\r\n    if (diffInWeeks < 4) return `${diffInWeeks}주 전`\r\n    \r\n    // 월 단위 계산 (30일 기준)\r\n    const diffInMonths = Math.floor(diffInDays / 30)\r\n    if (diffInMonths < 12) return `${diffInMonths}개월 전`\r\n    \r\n    // 년 단위 계산\r\n    const diffInYears = Math.floor(diffInDays / 365)\r\n    return `${diffInYears}년 전`\r\n  } catch (error) {\r\n    console.error('상대적 날짜 포맷팅 오류:', error)\r\n    return '날짜 정보 없음'\r\n  }\r\n}\r\n\r\n/**\r\n * 모던한 Intl.RelativeTimeFormat API를 사용한 상대적 시간 포맷팅\r\n * @param dateString - 포맷팅할 날짜 문자열\r\n * @param locale - 로케일 (기본값: 'ko-KR')\r\n * @returns 상대적 시간 문자열\r\n */\r\nexport const formatRelativeDateModern = (dateString: string, locale: string = 'ko-KR'): string => {\r\n  try {\r\n    const date = new Date(dateString)\r\n    const now = new Date()\r\n    const diffInSeconds = (now.getTime() - date.getTime()) / 1000\r\n    \r\n    // 음수인 경우 미래 날짜\r\n    if (diffInSeconds < 0) return '방금 전'\r\n    \r\n    const formatter = new Intl.RelativeTimeFormat(locale, { numeric: 'auto' })\r\n    \r\n    // 초 단위\r\n    if (diffInSeconds < 60) {\r\n      return '방금 전'\r\n    }\r\n    \r\n    // 분 단위\r\n    if (diffInSeconds < 3600) {\r\n      return formatter.format(Math.floor(-diffInSeconds / 60), 'minute')\r\n    }\r\n    \r\n    // 시간 단위\r\n    if (diffInSeconds < 86400) {\r\n      return formatter.format(Math.floor(-diffInSeconds / 3600), 'hour')\r\n    }\r\n    \r\n    // 일 단위\r\n    if (diffInSeconds < 2592000) { // 30일 미만\r\n      return formatter.format(Math.floor(-diffInSeconds / 86400), 'day')\r\n    }\r\n    \r\n    // 월 단위\r\n    if (diffInSeconds < 31536000) { // 365일 미만\r\n      return formatter.format(Math.floor(-diffInSeconds / 2592000), 'month')\r\n    }\r\n    \r\n    // 년 단위\r\n    return formatter.format(Math.floor(-diffInSeconds / 31536000), 'year')\r\n  } catch (error) {\r\n    console.error('모던 상대적 날짜 포맷팅 오류:', error)\r\n    return '날짜 정보 없음'\r\n  }\r\n}\r\n\r\n/**\r\n * 날짜가 유효한지 확인\r\n * @param dateString - 확인할 날짜 문자열\r\n * @returns 유효한 날짜인지 여부\r\n */\r\nexport const isValidDate = (dateString: string): boolean => {\r\n  try {\r\n    const date = new Date(dateString)\r\n    return !isNaN(date.getTime())\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * 두 날짜 사이의 차이를 계산\r\n * @param startDate - 시작 날짜 문자열\r\n * @param endDate - 종료 날짜 문자열 (기본값: 현재 시간)\r\n * @returns 차이 정보 객체\r\n */\r\nexport const getDateDifference = (\r\n  startDate: string, \r\n  endDate: string = new Date().toISOString()\r\n): {\r\n  days: number\r\n  hours: number\r\n  minutes: number\r\n  totalMs: number\r\n} => {\r\n  try {\r\n    const start = new Date(startDate)\r\n    const end = new Date(endDate)\r\n    const diffInMs = Math.abs(end.getTime() - start.getTime())\r\n    \r\n    const days = Math.floor(diffInMs / (1000 * 60 * 60 * 24))\r\n    const hours = Math.floor((diffInMs % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\r\n    const minutes = Math.floor((diffInMs % (1000 * 60 * 60)) / (1000 * 60))\r\n    \r\n    return {\r\n      days,\r\n      hours,\r\n      minutes,\r\n      totalMs: diffInMs\r\n    }\r\n  } catch (error) {\r\n    console.error('날짜 차이 계산 오류:', error)\r\n    return {\r\n      days: 0,\r\n      hours: 0,\r\n      minutes: 0,\r\n      totalMs: 0\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 날짜를 다양한 형식으로 포맷팅\r\n * @param dateString - 포맷팅할 날짜 문자열\r\n * @param format - 포맷 타입 ('short', 'long', 'time', 'datetime')\r\n * @returns 포맷팅된 날짜 문자열\r\n */\r\nexport const formatDateByType = (\r\n  dateString: string, \r\n  format: 'short' | 'long' | 'time' | 'datetime' = 'short'\r\n): string => {\r\n  try {\r\n    const date = new Date(dateString)\r\n    \r\n    switch (format) {\r\n      case 'short':\r\n        return date.toLocaleDateString('ko-KR', {\r\n          year: 'numeric',\r\n          month: 'numeric',\r\n          day: 'numeric'\r\n        })\r\n      case 'long':\r\n        return date.toLocaleDateString('ko-KR', {\r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric',\r\n          weekday: 'long'\r\n        })\r\n      case 'time':\r\n        return date.toLocaleTimeString('ko-KR', {\r\n          hour: '2-digit',\r\n          minute: '2-digit'\r\n        })\r\n      case 'datetime':\r\n        return date.toLocaleString('ko-KR', {\r\n          year: 'numeric',\r\n          month: 'numeric',\r\n          day: 'numeric',\r\n          hour: '2-digit',\r\n          minute: '2-digit'\r\n        })\r\n      default:\r\n        return date.toLocaleDateString('ko-KR')\r\n    }\r\n  } catch (error) {\r\n    console.error('날짜 타입별 포맷팅 오류:', error)\r\n    return '날짜 정보 없음'\r\n  }\r\n}\r\n\r\n/**\r\n * 날짜가 오늘인지 확인\r\n * @param dateString - 확인할 날짜 문자열\r\n * @returns 오늘인지 여부\r\n */\r\nexport const isToday = (dateString: string): boolean => {\r\n  try {\r\n    const date = new Date(dateString)\r\n    const today = new Date()\r\n    \r\n    return date.getDate() === today.getDate() &&\r\n           date.getMonth() === today.getMonth() &&\r\n           date.getFullYear() === today.getFullYear()\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * 날짜가 최근 N일 이내인지 확인\r\n * @param dateString - 확인할 날짜 문자열\r\n * @param days - 기준 일수 (기본값: 7)\r\n * @returns 최근 N일 이내인지 여부\r\n */\r\nexport const isRecent = (dateString: string, days: number = 7): boolean => {\r\n  try {\r\n    const date = new Date(dateString)\r\n    const now = new Date()\r\n    const diffInMs = now.getTime() - date.getTime()\r\n    const diffInDays = Math.floor(diffInMs / (1000 * 60 * 60 * 24))\r\n    \r\n    return diffInDays <= days && diffInDays >= 0\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FaBook, FaImage } from 'react-icons/fa'\r\n\r\ninterface BookCoverImageProps {\r\n  src?: string\r\n  alt: string\r\n  className?: string\r\n  fallbackIcon?: React.ReactNode\r\n}\r\n\r\n/**\r\n * 책 커버 이미지 컴포넌트\r\n * - 지연 로딩 지원\r\n * - 로딩 상태 표시\r\n * - 오류 시 대체 아이콘 표시\r\n */\r\nconst BookCoverImage: React.FC<BookCoverImageProps> = ({\r\n  src,\r\n  alt,\r\n  className = \"w-full h-64 object-cover group-hover:scale-105 transition-transform duration-300\",\r\n  fallbackIcon\r\n}) => {\r\n  const [imageState, setImageState] = useState<'loading' | 'loaded' | 'error'>('loading')\r\n  const [imageSrc, setImageSrc] = useState(src)\r\n\r\n  const handleImageLoad = () => {\r\n    setImageState('loaded')\r\n  }\r\n\r\n  const handleImageError = () => {\r\n    setImageState('error')\r\n    setImageSrc(undefined)\r\n  }\r\n\r\n  // 이미지가 없거나 오류가 발생한 경우 대체 아이콘 표시\r\n  if (!imageSrc || imageState === 'error') {\r\n    return (\r\n      <div className=\"w-full h-64 bg-gradient-to-br from-primary-400 to-primary-600 flex items-center justify-center\">\r\n        {fallbackIcon || <FaBook className=\"text-white text-6xl\" />}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative overflow-hidden\">\r\n      {/* 로딩 상태 스켈레톤 */}\r\n      {imageState === 'loading' && (\r\n        <div className=\"absolute inset-0 bg-gray-200 dark:bg-gray-700 animate-pulse flex items-center justify-center\">\r\n          <FaImage className=\"text-gray-400 text-4xl\" />\r\n        </div>\r\n      )}\r\n      \r\n      {/* 실제 이미지 */}\r\n      <img\r\n        src={imageSrc}\r\n        alt={alt}\r\n        className={`${className} ${imageState === 'loading' ? 'opacity-0' : 'opacity-100'} transition-opacity duration-300`}\r\n        loading=\"lazy\"\r\n        decoding=\"async\"\r\n        width=\"400\"\r\n        height=\"256\"\r\n        onLoad={handleImageLoad}\r\n        onError={handleImageError}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BookCoverImage\r\n","import React, { useState, useEffect } from 'react'\r\nimport { FaArrowUp } from 'react-icons/fa'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\n\r\nconst ScrollToTopButton: React.FC = () => {\r\n  const [isVisible, setIsVisible] = useState(false)\r\n\r\n  // 스크롤 위치에 따라 버튼 표시/숨김\r\n  useEffect(() => {\r\n    const toggleVisibility = () => {\r\n      // 300px 이상 스크롤하면 버튼 표시\r\n      if (window.scrollY > 300) {\r\n        setIsVisible(true)\r\n      } else {\r\n        setIsVisible(false)\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', toggleVisibility)\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', toggleVisibility)\r\n    }\r\n  }, [])\r\n\r\n  // 최상단으로 스크롤\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth'\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {isVisible && (\r\n        <motion.button\r\n          initial={{ opacity: 0, scale: 0.8 }}\r\n          animate={{ opacity: 1, scale: 1 }}\r\n          exit={{ opacity: 0, scale: 0.8 }}\r\n          transition={{ duration: 0.2 }}\r\n          onClick={scrollToTop}\r\n          className=\"fixed bottom-8 right-8 z-50 p-4 bg-primary-600 hover:bg-primary-700 text-white rounded-full shadow-lg hover:shadow-xl transition-all duration-300 group\"\r\n          aria-label=\"맨 위로 스크롤\"\r\n          title=\"맨 위로\"\r\n        >\r\n          <FaArrowUp className=\"text-xl group-hover:transform group-hover:-translate-y-1 transition-transform\" />\r\n        </motion.button>\r\n      )}\r\n    </AnimatePresence>\r\n  )\r\n}\r\n\r\nexport default ScrollToTopButton\r\n\r\n","/**\r\n * 텍스트 포맷팅 및 마크다운 관련 유틸리티 함수들\r\n */\r\nimport React from 'react'\r\n\r\n/**\r\n * 마크다운 스타일 텍스트를 HTML로 변환 (정밀한 버전)\r\n * @param text - 마크다운 스타일의 텍스트\r\n * @returns HTML 문자열\r\n */\r\nexport const parseMarkdown = (text: string): string => {\r\n  if (!text) return ''\r\n  \r\n  return text\r\n    // 코드 블록: ```code``` (먼저 처리하여 다른 마크다운과 충돌 방지)\r\n    .replace(/```([\\s\\S]*?)```/g, '<pre class=\"bg-gray-100 dark:bg-gray-800 p-4 rounded-lg overflow-x-auto my-4\"><code class=\"text-sm font-mono\">$1</code></pre>')\r\n    \r\n    // 인라인 코드: `code` (코드 블록 처리 후)\r\n    .replace(/`([^`]+)`/g, '<code class=\"bg-gray-100 dark:bg-gray-800 px-1 py-0.5 rounded text-sm font-mono\">$1</code>')\r\n    \r\n    // 볼드체: **text** 또는 __text__ (이탤릭체보다 먼저 처리)\r\n    .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n    .replace(/__(.*?)__/g, '<strong>$1</strong>')\r\n    \r\n    // 이탤릭체: *text* 또는 _text_ (볼드체 처리 후, 경계 명확화)\r\n    .replace(/(^|[^*])\\*([^*\\s][^*]*[^*\\s]|[^*\\s])\\*([^*]|$)/g, '$1<em>$2</em>$3')\r\n    .replace(/(^|[^_])\\_([^_\\s][^_]*[^_\\s]|[^_\\s])\\_([^_]|$)/g, '$1<em>$2</em>$3')\r\n    \r\n    // 링크: [text](url)\r\n    .replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<a href=\"$2\" class=\"text-primary-600 hover:text-primary-700 underline\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>')\r\n    \r\n    // 헤더: # ## ###\r\n    .replace(/^### (.*$)/gm, '<h3 class=\"text-lg font-semibold text-gray-900 dark:text-white mt-4 mb-2\">$1</h3>')\r\n    .replace(/^## (.*$)/gm, '<h2 class=\"text-xl font-semibold text-gray-900 dark:text-white mt-4 mb-2\">$1</h2>')\r\n    .replace(/^# (.*$)/gm, '<h1 class=\"text-2xl font-bold text-gray-900 dark:text-white mt-4 mb-2\">$1</h1>')\r\n    \r\n    // 목록: - item 또는 * item\r\n    .replace(/^[\\s]*[-*] (.*$)/gm, '<li class=\"ml-4\">$1</li>')\r\n    .replace(/(<li class=\"ml-4\">.*<\\/li>)/s, '<ul class=\"list-disc list-inside my-2\">$1</ul>')\r\n    \r\n    // 블록 인용: > quote\r\n    .replace(/^> (.*$)/gm, '<blockquote class=\"border-l-4 border-primary-500 pl-4 italic text-gray-600 dark:text-gray-400 my-2\">$1</blockquote>')\r\n    \r\n    // 수평선: ---\r\n    .replace(/^---$/gm, '<hr class=\"border-gray-300 dark:border-gray-600 my-4\">')\r\n    \r\n    // 줄바꿈을 <br>로 변환 (마지막에 처리)\r\n    .replace(/\\n/g, '<br>')\r\n}\r\n\r\n/**\r\n * 텍스트를 안전하게 HTML로 렌더링하기 위한 함수\r\n * @param text - 변환할 텍스트\r\n * @returns JSX 요소\r\n */\r\nexport const renderFormattedText = (text: string): React.ReactElement => {\r\n  const htmlContent = parseMarkdown(text)\r\n  \r\n  return React.createElement('div', {\r\n    className: \"text-gray-600 dark:text-gray-300 leading-relaxed\",\r\n    dangerouslySetInnerHTML: { __html: htmlContent }\r\n  })\r\n}\r\n\r\n/**\r\n * 텍스트 길이에 따라 요약본 생성\r\n * @param text - 원본 텍스트\r\n * @param maxLength - 최대 길이\r\n * @returns 요약된 텍스트\r\n */\r\nexport const truncateText = (text: string, maxLength: number = 100): string => {\r\n  if (!text) return ''\r\n  if (text.length <= maxLength) return text\r\n  \r\n  return text.substring(0, maxLength).trim() + '...'\r\n}\r\n\r\n/**\r\n * 텍스트에서 해시태그 추출\r\n * @param text - 검색할 텍스트\r\n * @returns 해시태그 배열\r\n */\r\nexport const extractHashtags = (text: string): string[] => {\r\n  if (!text) return []\r\n  \r\n  const hashtagRegex = /#[\\w가-힣]+/g\r\n  const matches = text.match(hashtagRegex)\r\n  \r\n  return matches ? matches.map(tag => tag.substring(1)) : []\r\n}\r\n\r\n/**\r\n * 텍스트에서 멘션(@username) 추출\r\n * @param text - 검색할 텍스트\r\n * @returns 멘션 배열\r\n */\r\nexport const extractMentions = (text: string): string[] => {\r\n  if (!text) return []\r\n  \r\n  const mentionRegex = /@[\\w가-힣]+/g\r\n  const matches = text.match(mentionRegex)\r\n  \r\n  return matches ? matches.map(mention => mention.substring(1)) : []\r\n}\r\n\r\n/**\r\n * 텍스트를 읽기 시간으로 변환 (분 단위)\r\n * @param text - 텍스트\r\n * @param wordsPerMinute - 분당 읽는 단어 수 (기본값: 200)\r\n * @returns 읽기 시간 (분)\r\n */\r\nexport const calculateReadingTime = (text: string, wordsPerMinute: number = 200): number => {\r\n  if (!text) return 0\r\n  \r\n  const words = text.trim().split(/\\s+/).length\r\n  const minutes = Math.ceil(words / wordsPerMinute)\r\n  \r\n  return Math.max(1, minutes) // 최소 1분\r\n}\r\n\r\n/**\r\n * 읽기 시간을 포맷팅하여 표시 문자열로 변환\r\n * @param minutes - 읽기 시간 (분)\r\n * @returns 표시 문자열 (예: \"5분 읽기\")\r\n */\r\nexport const formatReadingTime = (minutes: number): string => {\r\n  if (minutes === 0) return '읽기 시간 없음'\r\n  if (minutes === 1) return '1분 읽기'\r\n  return `${minutes}분 읽기`\r\n}\r\n\r\n/**\r\n * 텍스트에서 읽기 시간을 계산하고 포맷팅\r\n * @param text - 텍스트\r\n * @param wordsPerMinute - 분당 읽는 단어 수 (기본값: 200)\r\n * @returns 포맷팅된 읽기 시간 문자열\r\n */\r\nexport const getFormattedReadingTime = (text: string, wordsPerMinute: number = 200): string => {\r\n  const minutes = calculateReadingTime(text, wordsPerMinute)\r\n  return formatReadingTime(minutes)\r\n}\r\n\r\n/**\r\n * 텍스트에서 단어 수를 계산\r\n * @param text - 텍스트\r\n * @returns 단어 수\r\n */\r\nexport const getWordCount = (text: string): number => {\r\n  if (!text) return 0\r\n  return text.trim().split(/\\s+/).length\r\n}\r\n\r\n/**\r\n * 텍스트에서 문자 수를 계산 (공백 포함/제외)\r\n * @param text - 텍스트\r\n * @param includeSpaces - 공백 포함 여부 (기본값: true)\r\n * @returns 문자 수\r\n */\r\nexport const getCharacterCount = (text: string, includeSpaces: boolean = true): number => {\r\n  if (!text) return 0\r\n  return includeSpaces ? text.length : text.replace(/\\s/g, '').length\r\n}\r\n\r\n/**\r\n * 텍스트에서 문장 수를 계산\r\n * @param text - 텍스트\r\n * @returns 문장 수\r\n */\r\nexport const getSentenceCount = (text: string): number => {\r\n  if (!text) return 0\r\n  const sentences = text.split(/[.!?]+/).filter(sentence => sentence.trim().length > 0)\r\n  return sentences.length\r\n}\r\n\r\n/**\r\n * 텍스트의 가독성 점수를 계산 (간단한 버전)\r\n * @param text - 텍스트\r\n * @returns 가독성 점수 (0-100, 높을수록 읽기 쉬움)\r\n */\r\nexport const calculateReadabilityScore = (text: string): number => {\r\n  if (!text) return 0\r\n  \r\n  const words = getWordCount(text)\r\n  const sentences = getSentenceCount(text)\r\n  const characters = getCharacterCount(text, false)\r\n  \r\n  if (words === 0 || sentences === 0) return 0\r\n  \r\n  // 간단한 가독성 공식 (Flesch Reading Ease 기반)\r\n  const avgWordsPerSentence = words / sentences\r\n  const avgSyllablesPerWord = characters / words * 0.5 // 근사치\r\n  \r\n  const score = 206.835 - (1.015 * avgWordsPerSentence) - (84.6 * avgSyllablesPerWord)\r\n  \r\n  return Math.max(0, Math.min(100, Math.round(score)))\r\n}\r\n\r\n/**\r\n * 텍스트를 안전하게 HTML 이스케이프 처리\r\n * @param text - 이스케이프할 텍스트\r\n * @returns 이스케이프된 HTML 문자열\r\n */\r\nexport const escapeHtml = (text: string): string => {\r\n  if (!text) return ''\r\n  \r\n  return text\r\n    .replace(/&/g, '&amp;')\r\n    .replace(/</g, '&lt;')\r\n    .replace(/>/g, '&gt;')\r\n    .replace(/\"/g, '&quot;')\r\n    .replace(/'/g, '&#39;')\r\n}\r\n\r\n/**\r\n * 텍스트에서 URL을 자동으로 링크로 변환\r\n * @param text - 텍스트\r\n * @returns URL이 링크로 변환된 텍스트\r\n */\r\nexport const autoLinkUrls = (text: string): string => {\r\n  if (!text) return ''\r\n  \r\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g\r\n  return text.replace(urlRegex, '<a href=\"$1\" class=\"text-primary-600 hover:text-primary-700 underline\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>')\r\n}\r\n\r\n/**\r\n * 텍스트에서 이메일 주소를 자동으로 링크로 변환\r\n * @param text - 텍스트\r\n * @returns 이메일이 링크로 변환된 텍스트\r\n */\r\nexport const autoLinkEmails = (text: string): string => {\r\n  if (!text) return ''\r\n  \r\n  const emailRegex = /([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,})/g\r\n  return text.replace(emailRegex, '<a href=\"mailto:$1\" class=\"text-primary-600 hover:text-primary-700 underline\">$1</a>')\r\n}\r\n\r\n/**\r\n * 텍스트를 완전히 포맷팅 (마크다운 + 자동 링크)\r\n * @param text - 포맷팅할 텍스트\r\n * @returns 완전히 포맷팅된 HTML 문자열\r\n */\r\nexport const formatTextCompletely = (text: string): string => {\r\n  if (!text) return ''\r\n  \r\n  // 마크다운 파싱\r\n  let formatted = parseMarkdown(text)\r\n  // 자동 URL 링크\r\n  formatted = autoLinkUrls(formatted)\r\n  // 자동 이메일 링크\r\n  formatted = autoLinkEmails(formatted)\r\n  \r\n  return formatted\r\n}\r\n","import React, { useState, useRef } from 'react'\r\nimport { FaBold, FaItalic, FaUnderline, FaListUl, FaListOl, FaIndent, FaOutdent, FaChevronDown } from 'react-icons/fa'\r\nimport { MdCode } from 'react-icons/md' // 코드 블록 아이콘 추가\r\n\r\ninterface RichTextEditorProps {\r\n  value: string\r\n  onChange: (value: string) => void\r\n  placeholder?: string\r\n  rows?: number\r\n  className?: string\r\n}\r\n\r\nconst RichTextEditor: React.FC<RichTextEditorProps> = ({\r\n  value,\r\n  onChange,\r\n  placeholder = \"내용을 입력하세요\",\r\n  rows = 8,\r\n  className = \"\"\r\n}) => {\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null)\r\n  const [cursorPosition, setCursorPosition] = useState(0)\r\n\r\n  // 커서 위치 업데이트\r\n  const updateCursorPosition = () => {\r\n    if (textareaRef.current) {\r\n      setCursorPosition(textareaRef.current.selectionStart)\r\n    }\r\n  }\r\n\r\n  // 현재 줄의 텍스트와 시작 위치 가져오기 (커서 조정 오류 수정)\r\n  const getCurrentLine = () => {\r\n    const lines = value.split('\\n')\r\n    let currentLineIndex = 0\r\n    let lineStart = 0 // 현재 줄의 시작 위치\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const lineLengthWithNewline = (lines[i]?.length || 0) + 1 // 줄 길이 + \\n (마지막 줄은 \\n이 없으므로 주의)\r\n      \r\n      // 커서 위치가 현재 줄 범위 내에 있거나, 마지막 줄인 경우\r\n      if (cursorPosition >= lineStart && (cursorPosition < lineStart + lineLengthWithNewline || i === lines.length - 1)) {\r\n        currentLineIndex = i\r\n        break\r\n      }\r\n      \r\n      lineStart += lineLengthWithNewline\r\n    }\r\n    \r\n    return {\r\n      lineIndex: currentLineIndex,\r\n      line: lines[currentLineIndex] || '',\r\n      lines: lines,\r\n      lineStart: lineStart, // 현재 줄의 절대 시작 위치\r\n    }\r\n  }\r\n\r\n  // 텍스트 삽입 함수 제거됨 - applyTextStyle 사용\r\n\r\n  // 줄 바꿈과 함께 텍스트 삽입 함수 제거됨 - 사용하지 않음\r\n\r\n  // 제목 스타일 적용\r\n  const applyHeading = (level: number) => {\r\n    const { lineIndex, line, lines } = getCurrentLine()\r\n    const prefix = '#'.repeat(level) + ' '\r\n    \r\n    // 이미 제목인 경우 제목 레벨 변경\r\n    if (line.match(/^#+\\s/)) {\r\n      lines[lineIndex] = prefix + line.replace(/^#+\\s/, '')\r\n    } else {\r\n      lines[lineIndex] = prefix + line\r\n    }\r\n    \r\n    onChange(lines.join('\\n'))\r\n  }\r\n\r\n  // 리스트 스타일 적용\r\n  const applyListStyle = (type: 'bullet' | 'number') => {\r\n    const { lineIndex, line, lines } = getCurrentLine()\r\n    \r\n    // 이미 리스트인 경우 리스트 해제\r\n    if (line?.match(/^[\\s]*[-*+]\\s/) || line?.match(/^[\\s]*\\d+\\.\\s/)) {\r\n      lines[lineIndex] = line?.replace(/^[\\s]*[-*+\\d\\.]\\s/, '').trim() || ''\r\n    } else {\r\n      // 새로운 리스트 항목 추가\r\n      const indent = line?.match(/^[\\s]*/)?.[0] || ''\r\n      const prefix = type === 'bullet' ? '- ' : '1. '\r\n      lines[lineIndex] = indent + prefix + (line?.trim() || '')\r\n    }\r\n    \r\n    onChange(lines.join('\\n'))\r\n  }\r\n\r\n  // 들여쓰기/내어쓰기\r\n  const adjustIndent = (direction: 'in' | 'out') => {\r\n    const { lineIndex, lines } = getCurrentLine()\r\n    const line = lines[lineIndex] || ''\r\n    \r\n    if (direction === 'in') {\r\n      lines[lineIndex] = '  ' + line\r\n    } else {\r\n      lines[lineIndex] = line.replace(/^[\\s]{0,2}/, '')\r\n    }\r\n    \r\n    onChange(lines.join('\\n'))\r\n  }\r\n\r\n  // 토글 블록 생성\r\n  const insertToggle = () => {\r\n    const { lineIndex, lines, lineStart } = getCurrentLine()\r\n    const newLine = '▶ 토글 제목'\r\n    lines.splice(lineIndex + 1, 0, newLine, '  토글 내용을 입력하세요') // 공백 2개 들여쓰기\r\n    onChange(lines.join('\\n'))\r\n    \r\n    // 커서를 토글 내용 (두 번째 삽입된 줄)으로 이동\r\n    setTimeout(() => {\r\n      if (textareaRef.current) {\r\n        // 커서 위치: 현재 줄 시작 위치 + 현재 줄 길이 + \\n + 첫 번째 삽입된 줄 길이 + \\n + 2 (들여쓰기)\r\n        const newPosition = lineStart + (lines[lineIndex]?.length || 0) + 1 + newLine.length + 1 + 2\r\n        textareaRef.current.setSelectionRange(newPosition, newPosition)\r\n        textareaRef.current.focus()\r\n      }\r\n    }, 0)\r\n  }\r\n\r\n  // === 새로 추가된 코드 블록 삽입 함수 ===\r\n  const insertCodeBlock = () => {\r\n    const { lineIndex, lines, lineStart } = getCurrentLine()\r\n    \r\n    const codeBlockLines = [\r\n      '```javascript', // 기본 언어\r\n      '// 여기에 코드를 작성하세요',\r\n      '```',\r\n    ]\r\n\r\n    // 현재 줄의 바로 아래에 세 줄을 삽입\r\n    lines.splice(lineIndex + 1, 0, ...codeBlockLines)\r\n    const newValue = lines.join('\\n')\r\n    onChange(newValue)\r\n    \r\n    // 커서를 코드 블록의 내용 줄로 이동\r\n    setTimeout(() => {\r\n      if (textareaRef.current) {\r\n        // 커서 위치: (현재 줄의 끝) + (첫 번째 백틱 줄 길이 + \\n) + (내용 줄 시작)\r\n        const positionToMove = \r\n          lineStart + (lines[lineIndex]?.length || 0) + 1  // 현재 줄 끝 + \\n\r\n          + (codeBlockLines[0]?.length || 0) + 1          // 첫 번째 백틱 줄 + \\n\r\n          + 2                                     // '//' 위치까지 이동\r\n        \r\n        textareaRef.current.setSelectionRange(positionToMove, positionToMove)\r\n        textareaRef.current.focus()\r\n      }\r\n    }, 0)\r\n  }\r\n  // ===================================\r\n\r\n  // 텍스트 스타일 적용 (간단한 마크다운)\r\n  const applyTextStyle = (style: 'bold' | 'italic' | 'underline') => {\r\n    const textarea = textareaRef.current\r\n    if (!textarea) return\r\n    \r\n    const start = textarea.selectionStart\r\n    const end = textarea.selectionEnd\r\n    const selectedText = value.substring(start, end)\r\n    \r\n    let wrap = ''\r\n    switch (style) {\r\n      case 'bold': wrap = '**'; break\r\n      case 'italic': wrap = '*'; break\r\n      case 'underline': wrap = '__'; break\r\n    }\r\n    \r\n    const wrappedText = `${wrap}${selectedText}${wrap}`\r\n    \r\n    const newValue = value.substring(0, start) + wrappedText + value.substring(end)\r\n    onChange(newValue)\r\n    \r\n    // 커서 위치 조정\r\n    setTimeout(() => {\r\n      // 선택된 텍스트가 없으면, 랩퍼 안에 커서를 위치시킵니다.\r\n      if (start === end) {\r\n        textarea.setSelectionRange(start + wrap.length, end + wrap.length)\r\n      } \r\n      // 선택된 텍스트가 있으면, 전체 랩퍼 뒤에 커서를 위치시킵니다.\r\n      else {\r\n        textarea.setSelectionRange(end + 2 * wrap.length, end + 2 * wrap.length)\r\n      }\r\n      textarea.focus()\r\n    }, 0)\r\n  }\r\n\r\n  // 렌더링된 텍스트 (마크다운 → HTML)\r\n  const renderMarkdown = (text: string) => {\r\n    return text\r\n      // 제목\r\n      .replace(/^### (.*$)/gim, '<h3 class=\"text-lg font-semibold mt-4 mb-2 text-gray-900 dark:text-white\">$1</h3>')\r\n      .replace(/^## (.*$)/gim, '<h2 class=\"text-xl font-semibold mt-4 mb-2 text-gray-900 dark:text-white\">$1</h2>')\r\n      .replace(/^# (.*$)/gim, '<h1 class=\"text-2xl font-bold mt-4 mb-2 text-gray-900 dark:text-white\">$1</h1>')\r\n      // 볼드\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong class=\"font-bold\">$1</strong>')\r\n      // 이탤릭\r\n      .replace(/\\*(.*?)\\*/g, '<em class=\"italic\">$1</em>')\r\n      // 밑줄\r\n      .replace(/__(.*?)__/g, '<u class=\"underline\">$1</u>')\r\n      // 인라인 코드 추가\r\n      .replace(/`(.*?)`/g, '<code class=\"bg-gray-200 dark:bg-gray-600 text-red-600 dark:text-red-400 px-1 rounded text-sm\">$1</code>')\r\n      // 토글\r\n      .replace(/^▶ (.*$)/gim, '<div class=\"flex items-center mt-2 mb-1\"><span class=\"mr-2\">▶</span><span class=\"font-medium text-gray-900 dark:text-white\">$1</span></div>')\r\n      // 불릿 리스트\r\n      .replace(/^[\\s]*[-*+]\\s(.*$)/gim, '<div class=\"ml-4 mb-1\"><span class=\"mr-2\">•</span>$1</div>')\r\n      // 숫자 리스트\r\n      .replace(/^[\\s]*\\d+\\.\\s(.*$)/gim, '<div class=\"ml-4 mb-1\"><span class=\"mr-2\">1.</span>$1</div>')\r\n      // 코드 블록\r\n      .replace(/```(.*?)\\n([\\s\\S]*?)\\n```/gim, (_match, p1, p2) => {\r\n        const lang = p1 ? `language-${p1.trim()}` : ''\r\n        return `<pre class=\"bg-gray-800 p-3 rounded-lg overflow-x-auto my-3\"><code class=\"${lang} text-sm text-gray-100\">${p2.trim()}</code></pre>`\r\n      })\r\n      // 줄바꿈\r\n      .replace(/\\n/g, '<br>')\r\n  }\r\n\r\n  return (\r\n    <div className={`border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 ${className}`}>\r\n      {/* 툴바 */}\r\n      <div className=\"flex items-center gap-1 p-2 border-b border-gray-200 dark:border-gray-600 bg-gray-50 dark:bg-gray-800 rounded-t-lg\">\r\n        {/* 제목 버튼들 */}\r\n        <div className=\"flex items-center gap-1 mr-2\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => applyHeading(1)}\r\n            className=\"px-2 py-1 text-xs font-bold text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\r\n            title=\"제목 1\"\r\n          >\r\n            H1\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => applyHeading(2)}\r\n            className=\"px-2 py-1 text-xs font-semibold text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\r\n            title=\"제목 2\"\r\n          >\r\n            H2\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => applyHeading(3)}\r\n            className=\"px-2 py-1 text-xs font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\r\n            title=\"제목 3\"\r\n          >\r\n            H3\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"w-px h-4 bg-gray-300 dark:bg-gray-600\"></div>\r\n\r\n        {/* 텍스트 스타일 */}\r\n        <div className=\"flex items-center gap-1 mx-2\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => applyTextStyle('bold')}\r\n            className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\r\n            title=\"굵게\"\r\n          >\r\n            <FaBold className=\"text-xs\" />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => applyTextStyle('italic')}\r\n            className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\r\n            title=\"기울임\"\r\n          >\r\n            <FaItalic className=\"text-xs\" />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => applyTextStyle('underline')}\r\n            className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\r\n            title=\"밑줄\"\r\n          >\r\n            <FaUnderline className=\"text-xs\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"w-px h-4 bg-gray-300 dark:bg-gray-600\"></div>\r\n\r\n        {/* 리스트 */}\r\n        <div className=\"flex items-center gap-1 mx-2\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => applyListStyle('bullet')}\r\n            className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\r\n            title=\"불릿 리스트\"\r\n          >\r\n            <FaListUl className=\"text-xs\" />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => applyListStyle('number')}\r\n            className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\r\n            title=\"번호 리스트\"\r\n          >\r\n            <FaListOl className=\"text-xs\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"w-px h-4 bg-gray-300 dark:bg-gray-600\"></div>\r\n\r\n        {/* 들여쓰기 */}\r\n        <div className=\"flex items-center gap-1 mx-2\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => adjustIndent('out')}\r\n            className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\r\n            title=\"내어쓰기\"\r\n          >\r\n            <FaOutdent className=\"text-xs\" />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => adjustIndent('in')}\r\n            className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\r\n            title=\"들여쓰기\"\r\n          >\r\n            <FaIndent className=\"text-xs\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"w-px h-4 bg-gray-300 dark:bg-gray-600\"></div>\r\n\r\n        {/* 토글 및 코드 블록 */}\r\n        <button\r\n          type=\"button\"\r\n          onClick={insertToggle}\r\n          className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors mx-2\"\r\n          title=\"토글 블록\"\r\n        >\r\n          <FaChevronDown className=\"text-xs\" />\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          onClick={insertCodeBlock}\r\n          className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\r\n          title=\"코드 블록\"\r\n        >\r\n          <MdCode className=\"text-sm\" />\r\n        </button>\r\n      </div>\r\n\r\n      {/* 편집 영역 */}\r\n      <div className=\"relative\">\r\n        <textarea\r\n          ref={textareaRef}\r\n          value={value}\r\n          onChange={(e) => onChange(e.target.value)}\r\n          onSelect={updateCursorPosition}\r\n          onKeyUp={updateCursorPosition}\r\n          onMouseUp={updateCursorPosition}\r\n          placeholder={placeholder}\r\n          rows={rows}\r\n          className=\"w-full p-3 bg-transparent text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none resize-y\"\r\n        />\r\n        \r\n        {/* 미리보기 영역 (선택사항) */}\r\n        {value && (\r\n          <div className=\"absolute inset-0 pointer-events-none opacity-0\">\r\n            <div \r\n              className=\"p-3 text-gray-900 dark:text-white whitespace-pre-wrap\"\r\n              dangerouslySetInnerHTML={{ __html: renderMarkdown(value) }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RichTextEditor\r\n","import React, { useMemo } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { FaEdit, FaTrash, FaTag } from 'react-icons/fa'\r\nimport { Link } from 'react-router-dom'\r\nimport { Learning, Skill } from '../../types'\r\nimport { formatDate, formatRelativeDate } from '../../utils/dateUtils'\r\nimport { parseMarkdown, getFormattedReadingTime } from '../../utils/textUtils'\r\nimport RichTextEditor from '../RichTextEditor'\r\n\r\n// 🌟 BookDetail.tsx에서 전달받는 Skill Map의 값 타입\r\ninterface SkillWithLevel extends Skill {\r\n  levelText: string\r\n}\r\n\r\ninterface LearningItemProps {\r\n  learning: Learning\r\n  index: number\r\n  isAuthenticated: boolean\r\n  isEditing: boolean\r\n  currentFormData: { topic: string; content: string }\r\n  setCurrentFormData: React.Dispatch<React.SetStateAction<{ topic: string; content: string }>>\r\n  onStartEdit: (learning: Learning, chapterId?: string) => void\r\n  onSaveEdit: () => void\r\n  onCancelEdit: () => void\r\n  onDelete: (learningId: string, chapterId?: string) => void\r\n  isSaving?: boolean\r\n  // 🌟 NEW PROP 1: 전체 스킬 목록 맵 (ID로 스킬 정보를 찾는 용도)\r\n  allSkillsMap?: Map<string, SkillWithLevel>\r\n  // 🌟 NEW PROP 2: 스킬 연결/해제 핸들러 (useLearningManager에 구현 필요)\r\n  onSkillLinkChange?: (learningId: string, skillId: string, isLinked: boolean) => void\r\n  // 🌟 NEW PROP 3: 목차 ID (목차 기반 학습 내용인 경우)\r\n  chapterId?: string\r\n}\r\n\r\n/**\r\n * 개별 학습 내용 아이템 컴포넌트\r\n * 학습 내용의 표시, 수정, 삭제 기능을 제공합니다.\r\n */\r\nconst LearningItem: React.FC<LearningItemProps> = ({\r\n  learning,\r\n  index,\r\n  isAuthenticated,\r\n  isEditing,\r\n  currentFormData,\r\n  setCurrentFormData,\r\n  onStartEdit,\r\n  onSaveEdit,\r\n  onCancelEdit,\r\n  onDelete,\r\n  isSaving = false,\r\n  allSkillsMap,\r\n  onSkillLinkChange,\r\n  chapterId,\r\n}) => {\r\n  \r\n  // 🌟 1. 현재 학습 내용에 연결된 스킬 목록 추출 (기본 보기용)\r\n  const linkedSkills = useMemo(() => {\r\n    if (!allSkillsMap) return []\r\n    return (learning.skillIds || [])\r\n      .map(skillId => allSkillsMap.get(skillId))\r\n      .filter((skill): skill is SkillWithLevel => !!skill)\r\n  }, [learning.skillIds, allSkillsMap])\r\n  \r\n  // 🌟 2. 관리자 수정 모드에서 스킬 연결/해제 토글 핸들러\r\n  const handleSkillToggle = (skillId: string) => {\r\n    if (!onSkillLinkChange) return\r\n    const isLinked = learning.skillIds?.includes(skillId) || false\r\n    // 부모 컴포넌트(BookDetail)의 핸들러를 호출하여 LearningManager를 통해 상태 업데이트\r\n    onSkillLinkChange(learning._id, skillId, !isLinked)\r\n  }\r\n\r\n  // 🌟 3. 편집 모드에서 사용할 수 있는 전체 스킬 목록 (Map의 값을 배열로 변환)\r\n  const availableSkills = useMemo(() => {\r\n    if (!allSkillsMap) return []\r\n    return Array.from(allSkillsMap.values())\r\n  }, [allSkillsMap])\r\n\r\n  // 🌟 4. 색상을 동적으로 적용하는 스타일 생성 함수 (배지용)\r\n  const getBadgeStyle = (colorCode: string) => {\r\n    // 배경색에 10%의 투명도를 적용하여 은은하게 표시\r\n    const bgColor = `${colorCode}1A`\r\n    const textColor = colorCode\r\n    \r\n    return {\r\n      backgroundColor: bgColor,\r\n      color: textColor,\r\n    } as React.CSSProperties\r\n  }\r\n  \r\n  // 🌟 5. 색상을 동적으로 적용하는 스타일 생성 함수 (버튼용)\r\n  const getButtonStyle = (colorCode: string) => {\r\n    return {\r\n      backgroundColor: colorCode,\r\n      color: '#FFFFFF',\r\n    } as React.CSSProperties\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ delay: 0.1 * index }}\r\n      className={`card p-6 ${isEditing ? 'border-2 border-primary-500 shadow-xl' : ''}`}\r\n    >\r\n      {isEditing ? (\r\n        // 🌟 [수정 폼 렌더링]\r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <label htmlFor=\"topic\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              학습 주제\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"topic\"\r\n              value={currentFormData.topic}\r\n              onChange={(e) => setCurrentFormData(prev => ({ ...prev, topic: e.target.value }))}\r\n              placeholder=\"학습 주제를 입력하세요\"\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"content\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              학습 내용\r\n            </label>\r\n            <RichTextEditor\r\n              value={currentFormData.content}\r\n              onChange={(value) => setCurrentFormData(prev => ({ ...prev, content: value }))}\r\n              placeholder=\"학습 내용을 입력하세요. 리치텍스트 에디터를 사용하여 다양한 서식을 적용할 수 있습니다.\"\r\n              rows={8}\r\n              className=\"min-h-[200px]\"\r\n            />\r\n          </div>\r\n\r\n          {/* 🌟 [추가] 스킬 연결 섹션 (관리자용) */}\r\n          {isAuthenticated && allSkillsMap && availableSkills.length > 0 && (\r\n            <div className=\"pt-4 border-t border-gray-200 dark:border-gray-700\">\r\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3 flex items-center gap-2\">\r\n                <FaTag size={14} className=\"text-primary-600\" /> 관련 스킬 연결 ({learning.skillIds?.length || 0}개 연결됨)\r\n              </label>\r\n              {/* 스킬 선택 버튼 목록 */}\r\n              <div className=\"flex flex-wrap gap-2 max-h-40 overflow-y-auto p-2 rounded-lg bg-gray-50 dark:bg-gray-700/50\">\r\n                {availableSkills.map(skill => {\r\n                  const isLinked = learning.skillIds?.includes(skill._id!)\r\n                  // 🌟 동적 스타일 적용\r\n                  const dynamicStyle = skill.color && isLinked ? getButtonStyle(skill.color) : undefined\r\n\r\n                  return (\r\n                    <button\r\n                      key={skill._id}\r\n                      onClick={() => handleSkillToggle(skill._id!)}\r\n                      type=\"button\"\r\n                      className={`px-3 py-1 text-xs font-medium rounded-full transition-all ${\r\n                        isLinked\r\n                          ? 'text-white hover:opacity-80'\r\n                          : 'bg-gray-200 text-gray-700 dark:bg-gray-600 dark:text-gray-200 hover:bg-gray-300 dark:hover:bg-gray-500'\r\n                      }`}\r\n                      style={dynamicStyle}\r\n                    >\r\n                      {isLinked ? '✔️' : '➕'} {skill.name}\r\n                    </button>\r\n                  )\r\n                })}\r\n              </div>\r\n            </div>\r\n          )}\r\n          {/* 🌟 스킬 연결 섹션 끝 */}\r\n\r\n          <div className=\"flex gap-3 pt-4\">\r\n            <button\r\n              onClick={() => onSaveEdit()}\r\n              disabled={isSaving || !currentFormData.topic.trim() || !currentFormData.content.trim()}\r\n              className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors flex items-center justify-center gap-2\"\r\n            >\r\n              {isSaving ? '저장 중...' : '수정'}\r\n            </button>\r\n            <button\r\n              onClick={onCancelEdit}\r\n              className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\r\n            >\r\n              취소\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        // 🌟 [기본 보기 렌더링]\r\n        <>\r\n          <div className=\"flex items-start justify-between mb-3\">\r\n            <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n              {learning.topic}\r\n            </h3>\r\n            {isAuthenticated && (\r\n              <div className=\"flex gap-1\">\r\n                <button\r\n                  onClick={() => onStartEdit(learning, chapterId)}\r\n                  className=\"p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 text-blue-600 dark:text-blue-400\"\r\n                  aria-label=\"수정\"\r\n                >\r\n                  <FaEdit size={16} />\r\n                </button>\r\n                <button\r\n                  onClick={() => onDelete(learning._id, chapterId)}\r\n                  className=\"p-2 rounded-lg hover:bg-red-100 dark:hover:bg-red-900/30 text-red-600 dark:text-red-400\"\r\n                  aria-label=\"삭제\"\r\n                >\r\n                  <FaTrash size={16} />\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          {/* 🌟 [추가] 연결된 스킬 배지 목록 (기본 보기) */}\r\n          {linkedSkills.length > 0 && (\r\n            <div className=\"flex flex-wrap items-start gap-2 mb-4\">\r\n              <FaTag size={16} className=\"text-gray-500 dark:text-gray-400 mt-1 shrink-0\" title=\"관련 스킬\" />\r\n              {linkedSkills.map(skill => {\r\n                // 🌟 동적 스타일 적용\r\n                const badgeStyle = skill.color ? getBadgeStyle(skill.color) : undefined\r\n\r\n                return (\r\n                  <Link\r\n                    key={skill._id}\r\n                    to={`/projects?skillId=${skill._id}`}\r\n                    title={`${skill.name} 스킬이 사용된 프로젝트 보기`}\r\n                    className=\"inline-flex items-center px-3 py-1 rounded-full text-xs font-medium transition-all hover:opacity-80 hover:ring-2\"\r\n                    style={{\r\n                      ...badgeStyle,\r\n                      '--tw-ring-color': skill.color || '#3B82F6',\r\n                    } as React.CSSProperties}\r\n                  >\r\n                    {skill.name}\r\n                  </Link>\r\n                )\r\n              })}\r\n            </div>\r\n          )}\r\n          {/* 🌟 연결된 스킬 배지 목록 끝 */}\r\n\r\n          <div \r\n            className=\"text-gray-600 dark:text-gray-300 leading-relaxed prose prose-sm max-w-none dark:prose-invert\"\r\n            dangerouslySetInnerHTML={{ __html: parseMarkdown(learning.content) }}\r\n          />\r\n          <div className=\"mt-4 text-sm text-gray-500 dark:text-gray-500\">\r\n            작성일: {formatDate(learning.createdAt)} ({formatRelativeDate(learning.createdAt)}) • {getFormattedReadingTime(learning.content)}\r\n          </div>\r\n        </>\r\n      )}\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default LearningItem\r\n","import React, { useMemo, useState } from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport { useParams, Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport { FaArrowLeft, FaBook, FaStar, FaCalendar, FaEdit, FaTrash, FaPlus, FaChevronRight, FaCubes } from 'react-icons/fa'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { formatDate } from '../utils/dateUtils'\r\nimport { Chapter, Skill } from '../types'\r\nimport { useBook, useDeleteBook } from '../hooks/useBooks'\r\nimport { useLearningManager } from '../hooks/useLearningManager'\r\n// 목차 관리 관련 import 제거됨 - 중복 출력 문제 해결\r\nimport LearningItem from './common/LearningItem'\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { chaptersAPI } from '../services/api'\r\nimport { useSkills } from '../hooks/useSkills'\r\nimport RichTextEditor from './RichTextEditor'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { getLocalizedField } from '@/utils/i18nUtils'\r\n\r\nconst BookDetail: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  const { isAuthenticated } = useAuth()\r\n  const { i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  \r\n  // 🌟 React Query로 서적 데이터 조회\r\n  const { data: book, isLoading: loading, isError, error } = useBook(id)\r\n  \r\n  // 🌟 React Query로 목차 데이터 조회\r\n  const { data: bookChapters = [] } = useQuery<Chapter[], Error>({\r\n    queryKey: ['chapters', id],\r\n    queryFn: async () => {\r\n      if (!id) return []\r\n      const response = await chaptersAPI.getByBook(id)\r\n      return response.data?.data || response.data || []\r\n    },\r\n    enabled: !!id,\r\n    staleTime: 5 * 60 * 1000,\r\n  })\r\n  \r\n  // 🌟 스킬 목록 가져오기\r\n  const { skillCategories } = useSkills()\r\n  \r\n  // 🌟 React Query로 서적 삭제\r\n  const deleteMutation = useDeleteBook()\r\n  \r\n  const bookApiError = isError ? (error?.message || '서적 정보를 불러오는 데 실패했습니다.') : null\r\n\r\n  // 목차 관리 관련 상태 제거됨 - 중복 출력 문제 해결\r\n\r\n  // 💡 커스텀 훅 사용: 학습 내용 상태와 핸들러를 가져옵니다.\r\n  const {\r\n    editingLearningId,\r\n    currentFormData,\r\n    setCurrentFormData,\r\n    showAddForm,\r\n    isSaving,\r\n    learningApiError,\r\n    handleToggleAddForm,\r\n    handleAddLearning,\r\n    handleDeleteLearning,\r\n    handleStartEdit,\r\n    handleSaveEdit,\r\n    handleCancelEdit,\r\n    handleSkillLinkChange,  // 🌟 스킬 연결 핸들러 추가\r\n  } = useLearningManager(id!)\r\n  \r\n  // 🌟 확장 상태 관리 (아코디언 UI)\r\n  const [expandedChapterId, setExpandedChapterId] = useState<string | null>(null)\r\n  \r\n  // 챕터 확장/축소 토글 함수\r\n  const toggleChapter = (chapterId: string) => {\r\n    setExpandedChapterId(prevId => (prevId === chapterId ? null : chapterId))\r\n  }\r\n\r\n  // =================================================================\r\n  // 📚 스킬 데이터 처리 로직 (useMemo로 최적화)\r\n  // =================================================================\r\n\r\n  // 🌟 전체 책에 연결된 스킬 목록 필터링 및 가공\r\n  const linkedBookSkills = useMemo<Array<Skill & { levelText: string }>>(() => {\r\n    if (!bookChapters || !skillCategories) return []\r\n\r\n    const allSkills = skillCategories.flatMap(category => category.skills || [])\r\n    \r\n    // 1. 모든 챕터의 모든 학습 내용에서 고유한 skillIds를 추출\r\n    const uniqueSkillIds = new Set<string>()\r\n    bookChapters.forEach(chapter => {\r\n      (chapter.learnings || []).forEach(learning => {\r\n        // 학습 내용에 skillIds 필드가 있다고 가정\r\n        (learning.skillIds || []).forEach((skillId: string) => {\r\n          uniqueSkillIds.add(skillId)\r\n        })\r\n      })\r\n    })\r\n    \r\n    if (uniqueSkillIds.size === 0) return []\r\n\r\n    // 2. Skills.tsx의 레벨 텍스트 로직 재사용\r\n    const getLevelText = (level: number) => {\r\n      if (level >= 90) return 'Expert'\r\n      if (level >= 70) return 'Proficient'\r\n      if (level >= 50) return 'Competent'\r\n      return 'Basic'\r\n    }\r\n\r\n    // 3. 필터링 및 가공\r\n    return allSkills\r\n      .filter(skill => skill._id && uniqueSkillIds.has(skill._id))\r\n      .map(skill => ({\r\n        ...skill,\r\n        levelText: getLevelText(skill.level || 0),\r\n      }))\r\n  }, [bookChapters, skillCategories])\r\n\r\n  // 🌟 개별 학습 내용에서 스킬 ID를 객체로 변환하기 위한 Map\r\n  const allSkillsMap = useMemo(() => {\r\n    const map = new Map<string, Skill & { levelText: string }>()\r\n    linkedBookSkills.forEach(skill => skill._id && map.set(skill._id, skill))\r\n    return map\r\n  }, [linkedBookSkills])\r\n\r\n  // 🌟 색상을 동적으로 적용하는 스타일 생성 함수 (배지용)\r\n  const getBadgeStyle = (colorCode: string) => {\r\n    // 배경색에 15%의 투명도를 적용하여 은은하게 표시\r\n    const bgColor = `${colorCode}26`\r\n    const textColor = colorCode\r\n    \r\n    return {\r\n      backgroundColor: bgColor,\r\n      color: textColor,\r\n    } as React.CSSProperties\r\n  }\r\n\r\n  // =================================================================\r\n  // 📚 서적 삭제 핸들러\r\n  // =================================================================\r\n\r\n  // 🌟 React Query Mutation을 사용한 서적 삭제\r\n  const handleDeleteBook = async () => {\r\n    if (!confirm('이 서적을 삭제하시겠습니까? 관련 학습 내용도 모두 사라집니다.')) return\r\n\r\n    try {\r\n      await deleteMutation.mutateAsync(id!)\r\n      navigate('/books')\r\n    } catch (error) {\r\n      console.error('Failed to delete book:', error)\r\n    }\r\n  }\r\n  \r\n  const isDeleting = deleteMutation.isPending\r\n\r\n  // 목차 관리 핸들러들 제거됨 - 중복 출력 문제 해결\r\n\r\n  // 💡 기존의 학습 내용 핸들러들은 useLearningManager 훅으로 이동하여 삭제됨\r\n\r\n  // 학습 내용 정렬 (useMemo 사용으로 성능 최적화)\r\n  const sortedLearnings = useMemo(() => {\r\n    if (!book?.learnings) return []\r\n    \r\n    return [...book.learnings].sort((a, b) => {\r\n      // 최신순(내림차순) 정렬\r\n      return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\r\n    })\r\n  }, [book?.learnings])\r\n\r\n  // =================================================================\r\n  // ⚙️ 렌더링 및 로딩/에러 처리\r\n  // =================================================================\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (!book) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <FaBook className=\"text-6xl text-gray-400 mx-auto mb-4\" />\r\n          <p className=\"text-xl text-gray-600 dark:text-gray-400\">서적을 찾을 수 없습니다</p>\r\n          <Link \r\n            to=\"/books\" \r\n            state={location.state}\r\n            className=\"text-primary-600 hover:text-primary-700 mt-4 inline-block\"\r\n          >\r\n            목록으로 돌아가기\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // 별점 렌더링 함수\r\n  const renderRatingStars = (rating: number) => {\r\n    return Array.from({ length: 5 }, (_, i) => (\r\n      <FaStar \r\n        key={i} \r\n        className={i < rating ? 'text-yellow-500' : 'text-gray-300 dark:text-gray-600'} \r\n      />\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <section className=\"section-padding bg-white dark:bg-dark-900 min-h-screen\">\r\n      <div className=\"max-w-5xl mx-auto\">\r\n        {/* 에러 메시지: bookApiError와 learningApiError를 모두 표시 */}\r\n        {(bookApiError || learningApiError) && (\r\n          <motion.div \r\n            initial={{ opacity: 0, y: -20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            className=\"p-4 mb-4 text-sm text-red-800 rounded-lg bg-red-50 dark:bg-dark-800 dark:text-red-400\" \r\n            role=\"alert\"\r\n          >\r\n            {bookApiError || learningApiError}\r\n          </motion.div>\r\n        )}\r\n\r\n        {/* Header */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"mb-8\"\r\n        >\r\n          <Link\r\n            to=\"/books\"\r\n            state={location.state}\r\n            className=\"inline-flex items-center gap-2 text-primary-600 hover:text-primary-700 mb-6\"\r\n          >\r\n            <FaArrowLeft /> 목록으로 돌아가기\r\n          </Link>\r\n        </motion.div>\r\n\r\n        {/* Book Info */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"card p-8 mb-8\"\r\n        >\r\n          <div className=\"grid md:grid-cols-3 gap-8\">\r\n            <div>\r\n              {book.coverImage ? (\r\n                <img\r\n                  src={book.coverImage}\r\n                  alt={book.title}\r\n                  className=\"w-full h-auto object-cover rounded-lg shadow-lg\"\r\n                  loading=\"eager\"\r\n                  decoding=\"async\"\r\n                  width=\"400\"\r\n                  height=\"533\"\r\n                />\r\n              ) : (\r\n                <div className=\"w-full aspect-[3/4] bg-gradient-to-br from-primary-400 to-blue-500 rounded-lg flex items-center justify-center\">\r\n                  <FaBook className=\"text-white text-6xl\" />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"md:col-span-2\">\r\n              <div className=\"flex items-start justify-between mb-4\">\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {/* 카테고리 배지 (복수 표시) */}\r\n                  {book.categoryIds && book.categoryIds.length > 0 ? (\r\n                    (book.categoryIds as any[]).map((catIdOrObj: any) => {\r\n                      const catName = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?.name\r\n                      return catName ? (\r\n                        <span \r\n                          key={typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id}\r\n                          className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\"\r\n                        >\r\n                          {catName}\r\n                        </span>\r\n                      ) : null\r\n                    })\r\n                  ) : (\r\n                    // 호환성: categoryIds가 없으면 기존 category 표시\r\n                    book.category && (\r\n                      <span className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\">\r\n                        {book.category}\r\n                      </span>\r\n                    )\r\n                  )}\r\n                </div>\r\n                {isAuthenticated && (\r\n                  <div className=\"flex gap-2\">\r\n                    <Link\r\n                      to={`/admin`}\r\n                      state={{ tab: 'books', editId: book._id }}\r\n                      className=\"p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 text-blue-600 dark:text-blue-400\"\r\n                      aria-label=\"서적 수정\"\r\n                    >\r\n                      <FaEdit />\r\n                    </Link>\r\n                    <button\r\n                      onClick={handleDeleteBook}\r\n                      disabled={isDeleting}\r\n                      className={`p-2 rounded-lg text-red-600 dark:text-red-400 transition-colors ${\r\n                        isDeleting \r\n                          ? 'opacity-50 cursor-not-allowed' \r\n                          : 'hover:bg-gray-100 dark:hover:bg-gray-700'\r\n                      }`}\r\n                      aria-label=\"서적 삭제\"\r\n                    >\r\n                      {isDeleting ? (\r\n                        <div className=\"w-4 h-4 border-2 border-red-600 border-t-transparent rounded-full animate-spin\" />\r\n                      ) : (\r\n                        <FaTrash />\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-2\">\r\n                {getLocalizedField(currentLang, book.title, book.titleEn, book.titleJa)}\r\n              </h1>\r\n              <p className=\"text-xl text-gray-600 dark:text-gray-400 mb-6\">\r\n                {getLocalizedField(currentLang, book.author, book.authorEn, book.authorJa)}\r\n              </p>\r\n              <div className=\"flex flex-wrap gap-6 text-gray-600 dark:text-gray-400\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  {renderRatingStars(book.rating)}\r\n                  <span className=\"font-medium ml-1\">{book.rating}/5</span>\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <FaCalendar />\r\n                  <span>읽은 날짜: {formatDate(book.readDate)}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n\r\n        {/* 🌟 이 책을 통해 학습한 핵심 스킬 섹션 */}\r\n        {linkedBookSkills.length > 0 && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ delay: 0.1 }}\r\n            className=\"card p-6 mb-8\"\r\n          >\r\n            <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4 flex items-center gap-2\">\r\n              <FaCubes className=\"text-primary-600\" /> 이 책을 통해 학습한 핵심 스킬\r\n            </h3>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {linkedBookSkills.map(skill => {\r\n                // 🌟 동적 스타일 적용\r\n                const badgeStyle = skill.color ? getBadgeStyle(skill.color) : undefined\r\n\r\n                return (\r\n                  <Link\r\n                    key={skill._id}\r\n                    to={`/projects?skillId=${skill._id}`}\r\n                    title={`${skill.name} 스킬이 사용된 모든 프로젝트 보기`}\r\n                    className=\"inline-flex items-center px-3 py-1 rounded-lg text-sm font-medium hover:ring-2 transition-all hover:opacity-80\"\r\n                    style={{\r\n                      ...badgeStyle,\r\n                      '--tw-ring-color': skill.color || '#3B82F6',\r\n                    } as React.CSSProperties}\r\n                  >\r\n                    {skill.name}\r\n                    <span \r\n                      className=\"ml-1 text-xs font-semibold\"\r\n                      style={{ color: skill.color || '#3B82F6' }}\r\n                    >\r\n                      [{skill.levelText}]\r\n                    </span>\r\n                  </Link>\r\n                )\r\n              })}\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n\r\n        {/* Learnings Section */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.2 }}\r\n        >\r\n          <div className=\"flex items-center justify-between mb-6\">\r\n            <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n              학습 내용\r\n            </h2>\r\n            {isAuthenticated && (!bookChapters || bookChapters.length === 0) && (\r\n              <button\r\n                onClick={handleToggleAddForm}\r\n                className=\"flex items-center gap-2 bg-primary-600 hover:bg-primary-700 text-white font-medium px-4 py-2 rounded-lg transition-colors\"\r\n              >\r\n                <FaPlus /> {showAddForm ? '추가 취소' : '새 내용 추가'}\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          {/* Add Learning Form */}\r\n          <AnimatePresence>\r\n            {showAddForm && (\r\n              <motion.div\r\n                initial={{ opacity: 0, height: 0 }}\r\n                animate={{ opacity: 1, height: 'auto' }}\r\n                exit={{ opacity: 0, height: 0 }}\r\n                className=\"card p-6 mb-6 overflow-hidden\"\r\n              >\r\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n                  새 학습 내용 추가\r\n                </h3>\r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <label htmlFor=\"topic\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                      학습 주제\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"topic\"\r\n                      value={currentFormData.topic}\r\n                      onChange={(e) => setCurrentFormData(prev => ({ ...prev, topic: e.target.value }))}\r\n                      placeholder=\"학습 주제를 입력하세요\"\r\n                      className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor=\"content\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                      학습 내용\r\n                    </label>\r\n                    <RichTextEditor\r\n                      value={currentFormData.content}\r\n                      onChange={(value) => setCurrentFormData(prev => ({ ...prev, content: value }))}\r\n                      placeholder=\"학습 내용을 입력하세요. 리치텍스트 에디터를 사용하여 다양한 서식을 적용할 수 있습니다.\"\r\n                      rows={8}\r\n                      className=\"min-h-[200px]\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"flex gap-3 pt-4\">\r\n                    <button\r\n                      onClick={handleAddLearning}\r\n                      disabled={isSaving || !currentFormData.topic.trim() || !currentFormData.content.trim()}\r\n                      className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors flex items-center justify-center gap-2\"\r\n                    >\r\n                      {isSaving ? '저장 중...' : '추가'}\r\n                    </button>\r\n                    <button\r\n                      onClick={handleToggleAddForm}\r\n                      className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\r\n                    >\r\n                      취소\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            )}\r\n          </AnimatePresence>\r\n\r\n          {/* 학습 내용 리스트 - 아코디언 버전 */}\r\n          {(() => {\r\n            // 목차 기반 학습 내용이 있는 경우\r\n            if (bookChapters && bookChapters.length > 0) {\r\n              return (\r\n                <div className=\"space-y-4\">\r\n                  {bookChapters.map((chapter) => {\r\n                    // 🌟 현재 챕터가 확장되었는지 확인\r\n                    const isExpanded = expandedChapterId === chapter._id\r\n                    \r\n                    return (\r\n                      <div key={chapter._id} className=\"card p-6 border border-gray-200 dark:border-gray-700\">\r\n                        \r\n                        {/* 🌟 챕터 제목 (클릭 가능한 아코디언 헤더) */}\r\n                        <div \r\n                          className=\"flex items-center justify-between cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-800 -m-6 p-6 rounded-lg transition-colors\"\r\n                          onClick={() => toggleChapter(chapter._id!)}\r\n                        >\r\n                          <h3 className=\"text-xl font-bold text-gray-900 dark:text-white flex-1\">\r\n                            {chapter.title}\r\n                            <span className=\"ml-3 text-sm font-normal text-gray-500 dark:text-gray-400\">\r\n                              ({(chapter.learnings || []).length}개의 학습 내용)\r\n                            </span>\r\n                          </h3>\r\n                          {/* 🌟 확장/축소 아이콘 */}\r\n                          <motion.span\r\n                            animate={{ rotate: isExpanded ? 90 : 0 }}\r\n                            transition={{ duration: 0.3 }}\r\n                            className=\"text-primary-600 dark:text-primary-400 text-xl ml-4\"\r\n                          >\r\n                            <FaChevronRight />\r\n                          </motion.span>\r\n                        </div>\r\n\r\n                        {/* 🌟 학습 내용 (아코디언 바디) */}\r\n                        <AnimatePresence>\r\n                          {isExpanded && (\r\n                            <motion.div\r\n                              initial={{ opacity: 0, height: 0 }}\r\n                              animate={{ opacity: 1, height: 'auto' }}\r\n                              exit={{ opacity: 0, height: 0 }}\r\n                              transition={{ duration: 0.3, ease: \"easeInOut\" }}\r\n                              className=\"overflow-hidden\"\r\n                            >\r\n                              <div className=\"space-y-6 pt-6 mt-6 border-t border-gray-200 dark:border-gray-700\">\r\n                                {(chapter.learnings || []).map((learning, index: number) => (\r\n                                  <LearningItem \r\n                                    key={learning._id}\r\n                                    learning={learning}\r\n                                    index={index}\r\n                                    isAuthenticated={isAuthenticated}\r\n                                    isEditing={editingLearningId === learning._id}\r\n                                    currentFormData={currentFormData}\r\n                                    setCurrentFormData={setCurrentFormData}\r\n                                    onStartEdit={handleStartEdit}\r\n                                    onSaveEdit={handleSaveEdit}\r\n                                    onCancelEdit={handleCancelEdit}\r\n                                    onDelete={handleDeleteLearning}\r\n                                    isSaving={isSaving}\r\n                                    allSkillsMap={allSkillsMap}  // 🌟 스킬 맵 전달\r\n                                    onSkillLinkChange={handleSkillLinkChange}  // 🌟 스킬 연결 핸들러 전달\r\n                                    chapterId={chapter._id}  // 🌟 목차 ID 전달\r\n                                  />\r\n                                ))}\r\n                                {(!chapter.learnings || chapter.learnings.length === 0) && (\r\n                                  <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\r\n                                    이 목차에는 아직 학습 내용이 없습니다.\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            </motion.div>\r\n                          )}\r\n                        </AnimatePresence>\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n              )\r\n            }\r\n            // 기존 학습 내용이 있는 경우\r\n            else if (sortedLearnings.length > 0) {\r\n              return (\r\n                <div className=\"space-y-6\">\r\n                  {sortedLearnings.map((learning, index) => (\r\n                    <LearningItem \r\n                      key={learning._id}\r\n                      learning={learning}\r\n                      index={index}\r\n                      isAuthenticated={isAuthenticated}\r\n                      isEditing={editingLearningId === learning._id}\r\n                      currentFormData={currentFormData}\r\n                      setCurrentFormData={setCurrentFormData}\r\n                      onStartEdit={handleStartEdit}\r\n                      onSaveEdit={handleSaveEdit}\r\n                      onCancelEdit={handleCancelEdit}\r\n                      onDelete={handleDeleteLearning}\r\n                      isSaving={isSaving}\r\n                      allSkillsMap={allSkillsMap}  // 🌟 스킬 맵 전달\r\n                      onSkillLinkChange={handleSkillLinkChange}  // 🌟 스킬 연결 핸들러 전달\r\n                    />\r\n                  ))}\r\n                </div>\r\n              )\r\n            }\r\n            // 학습 내용이 없는 경우\r\n            else {\r\n              return (\r\n                <div className=\"card p-12 text-center\">\r\n                  <FaBook className=\"text-6xl text-gray-400 mx-auto mb-4\" />\r\n                  <p className=\"text-xl text-gray-600 dark:text-gray-400\">\r\n                    아직 작성된 학습 내용이 없습니다\r\n                  </p>\r\n                </div>\r\n              )\r\n            }\r\n          })()}\r\n        </motion.div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default BookDetail\r\n\r\n// 💡 LearningForm과 LearningItem 컴포넌트는 별도 파일로 분리됨\r\n","import React, { useState, useMemo, useRef, useEffect } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { useParams, Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport { FaArrowLeft, FaVideo, FaStar, FaCalendar, FaEdit, FaTrash, FaCubes, FaBullseye, FaLightbulb, FaRocket, FaSave, FaTimes } from 'react-icons/fa'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { formatDate } from '../utils/dateUtils'\r\nimport { useVideoLearning, useDeleteVideoLearning, useUpdateVideoLearning } from '../hooks/useVideoLearnings'\r\nimport { useSkills } from '../hooks/useSkills'\r\nimport { extractYouTubeId, parseTimestamps, renderHtmlWithTimestamps } from '../utils/videoUtils'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport RichTextEditor from './RichTextEditor'\r\nimport { useToastHelpers } from '../hooks/useToast'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { getLocalizedField } from '@/utils/i18nUtils'\r\n\r\n// 🌟 유튜브 IFrame Player API 타입 정의\r\ndeclare global {\r\n  interface Window {\r\n    YT: any\r\n    onYouTubeIframeAPIReady: () => void\r\n  }\r\n}\r\n\r\nconst VideoLearningDetail: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  const { isAuthenticated } = useAuth()\r\n  const { i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  \r\n  const { data: video, isLoading: loading, isError, error } = useVideoLearning(id)\r\n  const deleteMutation = useDeleteVideoLearning()\r\n  const updateMutation = useUpdateVideoLearning()\r\n  const { skillCategories } = useSkills()\r\n  const { success, error: toastError } = useToastHelpers()\r\n\r\n  // 🌟 유튜브 플레이어 ref 및 상태\r\n  const playerRef = useRef<any>(null)\r\n  const playerContainerRef = useRef<HTMLDivElement>(null)\r\n  const [isPlayerReady, setIsPlayerReady] = useState(false)\r\n  \r\n  // 🌟 핵심 배움 편집 상태\r\n  const [isEditingKeyTakeaways, setIsEditingKeyTakeaways] = useState(false)\r\n  const [editingContent, setEditingContent] = useState('')\r\n  \r\n  const videoId = useMemo(() => {\r\n    if (video?.videoId) return video.videoId\r\n    // 호환성: videoUrl이 있으면 ID 추출\r\n    if ((video as any)?.videoUrl) return extractYouTubeId((video as any).videoUrl)\r\n    return null\r\n  }, [video])\r\n  \r\n  // 🌟 유튜브 IFrame API 스크립트 로드 및 플레이어 초기화\r\n  useEffect(() => {\r\n    if (!videoId) return\r\n    \r\n    // YouTube IFrame API 스크립트 로드\r\n    if (!window.YT) {\r\n      const tag = document.createElement('script')\r\n      tag.src = 'https://www.youtube.com/iframe_api'\r\n      const firstScriptTag = document.getElementsByTagName('script')[0]\r\n      if (firstScriptTag?.parentNode) {\r\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag)\r\n      }\r\n    }\r\n    \r\n    // API 준비 완료 후 플레이어 초기화\r\n    const initializePlayer = () => {\r\n      if (window.YT && window.YT.Player && playerContainerRef.current) {\r\n        playerRef.current = new window.YT.Player(playerContainerRef.current, {\r\n          videoId: videoId,\r\n          playerVars: {\r\n            enablejsapi: 1,\r\n            origin: window.location.origin,\r\n            rel: 0,  // 🌟 관련 영상 추천 비활성화 (전문성 유지)\r\n            modestbranding: 1,  // 🌟 유튜브 로고 최소화 & '동영상 더보기' 툴팁 제거\r\n            fs: 1,  // 전체 화면 버튼 표시\r\n            cc_load_policy: 0,  // 자막 자동 로드 비활성화\r\n            iv_load_policy: 3,  // 🌟 영상 주석(annotations) 비활성화\r\n            showinfo: 0,  // 🌟 영상 정보 표시 최소화 (구버전 지원)\r\n            controls: 1,  // 컨트롤러 표시\r\n          },\r\n          events: {\r\n            onReady: () => {\r\n              console.log('✅ 유튜브 플레이어 준비 완료')\r\n              setIsPlayerReady(true)\r\n            },\r\n          },\r\n        })\r\n      }\r\n    }\r\n    \r\n    if (window.YT && window.YT.Player) {\r\n      initializePlayer()\r\n    } else {\r\n      window.onYouTubeIframeAPIReady = initializePlayer\r\n    }\r\n    \r\n    // cleanup\r\n    return () => {\r\n      if (playerRef.current && typeof playerRef.current.destroy === 'function') {\r\n        playerRef.current.destroy()\r\n      }\r\n    }\r\n  }, [videoId])\r\n\r\n  // 🌟 연결된 스킬 필터링\r\n  const linkedSkills = useMemo(() => {\r\n    if (!video?.skillIds || !skillCategories) return []\r\n    const allSkills = skillCategories.flatMap(cat => cat.skills || [])\r\n    return allSkills.filter(skill => skill._id && video.skillIds?.includes(skill._id))\r\n  }, [video, skillCategories])\r\n\r\n  // 🌟 타임스탬프 클릭 핸들러 (유튜브 API 사용)\r\n  const handleTimestampClick = (seconds: number) => {\r\n    console.log(`⏰ 타임스탬프 클릭: ${seconds}초로 이동 + 자동 재생`)\r\n    \r\n    if (!playerRef.current || !isPlayerReady) {\r\n      console.warn('⚠️ 플레이어가 아직 준비되지 않았습니다')\r\n      return\r\n    }\r\n    \r\n    try {\r\n      // 1. 해당 시간으로 이동 (allowSeekAhead: true)\r\n      playerRef.current.seekTo(seconds, true)\r\n      \r\n      // 2. 즉시 재생 시작\r\n      playerRef.current.playVideo()\r\n      \r\n      console.log(`✅ ${seconds}초로 이동 후 재생 시작`)\r\n    } catch (error) {\r\n      console.error('플레이어 제어 오류:', error)\r\n    }\r\n  }\r\n\r\n  // 🌟 타임스탬프가 포함된 텍스트 렌더링\r\n  const renderTextWithTimestamps = (text: string) => {\r\n    if (!text) return null\r\n    \r\n    const timestamps = parseTimestamps(text)\r\n    if (timestamps.length === 0) {\r\n      return <ReactMarkdown>{text}</ReactMarkdown>\r\n    }\r\n\r\n    const result: (string | JSX.Element)[] = []\r\n    let lastIndex = 0\r\n\r\n    timestamps.forEach((ts, idx) => {\r\n      // 타임스탬프 이전 텍스트\r\n      if (ts.position > lastIndex) {\r\n        const beforeText = text.substring(lastIndex, ts.position)\r\n        result.push(\r\n          <span key={`text-${idx}`}>\r\n            <ReactMarkdown>{beforeText}</ReactMarkdown>\r\n          </span>\r\n        )\r\n      }\r\n\r\n      // 타임스탬프 버튼\r\n      result.push(\r\n        <button\r\n          key={`ts-${idx}`}\r\n          onClick={() => handleTimestampClick(ts.seconds)}\r\n          className=\"inline-flex items-center px-2 py-1 bg-blue-600 hover:bg-blue-700 text-white rounded font-mono text-xs font-bold transition-colors mx-1\"\r\n          title={`영상 ${ts.text} 위치로 이동`}\r\n        >\r\n          {ts.text}\r\n        </button>\r\n      )\r\n\r\n      lastIndex = ts.position + ts.text.length\r\n    })\r\n\r\n    // 마지막 텍스트\r\n    if (lastIndex < text.length) {\r\n      const afterText = text.substring(lastIndex)\r\n      result.push(\r\n        <span key=\"text-last\">\r\n          <ReactMarkdown>{afterText}</ReactMarkdown>\r\n        </span>\r\n      )\r\n    }\r\n\r\n    return <div className=\"space-y-2\">{result}</div>\r\n  }\r\n\r\n  // 삭제 핸들러\r\n  const handleDeleteVideo = async () => {\r\n    if (!confirm('이 영상 학습 기록을 삭제하시겠습니까?')) return\r\n\r\n    try {\r\n      await deleteMutation.mutateAsync(id!)\r\n      navigate('/video-learnings')\r\n    } catch (error) {\r\n      console.error('Failed to delete video learning:', error)\r\n    }\r\n  }\r\n\r\n  // 🌟 핵심 배움 편집 시작\r\n  const handleStartEdit = () => {\r\n    setIsEditingKeyTakeaways(true)\r\n    setEditingContent(video?.keyTakeaways || '')\r\n  }\r\n\r\n  // 🌟 핵심 배움 편집 취소\r\n  const handleCancelEdit = () => {\r\n    setIsEditingKeyTakeaways(false)\r\n    setEditingContent('')\r\n  }\r\n\r\n  // 🌟 핵심 배움 저장\r\n  const handleSaveEdit = async () => {\r\n    if (!video || !id) return\r\n\r\n    try {\r\n      // 🌟 skillIds와 categoryIds를 문자열 배열로 확실하게 변환\r\n      const skillIds = (video.skillIds || []).map((skillIdOrObj: any) => \r\n        typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj?._id\r\n      ).filter(Boolean)\r\n      \r\n      const categoryIds = (video.categoryIds || []).map((catIdOrObj: any) => \r\n        typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\r\n      ).filter(Boolean)\r\n\r\n      // VideoLearningFormData 타입에 맞게 필요한 필드만 전달\r\n      const updateData = {\r\n        title: video.title,\r\n        videoId: video.videoId,\r\n        category: video.category,\r\n        categoryIds: categoryIds,\r\n        watchDate: video.watchDate,\r\n        purpose: video.purpose,\r\n        keyTakeaways: editingContent,\r\n        application: video.application,\r\n        skillIds: skillIds,\r\n        rating: video.rating,\r\n        order: video.order,\r\n      }\r\n      \r\n      console.log('📤 전송 데이터:', updateData)\r\n      \r\n      await updateMutation.mutateAsync({\r\n        id,\r\n        data: updateData\r\n      })\r\n      success('저장 완료', '핵심 배움이 저장되었습니다.')\r\n      setIsEditingKeyTakeaways(false)\r\n      setEditingContent('')\r\n    } catch (err: any) {\r\n      console.error('핵심 배움 저장 실패:', err)\r\n      console.error('📋 서버 응답 상세:', err.response?.data)\r\n      toastError('저장 실패', err.response?.data?.message || '핵심 배움 저장 중 오류가 발생했습니다.')\r\n    }\r\n  }\r\n  \r\n  const isDeleting = deleteMutation.isPending\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (!video) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <FaVideo className=\"text-6xl text-gray-400 mx-auto mb-4\" />\r\n          <p className=\"text-xl text-gray-600 dark:text-gray-400\">영상 학습 기록을 찾을 수 없습니다</p>\r\n          <Link \r\n            to=\"/video-learnings\" \r\n            state={location.state}\r\n            className=\"text-primary-600 hover:text-primary-700 mt-4 inline-block\"\r\n          >\r\n            목록으로 돌아가기\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <section className=\"min-h-screen bg-white dark:bg-dark-900\">\r\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\r\n        {/* 뒤로가기 버튼 */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"mb-6\"\r\n        >\r\n          <Link\r\n            to=\"/video-learnings\"\r\n            state={location.state}\r\n            className=\"inline-flex items-center gap-2 text-primary-600 hover:text-primary-700\"\r\n          >\r\n            <FaArrowLeft /> 목록으로 돌아가기\r\n          </Link>\r\n        </motion.div>\r\n\r\n        {/* 2단 레이아웃 컨테이너 */}\r\n        <div className=\"flex flex-col lg:flex-row gap-6\">\r\n          \r\n          {/* ========== 왼쪽 영역: 플레이어 + 기본 정보 ========== */}\r\n          <div className=\"w-full lg:w-7/12 lg:sticky lg:top-8 self-start\">\r\n            \r\n            {/* 유튜브 플레이어 */}\r\n            {videoId && (\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                className=\"mb-6\"\r\n              >\r\n                <div className=\"aspect-video rounded-xl overflow-hidden shadow-2xl bg-black relative\">\r\n                  <div \r\n                    ref={playerContainerRef}\r\n                    className=\"w-full h-full\"\r\n                  />\r\n                  {!isPlayerReady && (\r\n                    <div className=\"absolute inset-0 flex items-center justify-center bg-gray-900 bg-opacity-75\">\r\n                      <div className=\"w-12 h-12 border-4 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </motion.div>\r\n            )}\r\n\r\n            {/* 기본 정보 카드 */}\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ delay: 0.1 }}\r\n              className=\"card p-6 mb-6\"\r\n            >\r\n              <div className=\"flex items-start justify-between mb-4\">\r\n                {/* 카테고리 배지 (복수 표시) */}\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {video.categoryIds && video.categoryIds.length > 0 ? (\r\n                    (video.categoryIds as any[]).map((catIdOrObj: any) => {\r\n                      const catName = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?.name\r\n                      return catName ? (\r\n                        <span \r\n                          key={typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id}\r\n                          className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\"\r\n                        >\r\n                          {catName}\r\n                        </span>\r\n                      ) : null\r\n                    })\r\n                  ) : (\r\n                    // 호환성: categoryIds가 없으면 기존 category 표시\r\n                    video.category && (\r\n                      <span className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\">\r\n                        {video.category}\r\n                      </span>\r\n                    )\r\n                  )}\r\n                </div>\r\n                {isAuthenticated && (\r\n                  <div className=\"flex gap-2\">\r\n                    <Link\r\n                      to={`/admin`}\r\n                      state={{ tab: 'videoLearnings', editId: video._id }}\r\n                      className=\"p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 text-blue-600 dark:text-blue-400\"\r\n                      aria-label=\"영상 수정\"\r\n                    >\r\n                      <FaEdit />\r\n                    </Link>\r\n                    <button\r\n                      onClick={handleDeleteVideo}\r\n                      disabled={isDeleting}\r\n                      className={`p-2 rounded-lg text-red-600 dark:text-red-400 transition-colors ${\r\n                        isDeleting \r\n                          ? 'opacity-50 cursor-not-allowed' \r\n                          : 'hover:bg-gray-100 dark:hover:bg-gray-700'\r\n                      }`}\r\n                      aria-label=\"영상 삭제\"\r\n                    >\r\n                      {isDeleting ? (\r\n                        <div className=\"w-4 h-4 border-2 border-red-600 border-t-transparent rounded-full animate-spin\" />\r\n                      ) : (\r\n                        <FaTrash />\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">\r\n                {video.title}\r\n              </h1>\r\n\r\n              <div className=\"flex flex-wrap gap-4 text-sm text-gray-600 dark:text-gray-400\">\r\n                {video.rating && (\r\n                  <div className=\"flex items-center gap-2\">\r\n                    {Array.from({ length: 5 }, (_, i) => (\r\n                      <FaStar \r\n                        key={i} \r\n                        className={`text-sm ${i < video.rating! ? 'text-yellow-500' : 'text-gray-300 dark:text-gray-600'}`} \r\n                      />\r\n                    ))}\r\n                    <span className=\"font-medium\">{video.rating}/5</span>\r\n                  </div>\r\n                )}\r\n                <div className=\"flex items-center gap-2\">\r\n                  <FaCalendar />\r\n                  <span>{formatDate(video.watchDate)}</span>\r\n                </div>\r\n              </div>\r\n            </motion.div>\r\n\r\n            {/* 시청 목적 */}\r\n            {video.purpose && (\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.2 }}\r\n                className=\"card p-6 mb-6\"\r\n              >\r\n                <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-3 flex items-center gap-2\">\r\n                  <FaBullseye className=\"text-blue-600\" /> 시청 목적\r\n                </h3>\r\n                <div className=\"prose dark:prose-invert max-w-none text-gray-700 dark:text-gray-300 text-sm\">\r\n                  <ReactMarkdown>{video.purpose}</ReactMarkdown>\r\n                </div>\r\n              </motion.div>\r\n            )}\r\n\r\n            {/* 통합 적용 계획 */}\r\n            {video.application && (\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.3 }}\r\n                className=\"card p-6 bg-gradient-to-br from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20 border-l-4 border-purple-600\"\r\n              >\r\n                <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-3 flex items-center gap-2\">\r\n                  <FaRocket className=\"text-purple-600\" /> 적용 계획\r\n                </h3>\r\n                <div className=\"prose dark:prose-invert max-w-none text-gray-700 dark:text-gray-300 text-sm\">\r\n                  <ReactMarkdown>{video.application}</ReactMarkdown>\r\n                </div>\r\n              </motion.div>\r\n            )}\r\n          </div>\r\n\r\n          {/* ========== 오른쪽 영역: 학습 기록 ========== */}\r\n          <div className=\"w-full lg:w-5/12 space-y-6\">\r\n\r\n            {/* 연결된 스킬 */}\r\n            {linkedSkills.length > 0 && (\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.2 }}\r\n                className=\"card p-6\"\r\n              >\r\n                <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4 flex items-center gap-2\">\r\n                  <FaCubes className=\"text-primary-600\" /> 학습한 기술\r\n                </h3>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {linkedSkills.map(skill => (\r\n                    <div\r\n                      key={skill._id}\r\n                      className=\"inline-flex items-center px-3 py-1 rounded-lg text-sm font-medium\"\r\n                      style={{\r\n                        backgroundColor: `${skill.color}26`,\r\n                        color: skill.color,\r\n                      }}\r\n                    >\r\n                      {skill.name}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </motion.div>\r\n            )}\r\n\r\n            {/* 핵심 배움 */}\r\n            {(video.keyTakeaways || isAuthenticated) && (\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.3 }}\r\n                className=\"card p-6 bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 border-l-4 border-blue-600\"\r\n              >\r\n                <div className=\"mb-4\">\r\n                  <div className=\"flex items-center justify-between mb-2\">\r\n                    <h3 className=\"text-xl font-bold text-gray-900 dark:text-white flex items-center gap-2\">\r\n                      <FaLightbulb className=\"text-yellow-500\" /> 핵심 배움\r\n                    </h3>\r\n                    {/* 🌟 편집 버튼 - 인증된 사용자에게만 표시 */}\r\n                    {isAuthenticated && !isEditingKeyTakeaways && (\r\n                      <button\r\n                        onClick={handleStartEdit}\r\n                        className=\"p-1.5 text-blue-600 hover:bg-blue-50 dark:hover:bg-blue-900/30 rounded transition-colors\"\r\n                        title=\"핵심 배움 편집\"\r\n                      >\r\n                        <FaEdit className=\"text-sm\" />\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                  {video.createdAt && (\r\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                      기록 날짜: {formatDate(video.createdAt)}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n\r\n                {/* 읽기 모드 */}\r\n                {!isEditingKeyTakeaways && (\r\n                  <>\r\n                    {video.keyTakeaways ? (\r\n                      <>\r\n                        <div \r\n                          className=\"prose dark:prose-invert max-w-none text-gray-700 dark:text-gray-300\"\r\n                          dangerouslySetInnerHTML={{ \r\n                            __html: renderHtmlWithTimestamps(video.keyTakeaways)\r\n                          }}\r\n                          onClick={(e) => {\r\n                            // 타임스탬프 버튼 클릭 처리\r\n                            const target = e.target as HTMLElement\r\n                            if (target.tagName === 'BUTTON' && target.dataset['timestamp']) {\r\n                              const seconds = parseInt(target.dataset['timestamp'], 10)\r\n                              handleTimestampClick(seconds)\r\n                            }\r\n                          }}\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\r\n                        <p className=\"text-sm\">이 영상의 핵심 배움이 아직 기록되지 않았습니다</p>\r\n                        {isAuthenticated && (\r\n                          <p className=\"text-xs mt-2\">위의 연필 버튼을 클릭하여 학습 기록을 추가하세요</p>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )}\r\n\r\n                {/* 🌟 편집 모드 */}\r\n                {isEditingKeyTakeaways && (\r\n                  <div>\r\n                    <RichTextEditor\r\n                      value={editingContent}\r\n                      onChange={setEditingContent}\r\n                      placeholder=\"영상을 보면서 핵심 배움을 작성하세요. 리치텍스트 에디터를 사용하여 다양한 서식을 적용할 수 있습니다.\"\r\n                      rows={8}\r\n                      className=\"min-h-[250px]\"\r\n                    />\r\n                    <div className=\"flex gap-2 mt-4\">\r\n                      <button\r\n                        onClick={handleSaveEdit}\r\n                        disabled={updateMutation.isPending}\r\n                        className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors text-sm font-medium\"\r\n                      >\r\n                        <FaSave />\r\n                        {updateMutation.isPending ? '저장 중...' : '저장'}\r\n                      </button>\r\n                      <button\r\n                        onClick={handleCancelEdit}\r\n                        disabled={updateMutation.isPending}\r\n                        className=\"flex items-center gap-2 px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors text-sm font-medium\"\r\n                      >\r\n                        <FaTimes />\r\n                        취소\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </motion.div>\r\n            )}\r\n          </div>\r\n          {/* 오른쪽 영역 끝 */}\r\n          \r\n        </div>\r\n        {/* 2단 레이아웃 컨테이너 끝 */}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default VideoLearningDetail\r\n\r\n","import React, { useState, useMemo, useRef, useEffect } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { useParams, Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport { FaArrowLeft, FaList, FaStar, FaCalendar, FaEdit, FaTrash, FaCubes, FaBullseye, FaRocket, FaChevronDown, FaChevronUp, FaSave, FaTimes } from 'react-icons/fa'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { formatDate } from '../utils/dateUtils'\r\nimport { useVideoPlaylist, useDeleteVideoPlaylist, usePlaylistVideos, useUpdatePlaylistVideo } from '../hooks/useVideoPlaylists'\r\nimport { useSkills } from '../hooks/useSkills'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport { renderTextWithTimestamps, renderHtmlWithTimestamps } from '../utils/videoUtils'\r\nimport RichTextEditor from './RichTextEditor'\r\nimport { useToastHelpers } from '../hooks/useToast'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { getLocalizedField } from '@/utils/i18nUtils'\r\n\r\n// 유튜브 IFrame Player API 타입 정의\r\ndeclare global {\r\n  interface Window {\r\n    YT: any\r\n    onYouTubeIframeAPIReady: () => void\r\n  }\r\n}\r\n\r\nconst VideoPlaylistDetail: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  const { isAuthenticated } = useAuth()\r\n  const { i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  \r\n  const { data: playlist, isLoading: loading } = useVideoPlaylist(id)\r\n  const { data: playlistVideos = [] } = usePlaylistVideos(id)\r\n  const deleteMutation = useDeleteVideoPlaylist()\r\n  const updateVideoMutation = useUpdatePlaylistVideo()\r\n  const { skillCategories } = useSkills()\r\n  const { success, error } = useToastHelpers()\r\n\r\n  const playerRef = useRef<any>(null)\r\n  const playerContainerRef = useRef<HTMLDivElement>(null)\r\n  const [isPlayerReady, setIsPlayerReady] = useState(false)\r\n  const [activeVideoId, setActiveVideoId] = useState<string | null>(null)\r\n  const [expandedVideoId, setExpandedVideoId] = useState<string | null>(null)\r\n  const [activeVideoTab, setActiveVideoTab] = useState<string | null>(null)\r\n  const [showVideoTabs, setShowVideoTabs] = useState(true)\r\n  \r\n  // 🌟 핵심 배움 편집 상태\r\n  const [editingVideoId, setEditingVideoId] = useState<string | null>(null)\r\n  const [editingContent, setEditingContent] = useState<string>('')\r\n\r\n\r\n  // 첫 번째 영상을 기본 활성 영상으로 설정\r\n  useEffect(() => {\r\n    if (playlistVideos.length > 0 && !activeVideoId && playlistVideos[0]) {\r\n      setActiveVideoId(playlistVideos[0].videoId)\r\n    }\r\n  }, [playlistVideos, activeVideoId])\r\n\r\n  // 유튜브 IFrame API 초기화\r\n  useEffect(() => {\r\n    if (!playlist?.playlistId) return\r\n    \r\n    if (!window.YT) {\r\n      const tag = document.createElement('script')\r\n      tag.src = 'https://www.youtube.com/iframe_api'\r\n      const firstScriptTag = document.getElementsByTagName('script')[0]\r\n      if (firstScriptTag?.parentNode) {\r\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag)\r\n      }\r\n    }\r\n    \r\n    const initializePlayer = () => {\r\n      if (window.YT && window.YT.Player && playerContainerRef.current) {\r\n        playerRef.current = new window.YT.Player(playerContainerRef.current, {\r\n          playerVars: {\r\n            listType: 'playlist',\r\n            list: playlist.playlistId,\r\n            enablejsapi: 1,\r\n            origin: window.location.origin,\r\n            rel: 0,\r\n            modestbranding: 1,\r\n            fs: 1,\r\n            cc_load_policy: 0,\r\n            iv_load_policy: 3,\r\n            showinfo: 0,\r\n          },\r\n          events: {\r\n            onReady: () => {\r\n              setIsPlayerReady(true)\r\n            },\r\n          },\r\n        })\r\n      }\r\n    }\r\n    \r\n    if (window.YT && window.YT.Player) {\r\n      initializePlayer()\r\n    } else {\r\n      window.onYouTubeIframeAPIReady = initializePlayer\r\n    }\r\n    \r\n    return () => {\r\n      if (playerRef.current && typeof playerRef.current.destroy === 'function') {\r\n        playerRef.current.destroy()\r\n      }\r\n    }\r\n  }, [playlist?.playlistId])\r\n\r\n  // 첫 번째 영상을 기본 활성 탭으로 설정\r\n  useEffect(() => {\r\n    if (playlistVideos.length > 0 && !activeVideoTab && playlistVideos[0]) {\r\n      setActiveVideoTab(playlistVideos[0]._id)\r\n    }\r\n  }, [playlistVideos, activeVideoTab])\r\n\r\n  // 연결된 스킬\r\n  const linkedSkills = useMemo(() => {\r\n    if (!playlist?.skillIds || !skillCategories) return []\r\n    const allSkills = skillCategories.flatMap(cat => cat.skills || [])\r\n    return allSkills.filter(skill => skill._id && playlist.skillIds?.includes(skill._id))\r\n  }, [playlist, skillCategories])\r\n\r\n  // 활성 영상\r\n  const activeVideo = useMemo(() => \r\n    playlistVideos.find(v => v._id === activeVideoTab),\r\n    [playlistVideos, activeVideoTab]\r\n  )\r\n\r\n  // 탭 클릭 시 영상 전환\r\n  const handleVideoTabClick = (video: any, index: number) => {\r\n    setActiveVideoTab(video._id)\r\n    handleTimestampClick(video.videoId, 0)\r\n  }\r\n\r\n  // 타임스탬프 클릭 핸들러 (영상 전환 + 시간 이동 + 자동 재생)\r\n  const handleTimestampClick = (targetVideoId: string, seconds: number) => {\r\n    if (!isPlayerReady || !playerRef.current) {\r\n      return\r\n    }\r\n\r\n    try {\r\n      const videoIndex = playlistVideos.findIndex(v => v.videoId === targetVideoId)\r\n      \r\n      if (videoIndex === -1) {\r\n        return\r\n      }\r\n\r\n      // 영상 전환\r\n      playerRef.current.playVideoAt(videoIndex)\r\n      setActiveVideoId(targetVideoId)\r\n      \r\n      // 시간 이동 + 자동 재생\r\n      setTimeout(() => {\r\n        playerRef.current.seekTo(seconds, true)\r\n        playerRef.current.playVideo()\r\n      }, 1000)\r\n      \r\n    } catch (error) {\r\n      console.error('타임스탬프 이동 실패:', error)\r\n    }\r\n  }\r\n\r\n\r\n  // 재생 목록 삭제 핸들러\r\n  const handleDelete = async () => {\r\n    if (!confirm('이 재생 목록을 삭제하시겠습니까?')) return\r\n\r\n    try {\r\n      await deleteMutation.mutateAsync(id!)\r\n      navigate('/video-learnings')\r\n    } catch (error) {\r\n      console.error('삭제 실패:', error)\r\n    }\r\n  }\r\n\r\n  // 🌟 핵심 배움 편집 시작\r\n  const handleStartEdit = (video: any) => {\r\n    setEditingVideoId(video._id)\r\n    setEditingContent(video.keyTakeaways || '')\r\n  }\r\n\r\n  // 🌟 핵심 배움 편집 취소\r\n  const handleCancelEdit = () => {\r\n    setEditingVideoId(null)\r\n    setEditingContent('')\r\n  }\r\n\r\n  // 🌟 핵심 배움 저장\r\n  const handleSaveEdit = async () => {\r\n    if (!editingVideoId || !activeVideo) return\r\n\r\n    try {\r\n      await updateVideoMutation.mutateAsync({\r\n        id: editingVideoId,\r\n        data: {\r\n          playlistId: id!,\r\n          videoId: activeVideo.videoId,\r\n          title: activeVideo.title,\r\n          keyTakeaways: editingContent,\r\n          order: activeVideo.order || 0,\r\n        }\r\n      })\r\n      success('저장 완료', '핵심 배움이 저장되었습니다.')\r\n      setEditingVideoId(null)\r\n      setEditingContent('')\r\n    } catch (err) {\r\n      error('저장 실패', '핵심 배움 저장 중 오류가 발생했습니다.')\r\n      console.error('핵심 배움 저장 실패:', err)\r\n    }\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (!playlist) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <FaList className=\"text-6xl text-gray-400 mx-auto mb-4\" />\r\n          <p className=\"text-xl text-gray-600 dark:text-gray-400\">재생 목록을 찾을 수 없습니다</p>\r\n          <Link \r\n            to=\"/video-learnings\" \r\n            state={location.state}\r\n            className=\"text-primary-600 hover:text-primary-700 mt-4 inline-block\"\r\n          >\r\n            목록으로 돌아가기\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <section className=\"min-h-screen bg-white dark:bg-dark-900\">\r\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\r\n        {/* 뒤로가기 버튼 */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"mb-6\"\r\n        >\r\n          <Link\r\n            to=\"/video-learnings\"\r\n            state={location.state}\r\n            className=\"inline-flex items-center gap-2 text-primary-600 hover:text-primary-700\"\r\n          >\r\n            <FaArrowLeft /> 목록으로 돌아가기\r\n          </Link>\r\n        </motion.div>\r\n\r\n        {/* 2단 레이아웃 컨테이너 */}\r\n        <div className=\"flex flex-col lg:flex-row gap-6\">\r\n          \r\n          {/* ========== 왼쪽 영역: 플레이어 + 기본 정보 ========== */}\r\n          <div className=\"w-full lg:w-7/12 lg:sticky lg:top-8 self-start\">\r\n            \r\n            {/* 유튜브 재생 목록 플레이어 */}\r\n            {playlist.playlistId && (\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                className=\"mb-6\"\r\n              >\r\n                <div className=\"aspect-video rounded-xl overflow-hidden shadow-2xl bg-black relative\">\r\n                  <div \r\n                    ref={playerContainerRef}\r\n                    className=\"w-full h-full\"\r\n                  />\r\n                  {!isPlayerReady && (\r\n                    <div className=\"absolute inset-0 flex items-center justify-center bg-gray-900 bg-opacity-75\">\r\n                      <div className=\"w-12 h-12 border-4 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </motion.div>\r\n            )}\r\n\r\n            {/* 기본 정보 카드 */}\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ delay: 0.1 }}\r\n              className=\"card p-6 mb-6\"\r\n            >\r\n              <div className=\"flex items-start justify-between mb-4\">\r\n                {/* 카테고리 배지 (복수 표시) */}\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {playlist.categoryIds && playlist.categoryIds.length > 0 ? (\r\n                    (playlist.categoryIds as any[]).map((catIdOrObj: any) => {\r\n                      const catName = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?.name\r\n                      return catName ? (\r\n                        <span \r\n                          key={typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id}\r\n                          className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\"\r\n                        >\r\n                          {catName}\r\n                        </span>\r\n                      ) : null\r\n                    })\r\n                  ) : (\r\n                    // 호환성: categoryIds가 없으면 기존 category 표시\r\n                    playlist.category && (\r\n                      <span className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\">\r\n                        {playlist.category}\r\n                      </span>\r\n                    )\r\n                  )}\r\n                </div>\r\n                {isAuthenticated && (\r\n                  <div className=\"flex gap-2\">\r\n                    <Link\r\n                      to={`/admin`}\r\n                      state={{ tab: 'videoPlaylists', editId: playlist._id }}\r\n                      className=\"p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 text-blue-600 dark:text-blue-400\"\r\n                      aria-label=\"재생 목록 수정\"\r\n                    >\r\n                      <FaEdit />\r\n                    </Link>\r\n                    <button\r\n                      onClick={handleDelete}\r\n                      disabled={deleteMutation.isPending}\r\n                      className=\"p-2 rounded-lg text-red-600 dark:text-red-400 hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n                      aria-label=\"재생 목록 삭제\"\r\n                    >\r\n                      <FaTrash />\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">\r\n                {playlist.title}\r\n              </h1>\r\n\r\n              <div className=\"flex flex-wrap gap-4 text-sm text-gray-600 dark:text-gray-400\">\r\n                {playlist.rating && (\r\n                  <div className=\"flex items-center gap-2\">\r\n                    {Array.from({ length: 5 }, (_, i) => (\r\n                      <FaStar \r\n                        key={i} \r\n                        className={`text-sm ${i < playlist.rating! ? 'text-yellow-500' : 'text-gray-300 dark:text-gray-600'}`} \r\n                      />\r\n                    ))}\r\n                    <span className=\"font-medium\">{playlist.rating}/5</span>\r\n                  </div>\r\n                )}\r\n                <div className=\"flex items-center gap-2\">\r\n                  <FaCalendar />\r\n                  <span>{formatDate(playlist.watchDate)}</span>\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <FaList />\r\n                  <span>{playlistVideos.length}개 영상</span>\r\n                </div>\r\n              </div>\r\n            </motion.div>\r\n\r\n            {/* 시청 목적 */}\r\n            {playlist.purpose && (\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.2 }}\r\n                className=\"card p-6 mb-6\"\r\n              >\r\n                <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-3 flex items-center gap-2\">\r\n                  <FaBullseye className=\"text-blue-600\" /> 시청 목적\r\n                </h3>\r\n                <div className=\"prose dark:prose-invert max-w-none text-gray-700 dark:text-gray-300 text-sm\">\r\n                  <ReactMarkdown>{playlist.purpose}</ReactMarkdown>\r\n                </div>\r\n              </motion.div>\r\n            )}\r\n\r\n            {/* 통합 적용 계획 */}\r\n            {playlist.application && (\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.3 }}\r\n                className=\"card p-6 bg-gradient-to-br from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20 border-l-4 border-purple-600\"\r\n              >\r\n                <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-3 flex items-center gap-2\">\r\n                  <FaRocket className=\"text-purple-600\" /> 통합 적용 계획\r\n                </h3>\r\n                <div className=\"prose dark:prose-invert max-w-none text-gray-700 dark:text-gray-300 text-sm\">\r\n                  <ReactMarkdown>{playlist.application}</ReactMarkdown>\r\n                </div>\r\n              </motion.div>\r\n            )}\r\n          </div>\r\n\r\n          {/* ========== 오른쪽 영역: 학습 기록 ========== */}\r\n          <div className=\"w-full lg:w-5/12 space-y-6\">\r\n\r\n            {/* 연결된 스킬 */}\r\n            {linkedSkills.length > 0 && (\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.2 }}\r\n                className=\"card p-6 mb-6\"\r\n              >\r\n                <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4 flex items-center gap-2\">\r\n                  <FaCubes className=\"text-primary-600\" /> 학습한 기술\r\n                </h3>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {linkedSkills.map(skill => (\r\n                    <div\r\n                      key={skill._id}\r\n                      className=\"inline-flex items-center px-3 py-1 rounded-lg text-sm font-medium\"\r\n                      style={{\r\n                        backgroundColor: `${skill.color}26`,\r\n                        color: skill.color,\r\n                      }}\r\n                    >\r\n                      {skill.name}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </motion.div>\r\n            )}\r\n\r\n            {/* 영상별 학습 기록 - 탭 형태 */}\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ delay: 0.4 }}\r\n              className=\"card p-6\"\r\n            >\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <button\r\n              onClick={() => setShowVideoTabs(!showVideoTabs)}\r\n              className=\"flex items-center gap-2 text-xl font-bold text-gray-900 dark:text-white hover:text-primary-600 dark:hover:text-primary-400 transition-colors\"\r\n            >\r\n              {showVideoTabs ? <FaChevronUp /> : <FaChevronDown />}\r\n              📹 영상별 학습 기록 ({playlistVideos.length}개)\r\n            </button>\r\n          </div>\r\n          \r\n          {/* 영상 탭 버튼들 - 토글 가능 */}\r\n          {showVideoTabs && playlistVideos.length > 0 && (\r\n            <div className=\"flex flex-wrap gap-2 mb-4\">\r\n              {playlistVideos.map((video, index) => (\r\n                <button\r\n                  key={video._id}\r\n                  onClick={() => handleVideoTabClick(video, index)}\r\n                  className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\r\n                    activeVideoTab === video._id\r\n                      ? 'bg-primary-600 text-white'\r\n                      : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\r\n                  }`}\r\n                >\r\n                  #{index + 1} {video.title}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {/* 활성 영상의 학습 기록 */}\r\n          {playlistVideos.length > 0 && activeVideo ? (\r\n            <div className=\"border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden\">\r\n              {/* 영상 헤더 */}\r\n              <div className=\"p-4 bg-gray-50 dark:bg-gray-800\">\r\n                <h4 className=\"font-bold text-gray-900 dark:text-white mb-1\">\r\n                  {activeVideo.title}\r\n                </h4>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"space-y-0.5\">\r\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                      유튜브 영상 ID: {activeVideo.videoId}\r\n                    </p>\r\n                    {activeVideo.createdAt && (\r\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                        기록 날짜: {formatDate(activeVideo.createdAt)}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                  {/* 🌟 편집 버튼 - 인증된 사용자에게만 표시 */}\r\n                  {isAuthenticated && editingVideoId !== activeVideo._id && (\r\n                    <button\r\n                      onClick={() => handleStartEdit(activeVideo)}\r\n                      className=\"p-1.5 text-blue-600 hover:bg-blue-50 dark:hover:bg-blue-900/30 rounded transition-colors\"\r\n                      title=\"핵심 배움 편집\"\r\n                    >\r\n                      <FaEdit className=\"text-sm\" />\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* 핵심 배움 - 읽기 모드 */}\r\n              {editingVideoId !== activeVideo._id && (\r\n                <>\r\n                  {activeVideo.keyTakeaways ? (\r\n                    <div className=\"p-4 bg-white dark:bg-gray-900\">\r\n                      <h5 className=\"text-sm font-bold text-gray-700 dark:text-gray-300 mb-3\">\r\n                        🎯 핵심 배움\r\n                      </h5>\r\n                      <div \r\n                        className=\"prose dark:prose-invert max-w-none text-gray-700 dark:text-gray-300 leading-relaxed\"\r\n                        dangerouslySetInnerHTML={{ \r\n                          __html: renderHtmlWithTimestamps(activeVideo.keyTakeaways)\r\n                        }}\r\n                        onClick={(e) => {\r\n                          // 타임스탬프 버튼 클릭 처리\r\n                          const target = e.target as HTMLElement\r\n                          if (target.tagName === 'BUTTON' && target.dataset['timestamp']) {\r\n                            const seconds = parseInt(target.dataset['timestamp'], 10)\r\n                            handleTimestampClick(activeVideo.videoId, seconds)\r\n                          }\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"p-4 bg-white dark:bg-gray-900 text-center text-gray-500 dark:text-gray-400\">\r\n                      <p className=\"text-sm\">이 영상의 핵심 배움이 아직 기록되지 않았습니다</p>\r\n                      {isAuthenticated && (\r\n                        <p className=\"text-xs mt-2\">위의 연필 버튼을 클릭하여 학습 기록을 추가하세요</p>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n\r\n              {/* 🌟 핵심 배움 - 편집 모드 */}\r\n              {editingVideoId === activeVideo._id && (\r\n                <div className=\"p-4 bg-white dark:bg-gray-900\">\r\n                  <h5 className=\"text-sm font-bold text-gray-700 dark:text-gray-300 mb-3\">\r\n                    ✏️ 핵심 배움 편집\r\n                  </h5>\r\n                  <RichTextEditor\r\n                    value={editingContent}\r\n                    onChange={setEditingContent}\r\n                    placeholder=\"영상을 보면서 핵심 배움을 작성하세요. 리치텍스트 에디터를 사용하여 다양한 서식을 적용할 수 있습니다.\"\r\n                    rows={8}\r\n                    className=\"min-h-[250px]\"\r\n                  />\r\n                  <div className=\"flex gap-2 mt-4\">\r\n                    <button\r\n                      onClick={handleSaveEdit}\r\n                      disabled={updateVideoMutation.isPending}\r\n                      className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors text-sm font-medium\"\r\n                    >\r\n                      <FaSave />\r\n                      {updateVideoMutation.isPending ? '저장 중...' : '저장'}\r\n                    </button>\r\n                    <button\r\n                      onClick={handleCancelEdit}\r\n                      disabled={updateVideoMutation.isPending}\r\n                      className=\"flex items-center gap-2 px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors text-sm font-medium\"\r\n                    >\r\n                      <FaTimes />\r\n                      취소\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : playlistVideos.length === 0 ? (\r\n            <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\r\n              <p className=\"mb-4\">아직 등록된 영상 학습 기록이 없습니다</p>\r\n              {isAuthenticated && (\r\n                <p className=\"text-sm\">관리자 페이지의 재생 목록 수정에서 영상을 추가해주세요</p>\r\n              )}\r\n            </div>\r\n          ) : null}\r\n            </motion.div>\r\n          </div>\r\n          {/* 오른쪽 영역 끝 */}\r\n          \r\n        </div>\r\n        {/* 2단 레이아웃 컨테이너 끝 */}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default VideoPlaylistDetail\r\n\r\n","import React from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { Link } from 'react-router-dom'\r\nimport { FaGithub, FaExternalLinkAlt, FaImage } from 'react-icons/fa'\r\nimport { Project } from '../types'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { getLocalizedField, getLocalizedArrayField } from '@/utils/i18nUtils'\r\n\r\ninterface ProjectCardProps {\r\n  project: Project\r\n  itemVariants: any // framer-motion variants 타입\r\n  getStatusColor: (status: string) => string\r\n  getStatusText: (status: string) => string\r\n}\r\n\r\n// 기술 스택 최대 표시 개수 상수\r\nconst MAX_TECH_DISPLAY = 5\r\n\r\nconst ProjectCard: React.FC<ProjectCardProps> = ({ project, itemVariants, getStatusColor, getStatusText }) => {\r\n  const { i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  \r\n  // Get localized technologies\r\n  const technologies = getLocalizedArrayField(\r\n    currentLang,\r\n    project.technologies,\r\n    project.technologiesEn,\r\n    project.technologiesJa\r\n  )\r\n  \r\n  // 프로젝트 링크 존재 여부 확인\r\n  const hasLinks = project.githubLink || project.liveLink\r\n\r\n  return (\r\n    <motion.div\r\n      key={project._id}\r\n      variants={itemVariants}\r\n      // 레이아웃 변경 시 부드러운 전환을 위해 layout 속성 추가\r\n      layout\r\n      className=\"card overflow-hidden bg-white dark:bg-dark-800 rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 flex flex-col cursor-pointer group\"\r\n    >\r\n      <Link \r\n        to={`/projects/${project._id}`}\r\n        state={{ scrollPosition: window.scrollY }}\r\n        className=\"block flex flex-col h-full\"\r\n      >\r\n      <div className=\"h-48 bg-cream-200 dark:bg-dark-700 flex items-center justify-center relative flex-shrink-0\">\r\n        {project.image ? (\r\n          <img \r\n            src={project.image} \r\n            alt={`${project.title} 썸네일`} \r\n            className=\"w-full h-full object-cover\"\r\n            loading=\"lazy\"\r\n            decoding=\"async\"\r\n            width=\"640\"\r\n            height=\"192\"\r\n          />\r\n        ) : (\r\n          <FaImage className=\"text-dark-400 dark:text-dark-500 text-5xl\" />\r\n        )}\r\n        <div className=\"absolute top-4 right-4\">\r\n          <span className={`px-3 py-1 rounded-full text-sm font-medium ${getStatusColor(project.status)}`}>\r\n            {getStatusText(project.status)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"p-8 flex flex-col flex-grow\">\r\n        <h3 className=\"text-xl font-bold text-dark-900 dark:text-cream-100 mb-3 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors\">\r\n          {getLocalizedField(currentLang, project.title, project.titleEn, project.titleJa)}\r\n        </h3>\r\n        <p className=\"text-dark-600 dark:text-dark-300 mb-6 leading-relaxed flex-grow\">\r\n          {getLocalizedField(currentLang, project.description, project.descriptionEn, project.descriptionJa)}\r\n        </p>\r\n        <div className=\"flex flex-wrap gap-2 mb-4\">\r\n          {technologies.slice(0, MAX_TECH_DISPLAY).map((tech) => (\r\n            <span\r\n              key={tech}\r\n              className=\"px-3 py-1 bg-coffee-50 dark:bg-coffee-900 text-coffee-700 dark:text-coffee-300 rounded-lg text-sm font-medium\"\r\n            >\r\n              {tech}\r\n            </span>\r\n          ))}\r\n          {technologies.length > MAX_TECH_DISPLAY && (\r\n            <span className=\"px-3 py-1 bg-cream-200 dark:bg-dark-700 text-dark-500 dark:text-dark-400 rounded-lg text-sm font-medium\">\r\n              외 {technologies.length - MAX_TECH_DISPLAY}개\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div \r\n          className=\"flex flex-wrap gap-4 pt-4 border-t border-cream-200 dark:border-dark-700\"\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          {hasLinks ? (\r\n            <>\r\n              {project.liveLink && (\r\n                <a \r\n                  href={project.liveLink}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className={`px-4 py-2 rounded-xl font-bold transition-all duration-200 flex items-center gap-2 \r\n                    ${project.status === 'completed' \r\n                      ? 'bg-coffee-600 text-white hover:bg-coffee-700 shadow-md'\r\n                      : 'bg-cream-200 dark:bg-dark-700 text-dark-700 dark:text-dark-300 hover:bg-cream-300 dark:hover:bg-dark-600'\r\n                    }`}\r\n                  aria-label={`${project.title} 라이브 데모 보기`}\r\n                >\r\n                  <FaExternalLinkAlt size={16} />\r\n                  라이브 보기\r\n                </a>\r\n              )}\r\n              {project.githubLink && (\r\n                <a \r\n                  href={project.githubLink}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"px-4 py-2 rounded-xl font-medium transition-all duration-200 flex items-center gap-2 bg-white dark:bg-dark-900 text-dark-600 dark:text-dark-300 hover:bg-cream-100 dark:hover:bg-dark-700 border border-cream-200 dark:border-dark-700\"\r\n                  aria-label={`${project.title} GitHub 레포지토리`}\r\n                >\r\n                  <FaGithub size={20} />\r\n                  GitHub\r\n                </a>\r\n              )}\r\n            </>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      </Link>\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default ProjectCard\r\n","import React, { useState } from 'react'\r\nimport { useParams, useNavigate, Link, useLocation } from 'react-router-dom'\r\nimport { motion } from 'framer-motion'\r\nimport { FaArrowLeft, FaGithub, FaExternalLinkAlt, FaPlay, FaImage, FaCode, FaChevronLeft, FaChevronRight } from 'react-icons/fa'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { useProjectDetail } from '../hooks/useProjectDetail'\r\n\r\nconst ProjectDetail: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  const { i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  \r\n  // Use custom hook for data fetching and i18n processing\r\n  const { loading, error, localizedProject, linkedSkills } = useProjectDetail(id, currentLang)\r\n  \r\n  // UI state management\r\n  const [selectedImage, setSelectedImage] = useState<string | null>(null)\r\n  const [currentVideoIndex, setCurrentVideoIndex] = useState(0)\r\n  const [currentShortsIndex, setCurrentShortsIndex] = useState(0)\r\n\r\n  // Utility function for skill badge styling\r\n  const getBadgeStyle = (colorCode: string) => {\r\n    const bgColor = `${colorCode}26`\r\n    const textColor = colorCode\r\n    \r\n    return {\r\n      backgroundColor: bgColor,\r\n      color: textColor,\r\n    } as React.CSSProperties\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (error || !localizedProject) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <p className=\"text-xl text-gray-600 dark:text-gray-400 mb-4\">{error || '프로젝트를 찾을 수 없습니다.'}</p>\r\n          <button\r\n            onClick={() => navigate('/projects', { state: location.state })}\r\n            className=\"text-primary-600 hover:text-primary-700\"\r\n          >\r\n            목록으로 돌아가기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const isYouTubeUrl = (url: string) => {\r\n    return url.includes('youtube.com') || url.includes('youtu.be')\r\n  }\r\n\r\n  // 🌟 유튜브 쇼츠 URL 판별 함수 추가\r\n  const isYouTubeShorts = (url: string) => {\r\n    return url.includes('youtube.com/shorts/')\r\n  }\r\n\r\n  const getYouTubeEmbedUrl = (url: string) => {\r\n    let videoId = ''\r\n    // 🌟 유튜브 쇼츠 지원 추가\r\n    if (url.includes('youtube.com/shorts/')) {\r\n      videoId = url.split('shorts/')[1]?.split('?')[0] || ''\r\n    } else if (url.includes('youtube.com/watch?v=')) {\r\n      videoId = url.split('v=')[1]?.split('&')[0] || ''\r\n    } else if (url.includes('youtu.be/')) {\r\n      videoId = url.split('youtu.be/')[1]?.split('?')[0] || ''\r\n    }\r\n    return videoId ? `https://www.youtube.com/embed/${videoId}?rel=0&modestbranding=1&showinfo=0` : ''\r\n  }\r\n\r\n  // 🌟 동영상 분류 (쇼츠 vs 일반)\r\n  const regularVideos = localizedProject.videos?.filter((video: string) => !isYouTubeShorts(video)) || []\r\n  const shortsVideos = localizedProject.videos?.filter((video: string) => isYouTubeShorts(video)) || []\r\n\r\n  return (\r\n    <section className=\"section-padding bg-gray-50 dark:bg-dark-900 min-h-screen\">\r\n      <div className=\"max-w-6xl mx-auto px-4\">\r\n        {/* Header */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"mb-8\"\r\n        >\r\n          <Link\r\n            to=\"/projects\"\r\n            state={location.state}\r\n            className=\"inline-flex items-center gap-2 text-primary-600 hover:text-primary-700 mb-6 dark:text-primary-400\"\r\n          >\r\n            <FaArrowLeft /> 목록으로 돌아가기\r\n          </Link>\r\n        </motion.div>\r\n\r\n        {/* Project Header */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8 mb-8\"\r\n        >\r\n          <div className=\"flex flex-col md:flex-row gap-8\">\r\n            {/* 🌟 Main Image - 왼쪽으로 이동 */}\r\n            {localizedProject.image && (\r\n              <div className=\"md:w-1/3\">\r\n                <img \r\n                  src={localizedProject.image}\r\n                  alt={localizedProject.title}\r\n                  className=\"w-full h-auto rounded-lg shadow-lg object-cover\"\r\n                  loading=\"eager\"\r\n                  decoding=\"async\"\r\n                  width=\"800\"\r\n                  height=\"600\"\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {/* 🌟 텍스트 내용 - 오른쪽 */}\r\n            <div className=\"flex-1\">\r\n              <div className=\"flex items-start gap-4 mb-4 flex-wrap\">\r\n                {/* 카테고리 배지 (복수 표시) */}\r\n                {localizedProject.categoryIds && localizedProject.categoryIds.length > 0 ? (\r\n                  (localizedProject.categoryIds as any[]).map((catIdOrObj: any) => {\r\n                    const catName = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?.name\r\n                    return catName ? (\r\n                      <span \r\n                        key={typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id}\r\n                        className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\"\r\n                      >\r\n                        {catName}\r\n                      </span>\r\n                    ) : null\r\n                  })\r\n                ) : (\r\n                  // 호환성: categoryIds가 없으면 기존 category 표시\r\n                  localizedProject.category && (\r\n                    <span className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\">\r\n                      {localizedProject.category}\r\n                    </span>\r\n                  )\r\n                )}\r\n                <span className={`px-3 py-1 rounded-full text-sm font-medium ${\r\n                  localizedProject.status === 'completed' \r\n                    ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200'\r\n                    : localizedProject.status === 'planning'\r\n                    ? 'bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200'\r\n                    : 'bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200'\r\n                }`}>\r\n                  {localizedProject.status === 'completed' ? '완료' : localizedProject.status === 'planning' ? '기획중' : '준비중'}\r\n                </span>\r\n              </div>\r\n              <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4\">\r\n                {localizedProject.title}\r\n              </h1>\r\n              <p className=\"text-lg text-gray-600 dark:text-gray-300 mb-6 leading-relaxed\">\r\n                {localizedProject.description}\r\n              </p>\r\n              \r\n              {/* Technologies */}\r\n              {localizedProject.technologies.length > 0 && (\r\n                <div className=\"mb-6\">\r\n                  <h3 className=\"text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3 flex items-center gap-2\">\r\n                    <FaCode /> 사용 기술\r\n                  </h3>\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    {localizedProject.technologies.map((tech, index) => (\r\n                      <span\r\n                        key={index}\r\n                        className=\"px-3 py-1 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg text-sm font-medium\"\r\n                      >\r\n                        {tech}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* 🌟 Linked Skills (스킬 배지) */}\r\n              {linkedSkills.length > 0 && (\r\n                <div className=\"mb-6\">\r\n                  <h3 className=\"text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3 flex items-center gap-2\">\r\n                    <FaCode /> 사용된 핵심 스킬\r\n                  </h3>\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    {linkedSkills.map((skill) => {\r\n                      // 🌟 동적 스타일 적용\r\n                      const badgeStyle = skill.color ? getBadgeStyle(skill.color) : undefined\r\n\r\n                      return (\r\n                        <Link\r\n                          key={skill._id}\r\n                          to={`/projects?skillId=${skill._id}`}\r\n                          className=\"inline-flex items-center px-3 py-1 rounded-lg text-sm font-medium hover:ring-2 transition-all hover:opacity-80\"\r\n                          title={`${skill.name} 스킬이 사용된 모든 프로젝트 보기`}\r\n                          style={{\r\n                            ...badgeStyle,\r\n                            '--tw-ring-color': skill.color || '#3B82F6',\r\n                          } as React.CSSProperties}\r\n                        >\r\n                          <span className=\"font-semibold\">{skill.name}</span>\r\n                          <span \r\n                            className=\"text-xs font-semibold ml-1\"\r\n                            style={{ color: skill.color || '#3B82F6' }}\r\n                          >\r\n                            [{skill.levelText}]\r\n                          </span>\r\n                        </Link>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Links */}\r\n              <div className=\"flex flex-wrap gap-4\">\r\n                {localizedProject.githubLink && (\r\n                  <a\r\n                    href={localizedProject.githubLink}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"inline-flex items-center gap-2 px-4 py-2 bg-gray-900 dark:bg-gray-700 text-white rounded-lg hover:bg-gray-800 dark:hover:bg-gray-600 transition-colors\"\r\n                  >\r\n                    <FaGithub /> GitHub\r\n                  </a>\r\n                )}\r\n                {localizedProject.liveLink && (\r\n                  <a\r\n                    href={localizedProject.liveLink}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"inline-flex items-center gap-2 px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors\"\r\n                  >\r\n                    <FaExternalLinkAlt /> Live Demo\r\n                  </a>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\">\r\n          {/* Additional Images - 전체 너비 */}\r\n          {localizedProject.images && localizedProject.images.length > 0 && (\r\n            <div className=\"lg:col-span-4 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8\">\r\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-6 flex items-center gap-2\">\r\n                <FaImage /> 프로젝트 이미지\r\n              </h3>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                {localizedProject.images.map((image, index) => (\r\n                  <motion.div\r\n                    key={index}\r\n                    initial={{ opacity: 0, scale: 0.9 }}\r\n                    animate={{ opacity: 1, scale: 1 }}\r\n                    transition={{ delay: index * 0.1 }}\r\n                    className=\"cursor-pointer group\"\r\n                    onClick={() => setSelectedImage(image)}\r\n                  >\r\n                    <div className=\"aspect-video rounded-lg overflow-hidden shadow-md group-hover:shadow-xl transition-shadow\">\r\n                      <img\r\n                        src={image}\r\n                        alt={`${localizedProject.title} ${index + 1}`}\r\n                        className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\r\n                        loading=\"lazy\"\r\n                        decoding=\"async\"\r\n                        width=\"640\"\r\n                        height=\"360\"\r\n                      />\r\n                    </div>\r\n                  </motion.div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* 🌟 영상 섹션 - 가로 배치 */}\r\n          {/* 🌟 일반 동영상 (가로형) - 왼쪽 (3/4) */}\r\n          {regularVideos.length > 0 && (\r\n            <div className=\"lg:col-span-3 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8\" data-video-section>\r\n              <div className=\"flex items-center justify-between mb-6\">\r\n                <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white flex items-center gap-2\">\r\n                  <FaPlay /> 프로젝트 동영상\r\n                </h3>\r\n                {regularVideos.length > 1 && (\r\n                  <span className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                    {currentVideoIndex + 1} / {regularVideos.length}\r\n                  </span>\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"relative\">\r\n                {/* 영상 컨테이너 */}\r\n                <div className=\"relative group\">\r\n                  {(() => {\r\n                    const video = regularVideos[currentVideoIndex]\r\n                    if (!video) return null\r\n                    \r\n                    return (\r\n                      <div>\r\n                        {isYouTubeUrl(video) ? (\r\n                          <div className=\"relative w-full rounded-lg overflow-hidden shadow-lg bg-gray-100 dark:bg-gray-700\">\r\n                            <div className=\"aspect-video\">\r\n                              <iframe\r\n                                src={getYouTubeEmbedUrl(video)}\r\n                                title={`${localizedProject.title} 동영상 ${currentVideoIndex + 1}`}\r\n                                className=\"w-full h-full\"\r\n                                allowFullScreen\r\n                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                              />\r\n                            </div>\r\n                            {/* YouTube 링크 */}\r\n                            <div className=\"absolute bottom-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity z-10\">\r\n                              <a\r\n                                href={video}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm font-medium transition-colors\"\r\n                              >\r\n                                YouTube에서 보기\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"relative w-full rounded-lg overflow-hidden shadow-lg bg-gray-100 dark:bg-gray-700\">\r\n                            <div className=\"aspect-video\">\r\n                              <video\r\n                                src={video}\r\n                                controls\r\n                                className=\"w-full h-full object-cover\"\r\n                                preload=\"metadata\"\r\n                              >\r\n                                <source src={video} type=\"video/mp4\" />\r\n                                <source src={video} type=\"video/webm\" />\r\n                                <source src={video} type=\"video/ogg\" />\r\n                                브라우저가 비디오를 지원하지 않습니다.\r\n                              </video>\r\n                            </div>\r\n                            {/* 직접 링크 */}\r\n                            <div className=\"absolute bottom-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity z-10\">\r\n                              <a\r\n                                href={video}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded text-sm font-medium transition-colors\"\r\n                              >\r\n                                원본 보기\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                        \r\n                        {/* 🌟 영상 설명 (HTML 렌더링) */}\r\n                        {localizedProject.videoDescriptions?.[currentVideoIndex] && (\r\n                          <div className=\"mt-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                            <div \r\n                              className=\"text-gray-700 dark:text-gray-300 text-sm leading-relaxed prose prose-sm dark:prose-invert max-w-none\"\r\n                              dangerouslySetInnerHTML={{ __html: localizedProject.videoDescriptions[currentVideoIndex] }}\r\n                            />\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )\r\n                  })()}\r\n                  \r\n                  {/* 🌟 좌우 화살표 (영상이 2개 이상일 때) */}\r\n                  {regularVideos.length > 1 && (\r\n                    <>\r\n                      <button\r\n                        onClick={() => setCurrentVideoIndex((prev) => (prev === 0 ? regularVideos.length - 1 : prev - 1))}\r\n                        className=\"absolute left-2 top-1/2 -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-all opacity-0 group-hover:opacity-100 z-10\"\r\n                        aria-label=\"이전 영상\"\r\n                      >\r\n                        <FaChevronLeft size={20} />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => setCurrentVideoIndex((prev) => (prev === regularVideos.length - 1 ? 0 : prev + 1))}\r\n                        className=\"absolute right-2 top-1/2 -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-all opacity-0 group-hover:opacity-100 z-10\"\r\n                        aria-label=\"다음 영상\"\r\n                      >\r\n                        <FaChevronRight size={20} />\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                </div>\r\n                \r\n                {/* 🌟 인디케이터 (영상이 2개 이상일 때) */}\r\n                {regularVideos.length > 1 && (\r\n                  <div className=\"flex justify-center gap-2 mt-4\">\r\n                    {regularVideos.map((_: string, index: number) => (\r\n                      <button\r\n                        key={index}\r\n                        onClick={() => setCurrentVideoIndex(index)}\r\n                        className={`h-2 rounded-full transition-all ${\r\n                          index === currentVideoIndex \r\n                            ? 'w-8 bg-blue-600 dark:bg-blue-400' \r\n                            : 'w-2 bg-gray-300 dark:bg-gray-600 hover:bg-gray-400 dark:hover:bg-gray-500'\r\n                        }`}\r\n                        aria-label={`${index + 1}번째 영상 보기`}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* 🌟 유튜브 쇼츠 (세로형) - 오른쪽 (1/4) */}\r\n          {shortsVideos.length > 0 && (\r\n            <div className=\"lg:col-span-1 bg-white dark:bg-gray-800 rounded-2xl shadow-lg px-4 py-8\" data-shorts-section>\r\n              {/* 🌟 쇼츠 컨테이너 - 완전 중앙 정렬 */}\r\n              <div className=\"flex justify-center items-center\">\r\n                <div className=\"relative group px-0\" style={{ maxWidth: '280px', width: '100%' }}>\r\n                  {/* 🌟 타이틀을 영상 컨테이너 안으로 이동 */}\r\n                  <div className=\"flex items-center justify-between mb-6\">\r\n                    <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white flex items-center gap-2\">\r\n                      <FaPlay /> Shorts\r\n                    </h3>\r\n                    {shortsVideos.length > 1 && (\r\n                      <span className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                        {currentShortsIndex + 1} / {shortsVideos.length}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  {(() => {\r\n                    const video = shortsVideos[currentShortsIndex]\r\n                    if (!video) return null\r\n                    \r\n                    const videoIndexInAll = localizedProject.videos?.indexOf(video) ?? -1\r\n                    \r\n                    return (\r\n                      <div className=\"w-full\">\r\n                        <div className=\"relative w-full rounded-lg overflow-hidden shadow-lg bg-black\">\r\n                          {/* 🌟 세로 형식 (9:16 비율) - 최대 높이 설정 */}\r\n                          <div className=\"aspect-[9/16] w-full\" style={{ maxHeight: '600px' }}>\r\n                            <iframe\r\n                              src={getYouTubeEmbedUrl(video)}\r\n                              title={`${localizedProject.title} Shorts ${currentShortsIndex + 1}`}\r\n                              className=\"w-full h-full\"\r\n                              allowFullScreen\r\n                              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                            />\r\n                          </div>\r\n                          {/* YouTube 쇼츠 링크 */}\r\n                          <div className=\"absolute bottom-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity z-10\">\r\n                            <a\r\n                              href={video}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                              className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm font-medium transition-colors flex items-center gap-1 shadow-lg\"\r\n                            >\r\n                              Shorts\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        {/* 🌟 영상 설명 (HTML 렌더링) */}\r\n                        {localizedProject.videoDescriptions?.[videoIndexInAll] && (\r\n                          <div className=\"mt-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\" style={{ maxWidth: '600px', margin: '1rem auto 0' }}>\r\n                            <div \r\n                              className=\"text-gray-700 dark:text-gray-300 text-sm leading-relaxed prose prose-sm dark:prose-invert max-w-none\"\r\n                              dangerouslySetInnerHTML={{ __html: localizedProject.videoDescriptions[videoIndexInAll] }}\r\n                            />\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )\r\n                  })()}\r\n                  \r\n                  {/* 🌟 좌우 화살표 (쇼츠가 2개 이상일 때) */}\r\n                  {shortsVideos.length > 1 && (\r\n                    <>\r\n                      <button\r\n                        onClick={() => setCurrentShortsIndex((prev) => (prev === 0 ? shortsVideos.length - 1 : prev - 1))}\r\n                        className=\"absolute left-2 top-1/2 -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-all opacity-0 group-hover:opacity-100 z-10\"\r\n                        aria-label=\"이전 쇼츠\"\r\n                      >\r\n                        <FaChevronLeft size={20} />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => setCurrentShortsIndex((prev) => (prev === shortsVideos.length - 1 ? 0 : prev + 1))}\r\n                        className=\"absolute right-2 top-1/2 -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-all opacity-0 group-hover:opacity-100 z-10\"\r\n                        aria-label=\"다음 쇼츠\"\r\n                      >\r\n                        <FaChevronRight size={20} />\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              {/* 🌟 인디케이터 (쇼츠가 2개 이상일 때) */}\r\n              {shortsVideos.length > 1 && (\r\n                <div className=\"flex justify-center gap-2 mt-4\">\r\n                  {shortsVideos.map((_: string, index: number) => (\r\n                    <button\r\n                      key={index}\r\n                      onClick={() => setCurrentShortsIndex(index)}\r\n                      className={`h-2 rounded-full transition-all ${\r\n                        index === currentShortsIndex \r\n                          ? 'w-8 bg-red-600 dark:bg-red-400' \r\n                          : 'w-2 bg-gray-300 dark:bg-gray-600 hover:bg-gray-400 dark:hover:bg-gray-500'\r\n                      }`}\r\n                      aria-label={`${index + 1}번째 쇼츠 보기`}\r\n                    />\r\n                  ))}\r\n                </div>\r\n          )}\r\n          </div>\r\n          )}\r\n\r\n          {/* 프로젝트 설명 - 전체 너비 */}\r\n          {localizedProject.detailedDescription && (\r\n            <div className=\"lg:col-span-4 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8\">\r\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\r\n                상세 설명\r\n              </h3>\r\n              <div \r\n                className=\"prose prose-lg dark:prose-invert max-w-none text-gray-700 dark:text-gray-300\"\r\n                dangerouslySetInnerHTML={{ __html: localizedProject.detailedDescription }}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {/* Features & Learnings - 가로 배치 */}\r\n          {/* Features */}\r\n          {localizedProject.features.length > 0 && (\r\n            <div className=\"lg:col-span-2 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8\">\r\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\r\n                주요 기능\r\n              </h3>\r\n              <ul className=\"space-y-3\">\r\n                {localizedProject.features.map((feature, index) => (\r\n                  <li key={index} className=\"flex items-start gap-3\">\r\n                    <span className=\"flex-shrink-0 w-6 h-6 rounded-full bg-primary-100 dark:bg-primary-900 text-primary-600 dark:text-primary-300 flex items-center justify-center text-sm font-medium mt-0.5\">\r\n                      {index + 1}\r\n                    </span>\r\n                    <span className=\"text-gray-700 dark:text-gray-300\">{feature}</span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n\r\n          {/* Learnings */}\r\n          {localizedProject.learnings.length > 0 && (\r\n            <div className=\"lg:col-span-2 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8\">\r\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\r\n                배운 점\r\n              </h3>\r\n              <ul className=\"space-y-3\">\r\n                {localizedProject.learnings.map((learning, index) => (\r\n                  <li key={index} className=\"flex items-start gap-3\">\r\n                    <span className=\"flex-shrink-0 w-2 h-2 rounded-full bg-primary-600 dark:bg-primary-400 mt-2\"></span>\r\n                    <span className=\"text-gray-700 dark:text-gray-300\">{learning}</span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Image Modal */}\r\n      {selectedImage && (\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n          className=\"fixed inset-0 bg-black/90 z-50 flex items-center justify-center p-4\"\r\n          onClick={() => setSelectedImage(null)}\r\n        >\r\n          <button\r\n            onClick={() => setSelectedImage(null)}\r\n            className=\"absolute top-4 right-4 text-white hover:text-gray-300 text-3xl\"\r\n          >\r\n            ×\r\n          </button>\r\n          <img\r\n            src={selectedImage}\r\n            alt=\"확대 이미지\"\r\n            className=\"max-w-full max-h-full object-contain\"\r\n            loading=\"eager\"\r\n            decoding=\"async\"\r\n          />\r\n        </motion.div>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ProjectDetail\r\n","import React, { useState, useMemo } from 'react';\r\nimport { motion, Variants } from 'framer-motion';\r\nimport { \r\n  FaBriefcase, \r\n  FaCheckCircle, \r\n  FaCoffee, \r\n  FaGraduationCap, \r\n  FaChartLine, \r\n  FaCode, \r\n  FaCog, \r\n  FaRobot, \r\n  FaChevronDown, \r\n  FaChevronRight,\r\n  FaCar,           // 🚗 자동차\r\n  FaShieldAlt,     // 🛡️ 군인\r\n  FaLaptopCode     // 💻 프로그래밍\r\n} from 'react-icons/fa';\r\nimport { ExperienceItem as ExperienceItemType } from '../hooks/useExperiences';\r\nimport { ExperienceDetail } from '../types';\r\nimport { useSkills } from '../hooks/useSkills';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getLocalizedField, getLocalizedArrayField } from '@/utils/i18nUtils';\r\n\r\ninterface ExperienceItemProps {\r\n  exp: ExperienceItemType;\r\n  variants: Variants;\r\n  isLast?: boolean;\r\n}\r\n\r\n// 아이콘 매핑\r\nconst iconMap = {\r\n  FaCoffee: FaCoffee,\r\n  FaGraduationCap: FaGraduationCap,\r\n  FaChartLine: FaChartLine,\r\n  FaBriefcase: FaBriefcase,\r\n  FaCode: FaCode,\r\n  FaCog: FaCog,\r\n  FaRobot: FaRobot,\r\n  FaCar: FaCar,               // 🚗 자동차\r\n  FaShieldAlt: FaShieldAlt,   // 🛡️ 군인\r\n  FaLaptopCode: FaLaptopCode, // 💻 프로그래밍\r\n} as const;\r\n\r\nconst ExperienceItem: React.FC<ExperienceItemProps> = ({ exp, variants, isLast = false }) => {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const { skillCategories } = useSkills();\r\n  const { i18n } = useTranslation();\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja';\r\n  \r\n  // 아이콘 매핑 및 대체 아이콘 설정\r\n  const IconComponent = exp.iconKey && iconMap[exp.iconKey as keyof typeof iconMap] \r\n    ? iconMap[exp.iconKey as keyof typeof iconMap] \r\n    : FaBriefcase;\r\n  \r\n  // 🌟 연결된 스킬 필터링\r\n  const linkedSkills = useMemo(() => {\r\n    if (!exp.skillIds || !skillCategories) return [];\r\n    const allSkills = skillCategories.flatMap(cat => cat.skills || []);\r\n    return allSkills.filter(skill => {\r\n      const skillId = skill._id;\r\n      return skillId && (exp.skillIds as any[]).some((idOrObj: any) => {\r\n        const id = typeof idOrObj === 'string' ? idOrObj : idOrObj?._id;\r\n        return id === skillId;\r\n      });\r\n    });\r\n  }, [exp.skillIds, skillCategories]);\r\n  \r\n  // description을 줄 바꿈 기준으로 분할하여 목록으로 사용\r\n  const descriptionItems = exp.description \r\n    ? exp.description.split('\\n').filter(line => line.trim() !== '') \r\n    : [];\r\n  \r\n  // 동적 색상 값 변수 설정 (CSS 변수 Fallback)\r\n  const iconColor = exp.color || '#8B4513';\r\n  const iconBgColor = exp.bgColor || '#F5DEB3';\r\n\r\n  return (\r\n    <div className=\"relative flex items-start gap-6\">\r\n      {/* 🌟 타임라인 라인 (세로선) */}\r\n      {!isLast && (\r\n        <div className=\"absolute left-8 top-20 bottom-0 w-0.5 bg-gradient-to-b from-primary-300 to-primary-100 dark:from-primary-700 dark:to-primary-900\" />\r\n      )}\r\n      \r\n      {/* 🌟 타임라인 아이콘 (원형 배지) */}\r\n      <div className=\"relative z-10 flex-shrink-0\">\r\n        <motion.div\r\n          variants={variants}\r\n          className=\"w-16 h-16 rounded-full flex items-center justify-center shadow-lg ring-4 ring-white dark:ring-gray-800\"\r\n          style={{ \r\n            backgroundColor: iconBgColor,\r\n          }}\r\n          whileHover={{ scale: 1.1, rotate: 5 }}\r\n          transition={{ type: 'spring', stiffness: 300 }}\r\n        >\r\n          <IconComponent \r\n            size={28}\r\n            style={{ color: iconColor }}\r\n          />\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* 🌟 콘텐츠 카드 */}\r\n      <motion.div\r\n        variants={variants}\r\n        className=\"flex-1 mb-12\"\r\n      >\r\n        <div className=\"card p-6 hover:shadow-xl transition-all duration-300\">\r\n          {/* 헤더 (클릭 가능) */}\r\n          <button\r\n            onClick={() => setIsExpanded(!isExpanded)}\r\n            className=\"w-full text-left\"\r\n          >\r\n            <div className=\"flex items-start justify-between mb-4\">\r\n              <div className=\"flex-1\">\r\n                {/* 회사명 (작게) */}\r\n                <p className=\"text-sm text-primary-600 dark:text-primary-400 font-semibold mb-1\">\r\n                  {getLocalizedField(currentLang, exp.company, exp.companyEn, exp.companyJa)}\r\n                </p>\r\n                {/* 직책 (크게) */}\r\n                <h3 className=\"text-2xl font-bold text-dark-900 dark:text-white mb-2 flex items-center gap-2\">\r\n                  {getLocalizedField(currentLang, exp.title, exp.titleEn, exp.titleJa)}\r\n                  {/* 🌟 토글 화살표 (항상 표시) */}\r\n                  <span className=\"text-sm\">\r\n                    {isExpanded ? (\r\n                      <FaChevronDown className=\"text-primary-600 dark:text-primary-400\" />\r\n                    ) : (\r\n                      <FaChevronRight className=\"text-gray-400\" />\r\n                    )}\r\n                  </span>\r\n                </h3>\r\n                {/* 기간 배지 */}\r\n                <span className=\"inline-flex items-center px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-700 dark:text-primary-300 rounded-full text-sm font-medium\">\r\n                  📅 {exp.period}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </button>\r\n\r\n          {/* 🌟 아코디언: 주요 내용 (펼쳤을 때만 표시) */}\r\n          {isExpanded && (\r\n            <motion.div\r\n              initial={{ opacity: 0, height: 0 }}\r\n              animate={{ opacity: 1, height: 'auto' }}\r\n              exit={{ opacity: 0, height: 0 }}\r\n              transition={{ duration: 0.3 }}\r\n              className=\"mb-6 pt-4 border-t border-gray-200 dark:border-gray-700\"\r\n            >\r\n              {/* 카테고리별 상세 내용 카드 (details가 있는 경우) */}\r\n              {exp.details && exp.details.length > 0 ? (\r\n                <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                  {exp.details.map((detail: ExperienceDetail, idx: number) => (\r\n                    <motion.div\r\n                      key={idx}\r\n                      initial={{ opacity: 0, y: 20 }}\r\n                      animate={{ opacity: 1, y: 0 }}\r\n                      transition={{ delay: idx * 0.1 }}\r\n                      className=\"bg-gradient-to-br from-white to-gray-50 dark:from-gray-800 dark:to-gray-850 rounded-lg p-5 border-2 border-gray-200 dark:border-gray-700 hover:border-primary-400 dark:hover:border-primary-600 transition-all hover:shadow-lg\"\r\n                    >\r\n                      {/* 카테고리 헤더 */}\r\n                      <div className=\"flex items-center gap-2 mb-4 pb-3 border-b border-gray-200 dark:border-gray-700\">\r\n                        <div className=\"w-2 h-2 rounded-full\" style={{ backgroundColor: iconColor }}></div>\r\n                        <h4 className=\"text-base font-bold text-dark-900 dark:text-white\">\r\n                          {getLocalizedField(currentLang, detail.category, detail.categoryEn, detail.categoryJa)}\r\n                        </h4>\r\n                      </div>\r\n                      \r\n                      {/* 항목 리스트 */}\r\n                      <ul className=\"space-y-2.5\">\r\n                        {getLocalizedArrayField(currentLang, detail.items, detail.itemsEn, detail.itemsJa).map((item: string, itemIdx: number) => (\r\n                          <motion.li\r\n                            key={itemIdx}\r\n                            initial={{ opacity: 0, x: -10 }}\r\n                            animate={{ opacity: 1, x: 0 }}\r\n                            transition={{ delay: (idx * 0.1) + (itemIdx * 0.03) }}\r\n                            className=\"flex items-start gap-2 text-sm text-dark-700 dark:text-dark-300\"\r\n                          >\r\n                            <FaCheckCircle style={{ color: iconColor }} className=\"mt-0.5 flex-shrink-0 text-xs\" />\r\n                            <span className=\"flex-1 leading-relaxed\">{item}</span>\r\n                          </motion.li>\r\n                        ))}\r\n                      </ul>\r\n                    </motion.div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                // 기존 설명 방식 (하위 호환성)\r\n                descriptionItems.length > 0 && (\r\n                  <>\r\n                    <h4 className=\"text-sm font-semibold text-dark-900 dark:text-white mb-3 flex items-center gap-2\">\r\n                      <FaCheckCircle style={{ color: iconColor }} size={14} />\r\n                      주요 내용\r\n                    </h4>\r\n                    <ul className=\"space-y-2.5 pl-1\">\r\n                      {descriptionItems.map((item, i) => (\r\n                        <li key={i} className=\"flex items-start gap-3 text-dark-600 dark:text-dark-300\">\r\n                          <span className=\"flex-shrink-0 w-1.5 h-1.5 rounded-full mt-2\" style={{ backgroundColor: iconColor }} />\r\n                          <span className=\"flex-1\">{item}</span>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </>\r\n                )\r\n              )}\r\n            </motion.div>\r\n          )}\r\n\r\n          {/* 🌟 연결된 스킬 배지 (skillIds 기반) */}\r\n          {linkedSkills.length > 0 && (\r\n            <div className=\"flex flex-wrap gap-2 mt-4\">\r\n              {linkedSkills.map((skill) => (\r\n                <Link\r\n                  key={skill._id}\r\n                  to={`/projects?skillId=${skill._id}`}\r\n                  className=\"inline-flex items-center px-3 py-1.5 rounded-lg text-sm font-medium transition-all hover:opacity-80 hover:ring-2\"\r\n                  style={{\r\n                    backgroundColor: `${skill.color}26`,\r\n                    color: skill.color,\r\n                    '--tw-ring-color': skill.color || '#3B82F6',\r\n                  } as React.CSSProperties}\r\n                  title={`${skill.name} 스킬이 사용된 프로젝트 보기`}\r\n                >\r\n                  {skill.name}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          )}\r\n          \r\n          {/* 🔄 호환성: 기존 skills 문자열 배열도 표시 (skillIds가 없을 때만) */}\r\n          {!linkedSkills.length && exp.skills && exp.skills.length > 0 && (\r\n            <div className=\"flex flex-wrap gap-2 mt-4\">\r\n              {exp.skills.map((skill) => (\r\n                <span\r\n                  key={skill}\r\n                  className=\"px-3 py-1.5 bg-secondary-100 dark:bg-secondary-900/50 text-secondary-700 dark:text-secondary-300 rounded-lg text-sm font-medium hover:bg-secondary-200 dark:hover:bg-secondary-800/50 transition-colors\"\r\n                >\r\n                  {skill}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExperienceItem;\r\n","import React from 'react'\r\nimport { FaBook, FaBriefcase, FaProjectDiagram, FaSync, FaCalendarAlt } from 'react-icons/fa'\r\n\r\ninterface DataCounts {\r\n  books: number\r\n  experiences: number\r\n  projects: number\r\n  messages: number\r\n  skills: number\r\n}\r\n\r\ninterface DashboardHomeProps {\r\n  counts: DataCounts\r\n}\r\n\r\nconst DashboardHome: React.FC<DashboardHomeProps> = ({ counts }) => {\r\n  // 사이트 활동 통계를 위한 가상 데이터 (실제로는 API에서 가져와야 함)\r\n  const siteActivityStats = {\r\n    recentUpdates: [\r\n      { type: 'book', typeName: '책', title: '최신 도서 추가', updatedAt: new Date() },\r\n      { type: 'project', typeName: '프로젝트', title: '새 프로젝트 완료', updatedAt: new Date() },\r\n      { type: 'experience', typeName: '경력', title: '경력 정보 업데이트', updatedAt: new Date() }\r\n    ],\r\n    weeklyStats: {\r\n      booksAdded: 2,\r\n      projectsCompleted: 1,\r\n      experiencesUpdated: 3\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-2xl font-bold mb-6\">관리자 설정</h2>\r\n      \r\n      {/* 콘텐츠 통계 카드 */}\r\n      <div className=\"mb-8\">\r\n        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\r\n          📊 콘텐츠 통계\r\n        </h2>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          <button className=\"bg-orange-50 dark:bg-orange-900/20 p-6 rounded-lg border border-orange-200 dark:border-orange-800 hover:bg-orange-100 dark:hover:bg-orange-900/30 transition-colors text-left w-full\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-orange-600 dark:text-orange-400\">등록된 책</p>\r\n                <p className=\"text-3xl font-bold text-orange-900 dark:text-orange-100\">{counts.books}</p>\r\n                <p className=\"text-xs text-orange-500 dark:text-orange-400 mt-1\">권</p>\r\n              </div>\r\n              <FaBook className=\"text-orange-500 text-3xl\" />\r\n            </div>\r\n          </button>\r\n\r\n          <button className=\"bg-blue-50 dark:bg-blue-900/20 p-6 rounded-lg border border-blue-200 dark:border-blue-800 hover:bg-blue-100 dark:hover:bg-blue-900/30 transition-colors text-left w-full\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-blue-600 dark:text-blue-400\">등록된 경력</p>\r\n                <p className=\"text-3xl font-bold text-blue-900 dark:text-blue-100\">{counts.experiences}</p>\r\n                <p className=\"text-xs text-blue-500 dark:text-blue-400 mt-1\">개</p>\r\n              </div>\r\n              <FaBriefcase className=\"text-blue-500 text-3xl\" />\r\n            </div>\r\n          </button>\r\n\r\n          <button className=\"bg-green-50 dark:bg-green-900/20 p-6 rounded-lg border border-green-200 dark:border-green-800 hover:bg-green-100 dark:hover:bg-green-900/30 transition-colors text-left w-full\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-green-600 dark:text-green-400\">등록된 프로젝트</p>\r\n                <p className=\"text-3xl font-bold text-green-900 dark:text-green-100\">{counts.projects}</p>\r\n                <p className=\"text-xs text-green-500 dark:text-green-400 mt-1\">개</p>\r\n              </div>\r\n              <FaProjectDiagram className=\"text-green-500 text-3xl\" />\r\n            </div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 사이트 활동 통계 카드 */}\r\n      <div className=\"mb-8\">\r\n        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\r\n          📊 사이트 활동\r\n        </h2>\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n          {/* 최근 업데이트된 콘텐츠 */}\r\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n            <div className=\"flex items-center gap-3 mb-4\">\r\n              <FaSync className=\"text-purple-500 text-xl\" />\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">최근 업데이트</h3>\r\n            </div>\r\n            <div className=\"space-y-3\">\r\n              {siteActivityStats.recentUpdates.length > 0 ? (\r\n                siteActivityStats.recentUpdates.map((item, index) => (\r\n                  <div key={`${item.type}-${index}`} className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                    <div className=\"flex items-center gap-3\">\r\n                      <div className={`w-2 h-2 rounded-full ${\r\n                        index === 0 ? 'bg-green-500' : index === 1 ? 'bg-yellow-500' : 'bg-blue-500'\r\n                      }`}></div>\r\n                      <div>\r\n                        <p className=\"text-sm font-medium text-gray-900 dark:text-white\">{item.title}</p>\r\n                        <p className=\"text-xs text-gray-500 dark:text-gray-400\">{item.typeName}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-xs text-gray-400 dark:text-gray-500\">\r\n                      {item.updatedAt.toLocaleDateString('ko-KR')}\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <p className=\"text-gray-500 dark:text-gray-400 text-sm\">최근 업데이트된 콘텐츠가 없습니다.</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 주간 통계 */}\r\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n            <div className=\"flex items-center gap-3 mb-4\">\r\n              <FaCalendarAlt className=\"text-indigo-500 text-xl\" />\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">이번 주 활동</h3>\r\n            </div>\r\n            <div className=\"space-y-4\">\r\n              <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <FaBook className=\"text-orange-500\" />\r\n                  <span className=\"text-sm text-gray-900 dark:text-white\">새로 추가된 책</span>\r\n                </div>\r\n                <span className=\"text-lg font-bold text-orange-600 dark:text-orange-400\">\r\n                  {siteActivityStats.weeklyStats.booksAdded}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <FaProjectDiagram className=\"text-green-500\" />\r\n                  <span className=\"text-sm text-gray-900 dark:text-white\">완료된 프로젝트</span>\r\n                </div>\r\n                <span className=\"text-lg font-bold text-green-600 dark:text-green-400\">\r\n                  {siteActivityStats.weeklyStats.projectsCompleted}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <FaBriefcase className=\"text-blue-500\" />\r\n                  <span className=\"text-sm text-gray-900 dark:text-white\">업데이트된 경력</span>\r\n                </div>\r\n                <span className=\"text-lg font-bold text-blue-600 dark:text-blue-400\">\r\n                  {siteActivityStats.weeklyStats.experiencesUpdated}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DashboardHome","import React, { useState } from 'react'\r\nimport { FaPlus, FaEdit, FaTrash, FaChevronDown, FaChevronRight, FaBook } from 'react-icons/fa'\r\nimport { Chapter, Learning } from '../../types'\r\nimport { formatDate } from '../../utils/dateUtils'\r\n\r\ninterface ChapterLearningListProps {\r\n  chapters: Chapter[]\r\n  onAddChapter: () => void\r\n  onEditChapter: (chapter: Chapter) => void\r\n  onDeleteChapter: (chapter: Chapter) => void\r\n  onAddLearning: (chapterId: string) => void\r\n  onEditLearning: (learning: Learning, chapterId: string) => void\r\n  onDeleteLearning: (learning: Learning, chapterId: string) => void\r\n  isAuthenticated?: boolean\r\n}\r\n\r\nconst ChapterLearningList: React.FC<ChapterLearningListProps> = ({\r\n  chapters,\r\n  onAddChapter,\r\n  onEditChapter,\r\n  onDeleteChapter,\r\n  onAddLearning,\r\n  onEditLearning,\r\n  onDeleteLearning,\r\n  isAuthenticated = true\r\n}) => {\r\n  const [expandedChapters, setExpandedChapters] = useState<Set<string>>(\r\n    new Set(chapters.map(ch => ch._id)) // 기본적으로 모두 펼쳐진 상태\r\n  )\r\n\r\n  const toggleChapter = (chapterId: string) => {\r\n    setExpandedChapters(prev => {\r\n      const newSet = new Set(prev)\r\n      if (newSet.has(chapterId)) {\r\n        newSet.delete(chapterId)\r\n      } else {\r\n        newSet.add(chapterId)\r\n      }\r\n      return newSet\r\n    })\r\n  }\r\n\r\n  const expandAll = () => {\r\n    setExpandedChapters(new Set(chapters.map(ch => ch._id)))\r\n  }\r\n\r\n  const collapseAll = () => {\r\n    setExpandedChapters(new Set())\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {/* 🌟 헤더 */}\r\n      <div className=\"flex items-center justify-between sticky top-0 bg-white dark:bg-gray-800 z-10 pb-4 border-b border-gray-200 dark:border-gray-700\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <h3 className=\"text-xl font-bold text-gray-900 dark:text-white\">\r\n            📚 목차별 학습 내용\r\n          </h3>\r\n          {chapters.length > 0 && (\r\n            <div className=\"flex gap-2 text-sm\">\r\n              <button\r\n                onClick={expandAll}\r\n                className=\"text-blue-600 hover:text-blue-700 dark:text-blue-400 hover:underline\"\r\n              >\r\n                모두 펼치기\r\n              </button>\r\n              <span className=\"text-gray-400\">|</span>\r\n              <button\r\n                onClick={collapseAll}\r\n                className=\"text-blue-600 hover:text-blue-700 dark:text-blue-400 hover:underline\"\r\n              >\r\n                모두 접기\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {isAuthenticated && (\r\n          <button\r\n            onClick={onAddChapter}\r\n            className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2 text-sm shadow-md\"\r\n          >\r\n            <FaPlus />\r\n            목차 추가\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {/* 🌟 목차 리스트 (아코디언) */}\r\n      {chapters.length > 0 ? (\r\n        <div className=\"space-y-3\">\r\n          {chapters\r\n            .sort((a, b) => a.order - b.order)\r\n            .map((chapter) => {\r\n              const isExpanded = expandedChapters.has(chapter._id)\r\n              const learningCount = chapter.learnings?.length || 0\r\n\r\n              return (\r\n                <div \r\n                  key={chapter._id} \r\n                  className=\"bg-white dark:bg-gray-800 rounded-lg border-2 border-gray-200 dark:border-gray-700 shadow-sm overflow-hidden transition-all hover:shadow-md\"\r\n                >\r\n                  {/* 🌟 목차 헤더 (클릭하여 펼치기/접기) */}\r\n                  <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-gray-700 dark:to-gray-700\">\r\n                    <div className=\"flex items-center justify-between p-4\">\r\n                      <button\r\n                        onClick={() => toggleChapter(chapter._id)}\r\n                        className=\"flex items-center gap-3 flex-1 text-left hover:opacity-80 transition-opacity\"\r\n                      >\r\n                        <div className=\"flex-shrink-0\">\r\n                          {isExpanded ? (\r\n                            <FaChevronDown className=\"text-blue-600 dark:text-blue-400 w-5 h-5\" />\r\n                          ) : (\r\n                            <FaChevronRight className=\"text-gray-400 w-5 h-5\" />\r\n                          )}\r\n                        </div>\r\n                        <div className=\"flex-1 min-w-0\">\r\n                          <div className=\"flex items-center gap-2 mb-1\">\r\n                            <span className=\"text-sm font-bold text-blue-600 dark:text-blue-400 bg-blue-100 dark:bg-blue-900/50 px-2 py-0.5 rounded\">\r\n                              Chapter {chapter.order + 1}\r\n                            </span>\r\n                            <h4 className=\"font-semibold text-gray-900 dark:text-white text-lg truncate\">\r\n                              {chapter.title}\r\n                            </h4>\r\n                          </div>\r\n                          <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                            📝 {learningCount}개의 학습 내용\r\n                          </p>\r\n                        </div>\r\n                      </button>\r\n                      \r\n                      {isAuthenticated && (\r\n                        <div className=\"flex gap-2 ml-3 flex-shrink-0\">\r\n                          <button\r\n                            onClick={(e) => {\r\n                              e.stopPropagation()\r\n                              onAddLearning(chapter._id)\r\n                            }}\r\n                            className=\"p-2 text-green-600 hover:bg-green-100 dark:hover:bg-green-900/30 rounded-lg transition-colors\"\r\n                            title=\"학습 내용 추가\"\r\n                          >\r\n                            <FaPlus className=\"w-4 h-4\" />\r\n                          </button>\r\n                          <button\r\n                            onClick={(e) => {\r\n                              e.stopPropagation()\r\n                              onEditChapter(chapter)\r\n                            }}\r\n                            className=\"p-2 text-blue-600 hover:bg-blue-100 dark:hover:bg-blue-900/30 rounded-lg transition-colors\"\r\n                            title=\"목차 수정\"\r\n                          >\r\n                            <FaEdit className=\"w-4 h-4\" />\r\n                          </button>\r\n                          <button\r\n                            onClick={(e) => {\r\n                              e.stopPropagation()\r\n                              if (confirm(`\"${chapter.title}\" 목차를 삭제하시겠습니까?\\n관련 학습 내용 ${learningCount}개도 모두 삭제됩니다.`)) {\r\n                                onDeleteChapter(chapter)\r\n                              }\r\n                            }}\r\n                            className=\"p-2 text-red-600 hover:bg-red-100 dark:hover:bg-red-900/30 rounded-lg transition-colors\"\r\n                            title=\"목차 삭제\"\r\n                          >\r\n                            <FaTrash className=\"w-4 h-4\" />\r\n                          </button>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* 🌟 목차별 학습 내용 (아코디언 콘텐츠) */}\r\n                  {isExpanded && (\r\n                    <div className=\"p-5 bg-gray-50 dark:bg-gray-800/50 border-t border-gray-200 dark:border-gray-700\">\r\n                      {learningCount > 0 ? (\r\n                        <div className=\"space-y-4\">\r\n                          {(chapter.learnings || [])\r\n                            .sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())\r\n                            .map((learning, idx) => (\r\n                            <div \r\n                              key={learning._id} \r\n                              className=\"bg-white dark:bg-gray-800 p-5 rounded-lg border border-gray-200 dark:border-gray-600 shadow-sm hover:shadow-md transition-shadow\"\r\n                            >\r\n                              <div className=\"flex items-start justify-between mb-3\">\r\n                                <div className=\"flex items-center gap-2 flex-1\">\r\n                                  <span className=\"flex-shrink-0 text-xs font-bold text-white bg-blue-600 dark:bg-blue-500 px-2 py-1 rounded-full\">\r\n                                    #{idx + 1}\r\n                                  </span>\r\n                                  <h5 className=\"font-semibold text-gray-900 dark:text-white text-lg\">\r\n                                    {learning.topic}\r\n                                  </h5>\r\n                                </div>\r\n                                {isAuthenticated && (\r\n                                  <div className=\"flex gap-1 flex-shrink-0 ml-2\">\r\n                                    <button\r\n                                      onClick={() => onEditLearning(learning, chapter._id)}\r\n                                      className=\"p-1.5 text-blue-600 hover:bg-blue-100 dark:hover:bg-blue-900/30 rounded transition-colors\"\r\n                                      title=\"수정\"\r\n                                    >\r\n                                      <FaEdit className=\"w-3.5 h-3.5\" />\r\n                                    </button>\r\n                                    <button\r\n                                      onClick={() => {\r\n                                        if (confirm(`\"${learning.topic}\" 학습 내용을 삭제하시겠습니까?`)) {\r\n                                          onDeleteLearning(learning, chapter._id)\r\n                                        }\r\n                                      }}\r\n                                      className=\"p-1.5 text-red-600 hover:bg-red-100 dark:hover:bg-red-900/30 rounded transition-colors\"\r\n                                      title=\"삭제\"\r\n                                    >\r\n                                      <FaTrash className=\"w-3.5 h-3.5\" />\r\n                                    </button>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                              \r\n                              {/* 🌟 ReactQuill로 작성된 HTML 콘텐츠 렌더링 */}\r\n                              <div \r\n                                className=\"prose prose-sm max-w-none dark:prose-invert text-gray-700 dark:text-gray-300\r\n                                  prose-headings:text-gray-900 dark:prose-headings:text-white\r\n                                  prose-p:text-gray-700 dark:prose-p:text-gray-300\r\n                                  prose-code:bg-gray-200 dark:prose-code:bg-gray-700 prose-code:text-red-600 dark:prose-code:text-red-400 prose-code:px-1 prose-code:rounded\r\n                                  prose-pre:bg-gray-900 dark:prose-pre:bg-gray-950 prose-pre:text-gray-100\r\n                                  prose-a:text-blue-600 dark:prose-a:text-blue-400\"\r\n                                dangerouslySetInnerHTML={{ __html: learning.content }}\r\n                              />\r\n                              \r\n                              <div className=\"mt-4 pt-3 border-t border-gray-200 dark:border-gray-700 flex items-center justify-between text-xs text-gray-500 dark:text-gray-400\">\r\n                                <span>📅 작성일: {formatDate(learning.createdAt)}</span>\r\n                                {learning.updatedAt && learning.updatedAt !== learning.createdAt && (\r\n                                  <span>✏️ 수정일: {formatDate(learning.updatedAt)}</span>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"text-center py-10 bg-white dark:bg-gray-800 rounded-lg border border-dashed border-gray-300 dark:border-gray-600\">\r\n                          <FaBook className=\"mx-auto text-3xl mb-3 text-gray-400 opacity-50\" />\r\n                          <p className=\"text-gray-500 dark:text-gray-400 mb-3\">\r\n                            이 목차에 아직 학습 내용이 없습니다.\r\n                          </p>\r\n                          {isAuthenticated && (\r\n                            <button\r\n                              onClick={() => onAddLearning(chapter._id)}\r\n                              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors inline-flex items-center gap-2\"\r\n                            >\r\n                              <FaPlus />\r\n                              첫 번째 학습 내용 추가하기\r\n                            </button>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })}\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center py-16 bg-gray-50 dark:bg-gray-800 rounded-lg border-2 border-dashed border-gray-300 dark:border-gray-600\">\r\n          <FaBook className=\"mx-auto text-5xl mb-4 text-gray-400\" />\r\n          <p className=\"text-lg text-gray-600 dark:text-gray-400 mb-2 font-medium\">\r\n            아직 목차가 없습니다.\r\n          </p>\r\n          <p className=\"text-sm text-gray-500 dark:text-gray-500 mb-6\">\r\n            먼저 목차를 추가하고, 각 목차에 학습 내용을 기록하세요.\r\n          </p>\r\n          {isAuthenticated && (\r\n            <button\r\n              onClick={onAddChapter}\r\n              className=\"px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors inline-flex items-center gap-2 shadow-md\"\r\n            >\r\n              <FaPlus />\r\n              첫 번째 목차 추가하기\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChapterLearningList\r\n","import React, { useEffect } from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport { FaCheck, FaExclamationTriangle, FaInfo, FaTimes } from 'react-icons/fa'\r\nimport { Toast as ToastType } from '../../hooks/useToast'\r\n\r\ninterface ToastProps {\r\n  toast: ToastType\r\n  onClose: (id: string) => void\r\n}\r\n\r\nconst Toast: React.FC<ToastProps> = ({ toast, onClose }) => {\r\n  const getIcon = () => {\r\n    switch (toast.type) {\r\n      case 'success':\r\n        return <FaCheck className=\"text-green-500\" />\r\n      case 'error':\r\n        return <FaExclamationTriangle className=\"text-red-500\" />\r\n      case 'warning':\r\n        return <FaExclamationTriangle className=\"text-yellow-500\" />\r\n      case 'info':\r\n        return <FaInfo className=\"text-blue-500\" />\r\n      default:\r\n        return <FaInfo className=\"text-blue-500\" />\r\n    }\r\n  }\r\n\r\n  const getBgColor = () => {\r\n    switch (toast.type) {\r\n      case 'success':\r\n        return 'bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-800'\r\n      case 'error':\r\n        return 'bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-800'\r\n      case 'warning':\r\n        return 'bg-yellow-50 dark:bg-yellow-900/20 border-yellow-200 dark:border-yellow-800'\r\n      case 'info':\r\n        return 'bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-800'\r\n      default:\r\n        return 'bg-gray-50 dark:bg-gray-900/20 border-gray-200 dark:border-gray-800'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: -50, scale: 0.95 }}\r\n      animate={{ opacity: 1, y: 0, scale: 1 }}\r\n      exit={{ opacity: 0, y: -20, scale: 0.95 }}\r\n      transition={{ duration: 0.2 }}\r\n      className={`\r\n        relative flex items-start gap-3 p-4 rounded-lg border shadow-lg\r\n        ${getBgColor()}\r\n        max-w-md w-full\r\n      `}\r\n    >\r\n      <div className=\"flex-shrink-0 mt-0.5\">\r\n        {getIcon()}\r\n      </div>\r\n      \r\n      <div className=\"flex-1 min-w-0\">\r\n        <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n          {toast.title}\r\n        </h4>\r\n        {toast.message && (\r\n          <p className=\"mt-1 text-sm text-gray-600 dark:text-gray-300\">\r\n            {toast.message}\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      <button\r\n        onClick={() => onClose(toast.id)}\r\n        className=\"flex-shrink-0 p-1 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-full transition-colors\"\r\n      >\r\n        <FaTimes className=\"w-3 h-3 text-gray-400\" />\r\n      </button>\r\n    </motion.div>\r\n  )\r\n}\r\n\r\ninterface ToastContainerProps {\r\n  toasts: ToastType[]\r\n  onClose: (id: string) => void\r\n}\r\n\r\nconst ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onClose }) => {\r\n  return (\r\n    <div className=\"fixed top-4 right-4 z-50 space-y-2\">\r\n      <AnimatePresence>\r\n        {toasts.map((toast) => (\r\n          <Toast\r\n            key={toast.id}\r\n            toast={toast}\r\n            onClose={onClose}\r\n          />\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ToastContainer\r\nexport { Toast }\r\n","import React, { useState, useMemo, useCallback, useEffect } from 'react'\r\nimport { FaPlus, FaEdit, FaTrash, FaEye, FaTimes, FaBook, FaStar } from 'react-icons/fa'\r\nimport { Book, BookFormData, Learning, Chapter } from '../../types'\r\nimport BookForm from '../forms/BookForm'\r\nimport ChapterForm from '../forms/ChapterForm'\r\nimport LearningForm from '../forms/LearningForm'\r\nimport ChapterLearningList from '../common/ChapterLearningList'\r\nimport ToastContainer from '../common/Toast'\r\nimport { useBookManagerData } from '../../hooks/useBookManagerData'\r\nimport { useCRUDManager } from '../../hooks/useCRUDManager'\r\nimport { useOptimisticArrayUpdate } from '../../hooks/useOptimisticUpdate'\r\nimport { useAbortController } from '../../hooks/useAbortController'\r\nimport { useToastHelpers } from '../../hooks/useToast'\r\nimport { chaptersAPI, learningsAPI } from '../../services/api'\r\nimport { formatDate } from '../../utils/dateUtils'\r\n\r\ninterface BookManagerProps {\r\n  bookFilter?: 'all' | 'five-star' | 'category'\r\n  bookSearchTerm?: string\r\n  selectedBookCategory?: string\r\n  initialEditId?: string  // 🌟 URL state로 전달된 수정 대상 ID\r\n}\r\n\r\nconst BookManager: React.FC<BookManagerProps> = ({ \r\n  bookFilter = 'all', \r\n  bookSearchTerm = '', \r\n  selectedBookCategory = '',\r\n  initialEditId  // 🌟 초기 수정 ID 받기\r\n}) => {\r\n  const { books, isLoading, createBook, updateBook, deleteBook } = useBookManagerData()\r\n  const { success, error } = useToastHelpers()\r\n  const { createAbortController } = useAbortController()\r\n  \r\n  // Toast 상태\r\n  const { toasts, hideToast } = useToastHelpers()\r\n  \r\n  // 서적 CRUD 관리\r\n  const [bookState, bookActions] = useCRUDManager<Book>({\r\n    onSave: async (data: BookFormData, editingItem) => {\r\n      console.log('📚 BookManager - 저장 시작:', data)\r\n      console.log('🔗 skillIds:', data.skillIds)\r\n      \r\n      if (editingItem) {\r\n        console.log('✏️ 서적 수정 모드:', editingItem._id)\r\n        const result = await updateBook(editingItem._id, data)\r\n        console.log('✅ 수정 결과:', result)\r\n        success('서적 수정 완료', '서적 정보가 성공적으로 수정되었습니다.')\r\n      } else {\r\n        console.log('➕ 서적 생성 모드')\r\n        const result = await createBook(data)\r\n        console.log('✅ 생성 결과:', result)\r\n        success('서적 추가 완료', '새로운 서적이 성공적으로 추가되었습니다.')\r\n      }\r\n    },\r\n    onDelete: async (book: Book) => {\r\n      await deleteBook(book._id)\r\n      success('서적 삭제 완료', `${book.title}이(가) 삭제되었습니다.`)\r\n    },\r\n    onError: (err) => {\r\n      console.error('❌ 서적 저장 실패:', err)\r\n      error('작업 실패', err.message || '알 수 없는 오류가 발생했습니다.')\r\n    }\r\n  })\r\n\r\n  // 목차 낙관적 업데이트\r\n  const {\r\n    data: chapters,\r\n    optimisticAdd: optimisticAddChapter,\r\n    optimisticUpdateItem: optimisticUpdateChapter,\r\n    optimisticDelete: optimisticDeleteChapter,\r\n    resetData: resetChapters\r\n  } = useOptimisticArrayUpdate<Chapter>([])\r\n\r\n  // 학습 내용 낙관적 업데이트 (현재는 사용하지 않지만 향후 확장을 위해 유지)\r\n  // const {\r\n  //   data: learnings,\r\n  //   optimisticAdd: optimisticAddLearning,\r\n  //   optimisticUpdateItem: optimisticUpdateLearning,\r\n  //   optimisticDelete: optimisticDeleteLearning,\r\n  //   resetData: resetLearnings\r\n  // } = useOptimisticArrayUpdate<Learning>([])\r\n\r\n  // 서적 상세보기 모달 상태\r\n  const [showBookDetailModal, setShowBookDetailModal] = useState(false)\r\n  const [selectedBook, setSelectedBook] = useState<Book | null>(null)\r\n  const [selectedChapterId, setSelectedChapterId] = useState<string | null>(null)\r\n\r\n  // 폼 상태\r\n  const [showChapterForm, setShowChapterForm] = useState(false)\r\n  const [editingChapter, setEditingChapter] = useState<Chapter | null>(null)\r\n  const [showLearningForm, setShowLearningForm] = useState(false)\r\n  const [editingLearning, setEditingLearning] = useState<Learning | null>(null)\r\n  const [hasAutoOpened, setHasAutoOpened] = useState(false)  // 🌟 자동 열림 추적\r\n\r\n  // 🌟 initialEditId가 전달되면 자동으로 해당 서적 수정 모드로 전환 (한 번만)\r\n  useEffect(() => {\r\n    if (initialEditId && books.length > 0 && !hasAutoOpened) {\r\n      const bookToEdit = books.find(book => book._id === initialEditId)\r\n      if (bookToEdit) {\r\n        console.log('🎯 자동 수정 모드 활성화:', bookToEdit.title)\r\n        bookActions.handleEdit(bookToEdit)\r\n        setHasAutoOpened(true)  // 🌟 한 번만 실행되도록 표시\r\n      }\r\n    }\r\n  }, [initialEditId, books, hasAutoOpened, bookActions])\r\n\r\n  // 필터링된 서적 목록 계산\r\n  const filteredBooks = useMemo(() => {\r\n    let filtered = [...books]\r\n\r\n    // 필터 적용\r\n    if (bookFilter === 'five-star') {\r\n      filtered = filtered.filter(book => book.rating === 5)\r\n    } else if (bookFilter === 'category' && selectedBookCategory) {\r\n      filtered = filtered.filter(book => book.category === selectedBookCategory)\r\n    }\r\n\r\n    // 검색어 적용\r\n    if (bookSearchTerm) {\r\n      const searchLower = bookSearchTerm.toLowerCase()\r\n      filtered = filtered.filter(book => \r\n        book.title.toLowerCase().includes(searchLower) ||\r\n        book.author.toLowerCase().includes(searchLower) ||\r\n        book.category.toLowerCase().includes(searchLower)\r\n      )\r\n    }\r\n\r\n    return filtered.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())\r\n  }, [books, bookFilter, bookSearchTerm, selectedBookCategory])\r\n\r\n  // 서적 상세보기 모달 열기\r\n  const handleBookDetailClick = useCallback(async (book: Book) => {\r\n    setSelectedBook(book)\r\n    setShowBookDetailModal(true)\r\n    setSelectedChapterId(null)\r\n\r\n    try {\r\n      const abortController = createAbortController()\r\n      \r\n      // 목차만 가져오기 (학습 내용은 populate되어 있음)\r\n      const chaptersResponse = await chaptersAPI.getByBook(book._id)\r\n\r\n      if (!abortController.signal.aborted) {\r\n        resetChapters(chaptersResponse.data || [])\r\n      }\r\n    } catch (err) {\r\n      if (!(err as Error).name?.includes('AbortError')) {\r\n        error('데이터 로드 실패', '서적 정보를 불러오는데 실패했습니다.')\r\n      }\r\n    }\r\n  }, [createAbortController, resetChapters, error])\r\n\r\n  // 목차 관리 핸들러들\r\n  const handleSaveChapter = useCallback(async (chapterData: { title: string; order: number }) => {\r\n    if (!selectedBook) return\r\n\r\n    try {\r\n      if (editingChapter) {\r\n        // 수정\r\n        await optimisticUpdateChapter(\r\n          editingChapter._id,\r\n          chapterData,\r\n          () => chaptersAPI.update(selectedBook._id, editingChapter._id, chapterData).then(res => res.data)\r\n        )\r\n        success('목차 수정 완료', '목차가 성공적으로 수정되었습니다.')\r\n        setShowChapterForm(false)\r\n        setEditingChapter(null)\r\n      } else {\r\n        // 추가\r\n        await optimisticAddChapter(\r\n          { ...chapterData, _id: '', learnings: [], createdAt: new Date().toISOString(), updatedAt: new Date().toISOString() } as Chapter,\r\n          () => chaptersAPI.create(selectedBook._id, chapterData).then(res => res.data)\r\n        )\r\n        success('목차 추가 완료', '새로운 목차가 추가되었습니다.')\r\n        setShowChapterForm(false)\r\n      }\r\n    } catch (err) {\r\n      error('목차 작업 실패', '목차 작업에 실패했습니다.')\r\n    }\r\n  }, [selectedBook, editingChapter, optimisticAddChapter, optimisticUpdateChapter, success, error])\r\n\r\n  const handleDeleteChapter = useCallback(async (chapter: Chapter) => {\r\n    if (!selectedBook) return\r\n\r\n    try {\r\n      await optimisticDeleteChapter(\r\n        chapter._id,\r\n        () => chaptersAPI.delete(selectedBook._id, chapter._id).then(() => {})\r\n      )\r\n      success('목차 삭제 완료', '목차가 삭제되었습니다.')\r\n    } catch (err) {\r\n      error('목차 삭제 실패', '목차 삭제에 실패했습니다.')\r\n    }\r\n  }, [selectedBook, optimisticDeleteChapter, success, error])\r\n\r\n  // 학습 내용 관리 핸들러들\r\n  const handleAddLearningClick = useCallback((chapterId: string) => {\r\n    setSelectedChapterId(chapterId)\r\n    setShowLearningForm(true)\r\n    setEditingLearning(null)\r\n  }, [])\r\n\r\n  const handleEditLearningClick = useCallback((learning: Learning, chapterId: string) => {\r\n    setSelectedChapterId(chapterId)\r\n    setEditingLearning(learning)\r\n    setShowLearningForm(true)\r\n  }, [])\r\n\r\n  const handleDeleteLearningClick = useCallback(async (learning: Learning, chapterId: string) => {\r\n    if (!selectedBook) return\r\n\r\n    try {\r\n      await learningsAPI.deleteForChapter(selectedBook._id, chapterId, learning._id)\r\n      \r\n      // 목차 데이터 새로고침 (학습 내용이 populate되어 있음)\r\n      const chaptersResponse = await chaptersAPI.getByBook(selectedBook._id)\r\n      resetChapters(chaptersResponse.data || [])\r\n      \r\n      success('학습 내용 삭제 완료', '학습 내용이 삭제되었습니다.')\r\n    } catch (err) {\r\n      error('학습 내용 삭제 실패', '학습 내용 삭제에 실패했습니다.')\r\n    }\r\n  }, [selectedBook, resetChapters, success, error])\r\n\r\n  const handleSaveLearning = useCallback(async (learningData: { topic: string; content: string }) => {\r\n    if (!selectedBook || !selectedChapterId) return\r\n\r\n    try {\r\n      if (editingLearning) {\r\n        // 수정\r\n        await learningsAPI.updateForChapter(selectedBook._id, selectedChapterId, editingLearning._id, learningData)\r\n        success('학습 내용 수정 완료', '학습 내용이 성공적으로 수정되었습니다.')\r\n      } else {\r\n        // 추가\r\n        await learningsAPI.createForChapter(selectedBook._id, selectedChapterId, learningData)\r\n        success('학습 내용 추가 완료', '새로운 학습 내용이 추가되었습니다.')\r\n      }\r\n      \r\n      // 목차 데이터 새로고침\r\n      const chaptersResponse = await chaptersAPI.getByBook(selectedBook._id)\r\n      resetChapters(chaptersResponse.data || [])\r\n      \r\n      setShowLearningForm(false)\r\n      setEditingLearning(null)\r\n      setSelectedChapterId(null)\r\n    } catch (err) {\r\n      error('작업 실패', '학습 내용 저장에 실패했습니다.')\r\n    }\r\n  }, [selectedBook, selectedChapterId, editingLearning, resetChapters, success, error])\r\n\r\n  // 별점 렌더링\r\n  const renderRating = (rating: number) => {\r\n    return (\r\n      <div className=\"flex items-center gap-0.5\">\r\n        {Array.from({ length: 5 }, (_, i) => (\r\n          <FaStar \r\n            key={i} \r\n            className={`text-sm ${i < rating ? 'text-yellow-500' : 'text-gray-300 dark:text-gray-600'}`}\r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // 로딩 상태\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* Toast 알림 */}\r\n      <ToastContainer toasts={toasts} onClose={hideToast} />\r\n\r\n      <div className=\"space-y-6\">\r\n        {/* 🌟 헤더 및 서적 추가 버튼 */}\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">서적 관리</h2>\r\n            <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\r\n              총 {filteredBooks.length}권의 서적\r\n            </p>\r\n          </div>\r\n          <button\r\n            onClick={bookActions.handleCreate}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors shadow-md\"\r\n          >\r\n            <FaPlus />\r\n            서적 추가\r\n          </button>\r\n        </div>\r\n\r\n        {/* 🌟 서적 리스트 (테이블 형식) */}\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden\">\r\n          {filteredBooks.length === 0 ? (\r\n            <div className=\"text-center py-12\">\r\n              <FaBook className=\"text-6xl text-gray-400 mx-auto mb-4\" />\r\n              <p className=\"text-xl text-gray-600 dark:text-gray-400 mb-2\">\r\n                등록된 서적이 없습니다\r\n              </p>\r\n              <p className=\"text-sm text-gray-500 dark:text-gray-500\">\r\n                상단의 '서적 추가' 버튼을 눌러 새로운 서적을 등록하세요\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"w-full\">\r\n                <thead>\r\n                  <tr className=\"bg-gray-50 dark:bg-gray-700 border-b border-gray-200 dark:border-gray-600\">\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      서적 정보\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      저자\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      카테고리\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      평점\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      읽은 날짜\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      관리\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\r\n                  {filteredBooks.map((book) => (\r\n                    <tr \r\n                      key={book._id} \r\n                      onClick={() => handleBookDetailClick(book)}\r\n                      className=\"hover:bg-gray-50 dark:hover:bg-gray-700 cursor-pointer transition-colors\"\r\n                    >\r\n                      <td className=\"px-6 py-4\">\r\n                        <div className=\"flex items-center gap-3\">\r\n                          {book.coverImage ? (\r\n                            <img \r\n                              src={book.coverImage} \r\n                              alt={book.title}\r\n                              className=\"w-12 h-16 object-cover rounded shadow-sm\"\r\n                            />\r\n                          ) : (\r\n                            <div className=\"w-12 h-16 bg-gradient-to-br from-blue-400 to-blue-600 rounded flex items-center justify-center shadow-sm\">\r\n                              <FaBook className=\"text-white text-lg\" />\r\n                            </div>\r\n                          )}\r\n                          <div>\r\n                            <p className=\"font-semibold text-gray-900 dark:text-white\">\r\n                              {book.title}\r\n                            </p>\r\n                            <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-0.5\">\r\n                              {book.learnings?.length || 0}개의 학습 내용\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <p className=\"text-sm text-gray-900 dark:text-gray-300\">\r\n                          {book.author}\r\n                        </p>\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\">\r\n                          {book.category}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        {renderRating(book.rating)}\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <p className=\"text-sm text-gray-900 dark:text-gray-300\">\r\n                          {formatDate(book.readDate)}\r\n                        </p>\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <div className=\"flex items-center justify-end gap-2\">\r\n                          <button\r\n                            onClick={(e) => {\r\n                              e.stopPropagation()\r\n                              handleBookDetailClick(book)\r\n                            }}\r\n                            className=\"p-2 text-blue-600 hover:bg-blue-100 dark:hover:bg-blue-900 rounded-lg transition-colors\"\r\n                            title=\"상세보기\"\r\n                          >\r\n                            <FaEye />\r\n                          </button>\r\n                          <button\r\n                            onClick={(e) => {\r\n                              e.stopPropagation()\r\n                              bookActions.handleEdit(book)\r\n                            }}\r\n                            className=\"p-2 text-yellow-600 hover:bg-yellow-100 dark:hover:bg-yellow-900 rounded-lg transition-colors\"\r\n                            title=\"수정\"\r\n                          >\r\n                            <FaEdit />\r\n                          </button>\r\n                          <button\r\n                            onClick={(e) => {\r\n                              e.stopPropagation()\r\n                              bookActions.handleDelete(book)\r\n                            }}\r\n                            disabled={bookState.isDeleting}\r\n                            className=\"p-2 text-red-600 hover:bg-red-100 dark:hover:bg-red-900 rounded-lg transition-colors disabled:opacity-50\"\r\n                            title=\"삭제\"\r\n                          >\r\n                            <FaTrash />\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* 서적 폼 모달 */}\r\n        {bookState.showForm && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\r\n              <div className=\"p-6\">\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n                    {bookState.editingItem ? '서적 수정' : '서적 추가'}\r\n                  </h2>\r\n                  <button\r\n                    onClick={bookActions.handleCancel}\r\n                    className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\r\n                  >\r\n                    <FaTimes />\r\n                  </button>\r\n                </div>\r\n                <BookForm\r\n                  data={bookState.editingItem}\r\n                  onSave={bookActions.handleSave}\r\n                  onCancel={bookActions.handleCancel}\r\n                  isSaving={bookState.isSaving}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* 🌟 서적 상세보기 모달 */}\r\n        {showBookDetailModal && selectedBook && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-6xl w-full max-h-[90vh] flex flex-col shadow-2xl\">\r\n              {/* 🌟 고정 헤더 */}\r\n              <div className=\"flex-shrink-0 border-b border-gray-200 dark:border-gray-700 p-6\">\r\n                <div className=\"flex items-start justify-between\">\r\n                  <div className=\"flex items-start gap-4 flex-1\">\r\n                    {selectedBook.coverImage ? (\r\n                      <img \r\n                        src={selectedBook.coverImage} \r\n                        alt={selectedBook.title}\r\n                        className=\"w-20 h-28 object-cover rounded shadow-lg flex-shrink-0\"\r\n                      />\r\n                    ) : (\r\n                      <div className=\"w-20 h-28 bg-gradient-to-br from-blue-400 to-blue-600 rounded flex items-center justify-center shadow-lg flex-shrink-0\">\r\n                        <FaBook className=\"text-white text-2xl\" />\r\n                      </div>\r\n                    )}\r\n                    <div className=\"flex-1 min-w-0\">\r\n                      <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2 truncate\">\r\n                        {selectedBook.title}\r\n                      </h2>\r\n                      <p className=\"text-gray-600 dark:text-gray-400 mb-3\">\r\n                        저자: {selectedBook.author}\r\n                      </p>\r\n                      <div className=\"flex items-center gap-3 flex-wrap\">\r\n                        <span className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\">\r\n                          {selectedBook.category}\r\n                        </span>\r\n                        {renderRating(selectedBook.rating)}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    onClick={() => {\r\n                      setShowBookDetailModal(false)\r\n                      setSelectedChapterId(null)\r\n                    }}\r\n                    className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors flex-shrink-0\"\r\n                  >\r\n                    <FaTimes className=\"text-xl\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* 🌟 스크롤 가능한 콘텐츠 영역 */}\r\n              <div className=\"flex-1 overflow-y-auto p-6\">\r\n                <ChapterLearningList\r\n                  chapters={chapters}\r\n                  onAddChapter={() => {\r\n                    setShowChapterForm(true)\r\n                    setEditingChapter(null)\r\n                  }}\r\n                  onEditChapter={(chapter) => {\r\n                    setEditingChapter(chapter)\r\n                    setShowChapterForm(true)\r\n                  }}\r\n                  onDeleteChapter={handleDeleteChapter}\r\n                  onAddLearning={handleAddLearningClick}\r\n                  onEditLearning={handleEditLearningClick}\r\n                  onDeleteLearning={handleDeleteLearningClick}\r\n                  isAuthenticated={true}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* 🌟 목차 폼 모달 */}\r\n        {showChapterForm && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-[60]\">\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-md w-full mx-4 shadow-2xl\">\r\n              <ChapterForm\r\n                chapter={editingChapter}\r\n                onSave={handleSaveChapter}\r\n                onCancel={() => {\r\n                  setShowChapterForm(false)\r\n                  setEditingChapter(null)\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* 🌟 학습 내용 폼 모달 */}\r\n        {showLearningForm && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-[60] p-4\">\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto shadow-2xl\">\r\n              <LearningForm\r\n                learning={editingLearning}\r\n                onSave={handleSaveLearning}\r\n                onCancel={() => {\r\n                  setShowLearningForm(false)\r\n                  setEditingLearning(null)\r\n                  setSelectedChapterId(null)\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BookManager\r\n","import React, { useState, useMemo, useEffect } from 'react'\nimport { FaPlus, FaEdit, FaTrash, FaVideo, FaStar } from 'react-icons/fa'\nimport { VideoLearning, VideoLearningFormData } from '../../types'\nimport { useVideoLearningManagerData } from '../../hooks/useVideoLearnings'\nimport { useCRUDManager } from '../../hooks/useCRUDManager'\nimport { useToastHelpers } from '../../hooks/useToast'\nimport VideoLearningForm from '../forms/VideoLearningForm'\nimport { formatDate } from '../../utils/dateUtils'\nimport { extractUniqueCategories } from '../../utils/categoryUtils'\nimport { extractYouTubeId, getYouTubeThumbnail } from '../../utils/videoUtils'\n\ninterface VideoLearningManagerProps {\n  initialEditId?: string  // 🌟 URL state로 전달된 수정 대상 ID\n}\n\nconst VideoLearningManager: React.FC<VideoLearningManagerProps> = ({ initialEditId }) => {\n  const { success, error } = useToastHelpers()\n  const { \n    videoLearnings, \n    isLoading, \n    createVideoLearning, \n    updateVideoLearning, \n    deleteVideoLearning \n  } = useVideoLearningManagerData()\n\n  // 영상 학습 CRUD 관리\n  const [videoState, videoActions] = useCRUDManager<VideoLearning>({\n    onSave: async (data: VideoLearningFormData, editingItem) => {\n      console.log('📹 VideoLearningManager - 저장 시작:', data)\n      console.log('🔗 skillIds:', data.skillIds)\n      \n      if (editingItem) {\n        console.log('✏️ 영상 학습 수정 모드:', editingItem._id)\n        const result = await updateVideoLearning(editingItem._id, data)\n        console.log('✅ 수정 결과:', result)\n        if (result.success) {\n          success('영상 학습 수정 완료', '영상 학습 정보가 성공적으로 수정되었습니다.')\n        }\n      } else {\n        console.log('➕ 영상 학습 생성 모드')\n        const result = await createVideoLearning(data)\n        console.log('✅ 생성 결과:', result)\n        if (result.success) {\n          success('영상 학습 추가 완료', '새로운 영상 학습이 성공적으로 추가되었습니다.')\n        }\n      }\n    },\n    onDelete: async (video: VideoLearning) => {\n      await deleteVideoLearning(video._id)\n      success('영상 학습 삭제 완료', `${video.title}이(가) 삭제되었습니다.`)\n    },\n    onError: (err) => {\n      error('작업 실패', err.message || '알 수 없는 오류가 발생했습니다.')\n    }\n  })\n\n  // 카테고리 필터\n  const [categoryFilter, setCategoryFilter] = useState<string>('all')\n  const [hasAutoOpened, setHasAutoOpened] = useState(false)  // 🌟 자동 열림 추적\n  \n  // 동적 카테고리 추출\n  const availableCategories = useMemo(() => \n    extractUniqueCategories(videoLearnings), \n    [videoLearnings]\n  )\n\n  // 필터링된 영상 목록\n  const filteredVideos = useMemo(() => {\n    if (categoryFilter === 'all') return videoLearnings\n    return videoLearnings.filter(video => video.category === categoryFilter)\n  }, [videoLearnings, categoryFilter])\n\n  // 🌟 initialEditId가 전달되면 자동으로 해당 영상 수정 모드로 전환 (한 번만)\n  useEffect(() => {\n    if (initialEditId && videoLearnings.length > 0 && !hasAutoOpened) {\n      const videoToEdit = videoLearnings.find(video => video._id === initialEditId)\n      if (videoToEdit) {\n        console.log('🎯 자동 수정 모드 활성화:', videoToEdit.title)\n        videoActions.handleEdit(videoToEdit)\n        setHasAutoOpened(true)  // 🌟 한 번만 실행되도록 표시\n      }\n    }\n  }, [initialEditId, videoLearnings, hasAutoOpened, videoActions])\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center py-12\">\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* 헤더 */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white flex items-center gap-2\">\n            <FaVideo className=\"text-red-600\" /> 영상 학습 관리\n          </h2>\n          <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n            유튜브 영상을 통한 학습 기록을 관리합니다\n          </p>\n        </div>\n        {!videoState.showForm && (\n          <button\n            onClick={videoActions.handleCreate}\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors font-medium\"\n          >\n            <FaPlus /> 새 영상 추가\n          </button>\n        )}\n      </div>\n\n      {/* 카테고리 필터 */}\n      {!videoState.showForm && availableCategories.length > 0 && (\n        <div className=\"flex gap-2 flex-wrap\">\n          <button\n            onClick={() => setCategoryFilter('all')}\n            className={`px-4 py-2 rounded-lg transition-colors font-medium ${\n              categoryFilter === 'all'\n                ? 'bg-primary-600 text-white'\n                : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600'\n            }`}\n          >\n            전체 ({videoLearnings.length})\n          </button>\n          {availableCategories.map((cat) => {\n            const count = videoLearnings.filter(v => v.category === cat).length\n            return (\n              <button\n                key={cat}\n                onClick={() => setCategoryFilter(cat)}\n                className={`px-4 py-2 rounded-lg transition-colors font-medium ${\n                  categoryFilter === cat\n                    ? 'bg-primary-600 text-white'\n                    : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600'\n                }`}\n              >\n                {cat} ({count})\n              </button>\n            )\n          })}\n        </div>\n      )}\n\n      {/* 폼 */}\n      {videoState.showForm && (\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md border border-gray-200 dark:border-gray-700\">\n          <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-6\">\n            {videoState.editingItem ? '영상 학습 수정' : '새 영상 학습 추가'}\n          </h3>\n          <VideoLearningForm\n            data={videoState.editingItem || undefined}\n            onSave={videoActions.handleSave}\n            onCancel={videoActions.handleCancel}\n            isSaving={videoState.isSaving}\n            availableCategories={availableCategories}\n          />\n        </div>\n      )}\n\n      {/* 영상 목록 */}\n      {!videoState.showForm && (\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {filteredVideos.map((video) => {\n            const videoId = video.videoId\n            const thumbnailUrl = videoId ? getYouTubeThumbnail(videoId, 'hqdefault') : null\n\n            return (\n              <div\n                key={video._id}\n                className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden border border-gray-200 dark:border-gray-700 hover:shadow-lg transition-shadow\"\n              >\n                {/* 썸네일 */}\n                {thumbnailUrl && (\n                  <div className=\"relative aspect-video bg-gray-200 dark:bg-gray-700\">\n                    <img\n                      src={thumbnailUrl}\n                      alt={video.title}\n                      className=\"w-full h-full object-cover\"\n                    />\n                    <div className=\"absolute top-2 right-2 bg-black/70 px-2 py-1 rounded text-white text-xs font-medium\">\n                      YouTube\n                    </div>\n                  </div>\n                )}\n\n                {/* 내용 */}\n                <div className=\"p-4\">\n                  <div className=\"flex items-start justify-between mb-2\">\n                    <span className=\"px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded text-xs font-medium\">\n                      {video.category}\n                    </span>\n                    {video.rating && (\n                      <div className=\"flex items-center gap-1\">\n                        {Array.from({ length: 5 }, (_, i) => (\n                          <FaStar\n                            key={i}\n                            className={`text-xs ${\n                              i < video.rating! ? 'text-yellow-500' : 'text-gray-300 dark:text-gray-600'\n                            }`}\n                          />\n                        ))}\n                      </div>\n                    )}\n                  </div>\n\n                  <h4 className=\"font-bold text-gray-900 dark:text-white mb-2 line-clamp-2\">\n                    {video.title}\n                  </h4>\n\n                  {video.purpose && (\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-3 line-clamp-2\">\n                      {video.purpose}\n                    </p>\n                  )}\n\n                  <div className=\"flex items-center gap-2 text-xs text-gray-500 dark:text-gray-400 mb-4\">\n                    <span>{formatDate(video.watchDate)}</span>\n                    {video.skillIds && video.skillIds.length > 0 && (\n                      <>\n                        <span>•</span>\n                        <span>스킬 {video.skillIds.length}개</span>\n                      </>\n                    )}\n                  </div>\n\n                  {/* 액션 버튼 */}\n                  <div className=\"flex gap-2\">\n                    <button\n                      onClick={() => videoActions.handleEdit(video)}\n                      className=\"flex-1 flex items-center justify-center gap-2 px-3 py-2 bg-yellow-500 hover:bg-yellow-600 text-white rounded-lg transition-colors text-sm font-medium\"\n                    >\n                      <FaEdit /> 수정\n                    </button>\n                    <button\n                      onClick={() => videoActions.handleDelete(video)}\n                      className=\"flex-1 flex items-center justify-center gap-2 px-3 py-2 bg-red-500 hover:bg-red-600 text-white rounded-lg transition-colors text-sm font-medium\"\n                    >\n                      <FaTrash /> 삭제\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      )}\n\n      {/* 빈 상태 */}\n      {!videoState.showForm && filteredVideos.length === 0 && (\n        <div className=\"text-center py-12\">\n          <FaVideo className=\"text-6xl text-gray-400 mx-auto mb-4\" />\n          <p className=\"text-xl text-gray-600 dark:text-gray-400 mb-4\">\n            {categoryFilter === 'all' \n              ? '아직 등록된 영상 학습이 없습니다' \n              : `${categoryFilter} 카테고리에 영상 학습이 없습니다`}\n          </p>\n          <button\n            onClick={videoActions.handleCreate}\n            className=\"inline-flex items-center gap-2 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors font-medium\"\n          >\n            <FaPlus /> 첫 영상 추가하기\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default VideoLearningManager\n\n","/**\r\n * 카테고리 관련 유틸리티 함수들\r\n */\r\n\r\n/**\r\n * 카테고리 문자열의 첫 글자를 대문자로 변환하여 표시명 생성\r\n * @param category - 카테고리 문자열\r\n * @returns 표시용 카테고리 이름\r\n */\r\nexport const formatCategoryDisplayName = (category: string): string => {\r\n  if (!category) return '기타'\r\n  \r\n  // 특별한 경우 처리\r\n  const specialCases: { [key: string]: string } = {\r\n    'plc': 'PLC',\r\n    'iot': 'IoT',\r\n    '데이터분석': '데이터 분석',\r\n    '로봇공학': '로봇 공학',\r\n    '기타': '기타',\r\n    'all': '전체'\r\n  }\r\n  \r\n  const lowerCategory = category.toLowerCase()\r\n  if (specialCases[lowerCategory]) {\r\n    return specialCases[lowerCategory]\r\n  }\r\n  \r\n  // 일반적인 경우: 첫 글자만 대문자로 변환\r\n  return category.charAt(0).toUpperCase() + category.slice(1)\r\n}\r\n\r\n/**\r\n * 책 목록에서 모든 고유 카테고리를 추출\r\n * @param books - 책 목록\r\n * @returns 고유 카테고리 배열 (소문자로 정규화)\r\n */\r\nexport const extractUniqueCategories = (books: any[]): string[] => {\r\n  const categories = new Set<string>()\r\n  \r\n  // 기본 카테고리 추가\r\n  categories.add('all')\r\n  \r\n  // 책에서 카테고리 추출\r\n  books.forEach(book => {\r\n    if (book.category) {\r\n      categories.add(book.category.toLowerCase())\r\n    }\r\n  })\r\n  \r\n  return Array.from(categories).sort()\r\n}\r\n\r\n/**\r\n * 카테고리별 표시명 매핑 객체 생성\r\n * @param categories - 카테고리 배열\r\n * @returns 카테고리 표시명 매핑 객체\r\n */\r\nexport const createCategoryDisplayNames = (categories: string[]): { [key: string]: string } => {\r\n  const displayNames: { [key: string]: string } = {}\r\n  \r\n  categories.forEach(category => {\r\n    displayNames[category] = formatCategoryDisplayName(category)\r\n  })\r\n  \r\n  return displayNames\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FaPlus, FaEdit, FaTrash, FaList, FaStar, FaVideo, FaChevronDown, FaChevronUp } from 'react-icons/fa'\r\nimport { VideoPlaylist, VideoPlaylistFormData, PlaylistVideoFormData } from '../../types'\r\nimport { useVideoPlaylistManagerData, usePlaylistVideos, useCreatePlaylistVideo, useUpdatePlaylistVideo, useDeletePlaylistVideo } from '../../hooks/useVideoPlaylists'\r\nimport { useCRUDManager } from '../../hooks/useCRUDManager'\r\nimport { useToastHelpers } from '../../hooks/useToast'\r\nimport VideoPlaylistForm from '../forms/VideoPlaylistForm'\r\nimport PlaylistVideoForm from '../forms/PlaylistVideoForm'\r\nimport { formatDate } from '../../utils/dateUtils'\r\nimport { extractYouTubeId } from '../../utils/videoUtils'\r\n\r\nconst VideoPlaylistManager: React.FC = () => {\r\n  const { success, error } = useToastHelpers()\r\n  const { \r\n    playlists, \r\n    isLoading, \r\n    createPlaylist, \r\n    updatePlaylist, \r\n    deletePlaylist \r\n  } = useVideoPlaylistManagerData()\r\n\r\n  const [expandedPlaylistId, setExpandedPlaylistId] = useState<string | null>(null)\r\n  const [showVideoForm, setShowVideoForm] = useState(false)\r\n  const [editingVideo, setEditingVideo] = useState<any>(null)\r\n  const [showBulkAddForm, setShowBulkAddForm] = useState(false)\r\n  const [bulkVideoUrls, setBulkVideoUrls] = useState('')\r\n\r\n  const { data: playlistVideos = [] } = usePlaylistVideos(expandedPlaylistId || undefined)\r\n  const createVideoMutation = useCreatePlaylistVideo()\r\n  const updateVideoMutation = useUpdatePlaylistVideo()\r\n  const deleteVideoMutation = useDeletePlaylistVideo()\r\n\r\n  const [playlistState, playlistActions] = useCRUDManager<VideoPlaylist>({\r\n    onSave: async (data: VideoPlaylistFormData, editingItem) => {\r\n      if (editingItem) {\r\n        const result = await updatePlaylist(editingItem._id, data)\r\n        if (result.success) {\r\n          success('재생 목록 수정 완료', '재생 목록이 성공적으로 수정되었습니다.')\r\n        }\r\n      } else {\r\n        const result = await createPlaylist(data)\r\n        if (result.success) {\r\n          success('재생 목록 추가 완료', '새로운 재생 목록이 추가되었습니다.')\r\n        }\r\n      }\r\n    },\r\n    onDelete: async (playlist: VideoPlaylist) => {\r\n      await deletePlaylist(playlist._id)\r\n      success('재생 목록 삭제 완료', `${playlist.title}이(가) 삭제되었습니다.`)\r\n    },\r\n    onError: (err) => {\r\n      error('작업 실패', err.message || '알 수 없는 오류가 발생했습니다.')\r\n    }\r\n  })\r\n\r\n  // 영상 저장 핸들러\r\n  const handleSaveVideo = async (data: PlaylistVideoFormData) => {\r\n    try {\r\n      if (editingVideo) {\r\n        await updateVideoMutation.mutateAsync({ id: editingVideo._id, data })\r\n        success('영상 수정 완료', '영상 학습 기록이 수정되었습니다.')\r\n      } else {\r\n        await createVideoMutation.mutateAsync(data)\r\n        success('영상 추가 완료', '새로운 영상 학습 기록이 추가되었습니다.')\r\n      }\r\n      setShowVideoForm(false)\r\n      setEditingVideo(null)\r\n    } catch (err) {\r\n      error('영상 저장 실패', '영상 저장 중 오류가 발생했습니다.')\r\n    }\r\n  }\r\n\r\n  // 영상 삭제 핸들러\r\n  const handleDeleteVideo = async (videoId: string) => {\r\n    if (!confirm('이 영상 학습 기록을 삭제하시겠습니까?')) return\r\n    try {\r\n      await deleteVideoMutation.mutateAsync(videoId)\r\n      success('영상 삭제 완료', '영상 학습 기록이 삭제되었습니다.')\r\n    } catch (err) {\r\n      error('영상 삭제 실패', '영상 삭제 중 오류가 발생했습니다.')\r\n    }\r\n  }\r\n\r\n  // 영상 URL 일괄 추가 핸들러\r\n  const handleBulkAddVideos = async () => {\r\n    if (!bulkVideoUrls.trim() || !expandedPlaylistId) {\r\n      alert('영상 URL을 입력해주세요')\r\n      return\r\n    }\r\n\r\n    const urls = bulkVideoUrls.split('\\n').map(url => url.trim()).filter((url): url is string => Boolean(url))\r\n    \r\n    if (urls.length === 0) {\r\n      alert('유효한 URL이 없습니다')\r\n      return\r\n    }\r\n\r\n    try {\r\n      let successCount = 0\r\n      \r\n      for (const url of urls) {\r\n        if (!url) continue\r\n        \r\n        const videoId = extractYouTubeId(url)\r\n        \r\n        if (!videoId) {\r\n          console.warn(`유효하지 않은 URL: ${url}`)\r\n          continue\r\n        }\r\n\r\n        const videoData: PlaylistVideoFormData = {\r\n          playlistId: expandedPlaylistId!,\r\n          videoId: videoId,\r\n          title: `영상 ${playlistVideos.length + successCount + 1}`,\r\n          keyTakeaways: '',\r\n          order: playlistVideos.length + successCount,\r\n        }\r\n\r\n        await createVideoMutation.mutateAsync(videoData)\r\n        successCount++\r\n      }\r\n\r\n      setBulkVideoUrls('')\r\n      setShowBulkAddForm(false)\r\n      success('일괄 추가 완료', `${successCount}개의 영상이 추가되었습니다. 각 영상의 제목과 핵심 배움을 수정해주세요.`)\r\n    } catch (err) {\r\n      error('일괄 추가 실패', '영상 추가 중 오류가 발생했습니다.')\r\n    }\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-12\">\r\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white flex items-center gap-2\">\r\n          <FaList className=\"text-red-600\" />\r\n          재생 목록 관리\r\n        </h2>\r\n        <button\r\n          onClick={playlistActions.handleCreate}\r\n          className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors shadow-md\"\r\n        >\r\n          <FaPlus />\r\n          재생 목록 추가\r\n        </button>\r\n      </div>\r\n\r\n      {/* 재생 목록 폼 */}\r\n      {playlistState.showForm && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"p-6\">\r\n              <h2 className=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">\r\n                {playlistState.editingItem ? '재생 목록 수정' : '재생 목록 추가'}\r\n              </h2>\r\n              {playlistState.editingItem ? (\r\n                <VideoPlaylistForm\r\n                  data={playlistState.editingItem}\r\n                  onSave={playlistActions.handleSave}\r\n                  onCancel={playlistActions.handleCancel}\r\n                  isSaving={playlistState.isSaving}\r\n                />\r\n              ) : (\r\n                <VideoPlaylistForm\r\n                  onSave={playlistActions.handleSave}\r\n                  onCancel={playlistActions.handleCancel}\r\n                  isSaving={playlistState.isSaving}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 영상 폼 모달 */}\r\n      {showVideoForm && expandedPlaylistId && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"p-6\">\r\n              <h2 className=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">\r\n                {editingVideo ? '영상 학습 기록 수정' : '영상 학습 기록 추가'}\r\n              </h2>\r\n              <PlaylistVideoForm\r\n                playlistId={expandedPlaylistId}\r\n                data={editingVideo}\r\n                onSave={handleSaveVideo}\r\n                onCancel={() => {\r\n                  setShowVideoForm(false)\r\n                  setEditingVideo(null)\r\n                }}\r\n                isSaving={createVideoMutation.isPending || updateVideoMutation.isPending}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 재생 목록 목록 */}\r\n      <div className=\"grid gap-4\">\r\n        {playlists.map((playlist) => {\r\n          const isExpanded = expandedPlaylistId === playlist._id\r\n          const currentVideos = isExpanded ? playlistVideos : []\r\n          \r\n          return (\r\n            <div\r\n              key={playlist._id}\r\n              className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 overflow-hidden hover:shadow-lg transition-shadow\"\r\n            >\r\n              {/* 재생 목록 헤더 */}\r\n              <div className=\"p-6\">\r\n                <div className=\"flex items-start justify-between\">\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"flex items-center gap-2 mb-2\">\r\n                      <h3 className=\"text-xl font-bold text-gray-900 dark:text-white\">\r\n                        {playlist.title}\r\n                      </h3>\r\n                      <button\r\n                        onClick={() => setExpandedPlaylistId(isExpanded ? null : playlist._id)}\r\n                        className=\"p-1 hover:bg-gray-100 dark:hover:bg-gray-700 rounded\"\r\n                        title={isExpanded ? '영상 목록 접기' : '영상 목록 펼치기'}\r\n                      >\r\n                        {isExpanded ? <FaChevronUp /> : <FaChevronDown />}\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"flex flex-wrap gap-3 text-sm text-gray-600 dark:text-gray-400 mb-2\">\r\n                      {/* 🌟 다중 카테고리 표시 */}\r\n                      {playlist.categoryIds && playlist.categoryIds.length > 0 ? (\r\n                        (playlist.categoryIds as any[]).map((catIdOrObj: any) => {\r\n                          const catName = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?.name\r\n                          return catName ? (\r\n                            <span \r\n                              key={typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id}\r\n                              className=\"px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded\"\r\n                            >\r\n                              {catName}\r\n                            </span>\r\n                          ) : null\r\n                        })\r\n                      ) : (\r\n                        // 호환성: categoryIds가 없으면 기존 category 표시\r\n                        playlist.category && (\r\n                          <span className=\"px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded\">\r\n                            {playlist.category}\r\n                          </span>\r\n                        )\r\n                      )}\r\n                      {playlist.rating && (\r\n                        <div className=\"flex items-center gap-1\">\r\n                          {Array.from({ length: 5 }, (_, i) => (\r\n                            <FaStar\r\n                              key={i}\r\n                              className={`text-sm ${\r\n                                i < playlist.rating! ? 'text-yellow-500' : 'text-gray-300'\r\n                              }`}\r\n                            />\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n                      <span>시청일: {formatDate(playlist.watchDate)}</span>\r\n                    </div>\r\n                    {playlist.purpose && (\r\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400 line-clamp-2\">{playlist.purpose}</p>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"flex gap-2 ml-4\">\r\n                    <button\r\n                      onClick={() => playlistActions.handleEdit(playlist)}\r\n                      className=\"p-2 text-yellow-600 hover:bg-yellow-100 dark:hover:bg-yellow-900 rounded-lg transition-colors\"\r\n                      title=\"재생 목록 수정\"\r\n                    >\r\n                      <FaEdit />\r\n                    </button>\r\n                    <button\r\n                      onClick={() => playlistActions.handleDelete(playlist)}\r\n                      disabled={playlistState.isDeleting}\r\n                      className=\"p-2 text-red-600 hover:bg-red-100 dark:hover:bg-red-900 rounded-lg transition-colors\"\r\n                      title=\"재생 목록 삭제\"\r\n                    >\r\n                      <FaTrash />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* 영상 관리 섹션 - 펼쳐진 경우에만 표시 */}\r\n              {isExpanded && (\r\n                <div className=\"border-t border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-900 p-6\">\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <h4 className=\"font-bold text-gray-900 dark:text-white flex items-center gap-2\">\r\n                      <FaVideo /> 영상 관리 ({currentVideos.length}개)\r\n                    </h4>\r\n                    <div className=\"flex gap-2\">\r\n                      <button\r\n                        onClick={() => setShowBulkAddForm(!showBulkAddForm)}\r\n                        className=\"flex items-center gap-2 px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors text-sm\"\r\n                      >\r\n                        <FaList /> 영상 일괄 추가\r\n                      </button>\r\n                      <button\r\n                        onClick={() => {\r\n                          setEditingVideo(null)\r\n                          setShowVideoForm(true)\r\n                        }}\r\n                        className=\"flex items-center gap-2 px-3 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm\"\r\n                      >\r\n                        <FaPlus /> 영상 추가\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* 영상 URL 일괄 추가 폼 */}\r\n                  {showBulkAddForm && (\r\n                    <div className=\"mb-4 p-4 border-2 border-green-500 rounded-lg bg-white dark:bg-gray-800\">\r\n                      <h5 className=\"font-bold text-gray-900 dark:text-white mb-2\">\r\n                        📝 영상 URL 일괄 추가\r\n                      </h5>\r\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-3\">\r\n                        재생 목록의 각 영상 URL을 한 줄에 하나씩 입력하세요. 위에서부터 순서대로 추가됩니다.\r\n                      </p>\r\n                      <textarea\r\n                        value={bulkVideoUrls}\r\n                        onChange={(e) => setBulkVideoUrls(e.target.value)}\r\n                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white font-mono text-sm mb-3\"\r\n                        rows={6}\r\n                        placeholder=\"https://www.youtube.com/watch?v=VIDEO_ID_1&#10;https://www.youtube.com/watch?v=VIDEO_ID_2&#10;https://www.youtube.com/watch?v=VIDEO_ID_3\"\r\n                      />\r\n                      <div className=\"flex gap-2\">\r\n                        <button\r\n                          onClick={handleBulkAddVideos}\r\n                          disabled={createVideoMutation.isPending}\r\n                          className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors text-sm font-medium\"\r\n                        >\r\n                          {createVideoMutation.isPending ? '추가 중...' : '일괄 추가'}\r\n                        </button>\r\n                        <button\r\n                          onClick={() => {\r\n                            setShowBulkAddForm(false)\r\n                            setBulkVideoUrls('')\r\n                          }}\r\n                          className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors text-sm font-medium\"\r\n                        >\r\n                          취소\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* 영상 목록 */}\r\n                  {currentVideos.length > 0 ? (\r\n                    <div className=\"space-y-2\">\r\n                      {currentVideos.map((video, index) => (\r\n                        <div\r\n                          key={video._id}\r\n                          className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4\"\r\n                        >\r\n                          <div className=\"flex items-start justify-between\">\r\n                            <div className=\"flex-1\">\r\n                              <div className=\"flex items-center gap-2 mb-1\">\r\n                                <span className=\"text-sm font-bold text-primary-600 dark:text-primary-400\">\r\n                                  #{index + 1}\r\n                                </span>\r\n                                <h5 className=\"font-semibold text-gray-900 dark:text-white\">\r\n                                  {video.title}\r\n                                </h5>\r\n                              </div>\r\n                              <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                                ID: {video.videoId}\r\n                              </p>\r\n                              {video.keyTakeaways && (\r\n                                <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-2 line-clamp-2\">\r\n                                  {video.keyTakeaways}\r\n                                </p>\r\n                              )}\r\n                            </div>\r\n                            <div className=\"flex gap-2 ml-4\">\r\n                              <button\r\n                                onClick={() => {\r\n                                  setEditingVideo(video)\r\n                                  setShowVideoForm(true)\r\n                                }}\r\n                                className=\"p-2 text-yellow-600 hover:bg-yellow-100 dark:hover:bg-yellow-900 rounded transition-colors\"\r\n                                title=\"영상 수정\"\r\n                              >\r\n                                <FaEdit />\r\n                              </button>\r\n                              <button\r\n                                onClick={() => handleDeleteVideo(video._id)}\r\n                                className=\"p-2 text-red-600 hover:bg-red-100 dark:hover:bg-red-900 rounded transition-colors\"\r\n                                title=\"영상 삭제\"\r\n                              >\r\n                                <FaTrash />\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"text-center py-8 text-gray-500 dark:text-gray-400 bg-white dark:bg-gray-800 rounded-lg\">\r\n                      <FaVideo className=\"text-4xl mx-auto mb-2 opacity-30\" />\r\n                      <p className=\"text-sm\">이 재생 목록에 등록된 영상이 없습니다</p>\r\n                      <p className=\"text-xs mt-1\">위의 \"영상 일괄 추가\" 버튼을 사용하세요</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )\r\n        })}\r\n\r\n        {playlists.length === 0 && (\r\n          <div className=\"text-center py-12 text-gray-500 dark:text-gray-400\">\r\n            <FaList className=\"text-6xl mx-auto mb-4 opacity-30\" />\r\n            <p>아직 등록된 재생 목록이 없습니다</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VideoPlaylistManager\r\n\r\n","import React from 'react'\r\n\r\nexport type AdminLanguage = 'ko' | 'en' | 'ja'\r\n\r\ninterface LanguageTabsProps {\r\n  activeLanguage: AdminLanguage\r\n  onChange: (lang: AdminLanguage) => void\r\n}\r\n\r\nconst LanguageTabs: React.FC<LanguageTabsProps> = ({ activeLanguage, onChange }) => {\r\n  const languages: { code: AdminLanguage; flag: string; label: string }[] = [\r\n    { code: 'ko', flag: '🇰🇷', label: '한국어' },\r\n    { code: 'en', flag: '🇺🇸', label: 'English' },\r\n    { code: 'ja', flag: '🇯🇵', label: '日本語' }\r\n  ]\r\n\r\n  return (\r\n    <div className=\"flex gap-2 mb-6 border-b border-gray-200 dark:border-gray-700\">\r\n      {languages.map((lang) => {\r\n        const isActive = activeLanguage === lang.code\r\n        return (\r\n          <button\r\n            key={lang.code}\r\n            type=\"button\"\r\n            onClick={() => onChange(lang.code)}\r\n            className={`flex items-center gap-2 px-6 py-3 font-semibold transition-all duration-200 border-b-2 ${\r\n              isActive\r\n                ? 'border-blue-600 text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/20'\r\n                : 'border-transparent text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800'\r\n            }`}\r\n          >\r\n            <span className=\"text-xl\">{lang.flag}</span>\r\n            <span>{lang.label}</span>\r\n          </button>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LanguageTabs\r\n\r\n","import React, { useState, useMemo } from 'react'\r\nimport { FaPlus, FaEdit, FaTrash } from 'react-icons/fa'\r\nimport { Experience, ExperienceFormData } from '../../types'\r\nimport ExperienceForm from '../forms/ExperienceForm'\r\nimport { useExperienceManagerData } from '../../hooks/useExperienceManagerData'\r\n\r\ninterface ExperienceManagerProps {\r\n  experienceFilter?: 'all' | 'company' | 'year'\r\n  experienceSearchTerm?: string\r\n  selectedExperienceCompany?: string\r\n  selectedExperienceYear?: string\r\n}\r\n\r\nconst ExperienceManager: React.FC<ExperienceManagerProps> = ({ \r\n  experienceFilter = 'all', \r\n  experienceSearchTerm = '', \r\n  selectedExperienceCompany = '',\r\n  selectedExperienceYear = ''\r\n}) => {\r\n  const { experiences, isLoading, createExperience, updateExperience, deleteExperience } = useExperienceManagerData()\r\n  const [showForm, setShowForm] = useState(false)\r\n  const [editingItem, setEditingItem] = useState<Experience | null>(null)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n\r\n  // 필터링된 경력 목록 계산\r\n  const filteredExperiences = useMemo(() => {\r\n    let filtered = [...experiences]\r\n\r\n    // 필터 적용\r\n    if (experienceFilter === 'company' && selectedExperienceCompany) {\r\n      filtered = filtered.filter(exp => exp.company === selectedExperienceCompany)\r\n    } else if (experienceFilter === 'year' && selectedExperienceYear) {\r\n      filtered = filtered.filter(exp => {\r\n        // period에서 연도 추출 (예: \"2023.01 - 2023.12\" 또는 \"2023 - 현재\")\r\n        const period = exp.period || ''\r\n        return period.includes(selectedExperienceYear)\r\n      })\r\n    }\r\n\r\n    // 검색어 적용\r\n    if (experienceSearchTerm) {\r\n      const searchLower = experienceSearchTerm.toLowerCase()\r\n      filtered = filtered.filter(exp => \r\n        exp.title.toLowerCase().includes(searchLower) ||\r\n        exp.company.toLowerCase().includes(searchLower) ||\r\n        (exp.description && exp.description.toLowerCase().includes(searchLower))\r\n      )\r\n    }\r\n\r\n    return filtered\r\n  }, [experiences, experienceFilter, experienceSearchTerm, selectedExperienceCompany, selectedExperienceYear])\r\n\r\n  // 회사 목록은 필요시 사용\r\n  // const experienceCompanies = useMemo(() => {\r\n  //   const companies = [...new Set(experiences.map(exp => exp.company))]\r\n  //   return companies.sort()\r\n  // }, [experiences])\r\n\r\n  // 연도 목록은 필요시 사용\r\n  // const experienceYears = useMemo(() => {\r\n  //   const years = new Set<string>()\r\n  //   experiences.forEach(exp => {\r\n  //     const period = exp.period || ''\r\n  //     const yearMatches = period.match(/\\b(20\\d{2})\\b/g)\r\n  //     if (yearMatches) {\r\n  //       yearMatches.forEach(year => years.add(year))\r\n  //     }\r\n  //   })\r\n  //   return Array.from(years).sort().reverse()\r\n  // }, [experiences])\r\n\r\n  const handleSave = async (data: ExperienceFormData) => {\r\n    try {\r\n      setIsSaving(true)\r\n      if (editingItem) {\r\n        const result = await updateExperience(editingItem._id!, data)\r\n        if (result.success) {\r\n          setShowForm(false)\r\n          setEditingItem(null)\r\n        }\r\n      } else {\r\n        const result = await createExperience(data)\r\n        if (result.success) {\r\n          setShowForm(false)\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('저장 실패:', error)\r\n    } finally {\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setShowForm(false)\r\n    setEditingItem(null)\r\n  }\r\n\r\n  const handleDelete = async (experience: Experience) => {\r\n    if (confirm('정말 삭제하시겠습니까?')) {\r\n      try {\r\n        setIsDeleting(true)\r\n        await deleteExperience(experience._id!)\r\n      } catch (error) {\r\n        console.error('삭제 실패:', error)\r\n      } finally {\r\n        setIsDeleting(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleAddNew = () => {\r\n    setEditingItem(null)\r\n    setShowForm(true)\r\n  }\r\n\r\n  const handleEdit = (experience: Experience) => {\r\n    setEditingItem(experience)\r\n    setShowForm(true)\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-8\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n        <span className=\"ml-2\">경력 데이터를 불러오는 중...</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <h2 className=\"text-2xl font-bold\">경력 관리</h2>\r\n        <button\r\n          onClick={handleAddNew}\r\n          className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2\"\r\n        >\r\n          <FaPlus />\r\n          경력 추가\r\n        </button>\r\n      </div>\r\n\r\n      {/* 필터 정보 표시 */}\r\n      {(experienceFilter !== 'all' || experienceSearchTerm || selectedExperienceCompany || selectedExperienceYear) && (\r\n        <div className=\"mb-4 p-4 bg-gray-100 dark:bg-gray-700 rounded-lg\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                현재 필터: \r\n                {experienceFilter === 'all' && !experienceSearchTerm && ' 💼 모든 경력'}\r\n                {experienceFilter === 'company' && selectedExperienceCompany && ` 🏢 ${selectedExperienceCompany} 회사`}\r\n                {experienceFilter === 'year' && selectedExperienceYear && ` 📅 ${selectedExperienceYear}년`}\r\n                {experienceSearchTerm && ` 🔍 \"${experienceSearchTerm}\" 검색`}\r\n              </h4>\r\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n                {filteredExperiences.length}개 경력 표시 중 (전체 {experiences.length}개)\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {showForm && (\r\n        <div className=\"mb-6\">\r\n          <ExperienceForm\r\n            data={editingItem}\r\n            onSave={handleSave}\r\n            onCancel={handleCancel}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* 경력 목록 */}\r\n      {filteredExperiences.length > 0 ? (\r\n        <div className=\"space-y-4\">\r\n          {filteredExperiences.map((experience) => (\r\n            <div key={experience._id} className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg border border-gray-200 dark:border-gray-600\">\r\n              <div className=\"flex justify-between items-start\">\r\n                <div className=\"flex-1\">\r\n                  <h3 className=\"font-semibold text-lg\">{experience.title}</h3>\r\n                  <p className=\"text-gray-600 dark:text-gray-400\">{experience.company}</p>\r\n                  <p className=\"text-sm text-gray-500 dark:text-gray-500\">\r\n                    {experience.period}\r\n                  </p>\r\n                  {experience.description && (\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-2 line-clamp-2\">\r\n                      {experience.description}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                <div className=\"flex gap-2 ml-4\">\r\n                  <button\r\n                    onClick={() => handleEdit(experience)}\r\n                    className=\"p-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\r\n                    disabled={isSaving || isDeleting}\r\n                  >\r\n                    <FaEdit />\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleDelete(experience)}\r\n                    className=\"p-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\r\n                    disabled={isSaving || isDeleting}\r\n                  >\r\n                    <FaTrash />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center py-12\">\r\n          <p className=\"text-gray-500 dark:text-gray-400 text-lg mb-4\">\r\n            {experienceFilter !== 'all' || experienceSearchTerm || selectedExperienceCompany || selectedExperienceYear\r\n              ? '필터 조건에 맞는 경력이 없습니다.'\r\n              : '등록된 경력이 없습니다.'\r\n            }\r\n          </p>\r\n          {(experienceFilter !== 'all' || experienceSearchTerm || selectedExperienceCompany || selectedExperienceYear) && (\r\n            <p className=\"text-sm text-gray-400 dark:text-gray-500\">\r\n              필터를 초기화하거나 다른 검색어를 시도해보세요.\r\n            </p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExperienceManager","import React, { useState, useMemo } from 'react'\r\nimport { FaPlus, FaEdit, FaTrash } from 'react-icons/fa'\r\nimport { Project, ProjectFormData } from '../../types'\r\nimport ProjectForm from '../forms/ProjectForm'\r\nimport { useProjectManagerData } from '../../hooks/useProjectManagerData'\r\n\r\ninterface ProjectManagerProps {\r\n  projectFilter?: 'all' | 'category' | 'featured'\r\n  projectSearchTerm?: string\r\n  selectedProjectCategory?: string\r\n}\r\n\r\nconst ProjectManager: React.FC<ProjectManagerProps> = ({ \r\n  projectFilter = 'all', \r\n  projectSearchTerm = '', \r\n  selectedProjectCategory = ''\r\n}) => {\r\n  const { projects, isLoading, createProject, updateProject, deleteProject } = useProjectManagerData()\r\n  const [showForm, setShowForm] = useState(false)\r\n  const [editingItem, setEditingItem] = useState<Project | null>(null)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n\r\n  // 필터링된 프로젝트 목록 계산\r\n  const filteredProjects = useMemo(() => {\r\n    let filtered = [...projects]\r\n\r\n    // 필터 적용\r\n    if (projectFilter === 'category' && selectedProjectCategory) {\r\n      filtered = filtered.filter(project => project.category === selectedProjectCategory)\r\n    } else if (projectFilter === 'featured') {\r\n      // 주요 프로젝트: 완료된 프로젝트 중 상세 설명이 있는 것\r\n      filtered = filtered.filter(project => \r\n        project.status === 'completed' && \r\n        project.detailedDescription && \r\n        project.detailedDescription.trim().length > 0\r\n      )\r\n    }\r\n\r\n    // 검색어 적용\r\n    if (projectSearchTerm) {\r\n      const searchLower = projectSearchTerm.toLowerCase()\r\n      filtered = filtered.filter(project => \r\n        project.title.toLowerCase().includes(searchLower) ||\r\n        project.description.toLowerCase().includes(searchLower) ||\r\n        (project.technologies && project.technologies.some(tech => \r\n          tech.toLowerCase().includes(searchLower)\r\n        )) ||\r\n        (project.category && project.category.toLowerCase().includes(searchLower))\r\n      )\r\n    }\r\n\r\n    return filtered\r\n  }, [projects, projectFilter, projectSearchTerm, selectedProjectCategory])\r\n\r\n  // 카테고리 목록은 필요시 사용\r\n  // const projectCategories = useMemo(() => {\r\n  //   const categories = [...new Set(projects.map(project => project.category).filter(Boolean))]\r\n  //   return categories.sort()\r\n  // }, [projects])\r\n\r\n  // 주요 프로젝트 수 계산\r\n  const featuredProjectsCount = useMemo(() => {\r\n    return projects.filter(project => \r\n      project.status === 'completed' && \r\n      project.detailedDescription && \r\n      project.detailedDescription.trim().length > 0\r\n    ).length\r\n  }, [projects])\r\n\r\n  const handleSave = async (data: ProjectFormData) => {\r\n    console.log('🎯 ProjectManager handleSave 호출됨')\r\n    console.log('📦 받은 데이터:', data)\r\n    console.log('🔗 skillIds:', data.skillIds)\r\n    \r\n    try {\r\n      setIsSaving(true)\r\n      console.log('⏳ isSaving = true 설정됨')\r\n      \r\n      if (editingItem) {\r\n        console.log('✏️ 프로젝트 수정 모드:', editingItem._id)\r\n        const result = await updateProject(editingItem._id!, data)\r\n        console.log('✅ 수정 결과:', result)\r\n        if (result.success) {\r\n          setShowForm(false)\r\n          setEditingItem(null)\r\n          alert('✅ 프로젝트가 성공적으로 수정되었습니다!')\r\n        } else {\r\n          // 🌟 서버 오류 메시지 상세 출력\r\n          console.error('❌ 서버 거부 이유:', result.error)\r\n          const errorMsg = (result.error as any)?.response?.data?.message || '알 수 없는 오류'\r\n          alert(`❌ 프로젝트 수정 실패: ${errorMsg}`)\r\n          if ((result.error as any)?.response?.data) {\r\n            console.error('📋 서버 응답 상세:', (result.error as any).response.data)\r\n          }\r\n        }\r\n      } else {\r\n        console.log('➕ 프로젝트 생성 모드')\r\n        const result = await createProject(data)\r\n        console.log('✅ 생성 결과:', result)\r\n        if (result.success) {\r\n          setShowForm(false)\r\n          alert('✅ 프로젝트가 성공적으로 추가되었습니다!')\r\n        } else {\r\n          // 🌟 서버 오류 메시지 상세 출력\r\n          console.error('❌ 서버 거부 이유:', result.error)\r\n          const errorMsg = (result.error as any)?.response?.data?.message || '알 수 없는 오류'\r\n          alert(`❌ 프로젝트 추가 실패: ${errorMsg}`)\r\n          if ((result.error as any)?.response?.data) {\r\n            console.error('📋 서버 응답 상세:', (result.error as any).response.data)\r\n          }\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      console.error('❌ 저장 실패:', error)\r\n      // 🌟 Axios 오류 상세 정보 출력\r\n      const errorMsg = error?.response?.data?.message || error.message || '알 수 없는 오류'\r\n      alert(`❌ 저장 중 오류 발생: ${errorMsg}`)\r\n      if (error?.response?.data) {\r\n        console.error('📋 서버 응답 상세:', error.response.data)\r\n        console.error('🔢 상태 코드:', error.response.status)\r\n      }\r\n    } finally {\r\n      console.log('🏁 isSaving = false 설정됨')\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setShowForm(false)\r\n    setEditingItem(null)\r\n  }\r\n\r\n  const handleDelete = async (project: Project) => {\r\n    if (confirm('정말 삭제하시겠습니까?')) {\r\n      try {\r\n        setIsDeleting(true)\r\n        await deleteProject(project._id!)\r\n      } catch (error) {\r\n        console.error('삭제 실패:', error)\r\n      } finally {\r\n        setIsDeleting(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleAddNew = () => {\r\n    setEditingItem(null)\r\n    setShowForm(true)\r\n  }\r\n\r\n  const handleEdit = (project: Project) => {\r\n    setEditingItem(project)\r\n    setShowForm(true)\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-8\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n        <span className=\"ml-2\">프로젝트 데이터를 불러오는 중...</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <h2 className=\"text-2xl font-bold\">프로젝트 관리</h2>\r\n        <button\r\n          onClick={handleAddNew}\r\n          className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2\"\r\n        >\r\n          <FaPlus />\r\n          프로젝트 추가\r\n        </button>\r\n      </div>\r\n\r\n      {/* 필터 정보 표시 */}\r\n      {(projectFilter !== 'all' || projectSearchTerm || selectedProjectCategory) && (\r\n        <div className=\"mb-4 p-4 bg-gray-100 dark:bg-gray-700 rounded-lg\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                현재 필터: \r\n                {projectFilter === 'all' && !projectSearchTerm && ' 📁 모든 프로젝트'}\r\n                {projectFilter === 'category' && selectedProjectCategory && ` 🏷️ ${selectedProjectCategory} 카테고리`}\r\n                {projectFilter === 'featured' && ' 🌟 주요 프로젝트'}\r\n                {projectSearchTerm && ` 🔍 \"${projectSearchTerm}\" 검색`}\r\n              </h4>\r\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n                {filteredProjects.length}개 프로젝트 표시 중 (전체 {projects.length}개)\r\n                {projectFilter === 'featured' && ` (주요 프로젝트: ${featuredProjectsCount}개)`}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {showForm && (\r\n        <div className=\"mb-6\">\r\n          <ProjectForm\r\n            data={editingItem}\r\n            onSave={handleSave}\r\n            onCancel={handleCancel}\r\n            isSaving={isSaving}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* 프로젝트 목록 */}\r\n      {filteredProjects.length > 0 ? (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {filteredProjects.map((project) => (\r\n            <div key={project._id} className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg border border-gray-200 dark:border-gray-600\">\r\n              <h3 className=\"font-semibold text-lg mb-2\">{project.title}</h3>\r\n              <p className=\"text-gray-600 dark:text-gray-400 text-sm mb-2 line-clamp-2\">{project.description}</p>\r\n              {project.category && (\r\n                <p className=\"text-xs text-blue-600 dark:text-blue-400 mb-3\">{project.category}</p>\r\n              )}\r\n              {project.technologies && project.technologies.length > 0 && (\r\n                <div className=\"flex flex-wrap gap-1 mb-3\">\r\n                  {project.technologies.slice(0, 3).map((tech, index) => (\r\n                    <span key={index} className=\"text-xs bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-gray-300 px-2 py-1 rounded\">\r\n                      {tech}\r\n                    </span>\r\n                  ))}\r\n                  {project.technologies.length > 3 && (\r\n                    <span className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                      +{project.technologies.length - 3}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              )}\r\n              <div className=\"flex justify-between items-center\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <span className={`px-2 py-1 rounded text-xs ${\r\n                    project.status === 'completed' \r\n                      ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-300' \r\n                      : 'bg-yellow-100 dark:bg-yellow-900/30 text-yellow-800 dark:text-yellow-300'\r\n                  }`}>\r\n                    {project.status === 'completed' ? '완료' : '진행중'}\r\n                  </span>\r\n                  {project.status === 'completed' && project.detailedDescription && project.detailedDescription.trim().length > 0 && (\r\n                    <span className=\"text-xs bg-purple-100 dark:bg-purple-900/30 text-purple-800 dark:text-purple-300 px-2 py-1 rounded\">\r\n                      🌟 주요\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div className=\"flex gap-2\">\r\n                  <button\r\n                    onClick={() => handleEdit(project)}\r\n                    className=\"p-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\r\n                    disabled={isSaving || isDeleting}\r\n                  >\r\n                    <FaEdit />\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleDelete(project)}\r\n                    className=\"p-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\r\n                    disabled={isSaving || isDeleting}\r\n                  >\r\n                    <FaTrash />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center py-12\">\r\n          <p className=\"text-gray-500 dark:text-gray-400 text-lg mb-4\">\r\n            {projectFilter !== 'all' || projectSearchTerm || selectedProjectCategory\r\n              ? '필터 조건에 맞는 프로젝트가 없습니다.'\r\n              : '등록된 프로젝트가 없습니다.'\r\n            }\r\n          </p>\r\n          {(projectFilter !== 'all' || projectSearchTerm || selectedProjectCategory) && (\r\n            <p className=\"text-sm text-gray-400 dark:text-gray-500\">\r\n              필터를 초기화하거나 다른 검색어를 시도해보세요.\r\n            </p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectManager","import React, { useState } from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport { FaTimes, FaEnvelope, FaUser, FaCalendar, FaCheck, FaTrash, FaReply, FaArrowLeft, FaSpinner } from 'react-icons/fa'\r\nimport { ContactMessage } from '../../types'\r\nimport { useMessageDetail } from '../../hooks/useMessageDetail'\r\n\r\ninterface MessageDetailProps {\r\n  messageId: string | undefined\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  onMarkAsRead: (id: string) => Promise<void>\r\n  onDelete: (id: string) => Promise<void>\r\n  onReply?: (message: ContactMessage) => void\r\n}\r\n\r\nconst MessageDetail: React.FC<MessageDetailProps> = ({\r\n  messageId,\r\n  isOpen,\r\n  onClose,\r\n  onMarkAsRead,\r\n  onDelete,\r\n  onReply\r\n}) => {\r\n  const [isProcessing, setIsProcessing] = useState(false)\r\n  const [showReplyForm, setShowReplyForm] = useState(false)\r\n  const [replyContent, setReplyContent] = useState('')\r\n\r\n  // React Query를 사용한 메시지 상세 정보 로딩\r\n  const { \r\n    data: message, \r\n    isLoading, \r\n    isError, \r\n    error,\r\n    refetch \r\n  } = useMessageDetail(messageId, {\r\n    enabled: isOpen && !!messageId // 모달이 열려있고 messageId가 있을 때만 쿼리 실행\r\n  })\r\n\r\n  const handleMarkAsRead = async () => {\r\n    if (!message || message.isRead) return\r\n    \r\n    try {\r\n      setIsProcessing(true)\r\n      await onMarkAsRead(message._id!)\r\n    } catch (error) {\r\n      console.error('읽음 처리 실패:', error)\r\n    } finally {\r\n      setIsProcessing(false)\r\n    }\r\n  }\r\n\r\n  const handleDelete = async () => {\r\n    if (!message || !confirm('정말 이 메시지를 삭제하시겠습니까?')) return\r\n    \r\n    try {\r\n      setIsProcessing(true)\r\n      await onDelete(message._id!)\r\n      onClose()\r\n    } catch (error) {\r\n      console.error('삭제 실패:', error)\r\n    } finally {\r\n      setIsProcessing(false)\r\n    }\r\n  }\r\n\r\n  const handleReply = () => {\r\n    if (!message) return\r\n    if (onReply) {\r\n      onReply(message)\r\n    } else {\r\n      setShowReplyForm(true)\r\n    }\r\n  }\r\n\r\n  const handleSendReply = () => {\r\n    // 답장 기능 구현 (이메일 발송 등)\r\n    console.log('답장 내용:', replyContent)\r\n    alert('답장 기능은 향후 구현 예정입니다.')\r\n    setShowReplyForm(false)\r\n    setReplyContent('')\r\n  }\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleString('ko-KR', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    })\r\n  }\r\n\r\n  if (!isOpen) return null\r\n\r\n  // 로딩 상태 처리\r\n  if (isLoading) {\r\n    return (\r\n      <AnimatePresence>\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\"\r\n          onClick={onClose}\r\n        >\r\n          <motion.div\r\n            initial={{ scale: 0.9, opacity: 0 }}\r\n            animate={{ scale: 1, opacity: 1 }}\r\n            exit={{ scale: 0.9, opacity: 0 }}\r\n            className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-md w-full p-8\"\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <div className=\"flex flex-col items-center justify-center\">\r\n              <FaSpinner className=\"text-4xl text-blue-600 dark:text-blue-400 animate-spin mb-4\" />\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\r\n                메시지 로딩 중...\r\n              </h3>\r\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                잠시만 기다려주세요\r\n              </p>\r\n            </div>\r\n          </motion.div>\r\n        </motion.div>\r\n      </AnimatePresence>\r\n    )\r\n  }\r\n\r\n  // 에러 상태 처리\r\n  if (isError) {\r\n    return (\r\n      <AnimatePresence>\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\"\r\n          onClick={onClose}\r\n        >\r\n          <motion.div\r\n            initial={{ scale: 0.9, opacity: 0 }}\r\n            animate={{ scale: 1, opacity: 1 }}\r\n            exit={{ scale: 0.9, opacity: 0 }}\r\n            className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-md w-full p-8\"\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <div className=\"text-center\">\r\n              <div className=\"text-red-500 text-4xl mb-4\">⚠️</div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\r\n                메시지를 불러올 수 없습니다\r\n              </h3>\r\n              <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-4\">\r\n                {error?.message || '알 수 없는 오류가 발생했습니다.'}\r\n              </p>\r\n              <div className=\"flex gap-3 justify-center\">\r\n                <button\r\n                  onClick={() => refetch()}\r\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n                >\r\n                  다시 시도\r\n                </button>\r\n                <button\r\n                  onClick={onClose}\r\n                  className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\r\n                >\r\n                  닫기\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        </motion.div>\r\n      </AnimatePresence>\r\n    )\r\n  }\r\n\r\n  // 메시지 데이터가 없는 경우\r\n  if (!message) {\r\n    return (\r\n      <AnimatePresence>\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\"\r\n          onClick={onClose}\r\n        >\r\n          <motion.div\r\n            initial={{ scale: 0.9, opacity: 0 }}\r\n            animate={{ scale: 1, opacity: 1 }}\r\n            exit={{ scale: 0.9, opacity: 0 }}\r\n            className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-md w-full p-8\"\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <div className=\"text-center\">\r\n              <FaEnvelope className=\"text-4xl text-gray-400 mx-auto mb-4\" />\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\r\n                메시지를 찾을 수 없습니다\r\n              </h3>\r\n              <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-4\">\r\n                요청하신 메시지가 존재하지 않거나 삭제되었습니다.\r\n              </p>\r\n              <button\r\n                onClick={onClose}\r\n                className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\r\n              >\r\n                닫기\r\n              </button>\r\n            </div>\r\n          </motion.div>\r\n        </motion.div>\r\n      </AnimatePresence>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\"\r\n        onClick={onClose}\r\n      >\r\n        <motion.div\r\n          initial={{ scale: 0.9, opacity: 0 }}\r\n          animate={{ scale: 1, opacity: 1 }}\r\n          exit={{ scale: 0.9, opacity: 0 }}\r\n          className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-hidden\"\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          {/* Header */}\r\n          <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <FaEnvelope className=\"text-blue-600 dark:text-blue-400 text-xl\" />\r\n              <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">\r\n                메시지 상세\r\n              </h2>\r\n              {!message.isRead && (\r\n                <span className=\"bg-blue-500 text-white text-xs px-2 py-1 rounded-full\">\r\n                  새 메시지\r\n                </span>\r\n              )}\r\n            </div>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\r\n            >\r\n              <FaTimes className=\"text-gray-500 dark:text-gray-400\" />\r\n            </button>\r\n          </div>\r\n\r\n          {/* Content */}\r\n          <div className=\"p-6 overflow-y-auto max-h-[calc(90vh-140px)]\">\r\n            {/* 메시지 정보 */}\r\n            <div className=\"grid md:grid-cols-2 gap-6 mb-6\">\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex items-start gap-3\">\r\n                  <FaUser className=\"text-gray-500 dark:text-gray-400 mt-1\" />\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">보낸이</p>\r\n                    <p className=\"font-medium text-gray-900 dark:text-white\">\r\n                      {message.name}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"flex items-start gap-3\">\r\n                  <FaEnvelope className=\"text-gray-500 dark:text-gray-400 mt-1\" />\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">이메일</p>\r\n                    <p className=\"font-medium text-gray-900 dark:text-white\">\r\n                      {message.email}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"flex items-start gap-3\">\r\n                  <FaCalendar className=\"text-gray-500 dark:text-gray-400 mt-1\" />\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">받은 시간</p>\r\n                    <p className=\"font-medium text-gray-900 dark:text-white\">\r\n                      {formatDate(message.createdAt || '')}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-2\">상태</p>\r\n                  <div className=\"flex items-center gap-2\">\r\n                    {message.isRead ? (\r\n                      <span className=\"flex items-center gap-1 text-green-600 dark:text-green-400\">\r\n                        <FaCheck /> 읽음\r\n                      </span>\r\n                    ) : (\r\n                      <span className=\"flex items-center gap-1 text-blue-600 dark:text-blue-400\">\r\n                        <FaEnvelope /> 읽지 않음\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 제목 */}\r\n            <div className=\"mb-6\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                {message.subject}\r\n              </h3>\r\n            </div>\r\n\r\n            {/* 메시지 내용 */}\r\n            <div className=\"mb-6\">\r\n              <h4 className=\"text-sm font-medium text-gray-500 dark:text-gray-400 mb-3\">\r\n                메시지 내용\r\n              </h4>\r\n              <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\r\n                <p className=\"text-gray-900 dark:text-white whitespace-pre-wrap\">\r\n                  {message.message}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 답장 폼 */}\r\n            <AnimatePresence>\r\n              {showReplyForm && (\r\n                <motion.div\r\n                  initial={{ opacity: 0, height: 0 }}\r\n                  animate={{ opacity: 1, height: 'auto' }}\r\n                  exit={{ opacity: 0, height: 0 }}\r\n                  className=\"mb-6 border-t border-gray-200 dark:border-gray-700 pt-6\"\r\n                >\r\n                  <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n                    답장 작성\r\n                  </h4>\r\n                  <div className=\"space-y-4\">\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                        받는 사람\r\n                      </label>\r\n                      <input\r\n                        type=\"email\"\r\n                        value={message.email}\r\n                        disabled\r\n                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-500 dark:text-gray-400\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                        답장 내용\r\n                      </label>\r\n                      <textarea\r\n                        value={replyContent}\r\n                        onChange={(e) => setReplyContent(e.target.value)}\r\n                        placeholder=\"답장 내용을 입력하세요...\"\r\n                        rows={6}\r\n                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-vertical\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"flex gap-3\">\r\n                      <button\r\n                        onClick={handleSendReply}\r\n                        disabled={!replyContent.trim()}\r\n                        className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors flex items-center gap-2\"\r\n                      >\r\n                        <FaReply /> 답장 보내기\r\n                      </button>\r\n                      <button\r\n                        onClick={() => {\r\n                          setShowReplyForm(false)\r\n                          setReplyContent('')\r\n                        }}\r\n                        className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\r\n                      >\r\n                        취소\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </motion.div>\r\n              )}\r\n            </AnimatePresence>\r\n          </div>\r\n\r\n          {/* Footer */}\r\n          <div className=\"flex items-center justify-between p-6 border-t border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-700\">\r\n            <button\r\n              onClick={handleReply}\r\n              className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n            >\r\n              <FaReply /> 답장\r\n            </button>\r\n            \r\n            <div className=\"flex gap-3\">\r\n              {!message.isRead && (\r\n                <button\r\n                  onClick={handleMarkAsRead}\r\n                  disabled={isProcessing}\r\n                  className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors\"\r\n                >\r\n                  <FaCheck /> {isProcessing ? '처리 중...' : '읽음 처리'}\r\n                </button>\r\n              )}\r\n              <button\r\n                onClick={handleDelete}\r\n                disabled={isProcessing}\r\n                className=\"flex items-center gap-2 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors\"\r\n              >\r\n                <FaTrash /> {isProcessing ? '삭제 중...' : '삭제'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  )\r\n}\r\n\r\nexport default MessageDetail\r\n","import React, { useState } from 'react'\r\nimport { FaTrash, FaEye, FaEnvelope } from 'react-icons/fa'\r\nimport { ContactMessage } from '../../types'\r\nimport { useMessageManagerData } from '../../hooks/useMessageManagerData'\r\nimport MessageDetail from './MessageDetail'\r\n\r\nconst MessageManager: React.FC = () => {\r\n  const { messages, isLoading, markAsRead, deleteMessage } = useMessageManagerData()\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [selectedMessageId, setSelectedMessageId] = useState<string | undefined>(undefined)\r\n  const [showDetail, setShowDetail] = useState(false)\r\n\r\n  const handleMarkAsRead = async (message: ContactMessage) => {\r\n    try {\r\n      await markAsRead(message._id!)\r\n    } catch (error) {\r\n      console.error('읽음 처리 실패:', error)\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (message: ContactMessage) => {\r\n    if (confirm('정말 삭제하시겠습니까?')) {\r\n      try {\r\n        setIsDeleting(true)\r\n        await deleteMessage(message._id!)\r\n      } catch (error) {\r\n        console.error('삭제 실패:', error)\r\n      } finally {\r\n        setIsDeleting(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleViewDetail = (message: ContactMessage) => {\r\n    setSelectedMessageId(message._id)\r\n    setShowDetail(true)\r\n  }\r\n\r\n  const handleCloseDetail = () => {\r\n    setShowDetail(false)\r\n    setSelectedMessageId(undefined)\r\n  }\r\n\r\n  const handleDetailMarkAsRead = async (id: string) => {\r\n    await markAsRead(id)\r\n  }\r\n\r\n  const handleDetailDelete = async (id: string) => {\r\n    await deleteMessage(id)\r\n    handleCloseDetail()\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-8\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n        <span className=\"ml-2\">메시지 데이터를 불러오는 중...</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <h2 className=\"text-2xl font-bold\">메시지 관리</h2>\r\n          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n            총 {messages.length}개의 메시지\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"space-y-4\">\r\n          {messages.map((message) => (\r\n            <div \r\n              key={message._id} \r\n              className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg border border-gray-200 dark:border-gray-600 hover:shadow-md transition-shadow cursor-pointer\"\r\n              onClick={() => handleViewDetail(message)}\r\n            >\r\n              <div className=\"flex justify-between items-start\">\r\n                <div className=\"flex-1\">\r\n                  <div className=\"flex items-center gap-2 mb-2\">\r\n                    <h3 className=\"font-semibold text-lg\">{message.subject}</h3>\r\n                    {!message.isRead && (\r\n                      <span className=\"bg-blue-500 text-white text-xs px-2 py-1 rounded-full\">\r\n                        새 메시지\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  <p \r\n                    className=\"text-gray-600 dark:text-gray-400 mb-2\"\r\n                    style={{\r\n                      display: '-webkit-box',\r\n                      WebkitLineClamp: 2,\r\n                      WebkitBoxOrient: 'vertical',\r\n                      overflow: 'hidden'\r\n                    }}\r\n                  >\r\n                    {message.message.length > 100 ? `${message.message.substring(0, 100)}...` : message.message}\r\n                  </p>\r\n                  <div className=\"text-sm text-gray-500 dark:text-gray-500\">\r\n                    <p>보낸이: {message.name} ({message.email})</p>\r\n                    <p>받은 시간: {message.createdAt ? new Date(message.createdAt).toLocaleString('ko-KR') : '알 수 없음'}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex gap-2 ml-4\" onClick={(e) => e.stopPropagation()}>\r\n                  <button\r\n                    onClick={() => handleViewDetail(message)}\r\n                    className=\"p-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\r\n                    title=\"상세 보기\"\r\n                  >\r\n                    <FaEye />\r\n                  </button>\r\n                  {!message.isRead && (\r\n                    <button\r\n                      onClick={() => handleMarkAsRead(message)}\r\n                      className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 transition-colors text-sm\"\r\n                    >\r\n                      읽음 처리\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => handleDelete(message)}\r\n                    className=\"p-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\r\n                    disabled={isDeleting}\r\n                    title=\"삭제\"\r\n                  >\r\n                    <FaTrash />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 메시지 상세 보기 모달 */}\r\n      {showDetail && (\r\n        <MessageDetail\r\n          messageId={selectedMessageId}\r\n          isOpen={showDetail}\r\n          onClose={handleCloseDetail}\r\n          onMarkAsRead={handleDetailMarkAsRead}\r\n          onDelete={handleDetailDelete}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MessageManager","import React from 'react'\r\nimport { FaPlus, FaEdit, FaTrash, FaChevronDown, FaChevronRight, FaBars } from 'react-icons/fa'\r\nimport { useSortable } from '@dnd-kit/sortable'\r\nimport { CSS } from '@dnd-kit/utilities'\r\nimport { SkillCategory } from '../../types'\r\n\r\ninterface SortableCategoryCardProps {\r\n  category: SkillCategory\r\n  isExpanded: boolean\r\n  onToggle: (categoryId: string) => void\r\n  onAddSkill: (categoryId: string) => void\r\n  onEdit: (category: SkillCategory) => void\r\n  onDelete: (category: SkillCategory) => void\r\n  isSaving: boolean\r\n  isDeleting: boolean\r\n  children?: React.ReactNode\r\n}\r\n\r\nconst SortableCategoryCard: React.FC<SortableCategoryCardProps> = ({\r\n  category,\r\n  isExpanded,\r\n  onToggle,\r\n  onAddSkill,\r\n  onEdit,\r\n  onDelete,\r\n  isSaving,\r\n  isDeleting,\r\n  children\r\n}) => {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition,\r\n    isDragging,\r\n  } = useSortable({ id: category._id! })\r\n\r\n  const style = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition,\r\n    opacity: isDragging ? 0.5 : 1,\r\n  }\r\n\r\n  return (\r\n    <div \r\n      ref={setNodeRef} \r\n      style={style}\r\n      className=\"bg-gray-50 dark:bg-gray-700 rounded-lg border border-gray-200 dark:border-gray-600 overflow-hidden\"\r\n    >\r\n      <div className=\"p-4 hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center gap-3 flex-1\" onClick={() => onToggle(category._id!)}>\r\n            {/* 🌟 드래그 핸들 */}\r\n            <div\r\n              {...attributes}\r\n              {...listeners}\r\n              className=\"cursor-grab active:cursor-grabbing text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 p-1\"\r\n              title=\"드래그하여 순서 변경\"\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              <FaBars />\r\n            </div>\r\n            <div \r\n              className=\"w-4 h-4 rounded-full\"\r\n              style={{ backgroundColor: category.color }}\r\n            ></div>\r\n            <h3 className=\"font-semibold text-lg cursor-pointer\">{category.title}</h3>\r\n            <span className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              ({category.skills?.length || 0}개 스킬)\r\n            </span>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation()\r\n                onAddSkill(category._id!)\r\n              }}\r\n              className=\"p-2 bg-green-600 text-white rounded hover:bg-green-700 transition-colors\"\r\n              disabled={isSaving || isDeleting}\r\n            >\r\n              <FaPlus size={12} />\r\n            </button>\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation()\r\n                onEdit(category)\r\n              }}\r\n              className=\"p-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\r\n              disabled={isSaving || isDeleting}\r\n            >\r\n              <FaEdit size={12} />\r\n            </button>\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation()\r\n                onDelete(category)\r\n              }}\r\n              className=\"p-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\r\n              disabled={isSaving || isDeleting}\r\n            >\r\n              <FaTrash size={12} />\r\n            </button>\r\n            {isExpanded ? (\r\n              <FaChevronDown className=\"text-gray-400\" />\r\n            ) : (\r\n              <FaChevronRight className=\"text-gray-400\" />\r\n            )}\r\n          </div>\r\n        </div>\r\n        {category.description && (\r\n          <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-2 ml-7\">\r\n            {category.description}\r\n          </p>\r\n        )}\r\n      </div>\r\n      \r\n      {/* 스킬 목록 (children으로 전달) */}\r\n      {isExpanded && children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SortableCategoryCard\r\n\r\n","import React from 'react'\r\nimport { FaEdit, FaTrash, FaBars, FaSave } from 'react-icons/fa'\r\nimport { useSortable } from '@dnd-kit/sortable'\r\nimport { CSS } from '@dnd-kit/utilities'\r\nimport { Skill } from '../../types'\r\nimport DynamicIcon from '../common/DynamicIcon'\r\n\r\ninterface SortableSkillItemProps {\r\n  skill: Skill\r\n  categoryColor: string\r\n  currentLevel: number\r\n  hasChanges: boolean\r\n  isSavingThis: boolean\r\n  isSaving: boolean\r\n  isDeleting: boolean\r\n  onLevelChange: (skillId: string, level: number) => void\r\n  onSaveLevel: (skill: Skill) => void\r\n  onEdit: (skill: Skill) => void\r\n  onDelete: (skill: Skill) => void\r\n  onToggleSidebar: (skill: Skill) => void\r\n  onToggleLanguageCard: (skill: Skill) => void\r\n}\r\n\r\nconst SortableSkillItem: React.FC<SortableSkillItemProps> = ({\r\n  skill,\r\n  categoryColor,\r\n  currentLevel,\r\n  hasChanges,\r\n  isSavingThis,\r\n  isSaving,\r\n  isDeleting,\r\n  onLevelChange,\r\n  onSaveLevel,\r\n  onEdit,\r\n  onDelete,\r\n  onToggleSidebar,\r\n  onToggleLanguageCard\r\n}) => {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition,\r\n    isDragging,\r\n  } = useSortable({ id: skill._id! })\r\n\r\n  const style = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition,\r\n    opacity: isDragging ? 0.5 : 1,\r\n  }\r\n\r\n  return (\r\n    <div \r\n      ref={setNodeRef} \r\n      style={style}\r\n      className=\"flex items-center justify-between bg-white dark:bg-gray-700 p-3 rounded-lg\"\r\n    >\r\n      <div className=\"flex items-center gap-3 flex-1\">\r\n        {/* 🌟 드래그 핸들 */}\r\n        <div\r\n          {...attributes}\r\n          {...listeners}\r\n          className=\"cursor-grab active:cursor-grabbing text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 p-1\"\r\n          title=\"드래그하여 순서 변경\"\r\n        >\r\n          <FaBars />\r\n        </div>\r\n        \r\n        {/* 🌟 사이드바/언어 카드 표시 체크박스 */}\r\n        <div className=\"flex flex-col gap-1\">\r\n          <label className=\"flex items-center gap-1 text-xs cursor-pointer\" title=\"사이드바 핵심기술에 표시\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={skill.showInSidebar || false}\r\n              onChange={() => onToggleSidebar(skill)}\r\n              disabled={isSaving || isDeleting}\r\n              className=\"w-3 h-3 text-blue-600 rounded focus:ring-2 focus:ring-blue-500\"\r\n            />\r\n            <span className=\"text-gray-600 dark:text-gray-400\">핵심</span>\r\n          </label>\r\n          <label className=\"flex items-center gap-1 text-xs cursor-pointer\" title=\"사이드바 언어카드에 표시\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={skill.showInLanguageCard || false}\r\n              onChange={() => onToggleLanguageCard(skill)}\r\n              disabled={isSaving || isDeleting}\r\n              className=\"w-3 h-3 text-green-600 rounded focus:ring-2 focus:ring-green-500\"\r\n            />\r\n            <span className=\"text-gray-600 dark:text-gray-400\">언어</span>\r\n          </label>\r\n        </div>\r\n        \r\n        <div className=\"text-lg text-blue-600 dark:text-blue-400\">\r\n          <DynamicIcon iconName={skill.icon} size={18} />\r\n        </div>\r\n        <span className=\"font-medium min-w-[120px]\">{skill.name}</span>\r\n        <div className=\"flex items-center gap-2 flex-1 max-w-md\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            step=\"5\"\r\n            value={currentLevel}\r\n            onChange={(e) => {\r\n              const newLevel = parseInt(e.target.value)\r\n              onLevelChange(skill._id!, newLevel)\r\n            }}\r\n            className=\"flex-1 h-2 bg-gray-200 dark:bg-gray-600 rounded-lg appearance-none cursor-pointer slider-thumb\"\r\n            style={{\r\n              background: `linear-gradient(to right, ${categoryColor} 0%, ${categoryColor} ${currentLevel}%, #e5e7eb ${currentLevel}%, #e5e7eb 100%)`\r\n            }}\r\n            disabled={isSaving || isDeleting || isSavingThis}\r\n          />\r\n          <span className=\"text-sm text-gray-600 dark:text-gray-400 min-w-[45px] text-right font-medium\">\r\n            {currentLevel}%\r\n          </span>\r\n          {hasChanges && (\r\n            <button\r\n              onClick={() => onSaveLevel(skill)}\r\n              disabled={isSavingThis}\r\n              className={`px-3 py-1 bg-green-600 hover:bg-green-700 text-white rounded text-xs font-medium transition-colors flex items-center gap-1 ${\r\n                isSavingThis ? 'opacity-50 cursor-not-allowed' : ''\r\n              }`}\r\n              title=\"변경된 숙련도 저장\"\r\n            >\r\n              {isSavingThis ? (\r\n                <>\r\n                  <div className=\"w-3 h-3 border-2 border-white border-t-transparent rounded-full animate-spin\" />\r\n                  저장중\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <FaSave size={10} />\r\n                  저장\r\n                </>\r\n              )}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"flex gap-2 ml-2\">\r\n        <button\r\n          onClick={() => onEdit(skill)}\r\n          className=\"p-2 bg-yellow-600 text-white rounded hover:bg-yellow-700 transition-colors\"\r\n          disabled={isSaving || isDeleting}\r\n        >\r\n          <FaEdit size={12} />\r\n        </button>\r\n        <button\r\n          onClick={() => onDelete(skill)}\r\n          className=\"p-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\r\n          disabled={isSaving || isDeleting}\r\n        >\r\n          <FaTrash size={12} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SortableSkillItem\r\n\r\n","import React, { useState, useCallback } from 'react'\r\nimport { FaPlus } from 'react-icons/fa'\r\nimport { SkillCategory, Skill, SkillCategoryFormData, SkillFormData } from '../../types'\r\nimport { useSkillsManagerData } from '../../hooks/useSkillsManagerData'\r\nimport SkillCategoryForm from '../forms/SkillCategoryForm'\r\nimport SkillForm from '../forms/SkillForm'\r\nimport SortableCategoryCard from './SortableCategoryCard'\r\nimport SortableSkillItem from './SortableSkillItem'\r\nimport { DndContext, closestCenter, DragEndEvent } from '@dnd-kit/core'\r\nimport { SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable'\r\nimport { arrayMove } from '@dnd-kit/sortable'\r\n\r\nconst SkillsManager: React.FC = () => {\r\n  const { \r\n    skillCategories, \r\n    isLoading, \r\n    createSkillCategory,\r\n    updateSkillCategory,\r\n    deleteSkillCategory,\r\n    createSkill,\r\n    updateSkill,\r\n    deleteSkill\r\n  } = useSkillsManagerData()\r\n\r\n\r\n  // 단일 폼 상태 관리 - 한 번에 하나의 작업만 가능\r\n  const [activeForm, setActiveForm] = useState<'category' | 'skill' | null>(null)\r\n  const [editingCategory, setEditingCategory] = useState<SkillCategory | null>(null)\r\n  const [editingSkill, setEditingSkill] = useState<Skill | null>(null)\r\n  const [selectedCategoryId, setSelectedCategoryId] = useState<string | null>(null)\r\n  const [expandedCategories, setExpandedCategories] = useState<Set<string>>(new Set())\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n\r\n  // 🌟 숙련도 로컬 상태 관리 (변경사항 추적용)\r\n  const [localLevels, setLocalLevels] = useState<Map<string, number>>(new Map())\r\n  \r\n  // 🌟 저장 중인 스킬 ID 추적\r\n  const [savingSkillIds, setSavingSkillIds] = useState<Set<string>>(new Set())\r\n\r\n  // 🌟 슬라이더 변경 핸들러 (즉시 저장 없이 로컬 상태만 업데이트)\r\n  const handleLevelChange = useCallback((skillId: string, newLevel: number) => {\r\n    setLocalLevels(prev => {\r\n      const newMap = new Map(prev)\r\n      newMap.set(skillId, newLevel)\r\n      return newMap\r\n    })\r\n  }, [])\r\n\r\n  // 🌟 개별 스킬 숙련도 저장 핸들러\r\n  const handleSaveLevel = useCallback(async (skill: Skill) => {\r\n    const skillId = skill._id!\r\n    const newLevel = localLevels.get(skillId)\r\n    \r\n    if (newLevel === undefined || newLevel === skill.level) {\r\n      // 변경사항이 없으면 로컬 상태만 정리\r\n      setLocalLevels(prev => {\r\n        const newMap = new Map(prev)\r\n        newMap.delete(skillId)\r\n        return newMap\r\n      })\r\n      return\r\n    }\r\n\r\n    try {\r\n      setSavingSkillIds(prev => new Set(prev).add(skillId))\r\n      console.log(`💾 숙련도 저장: ${skill.name} = ${newLevel}%`)\r\n      \r\n      await updateSkill(skillId, { \r\n        name: skill.name,\r\n        icon: skill.icon,\r\n        level: newLevel,\r\n        order: skill.order,\r\n        ...(skill.description && { description: skill.description }),\r\n        ...(skill.color && { color: skill.color }),\r\n        ...(skill.showInSidebar !== undefined && { showInSidebar: skill.showInSidebar }),\r\n        ...(skill.showInLanguageCard !== undefined && { showInLanguageCard: skill.showInLanguageCard })\r\n      })\r\n      \r\n      console.log(`✅ 저장 완료: ${skill.name}`)\r\n      \r\n      // 저장 성공 후 로컬 상태 정리\r\n      setLocalLevels(prev => {\r\n        const newMap = new Map(prev)\r\n        newMap.delete(skillId)\r\n        return newMap\r\n      })\r\n    } catch (error) {\r\n      console.error(`❌ 저장 실패: ${skill.name}`, error)\r\n      alert(`저장 실패: ${skill.name}`)\r\n    } finally {\r\n      setSavingSkillIds(prev => {\r\n        const newSet = new Set(prev)\r\n        newSet.delete(skillId)\r\n        return newSet\r\n      })\r\n    }\r\n  }, [localLevels, updateSkill])\r\n\r\n  // 🌟 사이드바 표시 토글 핸들러\r\n  const handleToggleSidebar = useCallback(async (skill: Skill) => {\r\n    if (!skill._id) return\r\n    \r\n    try {\r\n      setSavingSkillIds(prev => new Set(prev).add(skill._id!))\r\n      const newValue = !skill.showInSidebar\r\n      console.log(`💾 [핵심기술] 토글: ${skill.name} = ${newValue}`)\r\n      console.log(`📋 [핵심기술] 전송 데이터:`, {\r\n        name: skill.name,\r\n        showInSidebar: newValue,\r\n        showInLanguageCard: skill.showInLanguageCard\r\n      })\r\n      \r\n      const result = await updateSkill(skill._id, {\r\n        name: skill.name,\r\n        icon: skill.icon,\r\n        level: skill.level,\r\n        order: skill.order,\r\n        showInSidebar: newValue,\r\n        ...(skill.description && { description: skill.description }),\r\n        ...(skill.color && { color: skill.color }),\r\n        ...(skill.showInLanguageCard !== undefined && { showInLanguageCard: skill.showInLanguageCard })\r\n      })\r\n      \r\n      console.log(`✅ [핵심기술] 토글 완료:`, result)\r\n    } catch (error) {\r\n      console.error(`❌ [핵심기술] 토글 실패: ${skill.name}`, error)\r\n      alert(`사이드바 표시 토글 실패: ${skill.name}`)\r\n    } finally {\r\n      setSavingSkillIds(prev => {\r\n        const newSet = new Set(prev)\r\n        newSet.delete(skill._id!)\r\n        return newSet\r\n      })\r\n    }\r\n  }, [updateSkill])\r\n\r\n  // 🌟 언어 카드 표시 토글 핸들러\r\n  const handleToggleLanguageCard = useCallback(async (skill: Skill) => {\r\n    if (!skill._id) return\r\n    \r\n    try {\r\n      setSavingSkillIds(prev => new Set(prev).add(skill._id!))\r\n      const newValue = !skill.showInLanguageCard\r\n      console.log(`💾 [언어카드] 토글: ${skill.name} = ${newValue}`)\r\n      console.log(`📋 [언어카드] 전송 데이터:`, {\r\n        name: skill.name,\r\n        showInSidebar: skill.showInSidebar,\r\n        showInLanguageCard: newValue\r\n      })\r\n      \r\n      const result = await updateSkill(skill._id, {\r\n        name: skill.name,\r\n        icon: skill.icon,\r\n        level: skill.level,\r\n        order: skill.order,\r\n        showInLanguageCard: newValue,\r\n        ...(skill.description && { description: skill.description }),\r\n        ...(skill.color && { color: skill.color }),\r\n        ...(skill.showInSidebar !== undefined && { showInSidebar: skill.showInSidebar })\r\n      })\r\n      \r\n      console.log(`✅ [언어카드] 토글 완료:`, result)\r\n    } catch (error) {\r\n      console.error(`❌ [언어카드] 토글 실패: ${skill.name}`, error)\r\n      alert(`언어 카드 표시 토글 실패: ${skill.name}`)\r\n    } finally {\r\n      setSavingSkillIds(prev => {\r\n        const newSet = new Set(prev)\r\n        newSet.delete(skill._id!)\r\n        return newSet\r\n      })\r\n    }\r\n  }, [updateSkill])\r\n\r\n  // 🌟 카테고리 드래그 앤 드롭 핸들러\r\n  const handleCategoryDragEnd = useCallback(async (event: DragEndEvent) => {\r\n    const { active, over } = event\r\n    \r\n    if (!over || active.id === over.id) return\r\n    \r\n    const oldIndex = skillCategories.findIndex(cat => cat._id === active.id)\r\n    const newIndex = skillCategories.findIndex(cat => cat._id === over.id)\r\n    \r\n    if (oldIndex === -1 || newIndex === -1) return\r\n    \r\n    // 배열 순서 변경\r\n    const reorderedCategories = arrayMove(skillCategories, oldIndex, newIndex)\r\n    \r\n    // 각 카테고리의 order 값을 새로운 인덱스로 업데이트하고 저장\r\n    try {\r\n      for (let i = 0; i < reorderedCategories.length; i++) {\r\n        const category = reorderedCategories[i]\r\n        if (!category?._id) continue\r\n        \r\n        await updateSkillCategory(category._id, {\r\n          title: category.title,\r\n          color: category.color,\r\n          order: i,\r\n          ...(category.description && { description: category.description })\r\n        })\r\n      }\r\n      console.log('✅ 카테고리 순서 변경 완료')\r\n    } catch (error) {\r\n      console.error('❌ 카테고리 순서 변경 실패:', error)\r\n      alert('순서 변경에 실패했습니다.')\r\n    }\r\n  }, [skillCategories, updateSkillCategory])\r\n\r\n  // 🌟 스킬 드래그 앤 드롭 핸들러 (카테고리별)\r\n  const handleSkillDragEnd = useCallback(async (event: DragEndEvent, categoryId: string) => {\r\n    const { active, over } = event\r\n    \r\n    if (!over || active.id === over.id) return\r\n    \r\n    const category = skillCategories.find(cat => cat._id === categoryId)\r\n    if (!category || !category.skills) return\r\n    \r\n    const oldIndex = category.skills.findIndex(skill => skill._id === active.id)\r\n    const newIndex = category.skills.findIndex(skill => skill._id === over.id)\r\n    \r\n    if (oldIndex === -1 || newIndex === -1) return\r\n    \r\n    // 스킬 배열 순서 변경\r\n    const reorderedSkills = arrayMove(category.skills, oldIndex, newIndex)\r\n    \r\n    // 각 스킬의 order 값을 새로운 인덱스로 업데이트하고 저장\r\n    try {\r\n      for (let i = 0; i < reorderedSkills.length; i++) {\r\n        const skill = reorderedSkills[i]\r\n        if (!skill?._id) continue\r\n        \r\n        await updateSkill(skill._id, {\r\n          name: skill.name,\r\n          icon: skill.icon,\r\n          level: skill.level,\r\n          order: i,\r\n          ...(skill.description && { description: skill.description }),\r\n          ...(skill.color && { color: skill.color })\r\n        })\r\n      }\r\n      console.log(`✅ 스킬 순서 변경 완료 (카테고리: ${category.title})`)\r\n    } catch (error) {\r\n      console.error('❌ 스킬 순서 변경 실패:', error)\r\n      alert('순서 변경에 실패했습니다.')\r\n    }\r\n  }, [skillCategories, updateSkill])\r\n\r\n  const toggleCategory = (categoryId: string) => {\r\n    setExpandedCategories(prev => {\r\n      const newSet = new Set(prev)\r\n      if (newSet.has(categoryId)) {\r\n        newSet.delete(categoryId)\r\n      } else {\r\n        newSet.add(categoryId)\r\n      }\r\n      return newSet\r\n    })\r\n  }\r\n\r\n  const handleAddCategory = () => {\r\n    setEditingCategory(null)\r\n    setActiveForm('category')\r\n  }\r\n\r\n  const handleEditCategory = (category: SkillCategory) => {\r\n    setEditingCategory(category)\r\n    setActiveForm('category')\r\n  }\r\n\r\n  const handleSaveCategory = async (data: SkillCategoryFormData) => {\r\n    try {\r\n      setIsSaving(true)\r\n      console.log('🔍 카테고리 저장 시작:', data)\r\n      \r\n      if (editingCategory) {\r\n        console.log('📝 카테고리 수정 모드:', editingCategory._id)\r\n        const result = await updateSkillCategory(editingCategory._id!, data)\r\n        console.log('✅ 수정 결과:', result)\r\n        if (result.success) {\r\n          setActiveForm(null)\r\n          setEditingCategory(null)\r\n          alert('카테고리가 성공적으로 수정되었습니다.')\r\n        } else {\r\n          alert(`카테고리 수정 실패: ${result.error || '알 수 없는 오류'}`)\r\n        }\r\n      } else {\r\n        console.log('➕ 카테고리 생성 모드')\r\n        const result = await createSkillCategory(data)\r\n        console.log('✅ 생성 결과:', result)\r\n        if (result.success) {\r\n          setActiveForm(null)\r\n          alert('카테고리가 성공적으로 추가되었습니다.')\r\n        } else {\r\n          alert(`카테고리 추가 실패: ${result.error || '알 수 없는 오류'}`)\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ 카테고리 저장 실패:', error)\r\n      alert(`카테고리 저장 중 오류가 발생했습니다: ${error}`)\r\n    } finally {\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n\r\n  const handleDeleteCategory = async (category: SkillCategory) => {\r\n    if (confirm('정말 삭제하시겠습니까? 카테고리 내 모든 스킬도 함께 삭제됩니다.')) {\r\n      try {\r\n        setIsDeleting(true)\r\n        await deleteSkillCategory(category._id!)\r\n      } catch (error) {\r\n        console.error('카테고리 삭제 실패:', error)\r\n      } finally {\r\n        setIsDeleting(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleAddSkill = (categoryId: string) => {\r\n    setSelectedCategoryId(categoryId)\r\n    setEditingSkill(null)\r\n    setActiveForm('skill')\r\n  }\r\n\r\n  const handleEditSkill = (skill: Skill) => {\r\n    setEditingSkill(skill)\r\n    setSelectedCategoryId(skill.categoryId)\r\n    setActiveForm('skill')\r\n  }\r\n\r\n  const handleSaveSkill = async (data: SkillFormData) => {\r\n    if (!selectedCategoryId && !editingSkill) return\r\n    \r\n    try {\r\n      setIsSaving(true)\r\n      const categoryId = editingSkill?.categoryId || selectedCategoryId!\r\n      \r\n      if (editingSkill) {\r\n        const result = await updateSkill(editingSkill._id!, data)\r\n        if (result.success) {\r\n          setActiveForm(null)\r\n          setEditingSkill(null)\r\n          setSelectedCategoryId(null)\r\n        }\r\n      } else {\r\n        const result = await createSkill(categoryId, data)\r\n        if (result.success) {\r\n          setActiveForm(null)\r\n          setSelectedCategoryId(null)\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('스킬 저장 실패:', error)\r\n    } finally {\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n\r\n  const handleDeleteSkill = async (skill: Skill) => {\r\n    if (confirm('정말 삭제하시겠습니까?')) {\r\n      try {\r\n        setIsDeleting(true)\r\n        await deleteSkill(skill._id!)\r\n      } catch (error) {\r\n        console.error('스킬 삭제 실패:', error)\r\n      } finally {\r\n        setIsDeleting(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setActiveForm(null)\r\n    setEditingCategory(null)\r\n    setEditingSkill(null)\r\n    setSelectedCategoryId(null)\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-8\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n        <span className=\"ml-2\">기술 데이터를 불러오는 중...</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <h2 className=\"text-2xl font-bold\">기술 관리</h2>\r\n        <button\r\n          onClick={handleAddCategory}\r\n          className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2\"\r\n        >\r\n          <FaPlus />\r\n          카테고리 추가\r\n        </button>\r\n      </div>\r\n\r\n      {/* 카테고리 폼 */}\r\n      {activeForm === 'category' && (\r\n        <SkillCategoryForm\r\n          initialData={editingCategory}\r\n          onSave={handleSaveCategory}\r\n          onCancel={handleCancel}\r\n          isSaving={isSaving}\r\n        />\r\n      )}\r\n\r\n      {/* 스킬 폼 */}\r\n      {activeForm === 'skill' && (\r\n        <SkillForm\r\n          initialData={editingSkill}\r\n          categoryId={selectedCategoryId || undefined}\r\n          onSave={handleSaveSkill}\r\n          onCancel={handleCancel}\r\n          isSaving={isSaving}\r\n        />\r\n      )}\r\n\r\n      {/* 카테고리 목록 - 🌟 드래그 앤 드롭 적용 */}\r\n      <DndContext collisionDetection={closestCenter} onDragEnd={handleCategoryDragEnd}>\r\n        <SortableContext items={skillCategories.map(cat => cat._id!)} strategy={verticalListSortingStrategy}>\r\n          <div className=\"space-y-4\">\r\n            {skillCategories.map((category) => {\r\n              const isExpanded = expandedCategories.has(category._id!)\r\n              return (\r\n                <SortableCategoryCard\r\n                  key={category._id}\r\n                  category={category}\r\n                  isExpanded={isExpanded}\r\n                  onToggle={toggleCategory}\r\n                  onAddSkill={handleAddSkill}\r\n                  onEdit={handleEditCategory}\r\n                  onDelete={handleDeleteCategory}\r\n                  isSaving={isSaving}\r\n                  isDeleting={isDeleting}\r\n                >\r\n              \r\n                  {/* 스킬 목록 - 🌟 드래그 앤 드롭 적용 */}\r\n                  <div className=\"border-t border-gray-200 dark:border-gray-600 bg-gray-100 dark:bg-gray-800\">\r\n                    {category.skills && category.skills.length > 0 ? (\r\n                      <DndContext \r\n                        collisionDetection={closestCenter} \r\n                        onDragEnd={(event) => handleSkillDragEnd(event, category._id!)}\r\n                      >\r\n                        <SortableContext \r\n                          items={category.skills.map(skill => skill._id!)} \r\n                          strategy={verticalListSortingStrategy}\r\n                        >\r\n                          <div className=\"p-4 space-y-2\">\r\n                            {category.skills\r\n                              .sort((a, b) => a.order - b.order)\r\n                              .map((skill) => {\r\n                                const currentLevel = localLevels.get(skill._id!) ?? skill.level\r\n                                const hasChanges = localLevels.has(skill._id!) && localLevels.get(skill._id!) !== skill.level\r\n                                const isSavingThis = savingSkillIds.has(skill._id!)\r\n                                \r\n                                return (\r\n                                  <SortableSkillItem\r\n                                    key={skill._id}\r\n                                    skill={skill}\r\n                                    categoryColor={category.color || '#3B82F6'}\r\n                                    currentLevel={currentLevel}\r\n                                    hasChanges={hasChanges}\r\n                                    isSavingThis={isSavingThis}\r\n                                    isSaving={isSaving}\r\n                                    isDeleting={isDeleting}\r\n                                    onLevelChange={handleLevelChange}\r\n                                    onSaveLevel={handleSaveLevel}\r\n                                    onEdit={handleEditSkill}\r\n                                    onDelete={handleDeleteSkill}\r\n                                    onToggleSidebar={handleToggleSidebar}\r\n                                    onToggleLanguageCard={handleToggleLanguageCard}\r\n                                  />\r\n                                )\r\n                              })}\r\n                          </div>\r\n                        </SortableContext>\r\n                      </DndContext>\r\n                    ) : (\r\n                      <div className=\"p-4 text-center text-gray-500 dark:text-gray-400\">\r\n                        <FaPlus size={32} className=\"text-blue-400 dark:text-blue-500 mx-auto mb-2\" />\r\n                        <p className=\"text-sm\">아직 스킬이 없습니다.</p>\r\n                        <p className=\"text-xs mt-1\">카테고리 제목 옆의 + 버튼을 클릭하여 스킬을 추가하세요.</p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </SortableCategoryCard>\r\n              )\r\n            })}\r\n          </div>\r\n        </SortableContext>\r\n      </DndContext>\r\n\r\n      {skillCategories.length === 0 && (\r\n        <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\r\n          <p className=\"text-lg mb-2\">아직 생성된 카테고리가 없습니다.</p>\r\n          <p>위의 \"카테고리 추가\" 버튼을 클릭하여 첫 번째 카테고리를 만들어보세요.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SkillsManager\r\n","import React, { useState } from 'react'\r\nimport { FaPlus, FaEdit, FaTrash, FaFolder, FaBars } from 'react-icons/fa'\r\nimport { Category, CategoryFormData } from '../../types'\r\nimport { useCategoryManagerData, useCategoryUsage } from '../../hooks/useCategories'\r\nimport { useCRUDManager } from '../../hooks/useCRUDManager'\r\nimport { useToastHelpers } from '../../hooks/useToast'\r\nimport CategoryForm from '../forms/CategoryForm'\r\nimport { DndContext, closestCenter, DragEndEvent } from '@dnd-kit/core'\r\nimport { SortableContext, verticalListSortingStrategy, useSortable, arrayMove } from '@dnd-kit/sortable'\r\nimport { CSS } from '@dnd-kit/utilities'\r\n\r\n// 드래그 가능한 카테고리 카드 컴포넌트\r\ninterface SortableCategoryCardProps {\r\n  category: Category\r\n  onEdit: () => void\r\n  onDelete: () => void\r\n  isDeleting: boolean\r\n}\r\n\r\nconst SortableCategoryCard: React.FC<SortableCategoryCardProps> = ({ \r\n  category, \r\n  onEdit, \r\n  onDelete, \r\n  isDeleting \r\n}) => {\r\n  const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({ \r\n    id: category._id \r\n  })\r\n\r\n  const style = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition,\r\n    opacity: isDragging ? 0.5 : 1,\r\n  }\r\n\r\n  // 카테고리 사용 통계 조회\r\n  const { data: usageData } = useCategoryUsage(category._id)\r\n\r\n  return (\r\n    <div\r\n      ref={setNodeRef}\r\n      style={style}\r\n      className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4 hover:shadow-lg transition-shadow\"\r\n    >\r\n      <div className=\"flex items-start justify-between\">\r\n        <div className=\"flex items-start gap-3 flex-1\">\r\n          {/* 드래그 핸들 */}\r\n          <button\r\n            {...attributes}\r\n            {...listeners}\r\n            className=\"mt-1 p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 cursor-grab active:cursor-grabbing\"\r\n            title=\"드래그하여 순서 변경\"\r\n          >\r\n            <FaBars />\r\n          </button>\r\n\r\n          <div className=\"flex-1\">\r\n            <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-2\">\r\n              {category.name}\r\n            </h3>\r\n            \r\n            {/* 사용 통계 */}\r\n            {usageData && (\r\n              <div className=\"flex flex-wrap gap-2 text-sm\">\r\n                {usageData.usage.books > 0 && (\r\n                  <span className=\"px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded\">\r\n                    📚 서적 {usageData.usage.books}개\r\n                  </span>\r\n                )}\r\n                {usageData.usage.projects > 0 && (\r\n                  <span className=\"px-2 py-1 bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 rounded\">\r\n                    🚀 프로젝트 {usageData.usage.projects}개\r\n                  </span>\r\n                )}\r\n                {usageData.usage.videoLearnings > 0 && (\r\n                  <span className=\"px-2 py-1 bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-200 rounded\">\r\n                    📹 영상 {usageData.usage.videoLearnings}개\r\n                  </span>\r\n                )}\r\n                {usageData.usage.videoPlaylists > 0 && (\r\n                  <span className=\"px-2 py-1 bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200 rounded\">\r\n                    📺 재생 목록 {usageData.usage.videoPlaylists}개\r\n                  </span>\r\n                )}\r\n                {usageData.usage.total === 0 && (\r\n                  <span className=\"text-gray-500 dark:text-gray-400 text-xs\">\r\n                    사용 중이지 않음\r\n                  </span>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex gap-2 ml-4\">\r\n          <button\r\n            onClick={onEdit}\r\n            className=\"p-2 text-yellow-600 hover:bg-yellow-100 dark:hover:bg-yellow-900 rounded-lg transition-colors\"\r\n            title=\"수정\"\r\n          >\r\n            <FaEdit />\r\n          </button>\r\n          <button\r\n            onClick={onDelete}\r\n            disabled={isDeleting}\r\n            className=\"p-2 text-red-600 hover:bg-red-100 dark:hover:bg-red-900 rounded-lg transition-colors disabled:opacity-50\"\r\n            title=\"삭제\"\r\n          >\r\n            <FaTrash />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst CategoryManager: React.FC = () => {\r\n  const { success, error } = useToastHelpers()\r\n  const { \r\n    categories, \r\n    isLoading, \r\n    createCategory, \r\n    updateCategory, \r\n    deleteCategory \r\n  } = useCategoryManagerData()\r\n\r\n  const [categoryState, categoryActions] = useCRUDManager<Category>({\r\n    onSave: async (data: CategoryFormData, editingItem) => {\r\n      if (editingItem) {\r\n        const result = await updateCategory(editingItem._id, data)\r\n        if (result.success) {\r\n          success('카테고리 수정 완료', '카테고리가 성공적으로 수정되었습니다.')\r\n        } else {\r\n          throw result.error\r\n        }\r\n      } else {\r\n        const result = await createCategory(data)\r\n        if (result.success) {\r\n          success('카테고리 추가 완료', '새로운 카테고리가 추가되었습니다.')\r\n        } else {\r\n          throw result.error\r\n        }\r\n      }\r\n    },\r\n    onDelete: async (category: Category) => {\r\n      const result = await deleteCategory(category._id)\r\n      if (result.success) {\r\n        success('카테고리 삭제 완료', `${category.name}이(가) 삭제되었습니다.`)\r\n      } else {\r\n        // 사용 중인 경우 에러 메시지 표시\r\n        const errorMsg = result.error?.response?.data?.message || '카테고리 삭제에 실패했습니다'\r\n        const usage = result.error?.response?.data?.usage\r\n        \r\n        if (usage) {\r\n          const usageDetails = []\r\n          if (usage.books > 0) usageDetails.push(`서적 ${usage.books}개`)\r\n          if (usage.projects > 0) usageDetails.push(`프로젝트 ${usage.projects}개`)\r\n          if (usage.videoLearnings > 0) usageDetails.push(`영상 ${usage.videoLearnings}개`)\r\n          if (usage.videoPlaylists > 0) usageDetails.push(`재생 목록 ${usage.videoPlaylists}개`)\r\n          \r\n          error('삭제 불가', `이 카테고리는 ${usageDetails.join(', ')}에서 사용 중입니다. 먼저 해당 항목들의 카테고리를 변경해주세요.`)\r\n        } else {\r\n          error('삭제 실패', errorMsg)\r\n        }\r\n        throw result.error\r\n      }\r\n    },\r\n    onError: (err) => {\r\n      error('작업 실패', err.message || '알 수 없는 오류가 발생했습니다.')\r\n    }\r\n  })\r\n\r\n  // 드래그 앤 드롭으로 순서 변경\r\n  const handleDragEnd = async (event: DragEndEvent) => {\r\n    const { active, over } = event\r\n\r\n    if (!over || active.id === over.id) return\r\n\r\n    const oldIndex = categories.findIndex(cat => cat._id === active.id)\r\n    const newIndex = categories.findIndex(cat => cat._id === over.id)\r\n\r\n    const reorderedCategories = arrayMove(categories, oldIndex, newIndex)\r\n\r\n    // 순서 업데이트\r\n    for (let i = 0; i < reorderedCategories.length; i++) {\r\n      const category = reorderedCategories[i]\r\n      if (category && category.order !== i) {\r\n        await updateCategory(category._id, { name: category.name, order: i })\r\n      }\r\n    }\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-12\">\r\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white flex items-center gap-2\">\r\n          <FaFolder className=\"text-yellow-600\" />\r\n          카테고리 관리\r\n        </h2>\r\n        <button\r\n          onClick={categoryActions.handleCreate}\r\n          className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors shadow-md\"\r\n        >\r\n          <FaPlus />\r\n          카테고리 추가\r\n        </button>\r\n      </div>\r\n\r\n      {/* 카테고리 폼 모달 */}\r\n      {categoryState.showForm && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-md w-full mx-4\">\r\n            <div className=\"p-6\">\r\n              <h2 className=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">\r\n                {categoryState.editingItem ? '카테고리 수정' : '카테고리 추가'}\r\n              </h2>\r\n              {categoryState.editingItem ? (\r\n                <CategoryForm\r\n                  data={categoryState.editingItem}\r\n                  onSave={categoryActions.handleSave}\r\n                  onCancel={categoryActions.handleCancel}\r\n                  isSaving={categoryState.isSaving}\r\n                />\r\n              ) : (\r\n                <CategoryForm\r\n                  onSave={categoryActions.handleSave}\r\n                  onCancel={categoryActions.handleCancel}\r\n                  isSaving={categoryState.isSaving}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 카테고리 목록 - 드래그 앤 드롭 */}\r\n      <DndContext collisionDetection={closestCenter} onDragEnd={handleDragEnd}>\r\n        <SortableContext items={categories.map(c => c._id)} strategy={verticalListSortingStrategy}>\r\n          <div className=\"grid gap-4\">\r\n            {categories.map((category) => (\r\n              <SortableCategoryCard\r\n                key={category._id}\r\n                category={category}\r\n                onEdit={() => categoryActions.handleEdit(category)}\r\n                onDelete={() => categoryActions.handleDelete(category)}\r\n                isDeleting={categoryState.isDeleting}\r\n              />\r\n            ))}\r\n          </div>\r\n        </SortableContext>\r\n      </DndContext>\r\n\r\n      {categories.length === 0 && (\r\n        <div className=\"text-center py-12 text-gray-500 dark:text-gray-400\">\r\n          <FaFolder className=\"text-6xl mx-auto mb-4 opacity-30\" />\r\n          <p>아직 등록된 카테고리가 없습니다</p>\r\n          <p className=\"text-sm mt-2\">위의 \"카테고리 추가\" 버튼을 클릭하여 첫 카테고리를 만들어보세요</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryManager\r\n","import React from 'react'\r\nimport { FaBell } from 'react-icons/fa'\r\n\r\ninterface Notification {\r\n  id: string\r\n  message: string\r\n  read: boolean\r\n  createdAt: string\r\n}\r\n\r\ninterface NotificationDropdownProps {\r\n  notifications: Notification[]\r\n  showNotifications: boolean\r\n  onToggle: () => void\r\n  onNotificationClick?: (notificationId: string) => void\r\n}\r\n\r\nconst NotificationDropdown: React.FC<NotificationDropdownProps> = ({\r\n  notifications,\r\n  showNotifications,\r\n  onToggle,\r\n  onNotificationClick\r\n}) => {\r\n  const getUnreadNotificationCount = () => {\r\n    return notifications.filter(n => !n.read).length\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <button\r\n        onClick={onToggle}\r\n        className=\"p-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors relative\"\r\n      >\r\n        <FaBell />\r\n        알림\r\n        {getUnreadNotificationCount() > 0 && (\r\n          <span className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\">\r\n            {getUnreadNotificationCount()}\r\n          </span>\r\n        )}\r\n      </button>\r\n\r\n      {showNotifications && (\r\n        <div className=\"absolute right-0 top-full mt-2 w-80 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg z-50\">\r\n          <div className=\"p-4\">\r\n            <h3 className=\"font-semibold text-gray-900 dark:text-white mb-3\">\r\n              알림\r\n            </h3>\r\n            {notifications.length === 0 ? (\r\n              <p className=\"text-gray-500 dark:text-gray-400 text-sm\">\r\n                새로운 알림이 없습니다.\r\n              </p>\r\n            ) : (\r\n              <div className=\"space-y-2\">\r\n                {notifications.slice(0, 5).map((notification) => (\r\n                  <div\r\n                    key={notification.id}\r\n                    onClick={() => onNotificationClick?.(notification.id)}\r\n                    className={`p-3 rounded-lg border cursor-pointer transition-all hover:shadow-md ${\r\n                      !notification.read\r\n                        ? 'bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-800 hover:bg-blue-100 dark:hover:bg-blue-900/30'\r\n                        : 'bg-gray-50 dark:bg-gray-700 border-gray-200 dark:border-gray-600 hover:bg-gray-100 dark:hover:bg-gray-600'\r\n                    }`}\r\n                  >\r\n                    <p className=\"text-sm text-gray-900 dark:text-white\">\r\n                      {notification.message}\r\n                    </p>\r\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n                      {new Date(notification.createdAt).toLocaleString('ko-KR')}\r\n                    </p>\r\n                  </div>\r\n                ))}\r\n                {notifications.length > 5 && (\r\n                  <p className=\"text-center text-sm text-gray-500 dark:text-gray-400 pt-2 border-t border-gray-200 dark:border-gray-700\">\r\n                    +{notifications.length - 5}개 더 보기\r\n                  </p>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotificationDropdown\r\n","import React, { useState } from 'react'\r\nimport { BookFilterGroup } from '../../hooks/useAdminSidebarState'\r\n\r\ninterface BookFilterMenuProps {\r\n  filterGroup: BookFilterGroup\r\n  count: number\r\n}\r\n\r\nconst BookFilterMenu: React.FC<BookFilterMenuProps> = ({ filterGroup, count }) => {\r\n  const { state, actions, data } = filterGroup\r\n  \r\n  // 로컬 UI 상태: 검색창 표시 여부\r\n  const [showBookSearch, setShowBookSearch] = useState(false)\r\n\r\n  // 모든 필터 초기화 함수\r\n  const resetAllFilters = () => {\r\n    actions.setFilter('all')\r\n    actions.setSearchTerm('')\r\n    actions.setSelectedCategory('')\r\n    setShowBookSearch(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-6\">\r\n      <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n        서적 관리\r\n      </h4>\r\n      <div className=\"space-y-1\">\r\n        {/* 모든 서적 버튼 */}\r\n        <button\r\n          onClick={() => {\r\n            actions.setFilter('all')\r\n            actions.setSearchTerm('')\r\n            setShowBookSearch(false)\r\n            actions.setSelectedCategory('')\r\n          }}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            state.filter === 'all' && !state.searchTerm && !state.selectedCategory\r\n              ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          📖 모든 서적 ({count})\r\n        </button>\r\n\r\n        {/* 평점 5점 서적 버튼 */}\r\n        <button\r\n          onClick={() => {\r\n            actions.setFilter('five-star')\r\n            actions.setSearchTerm('')\r\n            setShowBookSearch(false)\r\n            actions.setSelectedCategory('')\r\n          }}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            state.filter === 'five-star'\r\n              ? 'bg-yellow-100 dark:bg-yellow-900 text-yellow-700 dark:text-yellow-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          ⭐ 평점 5점 서적\r\n        </button>\r\n\r\n        {/* 카테고리별 보기 버튼 */}\r\n        <button\r\n          onClick={() => {\r\n            actions.setFilter('category')\r\n            actions.setSearchTerm('')\r\n            setShowBookSearch(false)\r\n          }}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            state.filter === 'category'\r\n              ? 'bg-purple-100 dark:bg-purple-900 text-purple-700 dark:text-purple-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          📚 카테고리별 보기\r\n        </button>\r\n\r\n        {/* 카테고리 드롭다운 */}\r\n        {state.filter === 'category' && (\r\n          <div className=\"ml-4 mb-2\">\r\n            <select\r\n              value={state.selectedCategory}\r\n              onChange={(e) => actions.setSelectedCategory(e.target.value)}\r\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            >\r\n              <option value=\"\">카테고리 선택</option>\r\n              {data.categories.map((category) => (\r\n                <option key={category} value={category}>\r\n                  {category}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        )}\r\n\r\n        {/* 검색 버튼 */}\r\n        <button\r\n          onClick={() => setShowBookSearch(!showBookSearch)}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            showBookSearch\r\n              ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          🔍 서적 검색\r\n        </button>\r\n\r\n        {/* 검색 입력창 */}\r\n        {showBookSearch && (\r\n          <div className=\"ml-4 mb-2\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"제목, 저자, 카테고리 검색...\"\r\n              value={state.searchTerm}\r\n              onChange={(e) => actions.setSearchTerm(e.target.value)}\r\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* 필터 초기화 버튼 */}\r\n        {(state.filter !== 'all' || state.searchTerm || state.selectedCategory) && (\r\n          <button\r\n            onClick={resetAllFilters}\r\n            className=\"w-full text-left px-3 py-2 text-sm rounded-lg transition-colors text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20\"\r\n          >\r\n            🔄 필터 초기화\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BookFilterMenu\r\n","import React, { useState } from 'react'\r\nimport { ExperienceFilterGroup } from '../../hooks/useAdminSidebarState'\r\n\r\ninterface ExperienceFilterMenuProps {\r\n  filterGroup: ExperienceFilterGroup\r\n  count: number\r\n}\r\n\r\nconst ExperienceFilterMenu: React.FC<ExperienceFilterMenuProps> = ({ filterGroup, count }) => {\r\n  const { state, actions, data } = filterGroup\r\n  \r\n  // 로컬 UI 상태: 검색창 표시 여부\r\n  const [showExperienceSearch, setShowExperienceSearch] = useState(false)\r\n\r\n  // 모든 필터 초기화 함수\r\n  const resetAllFilters = () => {\r\n    actions.setFilter('all')\r\n    actions.setSearchTerm('')\r\n    actions.setSelectedCompany('')\r\n    actions.setSelectedYear('')\r\n    setShowExperienceSearch(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-6\">\r\n      <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n        경력 관리\r\n      </h4>\r\n      <div className=\"space-y-1\">\r\n        {/* 모든 경력 버튼 */}\r\n        <button\r\n          onClick={() => {\r\n            actions.setFilter('all')\r\n            actions.setSearchTerm('')\r\n            setShowExperienceSearch(false)\r\n            actions.setSelectedCompany('')\r\n            actions.setSelectedYear('')\r\n          }}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            state.filter === 'all' && !state.searchTerm && !state.selectedCompany && !state.selectedYear\r\n              ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          💼 모든 경력 ({count})\r\n        </button>\r\n\r\n        {/* 회사별 보기 버튼 */}\r\n        <button\r\n          onClick={() => {\r\n            actions.setFilter('company')\r\n            actions.setSearchTerm('')\r\n            setShowExperienceSearch(false)\r\n            actions.setSelectedYear('')\r\n          }}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            state.filter === 'company'\r\n              ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          🏢 회사별 보기\r\n        </button>\r\n\r\n        {/* 회사 드롭다운 */}\r\n        {state.filter === 'company' && (\r\n          <div className=\"ml-4 mb-2\">\r\n            <select\r\n              value={state.selectedCompany}\r\n              onChange={(e) => actions.setSelectedCompany(e.target.value)}\r\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            >\r\n              <option value=\"\">회사 선택</option>\r\n              {data.companies.map((company) => (\r\n                <option key={company} value={company}>\r\n                  {company}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        )}\r\n\r\n        {/* 연도별 보기 버튼 */}\r\n        <button\r\n          onClick={() => {\r\n            actions.setFilter('year')\r\n            actions.setSearchTerm('')\r\n            setShowExperienceSearch(false)\r\n            actions.setSelectedCompany('')\r\n          }}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            state.filter === 'year'\r\n              ? 'bg-indigo-100 dark:bg-indigo-900 text-indigo-700 dark:text-indigo-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          📅 연도별 보기\r\n        </button>\r\n\r\n        {/* 연도 드롭다운 */}\r\n        {state.filter === 'year' && (\r\n          <div className=\"ml-4 mb-2\">\r\n            <select\r\n              value={state.selectedYear}\r\n              onChange={(e) => actions.setSelectedYear(e.target.value)}\r\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            >\r\n              <option value=\"\">연도 선택</option>\r\n              {data.years.map((year) => (\r\n                <option key={year} value={year}>\r\n                  {year}년\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        )}\r\n\r\n        {/* 검색 버튼 */}\r\n        <button\r\n          onClick={() => setShowExperienceSearch(!showExperienceSearch)}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            showExperienceSearch\r\n              ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          🔍 경력 검색\r\n        </button>\r\n\r\n        {/* 검색 입력창 */}\r\n        {showExperienceSearch && (\r\n          <div className=\"ml-4 mb-2\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"제목, 회사, 설명 검색...\"\r\n              value={state.searchTerm}\r\n              onChange={(e) => actions.setSearchTerm(e.target.value)}\r\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* 필터 초기화 버튼 */}\r\n        {(state.filter !== 'all' || state.searchTerm || state.selectedCompany || state.selectedYear) && (\r\n          <button\r\n            onClick={resetAllFilters}\r\n            className=\"w-full text-left px-3 py-2 text-sm rounded-lg transition-colors text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20\"\r\n          >\r\n            🔄 필터 초기화\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExperienceFilterMenu\r\n","import React, { useState } from 'react'\r\nimport { ProjectFilterGroup } from '../../hooks/useAdminSidebarState'\r\n\r\ninterface ProjectFilterMenuProps {\r\n  filterGroup: ProjectFilterGroup\r\n  count: number\r\n}\r\n\r\nconst ProjectFilterMenu: React.FC<ProjectFilterMenuProps> = ({ filterGroup, count }) => {\r\n  const { state, actions, data } = filterGroup\r\n  \r\n  // 로컬 UI 상태: 검색창 표시 여부\r\n  const [showProjectSearch, setShowProjectSearch] = useState(false)\r\n\r\n  // 모든 필터 초기화 함수\r\n  const resetAllFilters = () => {\r\n    actions.setFilter('all')\r\n    actions.setSearchTerm('')\r\n    actions.setSelectedCategory('')\r\n    setShowProjectSearch(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-6\">\r\n      <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n        프로젝트 관리\r\n      </h4>\r\n      <div className=\"space-y-1\">\r\n        {/* 모든 프로젝트 버튼 */}\r\n        <button\r\n          onClick={() => {\r\n            actions.setFilter('all')\r\n            actions.setSearchTerm('')\r\n            setShowProjectSearch(false)\r\n            actions.setSelectedCategory('')\r\n          }}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            state.filter === 'all' && !state.searchTerm && !state.selectedCategory\r\n              ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          📁 모든 프로젝트 ({count})\r\n        </button>\r\n\r\n        {/* 카테고리별 보기 버튼 */}\r\n        <button\r\n          onClick={() => {\r\n            actions.setFilter('category')\r\n            actions.setSearchTerm('')\r\n            setShowProjectSearch(false)\r\n          }}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            state.filter === 'category'\r\n              ? 'bg-purple-100 dark:bg-purple-900 text-purple-700 dark:text-purple-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          🏷️ 카테고리별 보기\r\n        </button>\r\n\r\n        {/* 카테고리 드롭다운 */}\r\n        {state.filter === 'category' && (\r\n          <div className=\"ml-4 mb-2\">\r\n            <select\r\n              value={state.selectedCategory}\r\n              onChange={(e) => actions.setSelectedCategory(e.target.value)}\r\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            >\r\n              <option value=\"\">카테고리 선택</option>\r\n              {data.categories.map((category) => (\r\n                <option key={category} value={category}>\r\n                  {category}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        )}\r\n\r\n        {/* 주요 프로젝트 버튼 */}\r\n        <button\r\n          onClick={() => {\r\n            actions.setFilter('featured')\r\n            actions.setSearchTerm('')\r\n            setShowProjectSearch(false)\r\n            actions.setSelectedCategory('')\r\n          }}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            state.filter === 'featured'\r\n              ? 'bg-yellow-100 dark:bg-yellow-900 text-yellow-700 dark:text-yellow-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          🌟 주요 프로젝트\r\n        </button>\r\n\r\n        {/* 검색 버튼 */}\r\n        <button\r\n          onClick={() => setShowProjectSearch(!showProjectSearch)}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            showProjectSearch\r\n              ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          🔍 프로젝트 검색\r\n        </button>\r\n\r\n        {/* 검색 입력창 */}\r\n        {showProjectSearch && (\r\n          <div className=\"ml-4 mb-2\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"제목, 설명, 기술스택 검색...\"\r\n              value={state.searchTerm}\r\n              onChange={(e) => actions.setSearchTerm(e.target.value)}\r\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* 필터 초기화 버튼 */}\r\n        {(state.filter !== 'all' || state.searchTerm || state.selectedCategory) && (\r\n          <button\r\n            onClick={resetAllFilters}\r\n            className=\"w-full text-left px-3 py-2 text-sm rounded-lg transition-colors text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20\"\r\n          >\r\n            🔄 필터 초기화\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectFilterMenu\r\n","import React from 'react'\r\n\r\ninterface SettingsMenuProps {\r\n  activeSettingsSection: string | null\r\n  setActiveSettingsSection: (section: string | null) => void\r\n}\r\n\r\nconst SettingsMenu: React.FC<SettingsMenuProps> = ({ \r\n  activeSettingsSection, \r\n  setActiveSettingsSection \r\n}) => {\r\n  const settingsOptions = [\r\n    { id: 'general', label: '🏠 일반 설정', description: '사이트 기본 정보' },\r\n    { id: 'appearance', label: '🎨 외관 설정', description: '테마 및 디자인' },\r\n    { id: 'seo', label: '🔍 SEO 설정', description: '검색 엔진 최적화' },\r\n    { id: 'social', label: '📱 소셜 미디어', description: '소셜 링크 및 연락처' },\r\n    { id: 'analytics', label: '📊 분석 도구', description: 'Google Analytics 등' },\r\n    { id: 'security', label: '🔒 보안 설정', description: '인증 및 보안' },\r\n  ]\r\n\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n        사이트 설정\r\n      </h4>\r\n      \r\n      <div className=\"space-y-1\">\r\n        {settingsOptions.map((option) => (\r\n          <button\r\n            key={option.id}\r\n            onClick={() => setActiveSettingsSection(option.id)}\r\n            className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n              activeSettingsSection === option.id\r\n                ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'\r\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            <div className=\"flex flex-col\">\r\n              <span className=\"font-medium\">{option.label}</span>\r\n              <span className=\"text-xs text-gray-500 dark:text-gray-400 mt-0.5\">\r\n                {option.description}\r\n              </span>\r\n            </div>\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* 설정 초기화 버튼 */}\r\n      {activeSettingsSection && (\r\n        <button\r\n          onClick={() => setActiveSettingsSection(null)}\r\n          className=\"w-full text-left px-3 py-2 text-sm rounded-lg transition-colors text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n        >\r\n          ← 설정 메뉴로 돌아가기\r\n        </button>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SettingsMenu\r\n","import React from 'react'\r\nimport { AdminTab, BookFilterGroup, ExperienceFilterGroup, ProjectFilterGroup } from '../../hooks/useAdminSidebarState'\r\n\r\n// 분리된 컴포넌트들 import\r\nimport BookFilterMenu from './BookFilterMenu'\r\nimport ExperienceFilterMenu from './ExperienceFilterMenu'\r\nimport ProjectFilterMenu from './ProjectFilterMenu'\r\nimport SettingsMenu from './SettingsMenu'\r\n\r\ninterface DataCounts {\r\n  books: number\r\n  videoLearnings: number\r\n  videoPlaylists: number\r\n  experiences: number\r\n  projects: number\r\n  messages: number\r\n  skills: number\r\n  categories: number\r\n}\r\n\r\ninterface RightSidebarProps {\r\n  // 탭 관련 props (핵심만)\r\n  activeTab: AdminTab\r\n  setActiveTab: (tab: AdminTab) => void\r\n  activeSettingsSection: string | null\r\n  setActiveSettingsSection: (section: string | null) => void\r\n  \r\n  // 데이터 카운트\r\n  counts: DataCounts\r\n  refreshCounts: () => void\r\n  \r\n  // 필터 그룹들 (각각 하나의 객체로 전달)\r\n  bookFilters: BookFilterGroup\r\n  experienceFilters: ExperienceFilterGroup\r\n  projectFilters: ProjectFilterGroup\r\n}\r\n\r\nconst RightSidebar: React.FC<RightSidebarProps> = ({ \r\n  activeTab, \r\n  setActiveTab, \r\n  activeSettingsSection,\r\n  setActiveSettingsSection, \r\n  counts,\r\n  refreshCounts,\r\n  bookFilters,\r\n  experienceFilters,\r\n  projectFilters,\r\n}) => {\r\n  return (\r\n    <div className=\"w-80 bg-white dark:bg-gray-800 border-l border-gray-200 dark:border-gray-700 p-6\">\r\n      <div className=\"sticky top-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n          빠른 메뉴\r\n        </h3>\r\n\r\n        {/* 관리자 대시보드 홈 버튼 */}\r\n        <div className=\"mb-8\">\r\n          <button\r\n            onClick={() => {\r\n              setActiveTab('settings')\r\n              setActiveSettingsSection(null)\r\n            }}\r\n            className={`w-full flex items-center gap-3 px-4 py-3 text-sm font-semibold rounded-lg transition-colors ${\r\n              activeTab === 'settings' && activeSettingsSection === null\r\n                ? 'bg-blue-600 text-white'\r\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            <span className=\"text-lg\">🏠</span>\r\n            관리자 대시보드\r\n          </button>\r\n        </div>\r\n\r\n        {/* 관리 버튼들 */}\r\n        <div className=\"space-y-2 mb-8\">\r\n          <button\r\n            onClick={() => setActiveTab('books')}\r\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\r\n              activeTab === 'books'\r\n                ? 'bg-orange-100 dark:bg-orange-900 text-orange-700 dark:text-orange-300'\r\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            <span>📚 서적 관리</span>\r\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\r\n              {counts.books}\r\n            </span>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => {\r\n              setActiveSettingsSection(null)\r\n              setActiveTab('videoLearnings')\r\n            }}\r\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\r\n              activeTab === 'videoLearnings'\r\n                ? 'bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-300'\r\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            <span>📹 개별 영상</span>\r\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\r\n              {counts.videoLearnings || 0}\r\n            </span>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => {\r\n              setActiveSettingsSection(null)\r\n              setActiveTab('videoPlaylists')\r\n            }}\r\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\r\n              activeTab === 'videoPlaylists'\r\n                ? 'bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-300'\r\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            <span>📺 시리즈 영상</span>\r\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\r\n              {counts.videoPlaylists || 0}\r\n            </span>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => setActiveTab('experiences')}\r\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\r\n              activeTab === 'experiences'\r\n                ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300'\r\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            <span>💼 경력 관리</span>\r\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\r\n              {counts.experiences}\r\n            </span>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => setActiveTab('projects')}\r\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\r\n              activeTab === 'projects'\r\n                ? 'bg-purple-100 dark:bg-purple-900 text-purple-700 dark:text-purple-300'\r\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            <span>🚀 프로젝트 관리</span>\r\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\r\n              {counts.projects}\r\n            </span>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => setActiveTab('messages')}\r\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\r\n              activeTab === 'messages'\r\n                ? 'bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-300'\r\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            <span>💬 메시지 관리</span>\r\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\r\n              {counts.messages}\r\n            </span>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => setActiveTab('skills')}\r\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\r\n              activeTab === 'skills'\r\n                ? 'bg-indigo-100 dark:bg-indigo-900 text-indigo-700 dark:text-indigo-300'\r\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            <span>⚡ 기술 관리</span>\r\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\r\n              {counts.skills}\r\n            </span>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => {\r\n              setActiveSettingsSection(null)\r\n              setActiveTab('categories')\r\n            }}\r\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\r\n              activeTab === 'categories'\r\n                ? 'bg-yellow-100 dark:bg-yellow-900 text-yellow-700 dark:text-yellow-300'\r\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            <span>📂 카테고리 관리</span>\r\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\r\n              {counts.categories || 0}\r\n            </span>\r\n          </button>\r\n        </div>\r\n\r\n        {/* 세부 메뉴 - 분리된 컴포넌트들로 대체 */}\r\n        {activeTab === 'books' && (\r\n          <BookFilterMenu \r\n            filterGroup={bookFilters} \r\n            count={counts.books} \r\n          />\r\n        )}\r\n\r\n        {activeTab === 'experiences' && (\r\n          <ExperienceFilterMenu \r\n            filterGroup={experienceFilters} \r\n            count={counts.experiences} \r\n          />\r\n        )}\r\n\r\n        {activeTab === 'projects' && (\r\n          <ProjectFilterMenu \r\n            filterGroup={projectFilters} \r\n            count={counts.projects} \r\n          />\r\n        )}\r\n\r\n        {activeTab === 'settings' && (\r\n          <SettingsMenu \r\n            activeSettingsSection={activeSettingsSection}\r\n            setActiveSettingsSection={setActiveSettingsSection}\r\n          />\r\n        )}\r\n\r\n        {/* 공통 도구 */}\r\n        <div className=\"mt-8 pt-6 border-t border-gray-200 dark:border-gray-700\">\r\n          <div className=\"space-y-2\">\r\n            <button\r\n              onClick={refreshCounts}\r\n              className=\"w-full flex items-center gap-2 px-3 py-2 text-sm text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\r\n            >\r\n              <span>🔄</span>\r\n              데이터 새로고침\r\n            </button>\r\n            \r\n            <div className=\"text-xs text-gray-500 dark:text-gray-400 text-center\">\r\n              마지막 업데이트: {new Date().toLocaleTimeString('ko-KR')}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RightSidebar","import { SiteSettings } from '@/types'\r\nimport { Field, SectionDefinition } from './types'\r\n\r\n// Initial settings with default values\r\nexport const initialSettings: Partial<SiteSettings> = {\r\n  fullName: '', firstName: '', role: '', subtitle: '', location: '', education: '', \r\n  yearsOfExperience: '', email: '', phone: '', githubUrl: '', linkedinUrl: '', \r\n  heroTitle: '', heroSubtitle: '', aboutTitle: '', aboutSubtitle: '', aboutDescription1: '', \r\n  aboutDescription2: '', skillsTitle: '', skillsSubtitle: '', projectsTitle: '', \r\n  projectsSubtitle: '', booksTitle: '', booksSubtitle: '', contactTitle: '', \r\n  contactSubtitle: '', stat1Number: '', stat1Label: '', stat2Number: '', stat2Label: '',\r\n  experienceTitle: '', experienceSubtitle: '',\r\n  // Learning goals defaults\r\n  learningGoalsTitle: '앞으로의 학습 목표',\r\n  learningGoalsDescription: '4차 산업혁명 시대에 발맞춰 **지능형 공장(Smart Factory) 구현**을 위해 다음 기술들을 집중적으로 탐구하여 전문성을 확대해 나가겠습니다.',\r\n  learningGoalsList: ['첨단 로봇 제어', '딥러닝 기반 비전 시스템', '엣지 컴퓨팅', '클라우드 연동', 'MES/ERP 연동 기술'],\r\n  // SEO defaults\r\n  siteTitle: '', siteDescription: '', siteKeywords: '', siteAuthor: '', siteLanguage: 'ko',\r\n  siteUrl: '', ogTitle: '', ogDescription: '', ogImage: '', ogType: 'website',\r\n  twitterCard: 'summary_large_image', twitterSite: '', twitterCreator: '',\r\n  robotsIndex: true, robotsFollow: true, googleAnalyticsId: '', googleSiteVerification: '',\r\n  // Social media defaults\r\n  instagramUrl: '', twitterUrl: '', facebookUrl: '', youtubeUrl: '', tiktokUrl: '',\r\n  behanceUrl: '', dribbbleUrl: '', mediumUrl: '', telegramUrl: '', discordUrl: '',\r\n  kakaoTalkUrl: '', naverBlogUrl: '', tistoryUrl: '', velogUrl: '', notionUrl: '',\r\n  // Analytics defaults\r\n  googleTagManagerId: '', facebookPixelId: '', naverAnalyticsId: '', kakaoPixelId: '',\r\n  hotjarId: '', mixpanelToken: '', amplitudeApiKey: '', sentryDsn: '',\r\n  logRocketId: '', fullStoryOrgId: '', intercomAppId: '', zendeskWidgetKey: '',\r\n  crispWebsiteId: '', tawkToPropertyId: '', liveChatLicense: '', olarkSiteId: '',\r\n  // Security defaults\r\n  enableHttps: true, enableCsp: true, cspDirectives: \"default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:;\",\r\n  enableHsts: true, hstsMaxAge: '31536000', enableXssProtection: true, enableContentTypeOptions: true,\r\n  enableFrameOptions: true, frameOptionsValue: 'DENY', enableReferrerPolicy: true, referrerPolicyValue: 'strict-origin-when-cross-origin',\r\n  enablePermissionsPolicy: true, permissionsPolicyValue: 'camera=(), microphone=(), geolocation=(), payment=()', enableApiRateLimit: true, apiRateLimitPerMinute: '60',\r\n  enableAdminAuth: true, adminSessionTimeout: '3600', enableTwoFactorAuth: false, enableIpWhitelist: false, allowedIpAddresses: '',\r\n  enableAuditLog: true, enableBackup: true, backupFrequency: 'daily'\r\n}\r\n\r\n// All settings sections with field definitions\r\nexport const allSections: SectionDefinition[] = [\r\n  {\r\n    title: '🧑 개인 정보',\r\n    fields: [\r\n      { key: 'fullName', label: '전체 이름', type: 'text', placeholder: '최주영', isMultilingual: true },\r\n      { key: 'firstName', label: '이름', type: 'text', placeholder: '주영', isMultilingual: true },\r\n      { key: 'role', label: '역할/직책', type: 'text', placeholder: '공장자동화 전문가', isMultilingual: true },\r\n      { key: 'subtitle', label: '부제목', type: 'text', placeholder: '바리스타 → 자동화 엔지니어', isMultilingual: true },\r\n      { key: 'location', label: '위치', type: 'text', placeholder: '부산', isMultilingual: true },\r\n      { key: 'education', label: '교육', type: 'text', placeholder: '부산인력개발원', isMultilingual: true },\r\n      { key: 'yearsOfExperience', label: '경력 기간', type: 'text', placeholder: '5년', isMultilingual: true },\r\n      { key: 'email', label: '이메일', type: 'email', placeholder: 'your@email.com' },\r\n      { key: 'phone', label: '전화번호', type: 'tel', placeholder: '+82 10-1234-5678' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🔗 소셜 링크',\r\n    fields: [\r\n      { key: 'githubUrl', label: 'GitHub URL', type: 'url', placeholder: 'https://github.com/username' },\r\n      { key: 'linkedinUrl', label: 'LinkedIn URL', type: 'url', placeholder: 'https://linkedin.com/in/username' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '⚙️ 사이드바 설정',\r\n    fields: [\r\n      { key: 'sidebarSkillCount', label: '사이드바 핵심기술 표시 개수', type: 'number', min: 3, max: 6, placeholder: '4' },\r\n      { key: 'languageCardSkillCount', label: '사이드바 언어카드 표시 개수', type: 'number', min: 2, max: 5, placeholder: '3' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🏠 Hero 섹션 (메인 페이지)',\r\n    fields: [\r\n      { key: 'heroTitle', label: 'Hero 제목', type: 'text', placeholder: '공장자동화 전문가', isMultilingual: true },\r\n      { key: 'heroSubtitle', label: 'Hero 부제목', type: 'textarea', rows: 6, placeholder: '여러분의 소개를 작성하세요...', isMultilingual: true },\r\n      { key: 'heroTag', label: 'Hero 태그', type: 'text', placeholder: '🎯 취업 준비 중', isMultilingual: true },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '👤 About 섹션',\r\n    fields: [\r\n      { key: 'aboutTitle', label: 'About 제목', type: 'text', placeholder: '저의 여정', isMultilingual: true },\r\n      { key: 'aboutSubtitle', label: 'About 부제목', type: 'text', placeholder: '커피 한 잔에서 시작된...', isMultilingual: true },\r\n      { key: 'aboutDescription1', label: 'About 설명 1', type: 'textarea', rows: 6, placeholder: '첫 번째 문단...', isMultilingual: true },\r\n      { key: 'aboutDescription2', label: 'About 설명 2', type: 'textarea', rows: 6, placeholder: '두 번째 문단...', isMultilingual: true },\r\n      { key: 'aboutCardTitle', label: '소개 카드 제목', type: 'text', placeholder: '바리스타에서 자동화 전문가로', isMultilingual: true },\r\n      { key: 'aboutJourneyTitle', label: '성장 여정 제목', type: 'text', placeholder: '성장 여정', isMultilingual: true },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '💼 Experience 섹션',\r\n    fields: [\r\n      { key: 'experienceTitle', label: 'Experience 제목', type: 'text', placeholder: '경력 & 학습', isMultilingual: true },\r\n      { key: 'experienceSubtitle', label: 'Experience 부제목', type: 'text', placeholder: '바리스타에서 자동화 전문가로...', isMultilingual: true },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🛠️ Skills 섹션',\r\n    fields: [\r\n      { key: 'skillsTitle', label: 'Skills 제목', type: 'text', placeholder: '기술 스택', isMultilingual: true },\r\n      { key: 'skillsSubtitle', label: 'Skills 부제목', type: 'text', placeholder: '공장자동화와 데이터 분석을...', isMultilingual: true },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🎯 학습 목표 (Skills 페이지)',\r\n    fields: [\r\n      { key: 'learningGoalsTitle', label: '학습 목표 제목', type: 'text', placeholder: '앞으로의 학습 목표', isMultilingual: true },\r\n      { key: 'learningGoalsDescription', label: '학습 목표 설명', type: 'textarea', placeholder: '4차 산업혁명 시대에...', isMultilingual: true },\r\n      { key: 'learningGoalsList', label: '학습 목표 기술 목록', type: 'array', placeholder: '기술 이름 입력 (Enter로 추가)' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '📁 Projects 섹션',\r\n    fields: [\r\n      { key: 'projectsTitle', label: 'Projects 제목', type: 'text', placeholder: '프로젝트', isMultilingual: true },\r\n      { key: 'projectsSubtitle', label: 'Projects 부제목', type: 'text', placeholder: '다양한 분야의 프로젝트...', isMultilingual: true },\r\n      { key: 'projectsUpdateTitle', label: '업데이트 카드 제목', type: 'text', placeholder: '프로젝트 업데이트 예정', isMultilingual: true },\r\n      { key: 'projectsUpdateDescription', label: '업데이트 카드 설명', type: 'textarea', placeholder: '현재 학습 중인 기술들을 활용한 실제 프로젝트들을 곧 업로드할 예정입니다.', isMultilingual: true },\r\n      { key: 'projectsUpdateTechList', label: '업데이트 예정 기술 목록', type: 'array', placeholder: '기술 이름 입력 (Enter로 추가)' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '📚 Books 섹션',\r\n    fields: [\r\n      { key: 'booksTitle', label: 'Books 제목', type: 'text', placeholder: '기술 서적 & 학습 노트', isMultilingual: true },\r\n      { key: 'booksSubtitle', label: 'Books 부제목', type: 'text', placeholder: '읽은 기술 서적과...', isMultilingual: true },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '📞 Contact 섹션',\r\n    fields: [\r\n      { key: 'contactTitle', label: 'Contact 제목', type: 'text', placeholder: '연락처', isMultilingual: true },\r\n      { key: 'contactSubtitle', label: 'Contact 부제목', type: 'text', placeholder: '프로젝트나 협업에...', isMultilingual: true },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '📊 통계 섹션',\r\n    fields: [\r\n      { key: 'stat1Number', label: '통계 1 숫자', type: 'text', placeholder: '5+' },\r\n      { key: 'stat1Label', label: '통계 1 라벨', type: 'text', placeholder: '년 경력', isMultilingual: true },\r\n      { key: 'stat2Number', label: '통계 2 숫자', type: 'text', placeholder: '10+' },\r\n      { key: 'stat2Label', label: '통계 2 라벨', type: 'text', placeholder: '기술 스택', isMultilingual: true },\r\n      { key: 'stat3Number', label: '통계 3 숫자', type: 'text', placeholder: '3+' },\r\n      { key: 'stat3Label', label: '통계 3 라벨', type: 'text', placeholder: '완료 프로젝트', isMultilingual: true },\r\n    ] as Field[]\r\n  },\r\n  // SEO Settings\r\n  {\r\n    title: '🔍 기본 SEO 설정',\r\n    fields: [\r\n      { key: 'siteTitle', label: '사이트 제목', type: 'text', placeholder: '포트폴리오 - 홍길동' },\r\n      { key: 'siteDescription', label: '사이트 설명', type: 'textarea', rows: 3, placeholder: '공장자동화 전문가 홍길동의 포트폴리오입니다. PLC 프로그래밍, 데이터 분석, 자동화 시스템 개발 경험을 소개합니다.' },\r\n      { key: 'siteKeywords', label: '키워드 (쉼표로 구분)', type: 'text', placeholder: '공장자동화, PLC, 데이터분석, 자동화시스템' },\r\n      { key: 'siteAuthor', label: '작성자', type: 'text', placeholder: '홍길동' },\r\n      { key: 'siteLanguage', label: '사이트 언어', type: 'select', placeholder: '언어 선택', options: [\r\n        { value: 'ko', label: '한국어 (ko)' },\r\n        { value: 'en', label: 'English (en)' },\r\n        { value: 'ja', label: '日本語 (ja)' },\r\n        { value: 'zh', label: '中文 (zh)' }\r\n      ]},\r\n      { key: 'siteUrl', label: '사이트 URL', type: 'url', placeholder: 'https://yourportfolio.com' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '📱 Open Graph (Facebook, LinkedIn)',\r\n    fields: [\r\n      { key: 'ogTitle', label: 'OG 제목', type: 'text', placeholder: '포트폴리오 - 홍길동' },\r\n      { key: 'ogDescription', label: 'OG 설명', type: 'textarea', rows: 3, placeholder: '공장자동화 전문가 홍길동의 포트폴리오를 확인해보세요.' },\r\n      { key: 'ogImage', label: 'OG 이미지 URL', type: 'url', placeholder: 'https://yourportfolio.com/og-image.jpg' },\r\n      { key: 'ogType', label: 'OG 타입', type: 'select', placeholder: '타입 선택', options: [\r\n        { value: 'website', label: '웹사이트 (website)' },\r\n        { value: 'profile', label: '프로필 (profile)' },\r\n        { value: 'article', label: '기사 (article)' }\r\n      ]},\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🐦 Twitter Card',\r\n    fields: [\r\n      { key: 'twitterCard', label: 'Twitter Card 타입', type: 'select', placeholder: '카드 타입 선택', options: [\r\n        { value: 'summary', label: '요약 (summary)' },\r\n        { value: 'summary_large_image', label: '큰 이미지 요약 (summary_large_image)' },\r\n        { value: 'app', label: '앱 (app)' },\r\n        { value: 'player', label: '플레이어 (player)' }\r\n      ]},\r\n      { key: 'twitterSite', label: 'Twitter 사이트 계정', type: 'text', placeholder: '@yourhandle' },\r\n      { key: 'twitterCreator', label: 'Twitter 작성자 계정', type: 'text', placeholder: '@yourhandle' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🤖 검색 엔진 설정',\r\n    fields: [\r\n      { key: 'robotsIndex', label: '검색 엔진 인덱싱 허용', type: 'checkbox', placeholder: '검색 엔진이 이 사이트를 인덱싱할 수 있도록 허용합니다.' },\r\n      { key: 'robotsFollow', label: '링크 팔로우 허용', type: 'checkbox', placeholder: '검색 엔진이 이 사이트의 링크를 따라갈 수 있도록 허용합니다.' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '📊 Google 설정',\r\n    fields: [\r\n      { key: 'googleAnalyticsId', label: 'Google Analytics ID', type: 'text', placeholder: 'G-XXXXXXXXXX' },\r\n      { key: 'googleSiteVerification', label: 'Google 사이트 인증 코드', type: 'text', placeholder: 'google-site-verification=...' },\r\n    ] as Field[]\r\n  },\r\n  // Social Media\r\n  {\r\n    title: '📱 글로벌 소셜 미디어',\r\n    fields: [\r\n      { key: 'instagramUrl', label: 'Instagram URL', type: 'url', placeholder: 'https://instagram.com/yourhandle' },\r\n      { key: 'twitterUrl', label: 'Twitter URL', type: 'url', placeholder: 'https://twitter.com/yourhandle' },\r\n      { key: 'facebookUrl', label: 'Facebook URL', type: 'url', placeholder: 'https://facebook.com/yourpage' },\r\n      { key: 'youtubeUrl', label: 'YouTube URL', type: 'url', placeholder: 'https://youtube.com/@yourchannel' },\r\n      { key: 'tiktokUrl', label: 'TikTok URL', type: 'url', placeholder: 'https://tiktok.com/@yourhandle' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🎨 디자인 & 포트폴리오',\r\n    fields: [\r\n      { key: 'behanceUrl', label: 'Behance URL', type: 'url', placeholder: 'https://behance.net/yourprofile' },\r\n      { key: 'dribbbleUrl', label: 'Dribbble URL', type: 'url', placeholder: 'https://dribbble.com/yourhandle' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '✍️ 블로그 & 글쓰기',\r\n    fields: [\r\n      { key: 'mediumUrl', label: 'Medium URL', type: 'url', placeholder: 'https://medium.com/@yourhandle' },\r\n      { key: 'velogUrl', label: 'Velog URL', type: 'url', placeholder: 'https://velog.io/@yourhandle' },\r\n      { key: 'tistoryUrl', label: 'Tistory URL', type: 'url', placeholder: 'https://yourblog.tistory.com' },\r\n      { key: 'naverBlogUrl', label: '네이버 블로그 URL', type: 'url', placeholder: 'https://blog.naver.com/yourblog' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '💬 메신저 & 커뮤니케이션',\r\n    fields: [\r\n      { key: 'telegramUrl', label: 'Telegram URL', type: 'url', placeholder: 'https://t.me/yourhandle' },\r\n      { key: 'discordUrl', label: 'Discord URL', type: 'url', placeholder: 'https://discord.gg/yourserver' },\r\n      { key: 'kakaoTalkUrl', label: '카카오톡 URL', type: 'url', placeholder: 'https://open.kakao.com/o/yourgroup' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '📝 워크스페이스 & 도구',\r\n    fields: [\r\n      { key: 'notionUrl', label: 'Notion 워크스페이스 URL', type: 'url', placeholder: 'https://notion.so/yourworkspace' },\r\n    ] as Field[]\r\n  },\r\n  // Analytics\r\n  {\r\n    title: '📊 웹 분석 도구',\r\n    fields: [\r\n      { key: 'googleTagManagerId', label: 'Google Tag Manager ID', type: 'text', placeholder: 'GTM-XXXXXXX' },\r\n      { key: 'facebookPixelId', label: 'Facebook Pixel ID', type: 'text', placeholder: '123456789012345' },\r\n      { key: 'naverAnalyticsId', label: '네이버 웹마스터 도구 ID', type: 'text', placeholder: 'naver-site-verification=...' },\r\n      { key: 'kakaoPixelId', label: '카카오 픽셀 ID', type: 'text', placeholder: '1234567890' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🔍 사용자 행동 분석',\r\n    fields: [\r\n      { key: 'hotjarId', label: 'Hotjar Site ID', type: 'text', placeholder: '1234567' },\r\n      { key: 'mixpanelToken', label: 'Mixpanel Project Token', type: 'text', placeholder: 'abc123def456...' },\r\n      { key: 'amplitudeApiKey', label: 'Amplitude API Key', type: 'text', placeholder: 'abc123def456...' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🐛 에러 추적 & 모니터링',\r\n    fields: [\r\n      { key: 'sentryDsn', label: 'Sentry DSN', type: 'text', placeholder: 'https://abc123@sentry.io/123456' },\r\n      { key: 'logRocketId', label: 'LogRocket App ID', type: 'text', placeholder: 'abc123def456' },\r\n      { key: 'fullStoryOrgId', label: 'FullStory Org ID', type: 'text', placeholder: 'ABC123' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '💬 고객 지원 & 채팅',\r\n    fields: [\r\n      { key: 'intercomAppId', label: 'Intercom App ID', type: 'text', placeholder: 'abc123def' },\r\n      { key: 'zendeskWidgetKey', label: 'Zendesk Widget Key', type: 'text', placeholder: 'abc123def456...' },\r\n      { key: 'crispWebsiteId', label: 'Crisp Website ID', type: 'text', placeholder: 'abc123def456...' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🎧 추가 채팅 도구',\r\n    fields: [\r\n      { key: 'tawkToPropertyId', label: 'Tawk.to Property ID', type: 'text', placeholder: 'abc123def456...' },\r\n      { key: 'liveChatLicense', label: 'LiveChat License Number', type: 'text', placeholder: '12345678' },\r\n      { key: 'olarkSiteId', label: 'Olark Site ID', type: 'text', placeholder: 'abc123def456...' },\r\n    ] as Field[]\r\n  },\r\n  // Security\r\n  {\r\n    title: '🔒 기본 보안 헤더',\r\n    fields: [\r\n      { key: 'enableHttps', label: 'HTTPS 강제 사용', type: 'checkbox', placeholder: '모든 HTTP 요청을 HTTPS로 리다이렉트합니다.' },\r\n      { key: 'enableCsp', label: 'Content Security Policy (CSP) 활성화', type: 'checkbox', placeholder: 'XSS 공격을 방지하기 위한 CSP 헤더를 설정합니다.' },\r\n      { key: 'cspDirectives', label: 'CSP 지시문', type: 'textarea', rows: 3, placeholder: 'Content Security Policy 지시문을 설정합니다.' },\r\n      { key: 'enableHsts', label: 'HTTP Strict Transport Security (HSTS) 활성화', type: 'checkbox', placeholder: 'HTTPS 연결을 강제하는 HSTS 헤더를 설정합니다.' },\r\n      { key: 'hstsMaxAge', label: 'HSTS 최대 나이 (초)', type: 'text', placeholder: '31536000 (1년)' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🛡️ 추가 보안 헤더',\r\n    fields: [\r\n      { key: 'enableXssProtection', label: 'XSS 보호 활성화', type: 'checkbox', placeholder: '브라우저의 XSS 필터를 활성화합니다.' },\r\n      { key: 'enableContentTypeOptions', label: 'Content-Type 옵션 활성화', type: 'checkbox', placeholder: 'MIME 타입 스니핑 공격을 방지합니다.' },\r\n      { key: 'enableFrameOptions', label: 'X-Frame-Options 활성화', type: 'checkbox', placeholder: '클릭재킹 공격을 방지합니다.' },\r\n      { key: 'frameOptionsValue', label: 'X-Frame-Options 값', type: 'select', placeholder: '헤더 값 선택', options: [\r\n        { value: 'DENY', label: 'DENY (모든 프레임 차단)' },\r\n        { value: 'SAMEORIGIN', label: 'SAMEORIGIN (같은 도메인만 허용)' },\r\n        { value: 'ALLOW-FROM', label: 'ALLOW-FROM (특정 도메인 허용)' }\r\n      ]},\r\n      { key: 'enableReferrerPolicy', label: 'Referrer Policy 활성화', type: 'checkbox', placeholder: '리퍼러 정보 노출을 제어합니다.' },\r\n      { key: 'referrerPolicyValue', label: 'Referrer Policy 값', type: 'select', placeholder: '정책 값 선택', options: [\r\n        { value: 'no-referrer', label: 'no-referrer (리퍼러 정보 전송 안함)' },\r\n        { value: 'strict-origin-when-cross-origin', label: 'strict-origin-when-cross-origin (교차 도메인시 도메인만)' },\r\n        { value: 'same-origin', label: 'same-origin (같은 도메인만)' }\r\n      ]},\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🔐 권한 및 정책',\r\n    fields: [\r\n      { key: 'enablePermissionsPolicy', label: 'Permissions Policy 활성화', type: 'checkbox', placeholder: '브라우저 기능 사용을 제어합니다.' },\r\n      { key: 'permissionsPolicyValue', label: 'Permissions Policy 값', type: 'textarea', rows: 2, placeholder: 'camera=(), microphone=(), geolocation=(), payment=()' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '⚡ API 보안',\r\n    fields: [\r\n      { key: 'enableApiRateLimit', label: 'API 속도 제한 활성화', type: 'checkbox', placeholder: 'API 요청 빈도를 제한하여 DDoS 공격을 방지합니다.' },\r\n      { key: 'apiRateLimitPerMinute', label: '분당 API 요청 제한', type: 'text', placeholder: '60 (분당 60회)' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '👤 관리자 인증',\r\n    fields: [\r\n      { key: 'enableAdminAuth', label: '관리자 인증 활성화', type: 'checkbox', placeholder: '관리자 대시보드 접근을 위한 인증을 활성화합니다.' },\r\n      { key: 'adminSessionTimeout', label: '관리자 세션 타임아웃 (초)', type: 'text', placeholder: '3600 (1시간)' },\r\n      { key: 'enableTwoFactorAuth', label: '2단계 인증 활성화', type: 'checkbox', placeholder: '관리자 로그인시 2단계 인증을 요구합니다.' },\r\n      { key: 'enableIpWhitelist', label: 'IP 화이트리스트 활성화', type: 'checkbox', placeholder: '특정 IP 주소에서만 관리자 접근을 허용합니다.' },\r\n      { key: 'allowedIpAddresses', label: '허용된 IP 주소 (쉼표로 구분)', type: 'text', placeholder: '192.168.1.1, 10.0.0.1' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '📋 로그 & 백업',\r\n    fields: [\r\n      { key: 'enableAuditLog', label: '감사 로그 활성화', type: 'checkbox', placeholder: '관리자 활동을 기록하여 보안 감사를 지원합니다.' },\r\n      { key: 'enableBackup', label: '자동 백업 활성화', type: 'checkbox', placeholder: '정기적으로 데이터를 백업합니다.' },\r\n      { key: 'backupFrequency', label: '백업 빈도', type: 'select', placeholder: '백업 주기 선택', options: [\r\n        { value: 'hourly', label: '매시간 (hourly)' },\r\n        { value: 'daily', label: '매일 (daily)' },\r\n        { value: 'weekly', label: '매주 (weekly)' },\r\n        { value: 'monthly', label: '매월 (monthly)' }\r\n      ]},\r\n    ] as Field[]\r\n  },\r\n]\r\n\r\n","import { AdminLanguage } from '@/components/common/LanguageTabs'\r\nimport { SectionDefinition } from './types'\r\nimport { allSections } from './constants'\r\n\r\n/**\r\n * Generate multilingual field key based on language\r\n * @param baseKey - Base field key (e.g., 'heroTitle')\r\n * @param lang - Target language ('ko', 'en', 'ja')\r\n * @returns Localized field key (e.g., 'heroTitleEn' for 'en')\r\n */\r\nexport const getMultilingualKey = (baseKey: string, lang: AdminLanguage): string => {\r\n  if (lang === 'ko') return baseKey\r\n  if (lang === 'en') return `${baseKey}En`\r\n  if (lang === 'ja') return `${baseKey}Ja`\r\n  return baseKey\r\n}\r\n\r\n/**\r\n * Check if a multilingual field has values in all languages\r\n * @param settings - Settings object containing field values\r\n * @param fieldKey - Base field key to check\r\n * @returns Object with completion status for each language\r\n */\r\nexport const isFieldTranslated = (\r\n  settings: any,\r\n  fieldKey: string\r\n): { ko: boolean; en: boolean; ja: boolean; complete: boolean } => {\r\n  const koValue = settings[fieldKey]\r\n  const enValue = settings[getMultilingualKey(fieldKey, 'en')]\r\n  const jaValue = settings[getMultilingualKey(fieldKey, 'ja')]\r\n\r\n  const hasKo = Boolean(koValue && (typeof koValue === 'string' ? koValue.trim() : koValue))\r\n  const hasEn = Boolean(enValue && (typeof enValue === 'string' ? enValue.trim() : enValue))\r\n  const hasJa = Boolean(jaValue && (typeof jaValue === 'string' ? jaValue.trim() : jaValue))\r\n\r\n  return {\r\n    ko: hasKo,\r\n    en: hasEn,\r\n    ja: hasJa,\r\n    complete: hasKo && hasEn && hasJa\r\n  }\r\n}\r\n\r\n/**\r\n * Get active section title based on section ID\r\n * @param activeSection - Section ID ('general', 'appearance', etc.)\r\n * @returns Human-readable section title\r\n */\r\nexport const getActiveSectionTitle = (activeSection: string | null): string => {\r\n  switch (activeSection) {\r\n    case 'general': return '🏠 일반 설정'\r\n    case 'appearance': return '🎨 외관 설정'\r\n    case 'seo': return '🔍 SEO 설정'\r\n    case 'social': return '📱 소셜 미디어'\r\n    case 'analytics': return '📊 분석 도구'\r\n    case 'security': return '🔒 보안 설정'\r\n    default: return '사이트 설정'\r\n  }\r\n}\r\n\r\n/**\r\n * Get active section description based on section ID\r\n * @param activeSection - Section ID ('general', 'appearance', etc.)\r\n * @returns Section description text\r\n */\r\nexport const getActiveSectionDescription = (activeSection: string | null): string => {\r\n  switch (activeSection) {\r\n    case 'general': return '사이트의 기본 정보와 개인 정보를 설정합니다.'\r\n    case 'appearance': return '각 섹션의 제목과 내용을 편집합니다.'\r\n    case 'seo': return '검색 엔진 최적화 설정을 관리합니다.'\r\n    case 'social': return '소셜 미디어 링크와 연락처 정보를 설정합니다.'\r\n    case 'analytics': return 'Google Analytics 등 분석 도구를 설정합니다.'\r\n    case 'security': return '인증 및 보안 설정을 관리합니다.'\r\n    default: return '포트폴리오의 모든 텍스트를 편집하고 저장하세요.'\r\n  }\r\n}\r\n\r\n/**\r\n * Filter sections based on active section ID\r\n * @param activeSection - Section ID or null for all sections\r\n * @returns Filtered array of section definitions\r\n */\r\nexport const getFilteredSections = (activeSection: string | null): SectionDefinition[] => {\r\n  if (!activeSection) return allSections\r\n\r\n  switch (activeSection) {\r\n    case 'general':\r\n      // General settings: Personal info + Social links + Sidebar settings\r\n      return allSections.filter(section =>\r\n        section.title.includes('개인 정보') || \r\n        section.title.includes('소셜 링크') || \r\n        section.title.includes('사이드바 설정')\r\n      )\r\n    \r\n    case 'appearance':\r\n      // Appearance: Hero + About + Experience + Skills + Learning Goals + Projects + Books + Contact + Stats\r\n      return allSections.filter(section =>\r\n        section.title.includes('Hero') ||\r\n        section.title.includes('About') ||\r\n        section.title.includes('Experience') ||\r\n        section.title.includes('Skills') ||\r\n        section.title.includes('학습 목표') ||\r\n        section.title.includes('Projects') ||\r\n        section.title.includes('Books') ||\r\n        section.title.includes('Contact') ||\r\n        section.title.includes('통계')\r\n      )\r\n    \r\n    case 'seo':\r\n      // SEO: All SEO-related sections\r\n      return allSections.filter(section =>\r\n        section.title.includes('SEO') ||\r\n        section.title.includes('Open Graph') ||\r\n        section.title.includes('Twitter Card') ||\r\n        section.title.includes('검색 엔진') ||\r\n        section.title.includes('Google')\r\n      )\r\n    \r\n    case 'social':\r\n      // Social media: Social links + all social media sections\r\n      return allSections.filter(section =>\r\n        section.title.includes('소셜 링크') ||\r\n        section.title.includes('글로벌 소셜 미디어') ||\r\n        section.title.includes('디자인 & 포트폴리오') ||\r\n        section.title.includes('블로그 & 글쓰기') ||\r\n        section.title.includes('메신저 & 커뮤니케이션') ||\r\n        section.title.includes('워크스페이스 & 도구')\r\n      )\r\n    \r\n    case 'analytics':\r\n      // Analytics: All analytics-related sections\r\n      return allSections.filter(section =>\r\n        section.title.includes('웹 분석 도구') ||\r\n        section.title.includes('사용자 행동 분석') ||\r\n        section.title.includes('에러 추적') ||\r\n        section.title.includes('고객 지원') ||\r\n        section.title.includes('추가 채팅 도구')\r\n      )\r\n    \r\n    case 'security':\r\n      // Security: All security-related sections\r\n      return allSections.filter(section =>\r\n        section.title.includes('기본 보안 헤더') ||\r\n        section.title.includes('추가 보안 헤더') ||\r\n        section.title.includes('권한 및 정책') ||\r\n        section.title.includes('API 보안') ||\r\n        section.title.includes('관리자 인증') ||\r\n        section.title.includes('로그 & 백업')\r\n      )\r\n    \r\n    default:\r\n      return allSections\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\nimport { FaPlus } from 'react-icons/fa'\r\nimport { FieldRendererProps } from '../types'\r\nimport { getMultilingualKey } from '../utils'\r\n\r\n/**\r\n * SettingField Component\r\n * Renders an individual form field with language indicators for multilingual fields\r\n */\r\nconst SettingField: React.FC<FieldRendererProps> = ({ \r\n  field, \r\n  value, \r\n  onChange, \r\n  currentLang = 'ko', \r\n  settings \r\n}) => {\r\n  // Language indicator for multilingual fields\r\n  const renderLanguageIndicator = () => {\r\n    if (!field.isMultilingual || !settings) return null\r\n\r\n    const koValue = settings[field.key]\r\n    const enValue = settings[getMultilingualKey(field.key as string, 'en')]\r\n    const jaValue = settings[getMultilingualKey(field.key as string, 'ja')]\r\n\r\n    return (\r\n      <div className=\"flex gap-2 text-xs mb-2\">\r\n        <span className={`px-2 py-1 rounded ${koValue ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300' : 'bg-gray-100 dark:bg-gray-700 text-gray-500'}`}>\r\n          🇰🇷 {koValue ? '✓' : '○'}\r\n        </span>\r\n        <span className={`px-2 py-1 rounded ${enValue ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300' : 'bg-gray-100 dark:bg-gray-700 text-gray-500'}`}>\r\n          🇺🇸 {enValue ? '✓' : '○'}\r\n        </span>\r\n        <span className={`px-2 py-1 rounded ${jaValue ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300' : 'bg-gray-100 dark:bg-gray-700 text-gray-500'}`}>\r\n          🇯🇵 {jaValue ? '✓' : '○'}\r\n        </span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Render input based on field type\r\n  const renderInput = () => {\r\n    switch (field.type) {\r\n      case 'textarea':\r\n        return (\r\n          <>\r\n            {renderLanguageIndicator()}\r\n            <textarea\r\n              id={field.key}\r\n              value={(value as string) || ''}\r\n              onChange={(e) => onChange(e.target.value)}\r\n              rows={field.rows || 3}\r\n              placeholder={field.placeholder}\r\n              className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-vertical\"\r\n            />\r\n          </>\r\n        )\r\n\r\n      case 'select':\r\n        return (\r\n          <select\r\n            id={field.key}\r\n            value={(value as string) || ''}\r\n            onChange={(e) => onChange(e.target.value)}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          >\r\n            {field.options?.map((option) => (\r\n              <option key={option.value} value={option.value}>\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        )\r\n\r\n      case 'checkbox':\r\n        return (\r\n          <div className=\"flex items-center space-x-3\">\r\n            <input\r\n              id={field.key}\r\n              type=\"checkbox\"\r\n              checked={(value as boolean) || false}\r\n              onChange={(e) => onChange(e.target.checked)}\r\n              className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\r\n            />\r\n            <label htmlFor={field.key} className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n              {field.placeholder}\r\n            </label>\r\n          </div>\r\n        )\r\n\r\n      case 'number':\r\n        return (\r\n          <input\r\n            id={field.key}\r\n            type=\"number\"\r\n            value={(value as number) || ''}\r\n            onChange={(e) => onChange(parseInt(e.target.value) || 0)}\r\n            min={field.min}\r\n            max={field.max}\r\n            placeholder={field.placeholder}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          />\r\n        )\r\n\r\n      case 'array':\r\n        return (\r\n          <div className=\"space-y-2\">\r\n            {((value as string[]) || []).map((item, index) => (\r\n              <div key={index} className=\"flex items-center gap-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={item}\r\n                  onChange={(e) => {\r\n                    const newArray = [...(value as string[])]\r\n                    newArray[index] = e.target.value\r\n                    onChange(newArray)\r\n                  }}\r\n                  className=\"flex-1 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                  placeholder={field.placeholder}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    const newArray = (value as string[]).filter((_, i) => i !== index)\r\n                    onChange(newArray)\r\n                  }}\r\n                  className=\"p-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\"\r\n                >\r\n                  삭제\r\n                </button>\r\n              </div>\r\n            ))}\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                const newArray = [...((value as string[]) || []), '']\r\n                onChange(newArray)\r\n              }}\r\n              className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2\"\r\n            >\r\n              <FaPlus size={12} /> 항목 추가\r\n            </button>\r\n          </div>\r\n        )\r\n\r\n      default:\r\n        return (\r\n          <>\r\n            {renderLanguageIndicator()}\r\n            <input\r\n              id={field.key}\r\n              type={field.type}\r\n              value={(value as string) || ''}\r\n              onChange={(e) => onChange(e.target.value)}\r\n              placeholder={field.placeholder}\r\n              className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            />\r\n          </>\r\n        )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {field.type !== 'checkbox' && (\r\n        <label\r\n          htmlFor={field.key}\r\n          className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\"\r\n        >\r\n          {field.label}\r\n        </label>\r\n      )}\r\n      {renderInput()}\r\n      {field.type === 'checkbox' && (\r\n        <label\r\n          htmlFor={field.key}\r\n          className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\"\r\n        >\r\n          {field.label}\r\n        </label>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SettingField\r\n\r\n","import React from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport { FaEdit, FaChevronDown, FaChevronRight } from 'react-icons/fa'\r\nimport { SiteSettings } from '@/types'\r\nimport { AdminLanguage } from '@/components/common/LanguageTabs'\r\nimport LanguageTabs from '@/components/common/LanguageTabs'\r\nimport { SectionDefinition } from '../types'\r\nimport { getMultilingualKey } from '../utils'\r\nimport SettingField from './SettingField'\r\n\r\ninterface SettingsSectionProps {\r\n  section: SectionDefinition\r\n  isExpanded: boolean\r\n  onToggle: () => void\r\n  currentLang: AdminLanguage\r\n  settings: SiteSettings\r\n  onChange: (field: keyof SiteSettings, value: string | boolean | string[] | number) => void\r\n  setCurrentLang: (lang: AdminLanguage) => void\r\n}\r\n\r\n/**\r\n * SettingsSection Component\r\n * Renders a collapsible section containing multiple setting fields\r\n */\r\nconst SettingsSection: React.FC<SettingsSectionProps> = ({\r\n  section,\r\n  isExpanded,\r\n  onToggle,\r\n  currentLang,\r\n  settings,\r\n  onChange,\r\n  setCurrentLang\r\n}) => {\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden\">\r\n      {/* Section Header */}\r\n      <button\r\n        onClick={onToggle}\r\n        className=\"w-full p-6 text-left hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\"\r\n      >\r\n        <h3 className=\"text-xl font-bold text-gray-900 dark:text-white flex items-center gap-3\">\r\n          <FaEdit className=\"text-primary-500\" size={20} />\r\n          {section.title}\r\n          {isExpanded ? (\r\n            <FaChevronDown className=\"text-gray-400 ml-auto\" size={16} />\r\n          ) : (\r\n            <FaChevronRight className=\"text-gray-400 ml-auto\" size={16} />\r\n          )}\r\n        </h3>\r\n      </button>\r\n\r\n      {/* Section Content */}\r\n      <AnimatePresence>\r\n        {isExpanded && (\r\n          <motion.div\r\n            initial={{ height: 0, opacity: 0 }}\r\n            animate={{ height: 'auto', opacity: 1 }}\r\n            exit={{ height: 0, opacity: 0 }}\r\n            transition={{ duration: 0.3, ease: 'easeInOut' }}\r\n            className=\"overflow-hidden\"\r\n          >\r\n            <div className={`p-6 pt-4 border-t border-gray-200 dark:border-gray-700 ${\r\n              section.title.includes('Hero 섹션') ? 'py-8' : ''\r\n            }`}>\r\n              {/* Language tabs for multilingual sections */}\r\n              {section.fields.some(f => f.isMultilingual) && (\r\n                <LanguageTabs\r\n                  activeLanguage={currentLang}\r\n                  onChange={setCurrentLang}\r\n                />\r\n              )}\r\n\r\n              {/* Fields grid */}\r\n              <div className={`grid gap-6 ${\r\n                section.title.includes('About 섹션') ||\r\n                section.title.includes('Hero 섹션') ||\r\n                section.title.includes('Experience 섹션') ||\r\n                section.title.includes('Skills 섹션') ||\r\n                section.title.includes('Projects 섹션') ||\r\n                section.title.includes('Books 섹션') ||\r\n                section.title.includes('소셜 링크') ||\r\n                section.title.includes('Contact 섹션')\r\n                  ? 'grid-cols-1'\r\n                  : 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3'\r\n              }`}>\r\n                {section.fields.map((field) => {\r\n                  // Use multilingual key if field supports it\r\n                  const activeKey = field.isMultilingual\r\n                    ? getMultilingualKey(field.key as string, currentLang) as keyof SiteSettings\r\n                    : field.key\r\n\r\n                  return (\r\n                    <SettingField\r\n                      key={field.key}\r\n                      field={field}\r\n                      value={settings[activeKey] || (field.type === 'checkbox' ? false : field.type === 'array' ? [] : '')}\r\n                      onChange={(value) => onChange(activeKey, value)}\r\n                      currentLang={currentLang}\r\n                      settings={settings}\r\n                    />\r\n                  )\r\n                })}\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SettingsSection\r\n\r\n"],"names":["ProtectedRoute","element","Component","isAuthenticated","isLoading","useAuth","jsxRuntimeExports","jsxs","style","display","justifyContent","alignItems","height","backgroundColor","children","width","border","borderTop","borderRadius","animation","marginLeft","color","fontSize","jsx","Navigate","to","replace","LoadScene","onFirstVisitComplete","progress","setProgress","useState","navigate","useNavigate","useEffect","window","location","hash","sceneRef","useRef","animationRef","tlRef","textMeshesRef","sceneInstanceRef","cameraRef","rendererRef","autoNavigateTimer","setTimeout","localStorage","setItem","clearTimeout","cleanup","current","cancelAnimationFrame","kill","canvas","domElement","contains","removeChild","dispose","initThreeScene","scene","THREE.Scene","background","THREE.Color","camera","THREE.PerspectiveCamera","innerWidth","innerHeight","renderer","THREE.WebGLRenderer","alpha","antialias","setSize","setClearColor","shadowMap","enabled","type","THREE.PCFSoftShadowMap","appendChild","ambientLight","THREE.AmbientLight","add","directionalLight","THREE.DirectionalLight","position","set","castShadow","shadow","mapSize","pointLight","THREE.PointLight","pointLight2","create3DText","z","lookAt","animate","requestAnimationFrame","forEach","mesh","index","rotation","y","x","Math","sin","Date","now","cos","render","handleResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","loadingLetters","letter","geometry","createLGeometry","THREE.TorusGeometry","THREE.ConeGeometry","createDGeometry","THREE.BoxGeometry","createNGeometry","createGGeometry","hue","length","material","THREE.MeshPhongMaterial","setHSL","shininess","specular","emissive","THREE.Mesh","receiveShadow","startX","scale","PI","push","gsapWithCSS","duration","delay","ease","THREE.BufferGeometry","vertices","setAttribute","THREE.Float32BufferAttribute","computeVertexNormals","i","angle","setupAnimation","tl","gsap","timeline","onUpdate","this","className","ref","motion","div","initial","opacity","transition","round","IconMap","FaIcons","SiIcons","DynamicIcon","iconName","size","IconComponent","React","createElement","FaIcons.FaMicrochip","LanguageSwitcher","variant","i18n","useTranslation","changeLanguage","lang","languages","code","short","full","FaGlobe","map","isActive","language","onClick","getLocalizedField","currentLang","koValue","enValue","jaValue","getLocalizedArrayField","koArray","enArray","jaArray","getLocalizedSkillName","skill","name","nameEn","nameJa","getLocalizedSkillDescription","description","descriptionEn","descriptionJa","getLocalizedCategoryName","category","getLocalizedSkillCategoryTitle","skillCategory","title","titleEn","titleJa","SidebarNavItem","item","setIsOpen","activeSection","useMemo","path","pathname","startsWith","icon","classes","handleNavigation","useCallback","scrollToSection","href","Sidebar","darkMode","toggleDarkMode","onLoginClick","isOpen","useLocation","logout","t","settings","siteSettings","useSiteSettings","useScrollSpy","navItems","FaHome","FaUser","FaBriefcase","FaWrench","FaLaptopCode","FaBook","FaVideo","FaCommentDots","coreSkills","languageSkills","isLoadingSkills","useSidebarSkills","socialLinks","FaGithub","label","FaLinkedin","FaEnvelope","Fragment","FaTimes","FaBars","exit","firstName","firstNameEn","firstNameJa","FaCode","fullName","fullNameEn","fullNameJa","role","roleEn","roleJa","subtitle","subtitleEn","subtitleJa","locationEn","locationJa","education","educationEn","educationJa","yearsOfExperience","yearsOfExperienceEn","yearsOfExperienceJa","skillName","isNative","includes","level","cx","cy","r","stroke","strokeWidth","fill","strokeDasharray","strokeLinecap","_id","Link","FaUserShield","Icon","FaSun","FaMoon","FaSignInAlt","LoginModal","onClose","username","setUsername","password","setPassword","error","setError","setIsLoading","login","handleClose","AnimatePresence","id","onSubmit","async","e","preventDefault","err","errorMessage","message","htmlFor","value","onChange","target","placeholder","required","autoComplete","FaLock","button","disabled","whileHover","whileTap","FaCircleNotch","AppLayout","showLoginModal","setShowLoginModal","isFirstVisit","SimpleLoadingSpinner","Suspense","fallback","Outlet","Hero","loading","scrollYProgress","useScroll","yTop","useTransform","yBottom","itemVariants","hidden","visible","stats","number","stat1Number","stat1Label","stat1LabelEn","stat1LabelJa","FaCoffee","stat2Number","stat2Label","stat2LabelEn","stat2LabelJa","stat3Number","stat3Label","stat3LabelEn","stat3LabelJa","FaCog","variants","staggerChildren","heroTag","heroTagEn","heroTagJa","h1","heroTitle","heroTitleEn","heroTitleJa","p","heroSubtitle","heroSubtitleEn","heroSubtitleJa","a","FaArrowRight","heroCtaLink2","download","rel","FaDownload","stat","formatDate","dateString","toLocaleDateString","formatRelativeDate","date","diffInMs","getTime","diffInMinutes","floor","diffInHours","diffInDays","diffInWeeks","diffInMonths","BookCoverImage","src","alt","fallbackIcon","imageState","setImageState","imageSrc","setImageSrc","FaImage","decoding","onLoad","onError","ScrollToTopButton","isVisible","setIsVisible","toggleVisibility","scrollY","scrollTo","top","behavior","FaArrowUp","getFormattedReadingTime","text","wordsPerMinute","minutes","words","trim","split","ceil","max","calculateReadingTime","formatReadingTime","RichTextEditor","rows","textareaRef","cursorPosition","setCursorPosition","updateCursorPosition","selectionStart","getCurrentLine","lines","currentLineIndex","lineStart","lineLengthWithNewline","_a","lineIndex","line","applyHeading","prefix","repeat","match","join","applyListStyle","indent","adjustIndent","direction","applyTextStyle","textarea","start","end","selectionEnd","selectedText","substring","wrap","wrappedText","newValue","setSelectionRange","focus","FaBold","FaItalic","FaUnderline","FaListUl","FaListOl","FaOutdent","FaIndent","newLine","splice","newPosition","FaChevronDown","codeBlockLines","positionToMove","_b","MdCode","onSelect","onKeyUp","onMouseUp","dangerouslySetInnerHTML","__html","_match","p1","p2","LearningItem","learning","isEditing","currentFormData","setCurrentFormData","onStartEdit","onSaveEdit","onCancelEdit","onDelete","isSaving","allSkillsMap","onSkillLinkChange","chapterId","linkedSkills","skillIds","get","skillId","filter","availableSkills","Array","from","values","topic","prev","content","FaTag","isLinked","dynamicStyle","handleSkillToggle","FaEdit","FaTrash","badgeStyle","colorCode","createdAt","useParams","data","book","isError","useBook","bookChapters","useQuery","queryKey","queryFn","response","chaptersAPI","getByBook","staleTime","skillCategories","useSkills","deleteMutation","useDeleteBook","bookApiError","editingLearningId","showAddForm","learningApiError","handleToggleAddForm","handleAddLearning","handleDeleteLearning","handleStartEdit","handleSaveEdit","handleCancelEdit","handleSkillLinkChange","useLearningManager","expandedChapterId","setExpandedChapterId","linkedBookSkills","allSkills","flatMap","skills","uniqueSkillIds","Set","chapter","learnings","has","levelText","Map","isDeleting","isPending","sortedLearnings","sort","b","state","FaArrowLeft","coverImage","categoryIds","catIdOrObj","catName","tab","editId","confirm","mutateAsync","author","authorEn","authorJa","rating","_","FaStar","FaCalendar","readDate","FaCubes","FaPlus","isExpanded","toggleChapter","prevId","span","rotate","FaChevronRight","video","useVideoLearning","useDeleteVideoLearning","updateMutation","useUpdateVideoLearning","success","toastError","useToastHelpers","playerRef","playerContainerRef","isPlayerReady","setIsPlayerReady","isEditingKeyTakeaways","setIsEditingKeyTakeaways","editingContent","setEditingContent","videoId","videoUrl","extractYouTubeId","YT","tag","document","firstScriptTag","getElementsByTagName","parentNode","insertBefore","initializePlayer","Player","playerVars","enablejsapi","origin","modestbranding","fs","cc_load_policy","iv_load_policy","showinfo","controls","events","onReady","onYouTubeIframeAPIReady","destroy","cat","watchDate","purpose","FaBullseye","ReactMarkdown","application","FaRocket","keyTakeaways","FaLightbulb","renderHtmlWithTimestamps","tagName","dataset","seconds","seekTo","playVideo","handleTimestampClick","parseInt","skillIdOrObj","Boolean","updateData","order","_c","FaSave","playlist","useVideoPlaylist","playlistVideos","usePlaylistVideos","useDeleteVideoPlaylist","updateVideoMutation","useUpdatePlaylistVideo","activeVideoId","setActiveVideoId","activeVideoTab","setActiveVideoTab","showVideoTabs","setShowVideoTabs","editingVideoId","setEditingVideoId","playlistId","listType","list","activeVideo","find","v","targetVideoId","videoIndex","findIndex","playVideoAt","FaList","FaChevronUp","handleVideoTabClick","ProjectCard","project","getStatusColor","getStatusText","technologies","technologiesEn","technologiesJa","hasLinks","githubLink","liveLink","layout","scrollPosition","image","status","slice","tech","stopPropagation","FaExternalLinkAlt","localizedProject","useProjectDetail","selectedImage","setSelectedImage","currentVideoIndex","setCurrentVideoIndex","currentShortsIndex","setCurrentShortsIndex","isYouTubeShorts","url","getYouTubeEmbedUrl","regularVideos","videos","shortsVideos","images","FaPlay","allowFullScreen","allow","preload","videoDescriptions","FaChevronLeft","maxWidth","videoIndexInAll","indexOf","maxHeight","margin","detailedDescription","features","feature","iconMap","FaGraduationCap","FaChartLine","FaRobot","FaCar","FaShieldAlt","ExperienceItem","exp","isLast","setIsExpanded","iconKey","some","idOrObj","descriptionItems","iconColor","iconBgColor","bgColor","stiffness","company","companyEn","companyJa","period","details","detail","idx","categoryEn","categoryJa","items","itemsEn","itemsJa","itemIdx","li","FaCheckCircle","DashboardHome","counts","siteActivityStats","recentUpdates","typeName","updatedAt","weeklyStats","booksAdded","projectsCompleted","experiencesUpdated","books","experiences","projects","FaProjectDiagram","FaSync","FaCalendarAlt","ChapterLearningList","chapters","onAddChapter","onEditChapter","onDeleteChapter","onAddLearning","onEditLearning","onDeleteLearning","expandedChapters","setExpandedChapters","ch","learningCount","newSet","delete","Toast","toast","getBgColor","FaCheck","FaExclamationTriangle","FaInfo","getIcon","ToastContainer","toasts","BookManager","bookFilter","bookSearchTerm","selectedBookCategory","initialEditId","createBook","updateBook","deleteBook","useBookManagerData","createAbortController","useAbortController","hideToast","bookState","bookActions","useCRUDManager","onSave","editingItem","optimisticAdd","optimisticAddChapter","optimisticUpdateItem","optimisticUpdateChapter","optimisticDelete","optimisticDeleteChapter","resetData","resetChapters","useOptimisticArrayUpdate","showBookDetailModal","setShowBookDetailModal","selectedBook","setSelectedBook","selectedChapterId","setSelectedChapterId","showChapterForm","setShowChapterForm","editingChapter","setEditingChapter","showLearningForm","setShowLearningForm","editingLearning","setEditingLearning","hasAutoOpened","setHasAutoOpened","bookToEdit","handleEdit","filteredBooks","filtered","searchLower","toLowerCase","handleBookDetailClick","abortController","chaptersResponse","signal","aborted","handleSaveChapter","chapterData","update","then","res","toISOString","create","handleDeleteChapter","handleAddLearningClick","handleEditLearningClick","handleDeleteLearningClick","learningsAPI","deleteForChapter","handleSaveLearning","learningData","updateForChapter","createForChapter","renderRating","handleCreate","FaEye","handleDelete","showForm","handleCancel","BookForm","handleSave","onCancel","ChapterForm","LearningForm","VideoLearningManager","videoLearnings","createVideoLearning","updateVideoLearning","deleteVideoLearning","useVideoLearningManagerData","videoState","videoActions","categoryFilter","setCategoryFilter","availableCategories","categories","extractUniqueCategories","filteredVideos","videoToEdit","count","VideoLearningForm","thumbnailUrl","getYouTubeThumbnail","VideoPlaylistManager","playlists","createPlaylist","updatePlaylist","deletePlaylist","useVideoPlaylistManagerData","expandedPlaylistId","setExpandedPlaylistId","showVideoForm","setShowVideoForm","editingVideo","setEditingVideo","showBulkAddForm","setShowBulkAddForm","bulkVideoUrls","setBulkVideoUrls","createVideoMutation","useCreatePlaylistVideo","deleteVideoMutation","useDeletePlaylistVideo","playlistState","playlistActions","handleBulkAddVideos","alert","urls","successCount","videoData","VideoPlaylistForm","PlaylistVideoForm","currentVideos","handleDeleteVideo","LanguageTabs","activeLanguage","flag","ExperienceManager","experienceFilter","experienceSearchTerm","selectedExperienceCompany","selectedExperienceYear","createExperience","updateExperience","deleteExperience","useExperienceManagerData","setShowForm","setEditingItem","setIsSaving","setIsDeleting","filteredExperiences","ExperienceForm","experience","ProjectManager","projectFilter","projectSearchTerm","selectedProjectCategory","createProject","updateProject","deleteProject","useProjectManagerData","filteredProjects","featuredProjectsCount","ProjectForm","result","errorMsg","_e","_d","_h","_f","_g","_j","_i","_l","_k","_m","MessageDetail","messageId","onMarkAsRead","onReply","isProcessing","setIsProcessing","showReplyForm","setShowReplyForm","replyContent","setReplyContent","refetch","useMessageDetail","FaSpinner","isRead","email","toLocaleString","year","month","day","hour","minute","subject","FaReply","MessageManager","messages","markAsRead","deleteMessage","useMessageManagerData","selectedMessageId","setSelectedMessageId","showDetail","setShowDetail","handleViewDetail","handleCloseDetail","WebkitLineClamp","WebkitBoxOrient","overflow","handleMarkAsRead","SortableCategoryCard","onToggle","onAddSkill","onEdit","attributes","listeners","setNodeRef","transform","isDragging","useSortable","CSS","Transform","toString","SortableSkillItem","categoryColor","currentLevel","hasChanges","isSavingThis","onLevelChange","onSaveLevel","onToggleSidebar","onToggleLanguageCard","checked","showInSidebar","showInLanguageCard","min","step","newLevel","SkillsManager","createSkillCategory","updateSkillCategory","deleteSkillCategory","createSkill","updateSkill","deleteSkill","useSkillsManagerData","activeForm","setActiveForm","editingCategory","setEditingCategory","editingSkill","setEditingSkill","selectedCategoryId","setSelectedCategoryId","expandedCategories","setExpandedCategories","localLevels","setLocalLevels","savingSkillIds","setSavingSkillIds","handleLevelChange","newMap","handleSaveLevel","handleToggleSidebar","handleToggleLanguageCard","handleCategoryDragEnd","event","active","over","oldIndex","newIndex","reorderedCategories","arrayMove","handleSkillDragEnd","categoryId","reorderedSkills","toggleCategory","handleEditCategory","handleDeleteCategory","handleAddSkill","handleEditSkill","handleDeleteSkill","SkillCategoryForm","initialData","SkillForm","DndContext","collisionDetection","closestCenter","onDragEnd","SortableContext","strategy","verticalListSortingStrategy","usageData","useCategoryUsage","usage","videoPlaylists","total","CategoryManager","createCategory","updateCategory","deleteCategory","useCategoryManagerData","categoryState","categoryActions","usageDetails","FaFolder","CategoryForm","c","NotificationDropdown","notifications","showNotifications","onNotificationClick","getUnreadNotificationCount","n","read","FaBell","notification","BookFilterMenu","filterGroup","actions","showBookSearch","setShowBookSearch","setFilter","setSearchTerm","setSelectedCategory","searchTerm","selectedCategory","ExperienceFilterMenu","showExperienceSearch","setShowExperienceSearch","setSelectedCompany","setSelectedYear","selectedCompany","selectedYear","companies","years","ProjectFilterMenu","showProjectSearch","setShowProjectSearch","SettingsMenu","activeSettingsSection","setActiveSettingsSection","option","RightSidebar","activeTab","setActiveTab","refreshCounts","bookFilters","experienceFilters","projectFilters","toLocaleTimeString","initialSettings","phone","githubUrl","linkedinUrl","aboutTitle","aboutSubtitle","aboutDescription1","aboutDescription2","skillsTitle","skillsSubtitle","projectsTitle","projectsSubtitle","booksTitle","booksSubtitle","contactTitle","contactSubtitle","experienceTitle","experienceSubtitle","learningGoalsTitle","learningGoalsDescription","learningGoalsList","siteTitle","siteDescription","siteKeywords","siteAuthor","siteLanguage","siteUrl","ogTitle","ogDescription","ogImage","ogType","twitterCard","twitterSite","twitterCreator","robotsIndex","robotsFollow","googleAnalyticsId","googleSiteVerification","instagramUrl","twitterUrl","facebookUrl","youtubeUrl","tiktokUrl","behanceUrl","dribbbleUrl","mediumUrl","telegramUrl","discordUrl","kakaoTalkUrl","naverBlogUrl","tistoryUrl","velogUrl","notionUrl","googleTagManagerId","facebookPixelId","naverAnalyticsId","kakaoPixelId","hotjarId","mixpanelToken","amplitudeApiKey","sentryDsn","logRocketId","fullStoryOrgId","intercomAppId","zendeskWidgetKey","crispWebsiteId","tawkToPropertyId","liveChatLicense","olarkSiteId","enableHttps","enableCsp","cspDirectives","enableHsts","hstsMaxAge","enableXssProtection","enableContentTypeOptions","enableFrameOptions","frameOptionsValue","enableReferrerPolicy","referrerPolicyValue","enablePermissionsPolicy","permissionsPolicyValue","enableApiRateLimit","apiRateLimitPerMinute","enableAdminAuth","adminSessionTimeout","enableTwoFactorAuth","enableIpWhitelist","allowedIpAddresses","enableAuditLog","enableBackup","backupFrequency","allSections","fields","key","isMultilingual","options","getMultilingualKey","baseKey","getActiveSectionTitle","getActiveSectionDescription","getFilteredSections","section","SettingField","field","renderLanguageIndicator","newArray","renderInput","SettingsSection","setCurrentLang","f","activeKey"],"mappings":"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"}