{"version":3,"file":"chunk-709d7942.js","sources":["../../src/pages/HomePage.tsx","../../src/pages/Books.tsx","../../src/pages/VideoLearnings.tsx","../../src/pages/Projects.tsx","../../src/pages/Experience.tsx","../../src/pages/About.tsx","../../src/pages/Contact.tsx","../../src/pages/Skills.tsx","../../src/admin/SiteSettingsEditor.tsx","../../src/pages/admin/Dashboard.tsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport Hero from '@/components/Hero'\r\nimport { useScrollSpy, SECTION_IDS } from '@/hooks/useScrollSpy'\r\n\r\nconst HomePage: React.FC = () => {\r\n  // 스크롤 스파이 훅 사용 (기본 옵션: offset=80px, debounceDelay=100ms)\r\n  useScrollSpy()\r\n\r\n  // 페이지 로드 시 스크롤 위치 복원 및 섹션 하이라이트\r\n  useEffect(() => {\r\n    // URL 해시가 있으면 해당 섹션으로 스크롤\r\n    const hash = window.location.hash.slice(1)\r\n    if (hash && SECTION_IDS.includes(hash as any)) {\r\n      setTimeout(() => {\r\n        const element = document.getElementById(hash)\r\n        if (element) {\r\n          element.scrollIntoView({ behavior: 'smooth' })\r\n        }\r\n      }, 100)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <main role=\"main\" aria-label=\"포트폴리오 메인 콘텐츠\">\r\n      {/* Hero 섹션 */}\r\n      <section \r\n        id=\"hero\" \r\n        aria-labelledby=\"hero-title\"\r\n        className=\"min-h-screen\"\r\n      >\r\n        <Hero />\r\n      </section>\r\n\r\n      {/* 스크롤 스파이 디버그 정보 제거됨 */}\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n","import React, { useState, useMemo, useEffect } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { useInView } from 'react-intersection-observer'\r\nimport { FaBook, FaPlus, FaStar, FaCalendar } from 'react-icons/fa'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { useAuth } from '@/contexts/AuthContext'\r\nimport { useSiteSettings } from '@/hooks/useSiteSettings'\r\nimport { useBooks } from '@/hooks/useBooks'\r\nimport { useCategories } from '@/hooks/useCategories'\r\nimport { formatDate } from '@/utils/dateUtils'\r\nimport BookCoverImage from '@/components/BookCoverImage'\r\nimport ScrollToTopButton from '@/components/common/ScrollToTopButton'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { getLocalizedField, getLocalizedCategoryName } from '@/utils/i18nUtils'\r\n\r\nconst Books: React.FC = () => {\r\n  const { settings: siteSettings, loading: settingsLoading } = useSiteSettings()\r\n  const { t, i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  // 🌟 React Query useBooks 훅의 반환값 구조 수정\r\n  const { data: books = [], isLoading: loading } = useBooks()\r\n  // 🌟 카테고리 데이터 가져오기\r\n  const { data: categories = [], isLoading: categoriesLoading } = useCategories()\r\n  const location = useLocation()\r\n  \r\n  const [ref, inView] = useInView({\r\n    triggerOnce: true,\r\n    threshold: 0.1,\r\n  })\r\n\r\n  const [filter, setFilter] = useState('all')\r\n  const { isAuthenticated } = useAuth()\r\n  \r\n  // 🌟 스크롤 위치 복원\r\n  useEffect(() => {\r\n    const scrollPosition = (location.state as any)?.scrollPosition\r\n    if (scrollPosition) {\r\n      window.scrollTo(0, scrollPosition)\r\n      // state를 정리하여 뒤로가기 시 다시 복원되지 않도록\r\n      window.history.replaceState({}, document.title)\r\n    }\r\n  }, [])\r\n\r\n  // =================================================================\r\n  // 🔍 필터링 로직 (categoryIds 배열 기반)\r\n  // =================================================================\r\n  \r\n  const filteredBooks = useMemo(() => {\r\n    const safeBooks = books || []\r\n    if (filter === 'all') return safeBooks\r\n    \r\n    // categoryIds 배열에 선택된 카테고리 ID가 포함되어 있는지 확인\r\n    return safeBooks.filter(book => {\r\n      if (!book.categoryIds || book.categoryIds.length === 0) {\r\n        // 호환성: categoryIds가 없으면 기존 category 문자열 사용\r\n        return book.category?.toLowerCase() === filter\r\n      }\r\n      \r\n      // categoryIds가 populate된 객체 배열인 경우와 ID 문자열 배열인 경우 모두 처리\r\n      return (book.categoryIds as any[]).some((catIdOrObj: any) => {\r\n        const catId = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\r\n        return catId === filter\r\n      })\r\n    })\r\n  }, [books, filter])\r\n\r\n  // 로딩 상태 통합: 설정 데이터와 책 데이터 중 하나라도 로딩 중이면 로딩 표시\r\n  const isPageLoading = settingsLoading || loading\r\n\r\n  const containerVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.2,\r\n      },\r\n    },\r\n  }\r\n\r\n  const itemVariants = {\r\n    hidden: { opacity: 0, y: 30 },\r\n    visible: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        duration: 0.6,\r\n        ease: 'easeOut',\r\n      },\r\n    },\r\n  }\r\n\r\n  return (\r\n    <section className=\"section-padding bg-white dark:bg-dark-800 min-h-screen\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <motion.div\r\n          ref={ref}\r\n          variants={containerVariants}\r\n          initial=\"hidden\"\r\n          animate={inView ? 'visible' : 'hidden'}\r\n        >\r\n          {/* 1. 제목 및 부제목 */}\r\n          <motion.div variants={itemVariants} className=\"text-center mb-16\">\r\n            <h2 className=\"text-4xl md:text-5xl font-bold text-dark-900 dark:text-white mb-6\">\r\n              {getLocalizedField(currentLang, siteSettings?.booksTitle, siteSettings?.booksTitleEn, siteSettings?.booksTitleJa) || '기술 서적 & 학습 노트'}\r\n            </h2>\r\n            <p className=\"text-xl text-dark-600 dark:text-dark-300 max-w-3xl mx-auto mb-8\">\r\n              {getLocalizedField(currentLang, siteSettings?.booksSubtitle, siteSettings?.booksSubtitleEn, siteSettings?.booksSubtitleJa) || '읽은 기술 서적과 그로부터 배운 지식을 공유합니다'}\r\n            </p>\r\n          </motion.div>\r\n\r\n          {/* 2. 서적 추가 버튼 (인증된 경우) */}\r\n          {isAuthenticated && (\r\n            <motion.div variants={itemVariants} className=\"mb-8 flex justify-end\">\r\n              <Link\r\n                to=\"/admin\"\r\n                className=\"inline-flex items-center gap-2 bg-accent-500 hover:bg-accent-600 text-white font-medium px-6 py-3 rounded-lg transition-colors duration-600 shadow-medium hover:shadow-glow\"\r\n              >\r\n                <FaPlus /> 서적 추가\r\n              </Link>\r\n            </motion.div>\r\n          )}\r\n\r\n          {/* 3. 카테고리 필터 (categoryIds 배열 기반) */}\r\n          <motion.div variants={itemVariants} className=\"flex justify-center flex-wrap gap-3 mb-12\">\r\n            {/* '전체' 버튼 */}\r\n            <button\r\n              key=\"all\"\r\n              onClick={() => setFilter('all')}\r\n              className={`px-4 py-2 rounded-full text-sm font-medium transition-colors duration-600 border ${\r\n                filter === 'all'\r\n                  ? 'bg-primary-500 text-white border-primary-500 dark:bg-primary-600 dark:border-primary-600 shadow-glow'\r\n                  : 'bg-white text-dark-700 border-secondary-300 hover:bg-secondary-50 dark:bg-dark-700 dark:text-dark-300 dark:border-dark-600 dark:hover:bg-dark-600'\r\n              }`}\r\n            >\r\n              전체\r\n            </button>\r\n            {/* 카테고리 버튼 렌더링 */}\r\n            {categories.map((category) => (\r\n              <button\r\n                key={category._id}\r\n                onClick={() => setFilter(category._id)}\r\n                className={`px-4 py-2 rounded-full text-sm font-medium transition-colors duration-600 border ${\r\n                  filter === category._id\r\n                    ? 'bg-primary-500 text-white border-primary-500 dark:bg-primary-600 dark:border-primary-600 shadow-glow'\r\n                    : 'bg-white text-dark-700 border-secondary-300 hover:bg-secondary-50 dark:bg-dark-700 dark:text-dark-300 dark:border-dark-600 dark:hover:bg-dark-600'\r\n                }`}\r\n              >\r\n                {getLocalizedCategoryName(currentLang, category)}\r\n              </button>\r\n            ))}\r\n          </motion.div>\r\n\r\n          {/* 4. 로딩, 결과 없음, 또는 책 목록 */}\r\n          {isPageLoading ? (\r\n            <div className=\"text-center py-12\">\r\n              <div className=\"inline-block w-12 h-12 border-4 border-primary-500 border-t-transparent rounded-full animate-spin\"></div>\r\n              <p className=\"mt-4 text-dark-500 dark:text-dark-400\">데이터를 불러오는 중...</p>\r\n            </div>\r\n          ) : filteredBooks.length === 0 ? (\r\n            <motion.div\r\n              variants={itemVariants}\r\n              className=\"text-center py-12\"\r\n            >\r\n              <FaBook className=\"text-6xl text-dark-400 mx-auto mb-4\" />\r\n              <p className=\"text-xl text-dark-600 dark:text-dark-400\">\r\n                {filter === 'all' ? '전체' : (() => {\r\n                  const cat = categories.find(c => c._id === filter)\r\n                  return cat ? getLocalizedCategoryName(currentLang, cat) : '선택한'\r\n                })()} 카테고리의 등록된 서적이 없습니다.\r\n              </p>\r\n            </motion.div>\r\n          ) : (\r\n            <motion.div\r\n              variants={containerVariants}\r\n              className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\"\r\n            >\r\n              {filteredBooks.map((book) => (\r\n                <motion.div\r\n                  key={book._id}\r\n                  variants={itemVariants}\r\n                  whileHover={{ y: -5 }}\r\n                  className=\"card hover-lift\"\r\n                >\r\n                  <Link\r\n                    to={`/books/${book._id}`}\r\n                    state={{ scrollPosition: window.scrollY }}\r\n                    className=\"block overflow-hidden h-full group\"\r\n                  >\r\n                    {/* 개선된 이미지 컴포넌트 사용 */}\r\n                    <BookCoverImage\r\n                      src={book.coverImage || ''}\r\n                      alt={book.title}\r\n                      className=\"w-full h-64 object-cover group-hover:scale-105 transition-transform duration-600\"\r\n                    />\r\n                    \r\n                    <div className=\"p-6\">\r\n                      <div className=\"flex items-center justify-between mb-3\">\r\n                        {/* 카테고리 배지 (복수 표시) */}\r\n                        <div className=\"flex flex-wrap gap-2\">\r\n                          {book.categoryIds && book.categoryIds.length > 0 ? (\r\n                            (book.categoryIds as any[]).map((catIdOrObj: any) => {\r\n                              const catId = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\r\n                              const categoryObj = typeof catIdOrObj === 'string' \r\n                                ? categories.find(c => c._id === catId)\r\n                                : catIdOrObj\r\n                              \r\n                              return categoryObj ? (\r\n                                <span \r\n                                  key={catId}\r\n                                  className=\"px-3 py-1 bg-primary-100 dark:bg-primary-800/50 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\"\r\n                                >\r\n                                  {getLocalizedCategoryName(currentLang, categoryObj)}\r\n                                </span>\r\n                              ) : null\r\n                            })\r\n                          ) : (\r\n                            // 호환성: categoryIds가 없으면 기존 category 표시\r\n                            book.category && (\r\n                              <span className=\"px-3 py-1 bg-primary-100 dark:bg-primary-800/50 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\">\r\n                                {book.category}\r\n                              </span>\r\n                            )\r\n                          )}\r\n                        </div>\r\n                        <div className=\"flex items-center gap-1\">\r\n                          <FaStar className=\"text-yellow-500\" />\r\n                          <span className=\"text-dark-700 dark:text-dark-300 font-medium\">\r\n                            {book.rating}/5\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <h3 className=\"text-xl font-bold text-dark-900 dark:text-white mb-2 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors duration-600\">\r\n                        {getLocalizedField(currentLang, book.title, book.titleEn, book.titleJa)}\r\n                      </h3>\r\n                      <p className=\"text-dark-600 dark:text-dark-400 mb-4\">\r\n                        {getLocalizedField(currentLang, book.author, book.authorEn, book.authorJa)}\r\n                      </p>\r\n                      <div className=\"flex items-center justify-between text-sm text-dark-500 dark:text-dark-500 pt-2 border-t border-secondary-200 dark:border-dark-600\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <FaCalendar />\r\n                          <span>{formatDate(book.readDate)}</span>\r\n                        </div>\r\n                        <span \r\n                          className=\"hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-600 font-medium\"\r\n                        >\r\n                          {(() => {\r\n                            // 목차가 있는 경우: 목차별 학습 내용 합계\r\n                            if (book.chapters && book.chapters.length > 0) {\r\n                              const totalChapterLearnings = book.chapters.reduce((sum, chapter) => \r\n                                sum + (chapter.learnings?.length || 0), 0\r\n                              )\r\n                              return `${book.chapters.length}개 목차, ${totalChapterLearnings}개 학습 내용`\r\n                            }\r\n                            // 기존 학습 내용이 있는 경우\r\n                            else if (book.learnings && book.learnings.length > 0) {\r\n                              return `${book.learnings.length}개의 학습 내용`\r\n                            }\r\n                            // 학습 내용이 없는 경우\r\n                            else {\r\n                              return '학습 내용 없음'\r\n                            }\r\n                          })()}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </Link>\r\n                </motion.div>\r\n              ))}\r\n            </motion.div>\r\n          )}\r\n        </motion.div>\r\n      </div>\r\n      \r\n      {/* 🌟 스크롤 투 탑 버튼 */}\r\n      <ScrollToTopButton />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Books\r\n\r\n\r\n","import React, { useState, useMemo, useEffect } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { useInView } from 'react-intersection-observer'\r\nimport { FaVideo, FaPlus, FaStar, FaCalendar, FaCubes } from 'react-icons/fa'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { useAuth } from '@/contexts/AuthContext'\r\nimport { useSiteSettings } from '@/hooks/useSiteSettings'\r\nimport { useVideoLearnings } from '@/hooks/useVideoLearnings'\r\nimport { useVideoPlaylists } from '@/hooks/useVideoPlaylists'\r\nimport { useCategories } from '@/hooks/useCategories'\r\nimport { formatDate } from '@/utils/dateUtils'\r\nimport { extractUniqueCategories, createCategoryDisplayNames } from '@/utils/categoryUtils'\r\nimport { extractYouTubeId, getYouTubeThumbnail } from '@/utils/videoUtils'\r\nimport ScrollToTopButton from '@/components/common/ScrollToTopButton'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { getLocalizedCategoryName } from '@/utils/i18nUtils'\r\n\r\nconst VideoLearnings: React.FC = () => {\r\n  const { settings: siteSettings, loading: settingsLoading } = useSiteSettings()\r\n  const { t, i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  const { data: videoLearnings = [], isLoading: loading } = useVideoLearnings()\r\n  const { data: playlists = [], isLoading: playlistsLoading } = useVideoPlaylists()\r\n  const location = useLocation()\r\n  \r\n  const [ref, inView] = useInView({\r\n    triggerOnce: true,\r\n    threshold: 0.1,\r\n  })\r\n\r\n  // 🌟 location state에서 이전 탭과 스크롤 위치 복원\r\n  const [activeTab, setActiveTab] = useState<'individual' | 'playlist'>(() => {\r\n    return (location.state as any)?.previousTab || 'individual'\r\n  })\r\n  const [filter, setFilter] = useState('all')\r\n  const { isAuthenticated } = useAuth()\r\n  \r\n  // 🌟 스크롤 위치 복원\r\n  useEffect(() => {\r\n    const scrollPosition = (location.state as any)?.scrollPosition\r\n    if (scrollPosition) {\r\n      window.scrollTo(0, scrollPosition)\r\n      // state를 정리하여 뒤로가기 시 다시 복원되지 않도록\r\n      window.history.replaceState({}, document.title)\r\n    }\r\n  }, [])\r\n  \r\n  // 🌟 카테고리 데이터 가져오기\r\n  const { data: categories = [], isLoading: categoriesLoading } = useCategories()\r\n\r\n  // 🌟 개별 영상 필터링 로직 (categoryIds 배열 기반)\r\n  const filteredVideos = useMemo(() => {\r\n    const safeVideos = videoLearnings || []\r\n    if (filter === 'all') return safeVideos\r\n    \r\n    // categoryIds 배열에 선택된 카테고리 ID가 포함되어 있는지 확인\r\n    return safeVideos.filter(video => {\r\n      if (!video.categoryIds || video.categoryIds.length === 0) {\r\n        // 호환성: categoryIds가 없으면 기존 category 문자열 사용\r\n        return video.category?.toLowerCase() === filter\r\n      }\r\n      \r\n      // categoryIds가 populate된 객체 배열인 경우와 ID 문자열 배열인 경우 모두 처리\r\n      return (video.categoryIds as any[]).some((catIdOrObj: any) => {\r\n        const catId = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\r\n        return catId === filter\r\n      })\r\n    })\r\n  }, [videoLearnings, filter])\r\n\r\n  // 🌟 재생 목록 필터링 로직 (개별 영상과 동일한 방식)\r\n  const filteredPlaylists = useMemo(() => {\r\n    const safePlaylists = playlists || []\r\n    if (filter === 'all') return safePlaylists\r\n    \r\n    // categoryIds 배열에 선택된 카테고리 ID가 포함되어 있는지 확인\r\n    return safePlaylists.filter(playlist => {\r\n      if (!playlist.categoryIds || playlist.categoryIds.length === 0) {\r\n        // 호환성: categoryIds가 없으면 기존 category 문자열 사용\r\n        return playlist.category?.toLowerCase() === filter\r\n      }\r\n      \r\n      // categoryIds가 populate된 객체 배열인 경우와 ID 문자열 배열인 경우 모두 처리\r\n      return (playlist.categoryIds as any[]).some((catIdOrObj: any) => {\r\n        const catId = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\r\n        return catId === filter\r\n      })\r\n    })\r\n  }, [playlists, filter])\r\n\r\n  const isPageLoading = settingsLoading || loading\r\n\r\n  const containerVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.2,\r\n      },\r\n    },\r\n  }\r\n\r\n  const itemVariants = {\r\n    hidden: { y: 20, opacity: 0 },\r\n    visible: {\r\n      y: 0,\r\n      opacity: 1,\r\n    },\r\n  }\r\n\r\n  if (isPageLoading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <section className=\"section-padding bg-white dark:bg-dark-900 min-h-screen\">\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        {/* 헤더 */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"text-center mb-12\"\r\n        >\r\n          <h1 className=\"text-4xl md:text-5xl font-bold mb-4 text-gray-900 dark:text-white flex items-center justify-center gap-3\">\r\n            <FaVideo className=\"text-red-600\" />\r\n            {t('videoLearnings.title')}\r\n          </h1>\r\n          <p className=\"text-xl text-gray-600 dark:text-gray-400\">\r\n            {t('videoLearnings.subtitle')}\r\n          </p>\r\n        </motion.div>\r\n\r\n        {/* 🌟 탭 전환 UI */}\r\n        <div className=\"flex gap-4 mb-8 border-b border-gray-200 dark:border-gray-700\">\r\n          <button\r\n            onClick={() => setActiveTab('individual')}\r\n            className={`px-6 py-3 font-medium transition-all ${\r\n              activeTab === 'individual'\r\n                ? 'border-b-2 border-primary-600 text-primary-600 dark:text-primary-400'\r\n                : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-200'\r\n            }`}\r\n          >\r\n            {t('videoLearnings.individual')}\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('playlist')}\r\n            className={`px-6 py-3 font-medium transition-all ${\r\n              activeTab === 'playlist'\r\n                ? 'border-b-2 border-primary-600 text-primary-600 dark:text-primary-400'\r\n                : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-200'\r\n            }`}\r\n          >\r\n            {t('videoLearnings.playlist')}\r\n          </button>\r\n        </div>\r\n\r\n        {/* 🌟 카테고리 필터 - 개별 영상 탭 */}\r\n        {activeTab === 'individual' && (\r\n          <div ref={ref} className=\"flex gap-2 mb-8 overflow-x-auto pb-2\">\r\n          <button\r\n            onClick={() => setFilter('all')}\r\n            className={`px-6 py-2 rounded-full transition-colors font-medium whitespace-nowrap ${\r\n              filter === 'all'\r\n                ? 'bg-primary-600 text-white'\r\n                : 'bg-gray-200 dark:bg-dark-700 text-dark-700 dark:text-dark-300 hover:bg-gray-300 dark:hover:bg-dark-600'\r\n            }`}\r\n          >\r\n            전체 ({videoLearnings.length})\r\n          </button>\r\n          {categories.map((category) => {\r\n            // 해당 카테고리를 가진 영상 개수 계산\r\n            const count = videoLearnings.filter(v => {\r\n              if (!v.categoryIds || v.categoryIds.length === 0) {\r\n                return v.category === category.name\r\n              }\r\n              return (v.categoryIds as any[]).some((catIdOrObj: any) => {\r\n                const catId = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\r\n                return catId === category._id\r\n              })\r\n            }).length\r\n            \r\n            return (\r\n              <button\r\n                key={category._id}\r\n                onClick={() => setFilter(category._id)}\r\n                className={`px-6 py-2 rounded-full transition-colors font-medium whitespace-nowrap ${\r\n                  filter === category._id\r\n                    ? 'bg-primary-600 text-white'\r\n                    : 'bg-gray-200 dark:bg-dark-700 text-dark-700 dark:text-dark-300 hover:bg-gray-300 dark:hover:bg-dark-600'\r\n                }`}\r\n              >\r\n                {getLocalizedCategoryName(currentLang, category)} ({count})\r\n              </button>\r\n            )\r\n          })}\r\n          </div>\r\n        )}\r\n\r\n        {/* 🌟 카테고리 필터 - 시리즈 영상 탭 */}\r\n        {activeTab === 'playlist' && (\r\n          <div ref={ref} className=\"flex gap-2 mb-8 overflow-x-auto pb-2\">\r\n          <button\r\n            onClick={() => setFilter('all')}\r\n            className={`px-6 py-2 rounded-full transition-colors font-medium whitespace-nowrap ${\r\n              filter === 'all'\r\n                ? 'bg-primary-600 text-white'\r\n                : 'bg-gray-200 dark:bg-dark-700 text-dark-700 dark:text-dark-300 hover:bg-gray-300 dark:hover:bg-dark-600'\r\n            }`}\r\n          >\r\n            전체 ({playlists.length})\r\n          </button>\r\n          {categories.map((category) => {\r\n            // 해당 카테고리를 가진 시리즈 영상 개수 계산\r\n            const count = playlists.filter(p => {\r\n              if (!p.categoryIds || p.categoryIds.length === 0) {\r\n                return p.category === category.name\r\n              }\r\n              return (p.categoryIds as any[]).some((catIdOrObj: any) => {\r\n                const catId = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\r\n                return catId === category._id\r\n              })\r\n            }).length\r\n            \r\n            return (\r\n              <button\r\n                key={category._id}\r\n                onClick={() => setFilter(category._id)}\r\n                className={`px-6 py-2 rounded-full transition-colors font-medium whitespace-nowrap ${\r\n                  filter === category._id\r\n                    ? 'bg-primary-600 text-white'\r\n                    : 'bg-gray-200 dark:bg-dark-700 text-dark-700 dark:text-dark-300 hover:bg-gray-300 dark:hover:bg-dark-600'\r\n                }`}\r\n              >\r\n                {getLocalizedCategoryName(currentLang, category)} ({count})\r\n              </button>\r\n            )\r\n          })}\r\n          </div>\r\n        )}\r\n\r\n        {/* 개별 영상 그리드 - individual 탭에서만 표시 */}\r\n        {activeTab === 'individual' && (\r\n          <motion.div\r\n          variants={containerVariants}\r\n          initial=\"hidden\"\r\n          animate={inView ? 'visible' : 'hidden'}\r\n          className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\"\r\n        >\r\n            {filteredVideos.map((video) => {\r\n            // 🌟 호환성: videoId가 없으면 videoUrl에서 추출\r\n            const videoId = video.videoId || ((video as any).videoUrl ? extractYouTubeId((video as any).videoUrl) : null)\r\n            const thumbnailUrl = videoId ? getYouTubeThumbnail(videoId, 'hqdefault') : null\r\n\r\n            return (\r\n              <motion.div key={video._id} variants={itemVariants}>\r\n                <Link\r\n                  to={`/video-learnings/${video._id}`}\r\n                  state={{ previousTab: activeTab, scrollPosition: window.scrollY }}\r\n                  className=\"block bg-white dark:bg-dark-800 rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-shadow border border-gray-200 dark:border-dark-700\"\r\n                >\r\n                  {/* 썸네일 */}\r\n                  {thumbnailUrl ? (\r\n                    <div className=\"relative aspect-video bg-gray-200 dark:bg-gray-700\">\r\n                      <img\r\n                        src={thumbnailUrl}\r\n                        alt={video.title}\r\n                        className=\"w-full h-full object-cover\"\r\n                        loading=\"lazy\"\r\n                        decoding=\"async\"\r\n                        width=\"640\"\r\n                        height=\"360\"\r\n                      />\r\n                      <div className=\"absolute inset-0 bg-black/0 hover:bg-black/10 transition-colors\" />\r\n                      <div className=\"absolute top-2 right-2 bg-red-600 px-2 py-1 rounded text-white text-xs font-bold\">\r\n                        YouTube\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"aspect-video bg-gradient-to-br from-red-400 to-pink-500 flex items-center justify-center\">\r\n                      <FaVideo className=\"text-white text-6xl\" />\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* 내용 */}\r\n                  <div className=\"p-6\">\r\n                    <div className=\"flex items-center justify-between mb-3\">\r\n                      {/* 카테고리 배지 (복수 표시) */}\r\n                      <div className=\"flex flex-wrap gap-2\">\r\n                        {video.categoryIds && video.categoryIds.length > 0 ? (\r\n                          (video.categoryIds as any[]).map((catIdOrObj: any) => {\r\n                            const catId = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\r\n                            const categoryObj = typeof catIdOrObj === 'string' \r\n                              ? categories.find(c => c._id === catId)\r\n                              : catIdOrObj\r\n                            \r\n                            return categoryObj ? (\r\n                              <span \r\n                                key={catId}\r\n                                className=\"px-3 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-full text-sm font-medium\"\r\n                              >\r\n                                {getLocalizedCategoryName(currentLang, categoryObj)}\r\n                              </span>\r\n                            ) : null\r\n                          })\r\n                        ) : (\r\n                          // 호환성: categoryIds가 없으면 기존 category 표시\r\n                          video.category && (\r\n                            <span className=\"px-3 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-full text-sm font-medium\">\r\n                              {video.category}\r\n                            </span>\r\n                          )\r\n                        )}\r\n                      </div>\r\n                      {video.rating && (\r\n                        <div className=\"flex items-center gap-1\">\r\n                          {Array.from({ length: 5 }, (_, i) => (\r\n                            <FaStar\r\n                              key={i}\r\n                              className={`text-sm ${\r\n                                i < video.rating! ? 'text-yellow-500' : 'text-gray-300 dark:text-gray-600'\r\n                              }`}\r\n                            />\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n\r\n                    <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-2 line-clamp-2\">\r\n                      {video.title}\r\n                    </h3>\r\n\r\n                    {video.purpose && (\r\n                      <p className=\"text-gray-600 dark:text-gray-400 mb-4 line-clamp-2 text-sm\">\r\n                        {video.purpose}\r\n                      </p>\r\n                    )}\r\n\r\n                    <div className=\"flex items-center gap-4 text-sm text-gray-500 dark:text-gray-400\">\r\n                      <div className=\"flex items-center gap-1\">\r\n                        <FaCalendar className=\"text-xs\" />\r\n                        <span>{formatDate(video.watchDate)}</span>\r\n                      </div>\r\n                      {video.skillIds && video.skillIds.length > 0 && (\r\n                        <div className=\"flex items-center gap-1\">\r\n                          <FaCubes className=\"text-xs\" />\r\n                          <span>{video.skillIds.length}개 스킬</span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </motion.div>\r\n            )\r\n          })}\r\n          </motion.div>\r\n        )}\r\n\r\n        {/* 시리즈 영상 탭 - playlist 탭에서만 표시 */}\r\n        {activeTab === 'playlist' && (\r\n          <motion.div\r\n            variants={containerVariants}\r\n            initial=\"hidden\"\r\n            animate={inView ? 'visible' : 'hidden'}\r\n            className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\"\r\n          >\r\n            {filteredPlaylists.map((playlist) => (\r\n              <motion.div key={playlist._id} variants={itemVariants}>\r\n                <Link\r\n                  to={`/video-playlists/${playlist._id}`}\r\n                  state={{ previousTab: activeTab, scrollPosition: window.scrollY }}\r\n                  className=\"block bg-white dark:bg-dark-800 rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-shadow border border-gray-200 dark:border-dark-700\"\r\n                >\r\n                  {/* 재생 목록 아이콘 */}\r\n                  <div className=\"relative aspect-video bg-gradient-to-br from-purple-400 to-pink-500 flex items-center justify-center\">\r\n                    <FaVideo className=\"text-white text-6xl\" />\r\n                    <div className=\"absolute top-2 right-2 bg-red-600 px-2 py-1 rounded text-white text-xs font-bold\">\r\n                      재생목록\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* 내용 */}\r\n                  <div className=\"p-6\">\r\n                    <div className=\"flex items-center justify-between mb-3\">\r\n                      {/* 카테고리 배지 (복수 표시) */}\r\n                      <div className=\"flex flex-wrap gap-2\">\r\n                        {playlist.categoryIds && playlist.categoryIds.length > 0 ? (\r\n                          (playlist.categoryIds as any[]).map((catIdOrObj: any) => {\r\n                            const catId = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\r\n                            const categoryObj = typeof catIdOrObj === 'string' \r\n                              ? categories.find(c => c._id === catId)\r\n                              : catIdOrObj\r\n                            \r\n                            return categoryObj ? (\r\n                              <span \r\n                                key={catId}\r\n                                className=\"px-3 py-1 bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-200 rounded-full text-sm font-medium\"\r\n                              >\r\n                                {getLocalizedCategoryName(currentLang, categoryObj)}\r\n                              </span>\r\n                            ) : null\r\n                          })\r\n                        ) : (\r\n                          // 호환성: categoryIds가 없으면 기존 category 표시\r\n                          playlist.category && (\r\n                            <span className=\"px-3 py-1 bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-200 rounded-full text-sm font-medium\">\r\n                              {playlist.category}\r\n                            </span>\r\n                          )\r\n                        )}\r\n                      </div>\r\n                      {playlist.rating && (\r\n                        <div className=\"flex items-center gap-1\">\r\n                          {Array.from({ length: 5 }, (_, i) => (\r\n                            <FaStar\r\n                              key={i}\r\n                              className={`text-sm ${\r\n                                i < playlist.rating! ? 'text-yellow-500' : 'text-gray-300 dark:text-gray-600'\r\n                              }`}\r\n                            />\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n\r\n                    <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-2 line-clamp-2\">\r\n                      {playlist.title}\r\n                    </h3>\r\n\r\n                    {playlist.purpose && (\r\n                      <p className=\"text-gray-600 dark:text-gray-400 mb-4 line-clamp-2 text-sm\">\r\n                        {playlist.purpose}\r\n                      </p>\r\n                    )}\r\n\r\n                    <div className=\"flex items-center gap-4 text-sm text-gray-500 dark:text-gray-400\">\r\n                      <div className=\"flex items-center gap-1\">\r\n                        <FaCalendar className=\"text-xs\" />\r\n                        <span>{formatDate(playlist.watchDate)}</span>\r\n                      </div>\r\n                      {playlist.skillIds && playlist.skillIds.length > 0 && (\r\n                        <div className=\"flex items-center gap-1\">\r\n                          <FaCubes className=\"text-xs\" />\r\n                          <span>{playlist.skillIds.length}개 스킬</span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </motion.div>\r\n            ))}\r\n          </motion.div>\r\n        )}\r\n\r\n        {/* 시리즈 영상 빈 상태 */}\r\n        {activeTab === 'playlist' && filteredPlaylists.length === 0 && (\r\n          <div className=\"card p-12 text-center\">\r\n            <FaVideo className=\"text-6xl text-gray-400 mx-auto mb-4\" />\r\n            <h3 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\r\n              {filter === 'all' ? '시리즈 영상이 없습니다' : '해당 카테고리에 시리즈 영상이 없습니다'}\r\n            </h3>\r\n            <p className=\"text-gray-600 dark:text-gray-400\">\r\n              여러 영상을 통한 체계적인 학습 과정을 추가해보세요\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {/* 빈 상태 - individual 탭에서만 */}\r\n        {activeTab === 'individual' && filteredVideos.length === 0 && (\r\n          <div className=\"card p-12 text-center\">\r\n            <FaVideo className=\"text-6xl text-gray-400 mx-auto mb-4\" />\r\n            <h3 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\r\n              {filter === 'all' ? '영상 학습 기록이 없습니다' : '해당 카테고리에 영상이 없습니다'}\r\n            </h3>\r\n            <p className=\"text-gray-600 dark:text-gray-400\">\r\n              유튜브 영상을 통한 학습 내용을 추가해보세요\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {/* 🌟 스크롤 투 탑 버튼 */}\r\n      <ScrollToTopButton />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default VideoLearnings\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport { useInView } from 'react-intersection-observer'\r\nimport { FaLaptopCode, FaPlus } from 'react-icons/fa'\r\nimport { Link, useSearchParams, useLocation } from 'react-router-dom'\r\nimport { useSiteSettings } from '@/hooks/useSiteSettings'\r\nimport { useAuth } from '@/contexts/AuthContext'\r\nimport { useProjects } from '@/hooks/useProjects'\r\nimport { useCategories } from '@/hooks/useCategories'\r\nimport ProjectCard from '@/components/ProjectCard'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { getLocalizedField, getLocalizedCategoryName } from '@/utils/i18nUtils'\r\n\r\nconst Projects: React.FC = () => {\r\n  const { settings: siteSettings } = useSiteSettings()\r\n  const { isAuthenticated } = useAuth()\r\n  const { projects, loading, error } = useProjects()\r\n  const location = useLocation()\r\n  const { t, i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  \r\n  // 🌟 카테고리 데이터 가져오기\r\n  const { data: categories = [], isLoading: categoriesLoading } = useCategories()\r\n\r\n  const [filter, setFilter] = useState('all')\r\n  \r\n  // 🌟 URL 쿼리 파라미터에서 skillId 읽기\r\n  const [searchParams, setSearchParams] = useSearchParams()\r\n  const skillIdFromUrl = searchParams.get('skillId')\r\n  \r\n  // 🌟 스크롤 위치 복원\r\n  useEffect(() => {\r\n    const scrollPosition = (location.state as any)?.scrollPosition\r\n    if (scrollPosition) {\r\n      window.scrollTo(0, scrollPosition)\r\n      // state를 정리하여 뒤로가기 시 다시 복원되지 않도록\r\n      window.history.replaceState({}, document.title)\r\n    }\r\n  }, [])\r\n  \r\n  // 🌟 skillIdFromUrl이 변경될 때마다 카테고리 필터를 'all'로 초기화\r\n  useEffect(() => {\r\n    if (skillIdFromUrl) {\r\n      setFilter('all')\r\n    }\r\n  }, [skillIdFromUrl])\r\n\r\n  // useInView 훅 선언\r\n  const [ref, inView] = useInView({\r\n    triggerOnce: true,\r\n    threshold: 0.1,\r\n  })\r\n\r\n  // 🌟 프로젝트 필터링 로직 확장 (categoryIds 배열 + 스킬 ID)\r\n  const filteredProjects = projects.filter(project => {\r\n    // 1. 카테고리 필터 검사 (categoryIds 배열 기반)\r\n    let categoryMatch = filter === 'all'\r\n    if (!categoryMatch) {\r\n      if (!project.categoryIds || project.categoryIds.length === 0) {\r\n        // 호환성: categoryIds가 없으면 기존 category 문자열 사용\r\n        categoryMatch = project.category === filter\r\n      } else {\r\n        // categoryIds 배열에 선택된 카테고리 ID가 포함되어 있는지 확인\r\n        categoryMatch = (project.categoryIds as any[]).some((catIdOrObj: any) => {\r\n          const catId = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\r\n          return catId === filter\r\n        })\r\n      }\r\n    }\r\n    \r\n    // 2. 스킬 ID 필터 검사\r\n    const skillMatch = !skillIdFromUrl || (project.skillIds && project.skillIds.includes(skillIdFromUrl))\r\n    \r\n    return categoryMatch && skillMatch\r\n  })\r\n  \r\n  // 🌟 카테고리 필터 버튼 핸들러 수정\r\n  const handleCategoryFilter = (categoryId: string) => {\r\n    setFilter(categoryId)\r\n    // 카테고리 버튼을 누르면 URL의 skillId 파라미터는 제거\r\n    setSearchParams(searchParams => {\r\n      searchParams.delete('skillId')\r\n      return searchParams\r\n    }, { replace: true })\r\n  }\r\n\r\n  const containerVariants = {\r\n    visible: {\r\n      transition: {\r\n        staggerChildren: 0.1,\r\n      },\r\n    },\r\n  }\r\n\r\n  const itemVariants = {\r\n    hidden: { opacity: 0, y: 30 },\r\n    visible: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        duration: 0.6,\r\n        ease: 'easeOut',\r\n      },\r\n    },\r\n  }\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'preparing':\r\n        return 'bg-caramel-100 text-caramel-800 dark:bg-caramel-900 dark:text-caramel-200'\r\n      case 'planning':\r\n        return 'bg-coffee-100 text-coffee-800 dark:bg-coffee-900 dark:text-coffee-200'\r\n      case 'completed':\r\n        return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'\r\n      default:\r\n        return 'bg-cream-100 text-dark-800 dark:bg-dark-700 dark:text-dark-200'\r\n    }\r\n  }\r\n\r\n  const getStatusText = (status: string) => {\r\n    switch (status) {\r\n      case 'preparing':\r\n        return t('projects.status.preparing')\r\n      case 'planning':\r\n        return t('projects.status.planning')\r\n      case 'completed':\r\n        return t('projects.status.completed')\r\n      default:\r\n        return t('projects.status.all')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"section-padding bg-white dark:bg-dark-800 min-h-screen\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <motion.div\r\n          ref={ref}\r\n          initial=\"hidden\"\r\n          animate={inView ? 'visible' : 'hidden'}\r\n          variants={containerVariants}\r\n        >\r\n          {/* 1. 제목 및 부제목 */}\r\n          <motion.div variants={itemVariants} className=\"text-center mb-16\">\r\n            <h2 className=\"text-4xl md:text-5xl font-bold text-dark-900 dark:text-white mb-6\">\r\n              {getLocalizedField(currentLang, siteSettings?.projectsTitle, siteSettings?.projectsTitleEn, siteSettings?.projectsTitleJa) || t('projects.title')}\r\n            </h2>\r\n            <p className=\"text-xl text-dark-600 dark:text-dark-300 max-w-3xl mx-auto mb-8\">\r\n              {/* 🌟 skillId 필터 활성화 시 부제목 변경 */}\r\n              {skillIdFromUrl \r\n                ? t('projects.subtitle')\r\n                : getLocalizedField(currentLang, siteSettings?.projectsSubtitle, siteSettings?.projectsSubtitleEn, siteSettings?.projectsSubtitleJa) || t('projects.subtitle')\r\n              }\r\n            </p>\r\n          </motion.div>\r\n\r\n          {/* 2. 프로젝트 추가 버튼 (인증된 경우) */}\r\n          {isAuthenticated && (\r\n            <motion.div variants={itemVariants} className=\"mb-8 flex justify-end\">\r\n              <Link\r\n                to=\"/admin\"\r\n                className=\"inline-flex items-center gap-2 bg-accent-500 hover:bg-accent-600 text-white font-medium px-6 py-3 rounded-lg transition-colors duration-600 shadow-medium hover:shadow-glow\"\r\n              >\r\n                <FaPlus /> {t('common.create')}\r\n              </Link>\r\n            </motion.div>\r\n          )}\r\n\r\n          {/* 3. 카테고리 필터 */}\r\n          <motion.div variants={itemVariants} className=\"flex justify-center flex-wrap gap-3 mb-12\">\r\n            {/* 🌟 skillIdFromUrl이 있을 경우 초기화 버튼 표시 */}\r\n            {skillIdFromUrl && (\r\n              <motion.button\r\n                onClick={() => setSearchParams({}, { replace: true })}\r\n                whileTap={{ scale: 0.95 }}\r\n                layout\r\n                transition={{ type: 'spring', stiffness: 700, damping: 30 }}\r\n                className=\"px-6 py-2 rounded-xl font-medium bg-red-500 text-white shadow-lg shadow-red-500/50 transition-all duration-200 hover:bg-red-600\"\r\n              >\r\n                ❌ 스킬 필터 초기화\r\n              </motion.button>\r\n            )}\r\n\r\n            {/* 전체 버튼 */}\r\n            <motion.button\r\n              key=\"all\"\r\n              onClick={() => handleCategoryFilter('all')}\r\n              whileTap={{ scale: 0.95 }}\r\n              layout\r\n              transition={{ type: 'spring', stiffness: 700, damping: 30 }}\r\n              className={`px-6 py-2 rounded-xl font-medium transition-all duration-200 ${\r\n                !skillIdFromUrl && filter === 'all'\r\n                  ? 'bg-primary-500 text-white shadow-lg shadow-primary-500/50'\r\n                  : 'bg-white dark:bg-dark-800 text-dark-700 dark:text-dark-300 hover:bg-secondary-100 dark:hover:bg-dark-700 border border-secondary-200 dark:border-dark-700'\r\n              }`}\r\n            >\r\n              전체\r\n            </motion.button>\r\n            \r\n            {/* 카테고리 버튼들 */}\r\n            {categories.map((category) => (\r\n              <motion.button\r\n                key={category._id}\r\n                onClick={() => handleCategoryFilter(category._id)}\r\n                whileTap={{ scale: 0.95 }}\r\n                layout\r\n                transition={{ type: 'spring', stiffness: 700, damping: 30 }}\r\n                className={`px-6 py-2 rounded-xl font-medium transition-all duration-200 ${\r\n                  // 🌟 skillIdFromUrl이 없을 때만 category filter의 활성화 상태 표시\r\n                  !skillIdFromUrl && filter === category._id\r\n                    ? 'bg-primary-500 text-white shadow-lg shadow-primary-500/50'\r\n                    : 'bg-white dark:bg-dark-800 text-dark-700 dark:text-dark-300 hover:bg-secondary-100 dark:hover:bg-dark-700 border border-secondary-200 dark:border-dark-700'\r\n                }`}\r\n              >\r\n                {getLocalizedCategoryName(currentLang, category)}\r\n              </motion.button>\r\n            ))}\r\n          </motion.div>\r\n\r\n          {/* 4. 프로젝트 그리드 */}\r\n          <motion.div \r\n            className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\"\r\n            variants={containerVariants}\r\n            initial=\"hidden\"\r\n            animate={inView ? \"visible\" : \"hidden\"}\r\n            layout\r\n          >\r\n            <AnimatePresence>\r\n              {loading && (\r\n                <motion.div \r\n                  key=\"loading\"\r\n                  initial={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                  exit={{ opacity: 0 }}\r\n                  className=\"md:col-span-2 lg:col-span-3 text-center p-12 bg-white dark:bg-dark-800 rounded-2xl shadow-inner border border-secondary-200 dark:border-dark-700\"\r\n                >\r\n                  <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto mb-4\"></div>\r\n                  <p className=\"text-xl font-semibold text-dark-800 dark:text-cream-100\">\r\n                    프로젝트를 불러오는 중...\r\n                  </p>\r\n                </motion.div>\r\n              )}\r\n\r\n              {error && (\r\n                <motion.div \r\n                  key=\"error\"\r\n                  initial={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                  exit={{ opacity: 0 }}\r\n                  className=\"md:col-span-2 lg:col-span-3 text-center p-12 bg-red-50 dark:bg-red-900/20 rounded-2xl shadow-inner border border-red-200 dark:border-red-800\"\r\n                >\r\n                  <p className=\"text-xl font-semibold text-red-800 dark:text-red-200\">\r\n                    {error}\r\n                  </p>\r\n                </motion.div>\r\n              )}\r\n\r\n              {!loading && !error && filteredProjects.length === 0 && (\r\n                <motion.div \r\n                  key=\"no-projects\"\r\n                  initial={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                  exit={{ opacity: 0 }}\r\n                  className=\"md:col-span-2 lg:col-span-3 text-center p-12 bg-white dark:bg-dark-800 rounded-2xl shadow-inner border border-secondary-200 dark:border-dark-700\"\r\n                >\r\n                  <FaLaptopCode className=\"text-primary-600 dark:text-primary-400 text-4xl mx-auto mb-4\" />\r\n                  <p className=\"text-xl font-semibold text-dark-800 dark:text-cream-100\">\r\n                    {filter === 'all' ? '등록된 프로젝트가 없습니다.' : '선택하신 카테고리의 프로젝트가 아직 없습니다.'}\r\n                  </p>\r\n                  <p className=\"text-dark-500 dark:text-dark-400 mt-2\">\r\n                    {filter === 'all' ? '관리자 대시보드에서 첫 번째 프로젝트를 추가해보세요!' : '다른 필터를 선택하거나, 곧 업데이트될 프로젝트를 기대해 주세요!'}\r\n                  </p>\r\n                </motion.div>\r\n              )}\r\n            \r\n              {!loading && !error && filteredProjects.map((project) => (\r\n                <ProjectCard\r\n                  key={project._id}\r\n                  project={project}\r\n                  itemVariants={itemVariants}\r\n                  getStatusColor={getStatusColor}\r\n                  getStatusText={getStatusText}\r\n                />\r\n              ))}\r\n            </AnimatePresence>\r\n          </motion.div>\r\n\r\n          {/* 🌟 프로젝트 업데이트 카드 - 사이트 설정에서 관리 */}\r\n          {siteSettings?.projectsUpdateTitle && (\r\n            <motion.div\r\n              variants={itemVariants}\r\n              className=\"card p-10 mt-12 bg-primary-600 text-white rounded-2xl shadow-xl\"\r\n            >\r\n              <h3 className=\"text-2xl font-bold mb-4\">{siteSettings.projectsUpdateTitle}</h3>\r\n              <p className=\"text-secondary-100 mb-6 text-lg\">\r\n                {siteSettings.projectsUpdateDescription || '현재 학습 중인 기술들을 활용한 실제 프로젝트들을 곧 업로드할 예정입니다.'}\r\n              </p>\r\n              <div className=\"flex flex-wrap gap-3\">\r\n                {(siteSettings.projectsUpdateTechList || ['PLC 프로그래밍', '데이터 분석', 'IoT 시스템', '협동로봇']).map((tech: string) => (\r\n                  <span\r\n                    key={tech}\r\n                    className=\"px-4 py-2 bg-white/20 rounded-lg text-sm font-medium\"\r\n                  >\r\n                    {tech}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </motion.div>\r\n          )}\r\n        </motion.div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Projects","import React from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { useInView } from 'react-intersection-observer'\r\nimport { FaPlus } from 'react-icons/fa'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSiteSettings } from '@/hooks/useSiteSettings'\r\nimport { useExperiences } from '@/hooks/useExperiences'\r\nimport { useAuth } from '@/contexts/AuthContext'\r\nimport ExperienceItem from '@/components/ExperienceItem'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { getLocalizedField } from '@/utils/i18nUtils'\r\n\r\nconst Experience: React.FC = () => {\r\n  const { settings: siteSettings, loading: settingsLoading } = useSiteSettings()\r\n  const { experiences, loading: experiencesLoading, error } = useExperiences()\r\n  const { isAuthenticated } = useAuth()\r\n  const { i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  \r\n  const [ref, inView] = useInView({\r\n    triggerOnce: true,\r\n    threshold: 0.1,\r\n  })\r\n\r\n  const loading = settingsLoading || experiencesLoading;\r\n\r\n  const itemVariants = {\r\n    hidden: { opacity: 0, y: 30 },\r\n    visible: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        duration: 0.6,\r\n        ease: 'easeOut',\r\n      },\r\n    },\r\n  }\r\n\r\n  // 에러 상태 처리\r\n  if (error) {\r\n    return (\r\n      <section className=\"section-padding bg-white dark:bg-dark-800 min-h-screen\">\r\n        <div className=\"max-w-7xl mx-auto text-center\">\r\n          <div className=\"card p-8\">\r\n            <h2 className=\"text-2xl font-bold text-red-600 dark:text-red-400 mb-4\">\r\n              데이터 로딩 오류\r\n            </h2>\r\n            <p className=\"text-dark-600 dark:text-dark-300 mb-4\">{error}</p>\r\n            <button \r\n              onClick={() => window.location.reload()} \r\n              className=\"px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors\"\r\n            >\r\n              다시 시도\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n\r\n  // 로딩 상태 처리\r\n  if (loading) {\r\n    return (\r\n      <section className=\"section-padding bg-white dark:bg-dark-800 min-h-screen\">\r\n        <div className=\"max-w-7xl mx-auto text-center\">\r\n          <div className=\"card p-8\">\r\n            <div className=\"inline-block w-8 h-8 border-4 border-primary-600 border-t-transparent rounded-full animate-spin mb-4\"></div>\r\n            <p className=\"text-xl text-dark-600 dark:text-dark-300\">경험 데이터를 불러오는 중...</p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <section className=\"section-padding bg-white dark:bg-dark-800 min-h-screen\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <motion.div\r\n          ref={ref}\r\n          initial=\"hidden\"\r\n          animate={inView ? 'visible' : 'hidden'}\r\n        >\r\n          {/* 1. 제목 및 부제목 */}\r\n          <motion.div variants={itemVariants} className=\"text-center mb-16\">\r\n            <h2 className=\"text-4xl md:text-5xl font-bold text-dark-900 dark:text-white mb-6\">\r\n              {getLocalizedField(currentLang, siteSettings?.experienceTitle, siteSettings?.experienceTitleEn, siteSettings?.experienceTitleJa) || '경력 & 학습'}\r\n            </h2>\r\n            <p className=\"text-xl text-dark-600 dark:text-dark-300 max-w-3xl mx-auto mb-8\">\r\n              {getLocalizedField(currentLang, siteSettings?.experienceSubtitle, siteSettings?.experienceSubtitleEn, siteSettings?.experienceSubtitleJa) || '바리스타에서 자동화 전문가로의 성장 여정'}\r\n            </p>\r\n          </motion.div>\r\n\r\n          {/* 2. 경력 추가 버튼 (인증된 경우) */}\r\n          {isAuthenticated && (\r\n            <motion.div variants={itemVariants} className=\"mb-8 flex justify-end\">\r\n              <Link\r\n                to=\"/admin\"\r\n                className=\"inline-flex items-center gap-2 bg-accent-500 hover:bg-accent-600 text-white font-medium px-6 py-3 rounded-lg transition-colors duration-600 shadow-medium hover:shadow-glow\"\r\n              >\r\n                <FaPlus /> 경력 추가\r\n              </Link>\r\n            </motion.div>\r\n          )}\r\n\r\n          {/* 3. 타임라인 형식의 경력 목록 */}\r\n          <div className=\"relative max-w-4xl mx-auto\">\r\n            {experiences.length === 0 ? (\r\n              <motion.div variants={itemVariants} className=\"card p-8 text-center\">\r\n                <p className=\"text-xl text-dark-600 dark:text-dark-300\">\r\n                  아직 등록된 경력이 없습니다.\r\n                </p>\r\n              </motion.div>\r\n            ) : (\r\n              <div>\r\n                {experiences.map((exp, index) => (\r\n                  <ExperienceItem \r\n                    key={exp._id}\r\n                    exp={exp} \r\n                    variants={itemVariants}\r\n                    isLast={index === experiences.length - 1}\r\n                  />\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Experience","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { useInView } from 'react-intersection-observer'\r\nimport { FaCoffee, FaCog, FaChartLine, FaRobot, FaPlus, FaGraduationCap, FaShieldAlt } from 'react-icons/fa'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSiteSettings } from '@/hooks/useSiteSettings'\r\nimport { useAuth } from '@/contexts/AuthContext'\r\nimport { experiencesAPI } from '@/services/api'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { getLocalizedField } from '@/utils/i18nUtils'\r\n\r\n// TypeScript 인터페이스 정의 (API의 Experience 타입과 동일하게)\r\ninterface JourneyStep {\r\n  _id?: string\r\n  icon: React.ComponentType<{ className?: string; size?: number }>\r\n  title: string      // 직책\r\n  company: string    // 회사\r\n  period: string     // 기간\r\n  skills: string[]   // 기술\r\n  description: string\r\n  order?: number\r\n}\r\n\r\n// 아이콘 매핑 (API에서 iconKey를 받을 경우 사용)\r\nconst iconMap: { [key: string]: React.ComponentType<{ className?: string; size?: number }> } = {\r\n  coffee: FaCoffee,\r\n  FaCoffee: FaCoffee,\r\n  cog: FaCog,\r\n  FaCog: FaCog,\r\n  chart: FaChartLine,\r\n  FaChartLine: FaChartLine,\r\n  robot: FaRobot,\r\n  FaRobot: FaRobot,\r\n  graduation: FaGraduationCap,\r\n  FaGraduationCap: FaGraduationCap,\r\n  shield: FaShieldAlt,\r\n  FaShieldAlt: FaShieldAlt,\r\n}\r\n\r\n// 유효한 아이콘 키 목록 (타입 안정성을 위해)\r\nconst validIconKeys = Object.keys(iconMap) as Array<keyof typeof iconMap>\r\n\r\n// 안전한 아이콘 가져오기 함수\r\nconst getSafeIcon = (iconKey: string | undefined): React.ComponentType<{ className?: string; size?: number }> => {\r\n  if (!iconKey || !validIconKeys.includes(iconKey as keyof typeof iconMap)) {\r\n    console.warn(`Invalid icon key: ${iconKey}. Using default icon 'cog'.`)\r\n    return iconMap['cog']!\r\n  }\r\n  return iconMap[iconKey as keyof typeof iconMap]!\r\n}\r\n\r\n// 기본 여정 데이터 (API 로드 실패 시 사용)\r\nconst defaultJourney: JourneyStep[] = [\r\n    {\r\n      icon: FaCoffee,\r\n      company: '스타벅스',\r\n      title: '바리스타',\r\n      period: '2018 - 2023',\r\n      skills: ['고객 서비스', '품질 관리', '효율성 개선'],\r\n      description: '5년간 고객 서비스와 품질 관리 경험',\r\n      order: 1,\r\n    },\r\n    {\r\n      icon: FaCog,\r\n      company: '자기개발',\r\n      title: '공장자동화 학습',\r\n      period: '2024 - 현재',\r\n      skills: ['PLC', 'IoT', '자동화 시스템'],\r\n      description: 'PLC, IoT, 자동화 시스템 학습',\r\n      order: 2,\r\n    },\r\n    {\r\n      icon: FaChartLine,\r\n      company: '자기개발',\r\n      title: '데이터 분석가',\r\n      period: '2024 - 현재',\r\n      skills: ['Python', '통계학', '데이터과학'],\r\n      description: 'Python, 통계학, 데이터과학 전문화',\r\n      order: 3,\r\n    },\r\n    {\r\n      icon: FaRobot,\r\n      company: '미래',\r\n      title: '자동화 전문가',\r\n      period: '2025 -',\r\n      skills: ['스마트 팩토리', 'AI', 'Industry 4.0'],\r\n      description: '스마트 팩토리의 미래 구현',\r\n      order: 4,\r\n    },\r\n]\r\n\r\nconst About: React.FC = () => {\r\n  const { settings: siteSettings, loading: settingsLoading } = useSiteSettings()\r\n  const { isAuthenticated } = useAuth()\r\n  const { i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  const [journey, setJourney] = useState<JourneyStep[]>([])\r\n  const [dataLoading, setDataLoading] = useState(true)\r\n  \r\n  const [ref, inView] = useInView({\r\n    triggerOnce: true,\r\n    threshold: 0.1,\r\n  })\r\n\r\n  // 여정 데이터 로딩 (useCallback으로 메모이제이션)\r\n  const fetchJourneyData = useCallback(async () => {\r\n    try {\r\n      setDataLoading(true)\r\n      const response = await experiencesAPI.getAll()\r\n      \r\n      if (response.data?.data && response.data.data.length > 0) {\r\n        // API 데이터를 JourneyStep 형식으로 변환\r\n        const mappedJourney: JourneyStep[] = response.data.data\r\n          .map((item: any) => ({\r\n            _id: item._id,\r\n            icon: getSafeIcon(item.iconKey), // 안전한 아이콘 가져오기\r\n            company: item.company || '회사명 없음',\r\n            title: item.title,\r\n            period: item.period,\r\n            skills: item.skills || [],\r\n            description: item.description,\r\n            order: item.order || 0,\r\n          }))\r\n          .sort((a: JourneyStep, b: JourneyStep) => (a.order || 0) - (b.order || 0))\r\n        \r\n        setJourney(mappedJourney)\r\n      } else {\r\n        // API 데이터가 없으면 기본 데이터 사용\r\n        setJourney(defaultJourney)\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch journey data:', error)\r\n      // 오류 발생 시 기본 데이터 사용\r\n      setJourney(defaultJourney)\r\n    } finally {\r\n      setDataLoading(false)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    fetchJourneyData()\r\n  }, [fetchJourneyData])\r\n\r\n  const containerVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.2,\r\n      },\r\n    },\r\n  }\r\n\r\n  const itemVariants = {\r\n    hidden: { opacity: 0, y: 30 },\r\n    visible: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        duration: 0.6,\r\n        ease: 'easeOut',\r\n      },\r\n    },\r\n  }\r\n\r\n  // 로딩 상태\r\n  if (settingsLoading || dataLoading) {\r\n    return (\r\n      <section className=\"section-padding bg-white dark:bg-dark-800 min-h-screen\">\r\n        <div className=\"max-w-7xl mx-auto flex justify-center py-12\">\r\n          <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <section className=\"section-padding bg-white dark:bg-dark-800 min-h-screen\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <motion.div\r\n          ref={ref}\r\n          variants={containerVariants}\r\n          initial=\"hidden\"\r\n          animate={inView ? 'visible' : 'hidden'}\r\n        >\r\n          {/* 1. 제목 및 부제목 */}\r\n          <motion.div variants={itemVariants} className=\"text-center mb-16\">\r\n            <h2 className=\"text-4xl md:text-5xl font-bold text-dark-900 dark:text-white mb-6\">\r\n              {getLocalizedField(currentLang, siteSettings?.aboutTitle, siteSettings?.aboutTitleEn, siteSettings?.aboutTitleJa) || '저의 여정'}\r\n            </h2>\r\n            {(siteSettings?.aboutSubtitle || !settingsLoading) && (\r\n              <p className=\"text-xl text-dark-600 dark:text-dark-300 max-w-3xl mx-auto mb-8\">\r\n                {getLocalizedField(currentLang, siteSettings?.aboutSubtitle, siteSettings?.aboutSubtitleEn, siteSettings?.aboutSubtitleJa) || '커피 한 잔에서 시작된 공장자동화 전문가로의 여정'}\r\n              </p>\r\n            )}\r\n          </motion.div>\r\n\r\n          {/* 2. 소개 편집 버튼 (인증된 경우) */}\r\n          {isAuthenticated && (\r\n            <motion.div variants={itemVariants} className=\"mb-8 flex justify-end\">\r\n              <Link\r\n                to=\"/admin\"\r\n                className=\"inline-flex items-center gap-2 bg-accent-500 hover:bg-accent-600 text-white font-medium px-6 py-3 rounded-lg transition-colors duration-600 shadow-medium hover:shadow-glow\"\r\n              >\r\n                <FaPlus /> 소개 편집\r\n              </Link>\r\n            </motion.div>\r\n          )}\r\n\r\n          {/* 3. 소개 내용 */}\r\n          <motion.div variants={itemVariants} className=\"card p-10 mb-12\">\r\n            <h3 className=\"text-2xl font-bold text-dark-900 dark:text-white mb-6\">\r\n              {getLocalizedField(currentLang, siteSettings?.aboutCardTitle, siteSettings?.aboutCardTitleEn, siteSettings?.aboutCardTitleJa) || '바리스타에서 자동화 전문가로'}\r\n            </h3>\r\n            <div className=\"space-y-6 text-dark-600 dark:text-dark-300 leading-relaxed\">\r\n              <p className=\"whitespace-pre-line\">\r\n                {getLocalizedField(currentLang, siteSettings?.aboutDescription1, siteSettings?.aboutDescription1En, siteSettings?.aboutDescription1Ja) || '스타벅스에서 5년간 바리스타로 일하며 고객 서비스, 품질 관리, 효율성 개선에 대한 깊은 이해를 얻었습니다.'}\r\n              </p>\r\n              <p className=\"whitespace-pre-line\">\r\n                {getLocalizedField(currentLang, siteSettings?.aboutDescription2, siteSettings?.aboutDescription2En, siteSettings?.aboutDescription2Ja) || '현재는 PLC 프로그래밍, 통계학, 데이터과학 등 다양한 기술을 학습하며 스마트 팩토리의 미래를 준비하고 있습니다.'}\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"mt-8 flex flex-wrap gap-3\">\r\n              {(siteSettings?.mainSkills || ['PLC 프로그래밍', '데이터 분석', 'Python', '협동로봇', 'IoT']).map((tech) => (\r\n                <span\r\n                  key={tech}\r\n                  className=\"px-4 py-2 bg-primary-100 dark:bg-primary-900 text-primary-700 dark:text-primary-300 rounded-full text-sm font-medium\"\r\n                >\r\n                  {tech}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </motion.div>\r\n\r\n          {/* 4. 성장 여정 */}\r\n          <motion.div variants={itemVariants} className=\"space-y-6\">\r\n            <h3 className=\"text-2xl font-bold text-dark-900 dark:text-white mb-8 text-center\">\r\n              {getLocalizedField(currentLang, siteSettings?.aboutJourneyTitle, siteSettings?.aboutJourneyTitleEn, siteSettings?.aboutJourneyTitleJa) || '성장 여정'}\r\n            </h3>\r\n            <div className=\"grid md:grid-cols-2 gap-6\">\r\n              {journey.map((step, index) => {\r\n                const IconComponent = step.icon\r\n                return (\r\n                  <motion.div\r\n                    key={step._id || index}\r\n                    variants={itemVariants}\r\n                    className=\"card p-6 hover:shadow-xl transition-all duration-300\"\r\n                    whileHover={{ y: -5 }}\r\n                  >\r\n                    <div className=\"flex items-start gap-4\">\r\n                      <div className=\"p-3 bg-primary-100 dark:bg-primary-900 rounded-xl shrink-0\">\r\n                        <IconComponent className=\"text-primary-600 dark:text-primary-400\" size={24} />\r\n                      </div>\r\n                      <div className=\"flex-1\">\r\n                        {/* 🌟 회사명 */}\r\n                        <p className=\"text-xs text-dark-500 dark:text-dark-400 font-medium mb-1\">\r\n                          {step.company}\r\n                        </p>\r\n                        {/* 🌟 직책 */}\r\n                        <h4 className=\"text-lg font-bold text-dark-900 dark:text-white mb-1\">\r\n                          {step.title}\r\n                        </h4>\r\n                        {/* 🌟 기간 */}\r\n                        <p className=\"text-sm text-primary-600 dark:text-primary-400 font-medium mb-3\">\r\n                          {step.period}\r\n                        </p>\r\n                        {/* 🌟 기술 태그 (간략하게) */}\r\n                        {step.skills && step.skills.length > 0 && (\r\n                          <div className=\"flex flex-wrap gap-1.5\">\r\n                            {step.skills.slice(0, 4).map((skill, idx) => (\r\n                              <span\r\n                                key={idx}\r\n                                className=\"px-2 py-0.5 bg-secondary-100 dark:bg-secondary-900/50 text-secondary-700 dark:text-secondary-300 rounded text-xs font-medium\"\r\n                              >\r\n                                {skill}\r\n                              </span>\r\n                            ))}\r\n                            {step.skills.length > 4 && (\r\n                              <span className=\"px-2 py-0.5 text-dark-500 dark:text-dark-400 text-xs\">\r\n                                +{step.skills.length - 4}\r\n                              </span>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </motion.div>\r\n                )\r\n              })}\r\n            </div>\r\n          </motion.div>\r\n        </motion.div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import React, { useState } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { useInView } from 'react-intersection-observer'\r\nimport { FaEnvelope, FaPhone, FaMapMarkerAlt, FaPaperPlane, FaCheckCircle, FaExclamationCircle, FaPlus } from 'react-icons/fa'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSiteSettings } from '@/hooks/useSiteSettings'\r\nimport { useAuth } from '@/contexts/AuthContext'\r\nimport { contactAPI } from '@/services/api'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { getLocalizedField } from '@/utils/i18nUtils'\r\n\r\n// 폼 데이터 타입 정의\r\ninterface ContactFormData {\r\n  name: string\r\n  email: string\r\n  subject: string\r\n  message: string\r\n}\r\n\r\nconst Contact: React.FC = () => {\r\n  const { settings: siteSettings } = useSiteSettings()\r\n  const { isAuthenticated } = useAuth()\r\n  const { t, i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  \r\n  const [ref, inView] = useInView({\r\n    triggerOnce: true,\r\n    threshold: 0.1,\r\n  })\r\n\r\n  const [formData, setFormData] = useState<ContactFormData>({\r\n    name: '',\r\n    email: '',\r\n    subject: '',\r\n    message: '',\r\n  })\r\n  \r\n  // 폼 제출 상태 관리\r\n  const [isSubmitting, setIsSubmitting] = useState(false)\r\n  const [submitStatus, setSubmitStatus] = useState<'idle' | 'success' | 'error'>('idle')\r\n  const [submitMessage, setSubmitMessage] = useState('')\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n\r\n  // 폼 제출 로직 - DB 저장만 사용\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    setIsSubmitting(true)\r\n    setSubmitStatus('idle')\r\n    setSubmitMessage('')\r\n\r\n    try {\r\n      // DB에 메시지 저장\r\n      await contactAPI.sendEmail(formData)\r\n      \r\n      // 성공 처리\r\n      setSubmitStatus('success')\r\n      setSubmitMessage('메시지가 성공적으로 전송되었습니다. 곧 연락 드리겠습니다.')\r\n      setFormData({ name: '', email: '', subject: '', message: '' }) // 폼 초기화\r\n\r\n    } catch (error) {\r\n      // 에러 처리\r\n      console.error('Failed to submit form:', error)\r\n      setSubmitStatus('error')\r\n      setSubmitMessage('메시지 전송에 실패했습니다. 이메일로 직접 연락해주세요.')\r\n    } finally {\r\n      setIsSubmitting(false)\r\n    }\r\n  }\r\n\r\n  const contactInfo = [\r\n    {\r\n      icon: FaEnvelope,\r\n      title: '이메일',\r\n      value: siteSettings?.email || 'juyeong_choi@naver.com',\r\n      href: `mailto:${siteSettings?.email || 'juyeong_choi@naver.com'}`,\r\n    },\r\n    {\r\n      icon: FaPhone,\r\n      title: '전화번호',\r\n      value: siteSettings?.phone || '연락처 문의 시 제공',\r\n      href: siteSettings?.phone ? `tel:${siteSettings.phone.replace(/[^0-9+]/g, '')}` : '#',\r\n    },\r\n    {\r\n      icon: FaMapMarkerAlt,\r\n      title: '위치',\r\n      value: siteSettings?.location || '부산, 대한민국',\r\n      href: '#',\r\n    },\r\n  ]\r\n\r\n  const itemVariants = {\r\n    hidden: { opacity: 0, y: 30 },\r\n    visible: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        duration: 0.6,\r\n        ease: 'easeOut',\r\n      },\r\n    },\r\n  }\r\n\r\n  // 폼 유효성 검사 (모든 필드 채워졌는지 확인)\r\n  const isFormValid = formData.name && formData.email && formData.subject && formData.message\r\n\r\n  return (\r\n    <section className=\"section-padding bg-white dark:bg-dark-800 min-h-screen\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <motion.div\r\n          ref={ref}\r\n          initial=\"hidden\"\r\n          animate={inView ? 'visible' : 'hidden'}\r\n        >\r\n          {/* 1. 제목 및 부제목 */}\r\n          <motion.div variants={itemVariants} className=\"text-center mb-16\">\r\n            <h2 className=\"text-4xl md:text-5xl font-bold text-dark-900 dark:text-white mb-6\">\r\n              {getLocalizedField(currentLang, siteSettings?.contactTitle, siteSettings?.contactTitleEn, siteSettings?.contactTitleJa) || '연락처'}\r\n            </h2>\r\n            <p className=\"text-xl text-dark-600 dark:text-dark-300 max-w-3xl mx-auto mb-8\">\r\n              {getLocalizedField(currentLang, siteSettings?.contactSubtitle, siteSettings?.contactSubtitleEn, siteSettings?.contactSubtitleJa) || '프로젝트나 협업에 관심이 있으시다면 언제든지 연락해주세요.'}\r\n            </p>\r\n          </motion.div>\r\n\r\n          {/* 2. 연락처 편집 버튼 (인증된 경우) */}\r\n          {isAuthenticated && (\r\n            <motion.div variants={itemVariants} className=\"mb-8 flex justify-end\">\r\n              <Link\r\n                to=\"/admin\"\r\n                className=\"inline-flex items-center gap-2 bg-accent-500 hover:bg-accent-600 text-white font-medium px-6 py-3 rounded-lg transition-colors duration-600 shadow-medium hover:shadow-glow\"\r\n              >\r\n                <FaPlus /> 연락처 편집\r\n              </Link>\r\n            </motion.div>\r\n          )}\r\n\r\n          {/* 3. 연락처 정보 및 폼 */}\r\n          <div className=\"grid lg:grid-cols-2 gap-12\">\r\n            <motion.div variants={itemVariants} className=\"space-y-8\">\r\n              <div className=\"space-y-6\">\r\n                {contactInfo.map((info) => (\r\n                  <motion.a\r\n                    key={info.title}\r\n                    href={info.href}\r\n                    className=\"flex items-center space-x-4 p-6 card hover:shadow-xl transition-all duration-300\"\r\n                    whileHover={{ y: -5 }}\r\n                  >\r\n                    <div className=\"p-4 bg-primary-100 dark:bg-primary-900 rounded-xl\">\r\n                      <info.icon className=\"text-primary-600 dark:text-primary-400\" size={24} />\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"font-semibold text-dark-900 dark:text-white mb-1\">\r\n                        {info.title}\r\n                      </div>\r\n                      <div className=\"text-dark-600 dark:text-dark-300\">\r\n                        {info.value}\r\n                      </div>\r\n                    </div>\r\n                  </motion.a>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"card p-8 bg-primary-600 text-white\">\r\n                <h4 className=\"text-xl font-bold mb-6\">취업 관심 분야</h4>\r\n                <ul className=\"space-y-3\">\r\n                  <li className=\"flex items-center space-x-3\">\r\n                    <div className=\"w-2 h-2 bg-secondary-300 rounded-full\"></div>\r\n                    <span>공장자동화 엔지니어</span>\r\n                  </li>\r\n                  <li className=\"flex items-center space-x-3\">\r\n                    <div className=\"w-2 h-2 bg-secondary-300 rounded-full\"></div>\r\n                    <span>PLC 프로그래머</span>\r\n                  </li>\r\n                  <li className=\"flex items-center space-x-3\">\r\n                    <div className=\"w-2 h-2 bg-secondary-300 rounded-full\"></div>\r\n                    <span>데이터 분석가</span>\r\n                  </li>\r\n                  <li className=\"flex items-center space-x-3\">\r\n                    <div className=\"w-2 h-2 bg-secondary-300 rounded-full\"></div>\r\n                    <span>IoT 시스템 개발자</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </motion.div>\r\n\r\n            <motion.div\r\n              variants={itemVariants}\r\n              className=\"card p-10\"\r\n            >\r\n              <h3 className=\"text-2xl font-bold text-dark-900 dark:text-white mb-8\">\r\n                메시지 보내기\r\n              </h3>\r\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n                <div className=\"grid md:grid-cols-2 gap-6\">\r\n                  {/* Name Input */}\r\n                  <div>\r\n                    <label htmlFor=\"name\" className=\"block text-sm font-medium text-dark-700 dark:text-dark-300 mb-2\">\r\n                      이름\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      value={formData.name}\r\n                      onChange={handleChange}\r\n                      className=\"w-full px-4 py-3 border border-secondary-300 dark:border-dark-600 rounded-xl focus:ring-2 focus:ring-primary-500 focus:border-transparent bg-white dark:bg-dark-700 text-dark-900 dark:text-white transition-colors duration-200\"\r\n                      required\r\n                      disabled={isSubmitting}\r\n                    />\r\n                  </div>\r\n                  {/* Email Input */}\r\n                  <div>\r\n                    <label htmlFor=\"email\" className=\"block text-sm font-medium text-dark-700 dark:text-dark-300 mb-2\">\r\n                      이메일\r\n                    </label>\r\n                    <input\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      value={formData.email}\r\n                      onChange={handleChange}\r\n                      className=\"w-full px-4 py-3 border border-secondary-300 dark:border-dark-600 rounded-xl focus:ring-2 focus:ring-primary-500 focus:border-transparent bg-white dark:bg-dark-700 text-dark-900 dark:text-white transition-colors duration-200\"\r\n                      required\r\n                      disabled={isSubmitting}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* Subject Input */}\r\n                <div>\r\n                  <label htmlFor=\"subject\" className=\"block text-sm font-medium text-dark-700 dark:text-dark-300 mb-2\">\r\n                    제목\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"subject\"\r\n                    name=\"subject\"\r\n                    value={formData.subject}\r\n                    onChange={handleChange}\r\n                    className=\"w-full px-4 py-3 border border-secondary-300 dark:border-dark-600 rounded-xl focus:ring-2 focus:ring-primary-500 focus:border-transparent bg-white dark:bg-dark-700 text-dark-900 dark:text-white transition-colors duration-200\"\r\n                    required\r\n                    disabled={isSubmitting}\r\n                  />\r\n                </div>\r\n                {/* Message Textarea */}\r\n                <div>\r\n                  <label htmlFor=\"message\" className=\"block text-sm font-medium text-dark-700 dark:text-dark-300 mb-2\">\r\n                    메시지\r\n                  </label>\r\n                  <textarea\r\n                    id=\"message\"\r\n                    name=\"message\"\r\n                    value={formData.message}\r\n                    onChange={handleChange}\r\n                    rows={5}\r\n                    className=\"w-full px-4 py-3 border border-secondary-300 dark:border-dark-600 rounded-xl focus:ring-2 focus:ring-primary-500 focus:border-transparent bg-white dark:bg-dark-700 text-dark-900 dark:text-white resize-none transition-colors duration-200\"\r\n                    required\r\n                    disabled={isSubmitting}\r\n                  />\r\n                </div>\r\n                {/* Submit Button */}\r\n                <motion.button\r\n                  type=\"submit\"\r\n                    className={`w-full text-lg py-4 flex items-center justify-center space-x-2 rounded-xl transition-colors duration-200 \r\n                    ${isSubmitting || !isFormValid ? 'bg-primary-400 dark:bg-primary-700 text-white cursor-not-allowed' : 'bg-primary-600 hover:bg-primary-700 text-white'}`}\r\n                  whileHover={{ scale: isSubmitting || !isFormValid ? 1 : 1.02 }}\r\n                  whileTap={{ scale: isSubmitting || !isFormValid ? 1 : 0.98 }}\r\n                  disabled={isSubmitting || !isFormValid}\r\n                >\r\n                  {isSubmitting ? (\r\n                    <>\r\n                      <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n                      <span>전송 중...</span>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <span>메시지 전송</span>\r\n                      <FaPaperPlane />\r\n                    </>\r\n                  )}\r\n                </motion.button>\r\n\r\n                {/* Submit Status Feedback */}\r\n                {submitStatus !== 'idle' && (\r\n                  <motion.div \r\n                    initial={{ opacity: 0, y: 10 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    className={`p-4 rounded-xl text-sm font-medium ${submitStatus === 'success' ? 'bg-green-100 dark:bg-green-900/30 text-green-600 dark:text-green-400' : 'bg-red-100 dark:bg-red-900/30 text-red-600 dark:text-red-400'}`}\r\n                  >\r\n                    <div className=\"flex items-center gap-3 mb-2\">\r\n                      {submitStatus === 'success' ? <FaCheckCircle size={18} /> : <FaExclamationCircle size={18} />}\r\n                      <span>{submitMessage}</span>\r\n                    </div>\r\n                  </motion.div>\r\n                )}\r\n              </form>\r\n            </motion.div>\r\n          </div>\r\n\r\n          {/* Footer */}\r\n          <motion.div\r\n            variants={itemVariants}\r\n            className=\"text-center mt-20 pt-12 border-t border-secondary-200 dark:border-dark-700\"\r\n          >\r\n            <p className=\"text-dark-600 dark:text-dark-400\">\r\n              © 2024 최주영. Made with ❤️ and lots of ☕\r\n            </p>\r\n          </motion.div>\r\n        </motion.div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import React, { useMemo } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { Tooltip } from 'react-tooltip'\r\nimport 'react-tooltip/dist/react-tooltip.css'\r\nimport { useSiteSettings } from '@/hooks/useSiteSettings'\r\nimport { useAuth } from '@/contexts/AuthContext'\r\nimport { useSkills } from '@/hooks/useSkills'\r\nimport { useProjects } from '@/hooks/useProjects'\r\nimport { useBooks } from '@/hooks/useBooks'\r\nimport { useVideoLearnings } from '@/hooks/useVideoLearnings'\r\nimport { useExperiences } from '@/hooks/useExperiences'\r\nimport { useInView } from 'react-intersection-observer'\r\nimport { Link } from 'react-router-dom'\r\nimport { FaChartLine, FaPlus, FaProjectDiagram, FaBook, FaVideo, FaBriefcase } from 'react-icons/fa'\r\nimport DynamicIcon from '@/components/common/DynamicIcon'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { getLocalizedField, getLocalizedSkillName, getLocalizedSkillCategoryTitle } from '@/utils/i18nUtils'\r\n\r\n// =================================================================\r\n// 📌 1. 숙련도 레벨 매핑 (0-100% -> 명칭)\r\n// =================================================================\r\ninterface Proficiency {\r\n  name: string\r\n  color: string // Tailwind CSS 클래스 (배지 배경)\r\n}\r\n\r\nconst getProficiency = (level: number): Proficiency => {\r\n  if (level >= 90) return { name: 'Expert', color: 'bg-red-500' }\r\n  if (level >= 70) return { name: 'Proficient', color: 'bg-green-500' }\r\n  if (level >= 50) return { name: 'Familiar', color: 'bg-yellow-500' }\r\n  return { name: 'Basic', color: 'bg-gray-400' }\r\n}\r\n// =================================================================\r\n\r\nconst Skills: React.FC = () => {\r\n  const { settings: siteSettings } = useSiteSettings()\r\n  const { isAuthenticated } = useAuth()\r\n  const { t, i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  const { skillCategories, loading: isLoading, error } = useSkills()\r\n  \r\n  // 🌟 프로젝트, 서적, 영상, 경력 데이터 가져오기 (스킬 연결 정보 표시용)\r\n  const { projects } = useProjects()\r\n  const { data: books = [] } = useBooks()\r\n  const { data: videoLearnings = [] } = useVideoLearnings()\r\n  const { experiences } = useExperiences()\r\n  \r\n  // 🌟 각 스킬별 연결 개수를 계산 (useMemo로 최적화)\r\n  const skillConnectionCounts = useMemo(() => {\r\n    const counts = new Map<string, { projects: number; learnings: number; videos: number; experiences: number }>()\r\n    \r\n    // 1. 프로젝트에서 스킬 연결 카운트\r\n    projects.forEach(project => {\r\n      ;(project.skillIds || []).forEach((skillIdOrObj: any) => {\r\n        // 🌟 skillId가 객체로 populate된 경우 _id 추출, 문자열이면 그대로 사용\r\n        const skillId = typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj?._id\r\n        if (skillId) {\r\n          const current = counts.get(skillId) || { projects: 0, learnings: 0, videos: 0, experiences: 0 }\r\n          counts.set(skillId, { ...current, projects: current.projects + 1 })\r\n        }\r\n      })\r\n    })\r\n    \r\n    // 2. 서적 자체의 skillIds에서 스킬 연결 카운트\r\n    books.forEach((book: any) => {\r\n      ;(book.skillIds || []).forEach((skillIdOrObj: any) => {\r\n        // 🌟 skillId가 객체로 populate된 경우 _id 추출, 문자열이면 그대로 사용\r\n        const skillId = typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj?._id\r\n        if (skillId) {\r\n          const current = counts.get(skillId) || { projects: 0, learnings: 0, videos: 0, experiences: 0 }\r\n          counts.set(skillId, { ...current, learnings: current.learnings + 1 })\r\n        }\r\n      })\r\n    })\r\n    \r\n    // 3. 서적의 학습 내용에서 스킬 연결 카운트\r\n    books.forEach((book: any) => {\r\n      (book.learnings || []).forEach((learning: any) => {\r\n        ;(learning.skillIds || []).forEach((skillIdOrObj: any) => {\r\n          // 🌟 skillId가 객체로 populate된 경우 _id 추출, 문자열이면 그대로 사용\r\n          const skillId = typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj?._id\r\n          if (skillId) {\r\n            const current = counts.get(skillId) || { projects: 0, learnings: 0, videos: 0, experiences: 0 }\r\n            counts.set(skillId, { ...current, learnings: current.learnings + 1 })\r\n          }\r\n        })\r\n      })\r\n    })\r\n    \r\n    // 4. 영상 학습에서 스킬 연결 카운트\r\n    videoLearnings.forEach((video: any) => {\r\n      ;(video.skillIds || []).forEach((skillIdOrObj: any) => {\r\n        // 🌟 skillId가 객체로 populate된 경우 _id 추출, 문자열이면 그대로 사용\r\n        const skillId = typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj._id\r\n        if (skillId) {\r\n          const current = counts.get(skillId) || { projects: 0, learnings: 0, videos: 0, experiences: 0 }\r\n          counts.set(skillId, { ...current, videos: current.videos + 1 })\r\n        }\r\n      })\r\n    })\r\n    \r\n    // 5. 경력에서 스킬 연결 카운트\r\n    experiences.forEach((experience: any) => {\r\n      ;(experience.skillIds || []).forEach((skillIdOrObj: any) => {\r\n        // 🌟 skillId가 객체로 populate된 경우 _id 추출, 문자열이면 그대로 사용\r\n        const skillId = typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj?._id\r\n        if (skillId) {\r\n          const current = counts.get(skillId) || { projects: 0, learnings: 0, videos: 0, experiences: 0 }\r\n          counts.set(skillId, { ...current, experiences: current.experiences + 1 })\r\n        }\r\n      })\r\n    })\r\n    \r\n    return counts\r\n  }, [projects, books, videoLearnings, experiences])\r\n  \r\n  // useInView Hook을 사용하여 ref와 inView 상태를 가져옵니다\r\n  const [ref, inView] = useInView({\r\n    triggerOnce: true,\r\n    threshold: 0.1, // 뷰포트의 10%가 보이면 애니메이션 시작\r\n  })\r\n\r\n  // 컨테이너: 자식 요소 순차 등장\r\n  const containerVariants = {\r\n    hidden: {},\r\n    visible: {\r\n      transition: {\r\n        staggerChildren: 0.15,\r\n        delayChildren: 0.3, // 전체 컨테이너 등장 후 스킬 카테고리가 딜레이 후 시작\r\n      },\r\n    },\r\n  }\r\n\r\n  // 카테고리 박스: 위에서 아래로 등장\r\n  const itemVariants = {\r\n    hidden: { opacity: 0, y: 30 },\r\n    visible: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        duration: 0.6,\r\n        ease: 'easeOut',\r\n      },\r\n    },\r\n  }\r\n  \r\n  // 스킬 아이템: 스케일 변형으로 더 역동적으로\r\n  const skillItemVariants = {\r\n    hidden: { opacity: 0, scale: 0.9 },\r\n    visible: {\r\n      opacity: 1,\r\n      scale: 1,\r\n      transition: {\r\n        duration: 0.4,\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    // 배경색/패딩 클래스명 통일 및 가독성 향상\r\n    <section className=\"section-padding bg-white dark:bg-dark-800 min-h-screen\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        \r\n        {/* 전체 컨테이너에 애니메이션 ref와 variants 적용 */}\r\n        <motion.div\r\n          ref={ref}\r\n          initial=\"hidden\"\r\n          animate={inView ? 'visible' : 'hidden'}\r\n          variants={containerVariants} // 컨테이너 variants 적용\r\n        >\r\n          {/* 1. 섹션 제목/부제목 */}\r\n          <motion.div variants={itemVariants} className=\"text-center mb-16\">\r\n            <h2 className=\"text-4xl md:text-5xl font-extrabold text-dark-900 dark:text-white mb-4\">\r\n              {getLocalizedField(currentLang, siteSettings?.skillsTitle, siteSettings?.skillsTitleEn, siteSettings?.skillsTitleJa) || '기술 스택 🛠️'}\r\n            </h2>\r\n            <p className=\"text-xl text-dark-600 dark:text-dark-300 max-w-3xl mx-auto mb-8\">\r\n              {getLocalizedField(currentLang, siteSettings?.skillsSubtitle, siteSettings?.skillsSubtitleEn, siteSettings?.skillsSubtitleJa) || '공장자동화 및 데이터 분석 분야에서 쌓아온 실질적인 기술 역량입니다.'}\r\n            </p>\r\n          </motion.div>\r\n\r\n          {/* 2. 기술 편집 버튼 (인증된 경우) */}\r\n          {isAuthenticated && (\r\n            <motion.div variants={itemVariants} className=\"mb-8 flex justify-end\">\r\n              <Link\r\n                to=\"/admin\"\r\n                className=\"inline-flex items-center gap-2 bg-accent-500 hover:bg-accent-600 text-white font-medium px-6 py-3 rounded-lg transition-colors duration-600 shadow-medium hover:shadow-glow\"\r\n              >\r\n                <FaPlus /> 기술 편집\r\n              </Link>\r\n            </motion.div>\r\n          )}\r\n\r\n          {/* 3. 로딩 상태 */}\r\n          {isLoading && (\r\n            <motion.div variants={itemVariants} className=\"text-center py-12\">\r\n              <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\r\n              <p className=\"text-gray-600 dark:text-gray-400\">스킬 데이터를 불러오는 중...</p>\r\n            </motion.div>\r\n          )}\r\n\r\n          {/* 4. 에러 상태 */}\r\n          {error && (\r\n            <motion.div variants={itemVariants} className=\"text-center py-12\">\r\n              <p className=\"text-red-600 dark:text-red-400 mb-4\">{error}</p>\r\n              <button \r\n                onClick={() => window.location.reload()} \r\n                className=\"px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors\"\r\n              >\r\n                다시 시도\r\n              </button>\r\n            </motion.div>\r\n          )}\r\n\r\n          {/* 5. 스킬 카테고리 그리드 - 🌟 아이콘 배지 그리드로 변경 */}\r\n          {!isLoading && !error && (\r\n            <div className=\"grid lg:grid-cols-3 gap-8\">\r\n              {skillCategories.map((category) => {\r\n                // 🌟 카테고리별 동적 색상 (category.color 사용)\r\n                const categoryColor = category.color || '#3B82F6' // 기본값: 파란색\r\n                const categoryBgColor = `${categoryColor}15` // 8% 투명도 (배경용)\r\n\r\n                return (\r\n                  <motion.div\r\n                    key={category._id}\r\n                    variants={itemVariants}\r\n                    className=\"p-8 rounded-2xl shadow-xl hover:shadow-2xl transition-shadow duration-300\"\r\n                    style={{\r\n                      backgroundColor: categoryBgColor,\r\n                      borderLeft: `4px solid ${categoryColor}`, // 왼쪽 강조 보더\r\n                    }}\r\n                  >\r\n                    {/* 🌟 카테고리 제목 - 동적 색상 적용 */}\r\n                    <h3 \r\n                      className=\"text-2xl font-bold mb-6 border-b pb-3\"\r\n                      style={{ \r\n                        color: categoryColor,\r\n                        borderColor: `${categoryColor}40` // 25% 투명도\r\n                      }}\r\n                    >\r\n                      {getLocalizedSkillCategoryTitle(currentLang, category)}\r\n                    </h3>\r\n                    {/* 🎯 변경: 스킬 리스트를 아이콘 배지 그리드로 변경 */}\r\n                    <motion.div \r\n                      className=\"flex flex-wrap gap-3\" // flex-wrap을 사용하여 유연한 그리드 구현\r\n                      initial=\"hidden\"\r\n                      animate={inView ? \"visible\" : \"hidden\"}\r\n                      variants={{\r\n                        visible: { transition: { staggerChildren: 0.07 } } // 더 빠르게 순차 등장\r\n                      }}\r\n                    >\r\n                      {category.skills?.map((skill) => {\r\n                        const proficiency = getProficiency(skill.level)\r\n                        \r\n                        // 🌟 스킬 연결 정보 가져오기\r\n                        const connectionInfo = skillConnectionCounts.get(skill._id!) || { projects: 0, learnings: 0, videos: 0, experiences: 0 }\r\n                        const hasConnections = connectionInfo.projects > 0 || connectionInfo.learnings > 0 || connectionInfo.videos > 0 || connectionInfo.experiences > 0\r\n                        \r\n                        // 🌟 스킬별 동적 배경 및 텍스트 색상 (skill.color 사용)\r\n                        const skillColor = skill.color || '#3B82F6' // 기본값: 파란색\r\n                        const bgColor = `${skillColor}26` // 15% 투명도 (26은 16진수로 약 15%)\r\n\r\n                        // 🌟 스킬 배지 UI 컴포넌트\r\n                        const SkillBadge = (\r\n                          <motion.div \r\n                            variants={skillItemVariants}\r\n                            data-tooltip-id={`skill-tooltip-${skill._id}`}\r\n                            className=\"flex items-center gap-2 p-3 rounded-xl font-medium transition-all duration-300 hover:scale-[1.05] hover:shadow-md text-white\"\r\n                            style={{\r\n                              backgroundColor: bgColor,\r\n                              cursor: 'default', // 💡 [수정] 클릭 기능 비활성화로 항상 default\r\n                              // cursor: connectionInfo.projects > 0 ? 'pointer' : 'default',\r\n                            }}\r\n                          >\r\n                            {/* 아이콘 - DynamicIcon 사용 */}\r\n                            <div className=\"text-white\">\r\n                              <DynamicIcon iconName={skill.icon} size={18} />\r\n                            </div>\r\n                            \r\n                            {/* 스킬 이름 */}\r\n                            <span className=\"text-sm text-white\">\r\n                              {getLocalizedSkillName(currentLang, skill)}\r\n                              {/* 💡 연결 개수 표시 */}\r\n                              {hasConnections && (\r\n                                <span className=\"text-xs font-semibold ml-1 opacity-70\">\r\n                                  ({connectionInfo.projects + connectionInfo.learnings})\r\n                                </span>\r\n                              )}\r\n                            </span>\r\n                            \r\n                            {/* 숙련도 배지 */}\r\n                            <span \r\n                              className={`px-2 py-0.5 rounded-full text-xs font-bold text-white ${proficiency.color} shrink-0`}\r\n                            >\r\n                              {proficiency.name}\r\n                            </span>\r\n                            \r\n                            {/* 🌟 리치 툴팁 (HTML 컨텐츠) */}\r\n                            <Tooltip \r\n                              id={`skill-tooltip-${skill._id}`}\r\n                              place=\"top\"\r\n                              className=\"max-w-md z-50\"\r\n                              style={{ \r\n                                backgroundColor: '#1f2937',\r\n                                color: '#fff',\r\n                                borderRadius: '0.75rem',\r\n                                padding: '1rem',\r\n                                fontSize: '0.875rem',\r\n                                boxShadow: '0 20px 25px -5px rgba(0, 0, 0, 0.3)'\r\n                              }}\r\n                            >\r\n                              <div className=\"space-y-2\">\r\n                                {/* 스킬 이름 + 레벨 */}\r\n                                <div className=\"font-bold text-base border-b border-gray-600 pb-2\">\r\n                                  {skill.name} <span className=\"text-xs opacity-75\">({proficiency.name})</span>\r\n                                </div>\r\n                                \r\n                                {/* 스킬 설명 */}\r\n                                {skill.description && (\r\n                                  <div className=\"text-sm opacity-90 py-1\">\r\n                                    {skill.description}\r\n                                  </div>\r\n                                )}\r\n                                \r\n                                {/* 연결된 프로젝트 + 학습 내용 정보 */}\r\n                                {hasConnections && (\r\n                                  <div className=\"mt-3 pt-2 border-t border-gray-600 space-y-2\">\r\n                                    {connectionInfo.projects > 0 && (\r\n                                      <div className=\"flex items-center gap-2 text-blue-300 text-xs\">\r\n                                        <FaProjectDiagram className=\"text-sm\" />\r\n                                        <span className=\"font-semibold\">\r\n                                          연결된 프로젝트: {connectionInfo.projects}개\r\n                                        </span>\r\n                                      </div>\r\n                                    )}\r\n                                    {connectionInfo.learnings > 0 && (\r\n                                      <div className=\"flex items-center gap-2 text-green-300 text-xs\">\r\n                                        <FaBook className=\"text-sm\" />\r\n                                        <span className=\"font-semibold\">\r\n                                          서적 학습: {connectionInfo.learnings}개\r\n                                        </span>\r\n                                      </div>\r\n                                    )}\r\n                                    {connectionInfo.videos > 0 && (\r\n                                      <div className=\"flex items-center gap-2 text-red-300 text-xs\">\r\n                                        <FaVideo className=\"text-sm\" />\r\n                                        <span className=\"font-semibold\">\r\n                                          영상 학습: {connectionInfo.videos}개\r\n                                        </span>\r\n                                      </div>\r\n                                    )}\r\n                                    {connectionInfo.experiences > 0 && (\r\n                                      <div className=\"flex items-center gap-2 text-purple-300 text-xs\">\r\n                                        <FaBriefcase className=\"text-sm\" />\r\n                                        <span className=\"font-semibold\">\r\n                                          경력: {connectionInfo.experiences}개\r\n                                        </span>\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n                                )}\r\n                                \r\n                                {/* 연결 정보 없음 */}\r\n                                {!hasConnections && (\r\n                                  <div className=\"text-xs opacity-60 italic mt-2 pt-2 border-t border-gray-600\">\r\n                                    아직 프로젝트, 서적, 영상, 경력에 연결되지 않은 스킬입니다\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            </Tooltip>\r\n                          </motion.div>\r\n                        )\r\n\r\n                        // 🌟 Link로 감싸서 Projects 페이지로 이동 (프로젝트 연결이 있는 경우)\r\n                        // 💡 [주석 처리] 나중에 프로젝트가 많아지면 활성화 예정\r\n                        // return connectionInfo.projects > 0 ? (\r\n                        //   <Link \r\n                        //     key={skill._id}\r\n                        //     to={`/projects?skillId=${skill._id}`}\r\n                        //     className=\"block\"\r\n                        //     style={{ width: 'fit-content' }}\r\n                        //   >\r\n                        //     {SkillBadge}\r\n                        //   </Link>\r\n                        // ) : (\r\n                        //   <div key={skill._id} style={{ width: 'fit-content' }}>\r\n                        //     {SkillBadge}\r\n                        //   </div>\r\n                        // )\r\n                        \r\n                        // 🔹 임시: 모든 스킬을 클릭 불가능한 div로 표시\r\n                        return (\r\n                          <div key={skill._id} style={{ width: 'fit-content' }}>\r\n                            {SkillBadge}\r\n                          </div>\r\n                        )\r\n                      })}\r\n                    </motion.div>\r\n                  </motion.div>\r\n                )\r\n              })}\r\n            </div>\r\n          )}\r\n\r\n          {/* 6. Learning Goals - 🌟 사이트 설정에서 가져옴 */}\r\n          {siteSettings?.learningGoalsTitle && (\r\n            <motion.div\r\n              variants={itemVariants}\r\n              className=\"p-8 mt-12 bg-primary-600 dark:bg-primary-800 text-white rounded-2xl shadow-xl mx-auto max-w-4xl\"\r\n            >\r\n              <h3 className=\"text-2xl font-bold mb-4 flex items-center gap-2 text-secondary-300\">\r\n                <FaChartLine size={24} /> {getLocalizedField(currentLang, siteSettings.learningGoalsTitle, siteSettings.learningGoalsTitleEn, siteSettings.learningGoalsTitleJa)}\r\n              </h3>\r\n              <p className=\"text-white/90 mb-6 text-lg\">\r\n                {getLocalizedField(currentLang, siteSettings.learningGoalsDescription, siteSettings.learningGoalsDescriptionEn, siteSettings.learningGoalsDescriptionJa)}\r\n              </p>\r\n              <div className=\"flex flex-wrap gap-3\">\r\n                {(siteSettings.learningGoalsList || []).map((tech: string) => (\r\n                  <span\r\n                    key={tech}\r\n                    className=\"px-4 py-2 bg-white/10 text-white rounded-full text-sm font-semibold transition-transform hover:scale-105\"\r\n                  >\r\n                    {tech}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </motion.div>\r\n          )}\r\n        </motion.div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Skills\r\n","import React from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { FaSave } from 'react-icons/fa'\r\nimport { SiteSettingsEditorProps } from './settings/types'\r\nimport { useSettingsForm } from './settings/hooks/useSettingsForm'\r\nimport { getFilteredSections, getActiveSectionTitle, getActiveSectionDescription } from './settings/utils'\r\nimport SettingsSection from './settings/components/SettingsSection'\r\n\r\n/**\r\n * SiteSettingsEditor - Main orchestrator component\r\n * Manages the site settings editing interface with categorized sections\r\n */\r\nconst SiteSettingsEditor: React.FC<SiteSettingsEditorProps> = ({ activeSection = null }) => {\r\n  const {\r\n    settings,\r\n    loading,\r\n    saving,\r\n    message,\r\n    expandedSections,\r\n    currentLang,\r\n    setCurrentLang,\r\n    handleChange,\r\n    handleSave,\r\n    toggleSection,\r\n    setExpandedSections\r\n  } = useSettingsForm(activeSection)\r\n\r\n  // Loading state\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center py-20\">\r\n        <div className=\"w-16 h-16 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mb-4\"></div>\r\n        <p className=\"text-gray-600 dark:text-gray-400\">설정을 불러오는 중...</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const sections = getFilteredSections(activeSection)\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Header with action buttons */}\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n            {getActiveSectionTitle(activeSection)}\r\n          </h2>\r\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\r\n            {getActiveSectionDescription(activeSection)}\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center gap-3\">\r\n          <button\r\n            onClick={() => {\r\n              const allSectionTitles = sections.map(s => s.title)\r\n              setExpandedSections(new Set(allSectionTitles))\r\n            }}\r\n            className=\"flex items-center gap-2 bg-gray-500 hover:bg-gray-600 text-white font-medium px-4 py-2 rounded-lg transition-colors text-sm\"\r\n          >\r\n            모두 펼치기\r\n          </button>\r\n          <button\r\n            onClick={() => setExpandedSections(new Set())}\r\n            className=\"flex items-center gap-2 bg-gray-500 hover:bg-gray-600 text-white font-medium px-4 py-2 rounded-lg transition-colors text-sm\"\r\n          >\r\n            모두 접기\r\n          </button>\r\n          <button\r\n            onClick={handleSave}\r\n            disabled={saving}\r\n            className=\"flex items-center gap-2 bg-blue-600 hover:bg-blue-700 text-white font-medium px-6 py-3 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            <FaSave />\r\n            {saving ? '저장 중...' : '모두 저장'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Success/Error message */}\r\n      {message && (\r\n        <motion.div\r\n          initial={{ opacity: 0, y: -10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          exit={{ opacity: 0 }}\r\n          transition={{ duration: 0.3 }}\r\n          className={`p-4 rounded-lg shadow-md ${\r\n            message.type === 'success'\r\n              ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-300 border border-green-400 dark:border-green-700'\r\n              : 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-300 border border-red-400 dark:border-red-700'\r\n          }`}\r\n        >\r\n          {message.text}\r\n        </motion.div>\r\n      )}\r\n\r\n      {/* Settings sections */}\r\n      {sections.map((section) => (\r\n        <SettingsSection\r\n          key={section.title}\r\n          section={section}\r\n          isExpanded={expandedSections.has(section.title)}\r\n          onToggle={() => toggleSection(section.title)}\r\n          currentLang={currentLang}\r\n          settings={settings}\r\n          onChange={handleChange}\r\n          setCurrentLang={setCurrentLang}\r\n        />\r\n      ))}\r\n\r\n      {/* Bottom save button (hidden for quick menu) */}\r\n      {!activeSection && (\r\n        <div className=\"py-4\">\r\n          <button\r\n            onClick={handleSave}\r\n            disabled={saving}\r\n            className=\"w-full flex items-center justify-center gap-2 bg-blue-600 hover:bg-blue-700 text-white font-medium px-8 py-4 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            <FaSave size={20} />\r\n            {saving ? '설정 저장 중...' : '모두 저장하고 적용'}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SiteSettingsEditor\r\n\r\n","import React, { useState, useEffect, useMemo } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useAuth } from '@/contexts/AuthContext'\r\nimport { FaSignOutAlt } from 'react-icons/fa'\r\n\r\n// 분리된 컴포넌트들 import\r\nimport DashboardHome from '@/components/admin/DashboardHome'\r\nimport BookManager from '@/components/admin/BookManager'\r\nimport VideoLearningManager from '@/components/admin/VideoLearningManager'\r\nimport VideoPlaylistManager from '@/components/admin/VideoPlaylistManager'\r\nimport ExperienceManager from '@/components/admin/ExperienceManager'\r\nimport ProjectManager from '@/components/admin/ProjectManager'\r\nimport MessageManager from '@/components/admin/MessageManager'\r\nimport SkillsManager from '@/components/admin/SkillsManager'\r\nimport CategoryManager from '@/components/admin/CategoryManager'\r\nimport NotificationDropdown from '@/components/common/NotificationDropdown'\r\nimport RightSidebar from '@/components/common/RightSidebar'\r\nimport SiteSettingsEditor from '@/admin/SiteSettingsEditor'\r\nimport ToastContainer from '@/components/common/Toast'\r\nimport useDataCounts from '@/hooks/useDataCounts'\r\n\r\n// 새로운 리팩토링된 훅 import\r\nimport { useAdminSidebarState, AdminTab } from '@/hooks/useAdminSidebarState'\r\nimport { useToastHelpers } from '@/hooks/useToast'\r\nimport { useMessages } from '@/hooks/useMessageManagerData'\r\n\r\nconst AdminDashboard: React.FC = () => {\r\n  const { isAuthenticated, logout, isLoading } = useAuth()\r\n  const location = useLocation()\r\n  const [showNotifications, setShowNotifications] = useState(false)\r\n  \r\n  // Toast 시스템 추가\r\n  const { toasts, hideToast } = useToastHelpers()\r\n  \r\n  // 새로운 리팩토링된 상태 관리 훅 사용\r\n  const {\r\n    activeTab,\r\n    setActiveTab,\r\n    activeSettingsSection,\r\n    setActiveSettingsSection,\r\n    bookFilters,\r\n    experienceFilters,\r\n    projectFilters,\r\n  } = useAdminSidebarState()\r\n  \r\n  // 데이터 카운트 훅 사용\r\n  const { counts, refreshCounts } = useDataCounts()\r\n  \r\n  // 🔔 메시지 데이터를 가져와서 알림으로 변환\r\n  const { data: messages = [] } = useMessages()\r\n  \r\n  // 🔔 읽지 않은 메시지를 알림 형태로 변환\r\n  const notifications = useMemo(() => {\r\n    return messages\r\n      .filter(msg => !msg.isRead)\r\n      .map(msg => ({\r\n        id: msg._id || '',\r\n        message: `${msg.name}님으로부터 새로운 메시지: ${msg.subject}`,\r\n        read: false,\r\n        createdAt: msg.createdAt || new Date().toISOString()\r\n      }))\r\n      .sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()) // 최신순 정렬\r\n  }, [messages])\r\n\r\n  // 🌟 URL state를 통해 전달된 탭과 수정 ID 처리\r\n  useEffect(() => {\r\n    const state = location.state as { tab?: AdminTab; editId?: string } | null\r\n    if (state?.tab) {\r\n      setActiveTab(state.tab)\r\n    }\r\n    // editId는 각 Manager 컴포넌트에서 처리\r\n  }, [location.state, setActiveTab])\r\n\r\n  // 인증되지 않은 경우 로그인 페이지로 리다이렉트\r\n  if (!isAuthenticated && !isLoading) {\r\n    return <div>로그인이 필요합니다.</div>\r\n  }\r\n\r\n  // 로딩 중일 때\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600 dark:text-gray-400\">로딩 중...</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // 탭별 컴포넌트 렌더링 함수\r\n  const renderActiveTabContent = () => {\r\n    // 🌟 location.state에서 editId 추출\r\n    const state = location.state as { tab?: AdminTab; editId?: string } | null\r\n    const editId = state?.editId\r\n    \r\n    switch (activeTab) {\r\n      case 'books':\r\n        return <BookManager \r\n          bookFilter={bookFilters.state.filter}\r\n          bookSearchTerm={bookFilters.state.searchTerm}\r\n          selectedBookCategory={bookFilters.state.selectedCategory}\r\n          initialEditId={editId}  // 🌟 수정할 서적 ID 전달\r\n        />\r\n      case 'videoLearnings':\r\n        return <VideoLearningManager initialEditId={editId} />  // 🌟 수정할 영상 ID 전달\r\n      case 'videoPlaylists':\r\n        return <VideoPlaylistManager />\r\n      case 'experiences':\r\n        return <ExperienceManager \r\n          experienceFilter={experienceFilters.state.filter}\r\n          experienceSearchTerm={experienceFilters.state.searchTerm}\r\n          selectedExperienceCompany={experienceFilters.state.selectedCompany}\r\n          selectedExperienceYear={experienceFilters.state.selectedYear}\r\n        />\r\n      case 'projects':\r\n        return <ProjectManager \r\n          projectFilter={projectFilters.state.filter}\r\n          projectSearchTerm={projectFilters.state.searchTerm}\r\n          selectedProjectCategory={projectFilters.state.selectedCategory}\r\n        />\r\n      case 'messages':\r\n        return <MessageManager />\r\n      case 'skills':\r\n        return <SkillsManager />\r\n      case 'categories':\r\n        return <CategoryManager />\r\n      default: // 'settings'\r\n        // activeSettingsSection이 있으면 SiteSettingsEditor를, 없으면 DashboardHome을 표시\r\n        return activeSettingsSection \r\n          ? <SiteSettingsEditor activeSection={activeSettingsSection} />\r\n          : <DashboardHome counts={counts} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* Toast 알림 시스템 */}\r\n      <ToastContainer toasts={toasts} onClose={hideToast} />\r\n      \r\n      <div className=\"bg-gray-50 dark:bg-gray-900 min-h-screen text-gray-900 dark:text-white\">\r\n        <div className=\"flex\">\r\n        {/* 메인 컨텐츠 영역 */}\r\n        <div className=\"flex-1 p-8\">\r\n          <div className=\"max-w-7xl mx-auto\">\r\n            <div className=\"flex gap-8\">\r\n              {/* 메인 콘텐츠 영역 */}\r\n              <div className=\"flex-1\">\r\n                {/* Header */}\r\n                <div className=\"flex items-center justify-between mb-8\">\r\n                  <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white\">\r\n                    관리자 대시보드\r\n                  </h1>\r\n                  <div className=\"flex items-center gap-4\">\r\n                    {/* 알림 드롭다운 - 읽지 않은 메시지 표시 */}\r\n                    <NotificationDropdown\r\n                      notifications={notifications}\r\n                      showNotifications={showNotifications}\r\n                      onToggle={() => setShowNotifications(!showNotifications)}\r\n                      onNotificationClick={() => {\r\n                        setActiveTab('messages')\r\n                        setShowNotifications(false)\r\n                      }}\r\n                    />\r\n                    \r\n                    {/* 로그아웃 버튼 */}\r\n                    <button\r\n                      onClick={logout}\r\n                      className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors flex items-center gap-2\"\r\n                    >\r\n                      <FaSignOutAlt />\r\n                      로그아웃\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 탭 콘텐츠 */}\r\n                {renderActiveTabContent()}\r\n              </div>\r\n\r\n              {/* 리팩토링된 RightSidebar 컴포넌트 사용 */}\r\n              <RightSidebar\r\n                activeTab={activeTab}\r\n                setActiveTab={setActiveTab}\r\n                activeSettingsSection={activeSettingsSection}\r\n                setActiveSettingsSection={setActiveSettingsSection}\r\n                counts={counts}\r\n                refreshCounts={refreshCounts}\r\n                bookFilters={bookFilters}\r\n                experienceFilters={experienceFilters}\r\n                projectFilters={projectFilters}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminDashboard\r\n"],"names":["useEffect","hash","window","location","slice","SECTION_IDS","includes","setTimeout","element","document","getElementById","scrollIntoView","behavior","jsx","role","children","jsxRuntimeExports","id","className","Hero","settings","siteSettings","loading","settingsLoading","useSiteSettings","t","i18n","useTranslation","currentLang","language","data","books","isLoading","useBooks","categories","categoriesLoading","useCategories","useLocation","ref","inView","useInView","triggerOnce","threshold","filter","setFilter","useState","isAuthenticated","useAuth","scrollPosition","_a","state","scrollTo","history","replaceState","title","filteredBooks","useMemo","safeBooks","book","categoryIds","length","some","catIdOrObj","_id","category","toLowerCase","isPageLoading","containerVariants","hidden","opacity","visible","transition","staggerChildren","itemVariants","y","duration","ease","jsxs","motion","div","variants","initial","animate","getLocalizedField","booksTitle","booksTitleEn","booksTitleJa","booksSubtitle","booksSubtitleEn","booksSubtitleJa","Link","to","FaPlus","onClick","map","getLocalizedCategoryName","FaBook","cat","find","c","whileHover","scrollY","BookCoverImage","src","coverImage","alt","catId","categoryObj","FaStar","rating","titleEn","titleJa","author","authorEn","authorJa","FaCalendar","formatDate","readDate","chapters","totalChapterLearnings","reduce","sum","chapter","learnings","ScrollToTopButton","videoLearnings","useVideoLearnings","playlists","playlistsLoading","useVideoPlaylists","activeTab","setActiveTab","previousTab","filteredVideos","safeVideos","video","filteredPlaylists","safePlaylists","playlist","FaVideo","count","v","name","p","videoId","videoUrl","extractYouTubeId","thumbnailUrl","getYouTubeThumbnail","decoding","width","height","Array","from","_","i","purpose","watchDate","skillIds","FaCubes","projects","error","useProjects","searchParams","setSearchParams","useSearchParams","skillIdFromUrl","get","filteredProjects","project","categoryMatch","skillMatch","handleCategoryFilter","categoryId","delete","replace","getStatusColor","status","getStatusText","projectsTitle","projectsTitleEn","projectsTitleJa","projectsSubtitle","projectsSubtitleEn","projectsSubtitleJa","button","whileTap","scale","layout","type","stiffness","damping","AnimatePresence","exit","FaLaptopCode","ProjectCard","projectsUpdateTitle","projectsUpdateDescription","projectsUpdateTechList","tech","experiences","experiencesLoading","useExperiences","reload","experienceTitle","experienceTitleEn","experienceTitleJa","experienceSubtitle","experienceSubtitleEn","experienceSubtitleJa","exp","index","ExperienceItem","isLast","iconMap","coffee","FaCoffee","cog","FaCog","chart","FaChartLine","robot","FaRobot","graduation","FaGraduationCap","shield","FaShieldAlt","validIconKeys","Object","keys","defaultJourney","icon","company","period","skills","description","order","journey","setJourney","dataLoading","setDataLoading","fetchJourneyData","useCallback","async","response","experiencesAPI","getAll","mappedJourney","item","iconKey","sort","a","b","aboutTitle","aboutTitleEn","aboutTitleJa","aboutSubtitle","aboutSubtitleEn","aboutSubtitleJa","aboutCardTitle","aboutCardTitleEn","aboutCardTitleJa","aboutDescription1","aboutDescription1En","aboutDescription1Ja","aboutDescription2","aboutDescription2En","aboutDescription2Ja","mainSkills","aboutJourneyTitle","aboutJourneyTitleEn","aboutJourneyTitleJa","step","IconComponent","size","skill","idx","formData","setFormData","email","subject","message","isSubmitting","setIsSubmitting","submitStatus","setSubmitStatus","submitMessage","setSubmitMessage","handleChange","e","target","value","contactInfo","FaEnvelope","href","FaPhone","phone","FaMapMarkerAlt","isFormValid","contactTitle","contactTitleEn","contactTitleJa","contactSubtitle","contactSubtitleEn","contactSubtitleJa","info","onSubmit","preventDefault","contactAPI","sendEmail","htmlFor","onChange","required","disabled","rows","Fragment","FaPaperPlane","FaCheckCircle","FaExclamationCircle","skillCategories","useSkills","skillConnectionCounts","counts","Map","forEach","skillIdOrObj","skillId","current","videos","set","learning","experience","skillItemVariants","delayChildren","skillsTitle","skillsTitleEn","skillsTitleJa","skillsSubtitle","skillsSubtitleEn","skillsSubtitleJa","categoryColor","color","categoryBgColor","style","backgroundColor","borderLeft","borderColor","getLocalizedSkillCategoryTitle","proficiency","level","connectionInfo","hasConnections","bgColor","SkillBadge","cursor","DynamicIcon","iconName","getLocalizedSkillName","Tooltip","place","borderRadius","padding","fontSize","boxShadow","FaProjectDiagram","FaBriefcase","learningGoalsTitle","learningGoalsTitleEn","learningGoalsTitleJa","learningGoalsDescription","learningGoalsDescriptionEn","learningGoalsDescriptionJa","learningGoalsList","SiteSettingsEditor","activeSection","saving","expandedSections","setCurrentLang","handleSave","toggleSection","setExpandedSections","useSettingsForm","sections","getFilteredSections","getActiveSectionTitle","getActiveSectionDescription","allSectionTitles","s","Set","FaSave","text","section","SettingsSection","isExpanded","has","onToggle","logout","showNotifications","setShowNotifications","toasts","hideToast","useToastHelpers","activeSettingsSection","setActiveSettingsSection","bookFilters","experienceFilters","projectFilters","useAdminSidebarState","refreshCounts","useDataCounts","messages","useMessages","notifications","msg","isRead","read","createdAt","Date","toISOString","getTime","tab","ToastContainer","onClose","NotificationDropdown","onNotificationClick","FaSignOutAlt","editId","BookManager","bookFilter","bookSearchTerm","searchTerm","selectedBookCategory","selectedCategory","initialEditId","VideoLearningManager","VideoPlaylistManager","ExperienceManager","experienceFilter","experienceSearchTerm","selectedExperienceCompany","selectedCompany","selectedExperienceYear","selectedYear","ProjectManager","projectFilter","projectSearchTerm","selectedProjectCategory","MessageManager","SkillsManager","CategoryManager","DashboardHome","renderActiveTabContent","RightSidebar"],"mappings":"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"}