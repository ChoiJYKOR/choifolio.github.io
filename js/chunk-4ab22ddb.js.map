{"version":3,"file":"chunk-4ab22ddb.js","sources":["../../src/services/api.ts","../../src/contexts/AuthContext.tsx","../../src/utils/dateUtils.ts","../../src/utils/videoUtils.tsx","../../src/components/admin/DashboardHome.tsx","../../src/components/admin/BookManager.tsx","../../src/components/admin/VideoLearningManager.tsx","../../src/utils/categoryUtils.ts","../../src/components/admin/VideoPlaylistManager.tsx","../../src/components/admin/ExperienceManager.tsx","../../src/components/admin/ProjectManager.tsx","../../src/components/admin/MessageDetail.tsx","../../src/components/admin/MessageManager.tsx","../../src/components/admin/SortableCategoryCard.tsx","../../src/components/admin/SortableSkillItem.tsx","../../src/components/admin/SkillsManager.tsx","../../src/components/admin/CategoryManager.tsx","../../src/admin/settings/constants.ts","../../src/admin/settings/utils.ts","../../src/admin/settings/hooks/useSettingsForm.ts","../../src/admin/settings/components/SettingField.tsx","../../src/admin/settings/components/SettingsSection.tsx","../../src/admin/SiteSettingsEditor.tsx","../../src/pages/admin/Dashboard.tsx"],"sourcesContent":["import axios from 'axios'\r\nimport {\r\n  // 인증 관련 타입\r\n  LoginRequest,\r\n  LoginResponse,\r\n  VerifyResponse,\r\n  LogoutResponse,\r\n  // Book 관련 타입\r\n  Book,\r\n  BookFormData,\r\n  BookUpdateData,\r\n  LearningFormData,\r\n  // Category 관련 타입\r\n  Category,\r\n  CategoryFormData,\r\n  CategoryUsage,\r\n  // VideoLearning 관련 타입\r\n  VideoLearning,\r\n  VideoLearningFormData,\r\n  // VideoPlaylist 관련 타입\r\n  VideoPlaylist,\r\n  VideoPlaylistFormData,\r\n  PlaylistVideo,\r\n  PlaylistVideoFormData,\r\n  // Experience 관련 타입\r\n  Experience,\r\n  ExperienceFormData,\r\n  ExperienceUpdateData,\r\n  // Project 관련 타입\r\n  Project,\r\n  ProjectFormData,\r\n  ProjectUpdateData,\r\n  // Skill 관련 타입\r\n  Skill,\r\n  SkillCategory,\r\n  SkillFormData,\r\n  SkillCategoryFormData,\r\n  // Settings 관련 타입\r\n  SiteSettings,\r\n  SettingsUpdateData,\r\n  // Contact 관련 타입\r\n  ContactFormData,\r\n  ContactResponse,\r\n} from '../types'\r\n\r\n// 환경 변수에서 API URL 가져오기 (개발/운영 환경 대응)\r\n// Vite에서는 import.meta.env를 사용\r\n// 개발 환경에서는 Vite 프록시 사용 (/api), 프로덕션에서는 직접 연결\r\nconst API_BASE_URL = (import.meta.env.VITE_API_URL as string) || \r\n  (import.meta.env.DEV ? '/api' : 'https://choifolio-github-io-backend.onrender.com/api')\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  withCredentials: true, // HttpOnly 쿠키를 위한 credentials 포함\r\n  timeout: 30000, // 30초 타임아웃\r\n})\r\n\r\n// HttpOnly 쿠키 사용으로 토큰 인터셉터 제거\r\n// 브라우저가 자동으로 쿠키를 포함하여 전송\r\n\r\n// Auth API - 타입 안정성 강화\r\nexport const authAPI = {\r\n  login: (username: string, password: string) =>\r\n    api.post<LoginResponse>('/auth/login', { username, password } as LoginRequest),\r\n  verify: () => api.post<VerifyResponse>('/auth/verify'), // POST 메서드로 수정 (백엔드와 일치)\r\n  logout: () => api.post<LogoutResponse>('/auth/logout'),\r\n}\r\n\r\n// Books API - 타입 안정성 강화 (개선된 UpdateData 타입 사용)\r\nexport const booksAPI = {\r\n  getAll: () => api.get<{ data: Book[] }>('/books'),\r\n  getById: (id: string) => api.get<Book>(`/books/${id}`),\r\n  create: (data: BookFormData) => api.post<Book>('/books', data),\r\n  update: (id: string, data: BookUpdateData) => api.put<Book>(`/books/${id}`, data),\r\n  delete: (id: string) => api.delete(`/books/${id}`),\r\n}\r\n\r\n// Chapters API - 목차 관리 (새로 분리)\r\nexport const chaptersAPI = {\r\n  getByBook: (bookId: string) => api.get(`/books/${bookId}/chapters`),\r\n  create: (bookId: string, data: { title: string; order: number }) => \r\n    api.post(`/books/${bookId}/chapters`, data),\r\n  update: (bookId: string, chapterId: string, data: { title: string; order: number }) => \r\n    api.put(`/books/${bookId}/chapters/${chapterId}`, data),\r\n  delete: (bookId: string, chapterId: string) => \r\n    api.delete(`/books/${bookId}/chapters/${chapterId}`),\r\n  reorder: (bookId: string, chapterIds: string[]) => \r\n    api.put(`/books/${bookId}/chapters/reorder`, { chapterIds }),\r\n}\r\n\r\n// Learnings API - 학습 내용 관리 (새로 분리)\r\nexport const learningsAPI = {\r\n  // 서적 직접 학습 내용\r\n  getByBook: (bookId: string) => api.get(`/books/${bookId}/learnings`),\r\n  createForBook: (bookId: string, data: LearningFormData) => \r\n    api.post(`/books/${bookId}/learnings`, data),\r\n  updateForBook: (bookId: string, learningId: string, data: LearningFormData) => \r\n    api.put(`/books/${bookId}/learnings/${learningId}`, data),\r\n  deleteForBook: (bookId: string, learningId: string) => \r\n    api.delete(`/books/${bookId}/learnings/${learningId}`),\r\n  \r\n  // 목차별 학습 내용\r\n  getByChapter: (bookId: string, chapterId: string) => \r\n    api.get(`/books/${bookId}/chapters/${chapterId}/learnings`),\r\n  createForChapter: (bookId: string, chapterId: string, data: LearningFormData) => \r\n    api.post(`/books/${bookId}/chapters/${chapterId}/learnings`, data),\r\n  updateForChapter: (bookId: string, chapterId: string, learningId: string, data: LearningFormData) => \r\n    api.put(`/books/${bookId}/chapters/${chapterId}/learnings/${learningId}`, data),\r\n  deleteForChapter: (bookId: string, chapterId: string, learningId: string) => \r\n    api.delete(`/books/${bookId}/chapters/${chapterId}/learnings/${learningId}`),\r\n  \r\n  // 🌟 스킬 연결/해제 (skillIds 업데이트)\r\n  updateSkills: (bookId: string, learningId: string, skillIds: string[]) => \r\n    api.patch(`/books/${bookId}/learnings/${learningId}/skills`, { skillIds }),\r\n}\r\n\r\n// Experiences API - 타입 안정성 강화 (개선된 UpdateData 타입 사용)\r\nexport const experiencesAPI = {\r\n  getAll: () => api.get<{ data: Experience[] }>('/experiences'),\r\n  getById: (id: string) => api.get<Experience>(`/experiences/${id}`),\r\n  create: (data: ExperienceFormData) => api.post<Experience>('/experiences', data),\r\n  update: (id: string, data: ExperienceUpdateData) => api.put<Experience>(`/experiences/${id}`, data),\r\n  delete: (id: string) => api.delete(`/experiences/${id}`),\r\n}\r\n\r\n// Projects API - 타입 안정성 강화 및 getById 추가 (개선된 UpdateData 타입 사용)\r\nexport const projectsAPI = {\r\n  getAll: () => api.get<{ data: Project[] }>('/projects'),\r\n  getById: (id: string) => api.get<Project>(`/projects/${id}`), // 누락된 엔드포인트 추가\r\n  create: (data: ProjectFormData) => api.post<Project>('/projects', data),\r\n  update: (id: string, data: ProjectUpdateData) => api.put<Project>(`/projects/${id}`, data),\r\n  delete: (id: string) => api.delete(`/projects/${id}`),\r\n}\r\n\r\n// Settings API - 타입 안정성 강화 (개선된 UpdateData 타입 사용)\r\nexport const settingsAPI = {\r\n  get: () => api.get<SiteSettings>('/settings'),\r\n  update: (data: SettingsUpdateData) => api.put<SiteSettings>('/settings', data),\r\n}\r\n\r\n// Contact API - 타입 안정성 강화\r\nexport const contactAPI = {\r\n  sendEmail: (data: ContactFormData) => api.post<ContactResponse>('/contact', data),\r\n}\r\n\r\n// Messages API - 관리자용 연락처 메시지 관리\r\nexport const messagesAPI = {\r\n  getAll: () => api.get('/admin/messages'),\r\n  getById: (id: string) => api.get(`/admin/messages/${id}`),\r\n  markAsRead: (id: string) => api.put(`/admin/messages/${id}/read`),\r\n  delete: (id: string) => api.delete(`/admin/messages/${id}`),\r\n}\r\n\r\n// Skills API - 스킬 관리\r\nexport const skillsAPI = {\r\n  // 카테고리 관리\r\n  getCategories: () => api.get<{ data: SkillCategory[] }>('/skill-categories'),\r\n  createCategory: (data: SkillCategoryFormData) => api.post<{ data: SkillCategory }>('/skill-categories', data),\r\n  updateCategory: (id: string, data: SkillCategoryFormData) => api.put<{ data: SkillCategory }>(`/skill-categories/${id}`, data),\r\n  deleteCategory: (id: string) => api.delete(`/skill-categories/${id}`),\r\n  \r\n  // 스킬 관리\r\n  getAll: () => api.get<Skill[]>('/skills'),\r\n  getByCategory: (categoryId: string) => api.get<{ data: Skill[] }>(`/skill-categories/${categoryId}/skills`),\r\n  create: (categoryId: string, data: SkillFormData) => api.post<{ data: Skill }>(`/skill-categories/${categoryId}/skills`, data),\r\n  update: (id: string, data: SkillFormData) => api.put<{ data: Skill }>(`/skills/${id}`, data),\r\n  delete: (id: string) => api.delete(`/skills/${id}`),\r\n  \r\n    // 모든 데이터 삭제\r\n    clearAllData: () => api.post('/skills/clear-all-data'),\r\n  \r\n  // 중복 데이터 정리\r\n  cleanupDuplicates: () => api.post('/skills/cleanup-duplicates'),\r\n  \r\n  // 순서 업데이트\r\n  reorderSkills: (skillIds: string[]) => api.put('/skills/reorder', { skillIds }),\r\n  reorderCategories: (categoryIds: string[]) => api.put('/skill-categories/reorder', { categoryIds }),\r\n}\r\n\r\n// =================================================================\r\n// 📂 Category API (통합 카테고리 관리)\r\n// =================================================================\r\n\r\nexport const categoriesAPI = {\r\n  getAll: () => api.get<Category[]>('/categories'),\r\n  getById: (id: string) => api.get<Category>(`/categories/${id}`),\r\n  getUsage: (id: string) => api.get<CategoryUsage>(`/categories/${id}/usage`),\r\n  create: (data: CategoryFormData) => api.post<Category>('/categories', data),\r\n  update: (id: string, data: CategoryFormData) => api.put<Category>(`/categories/${id}`, data),\r\n  delete: (id: string) => api.delete(`/categories/${id}`),\r\n}\r\n\r\n// =================================================================\r\n// 📹 VideoLearning API (영상 학습 기록)\r\n// =================================================================\r\n\r\nexport const videoLearningsAPI = {\r\n  getAll: () => api.get<{ data: VideoLearning[] }>('/video-learnings'),\r\n  getById: (id: string) => api.get<VideoLearning>(`/video-learnings/${id}`),\r\n  create: (data: VideoLearningFormData) => api.post<VideoLearning>('/video-learnings', data),\r\n  update: (id: string, data: VideoLearningFormData) => api.put<VideoLearning>(`/video-learnings/${id}`, data),\r\n  delete: (id: string) => api.delete(`/video-learnings/${id}`),\r\n}\r\n\r\n// 🌟 재생 목록 API\r\nexport const videoPlaylistsAPI = {\r\n  getAll: () => api.get<{ data: VideoPlaylist[] }>('/video-playlists'),\r\n  getById: (id: string) => api.get<{ data: VideoPlaylist }>(`/video-playlists/${id}`),\r\n  create: (data: VideoPlaylistFormData) => api.post<{ data: VideoPlaylist }>('/video-playlists', data),\r\n  update: (id: string, data: VideoPlaylistFormData) => api.put<{ data: VideoPlaylist }>(`/video-playlists/${id}`, data),\r\n  delete: (id: string) => api.delete(`/video-playlists/${id}`),\r\n}\r\n\r\n// 🌟 재생 목록 내 영상 API\r\nexport const playlistVideosAPI = {\r\n  getByPlaylist: (playlistId: string) => api.get<{ data: PlaylistVideo[] }>(`/playlist-videos?playlistId=${playlistId}`),\r\n  getById: (id: string) => api.get<{ data: PlaylistVideo }>(`/playlist-videos/${id}`),\r\n  create: (data: PlaylistVideoFormData) => api.post<{ data: PlaylistVideo }>('/playlist-videos', data),\r\n  update: (id: string, data: PlaylistVideoFormData) => api.put<{ data: PlaylistVideo }>(`/playlist-videos/${id}`, data),\r\n  delete: (id: string) => api.delete(`/playlist-videos/${id}`),\r\n}\r\n\r\nexport default api","import React, { createContext, useContext, useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { authAPI } from '../services/api';\r\n\r\ninterface User {\r\n  username: string;\r\n  isAdmin: boolean;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  login: (username: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  // token 상태 제거: HttpOnly 쿠키 사용 가정\r\n  const [isLoading, setIsLoading] = useState(false); // 초기 로딩 상태를 false로 설정\r\n\r\n  // useEffect에서 사용자 정보를 로드 (토큰이 쿠키에 있을 경우)\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      try {\r\n        // verify API가 HttpOnly 쿠키를 사용하여 인증하고 사용자 정보를 반환한다고 가정\r\n        const response = await authAPI.verify();\r\n        setUser(response.data.user);\r\n      } catch (error) {\r\n        // 토큰이 없거나 유효하지 않으면 user를 null로 설정\r\n        setUser(null);\r\n      }\r\n    };\r\n    \r\n    // 앱 로드 시 verify API를 호출하여 기존 세션 확인\r\n    loadUser();\r\n  }, []); // 앱 로드 시 한 번만 실행\r\n\r\n  const login = useCallback(async (username: string, password: string) => {\r\n    try {\r\n      setIsLoading(true);\r\n      // 로그인 API 호출: 서버는 성공 시 HttpOnly 쿠키에 토큰을 설정하고 사용자 정보를 반환\r\n      const response = await authAPI.login(username, password);\r\n      setUser(response.data.user);\r\n      setIsLoading(false);\r\n    } catch (error: any) {\r\n      setIsLoading(false);\r\n      // setUser(null); // 로그인 실패 시 user 초기화\r\n      throw new Error(error.response?.data?.message || '로그인에 실패했습니다.');\r\n    }\r\n  }, []);\r\n\r\n  const logout = useCallback(async () => {\r\n    // 로그아웃 API 호출: 서버는 쿠키를 제거\r\n    try {\r\n      await authAPI.logout(); \r\n    } catch (error) {\r\n      // 서버 측 로그아웃 실패 시에도 클라이언트 상태는 초기화\r\n      console.error('서버 로그아웃 오류:', error);\r\n    }\r\n    setUser(null);\r\n  }, []);\r\n\r\n  // Context value를 useMemo로 메모이제이션하여 불필요한 리렌더링 방지\r\n  const value = useMemo(() => ({\r\n    user,\r\n    login,\r\n    logout,\r\n    // isAuthenticated는 user 객체의 유무로 판단\r\n    isAuthenticated: !!user,\r\n    isLoading,\r\n  }), [user, login, logout, isLoading]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n\r\n","/**\r\n * 날짜 관련 유틸리티 함수들\r\n */\r\n\r\n/**\r\n * 날짜 문자열을 한국어 형식으로 포맷팅\r\n * @param dateString - 포맷팅할 날짜 문자열\r\n * @returns 한국어 형식의 날짜 문자열 (예: \"2024. 1. 15.\")\r\n */\r\nexport const formatDate = (dateString: string): string => {\r\n  try {\r\n    const date = new Date(dateString)\r\n    return date.toLocaleDateString('ko-KR')\r\n  } catch (error) {\r\n    console.error('날짜 포맷팅 오류:', error)\r\n    return '날짜 정보 없음'\r\n  }\r\n}\r\n\r\n/**\r\n * 날짜 문자열을 상대적 시간으로 포맷팅 (예: \"3분 전\", \"2시간 전\", \"3일 전\")\r\n * @param dateString - 포맷팅할 날짜 문자열\r\n * @returns 상대적 시간 문자열\r\n */\r\nexport const formatRelativeDate = (dateString: string): string => {\r\n  try {\r\n    const date = new Date(dateString)\r\n    const now = new Date()\r\n    const diffInMs = now.getTime() - date.getTime()\r\n    \r\n    // 음수인 경우 미래 날짜 (방금 전으로 처리)\r\n    if (diffInMs < 0) return '방금 전'\r\n    \r\n    // 분 단위 계산\r\n    const diffInMinutes = Math.floor(diffInMs / (1000 * 60))\r\n    if (diffInMinutes < 1) return '방금 전'\r\n    if (diffInMinutes < 60) return `${diffInMinutes}분 전`\r\n    \r\n    // 시간 단위 계산\r\n    const diffInHours = Math.floor(diffInMs / (1000 * 60 * 60))\r\n    if (diffInHours < 24) return `${diffInHours}시간 전`\r\n    \r\n    // 일 단위 계산\r\n    const diffInDays = Math.floor(diffInMs / (1000 * 60 * 60 * 24))\r\n    if (diffInDays === 1) return '어제'\r\n    if (diffInDays < 7) return `${diffInDays}일 전`\r\n    \r\n    // 주 단위 계산\r\n    const diffInWeeks = Math.floor(diffInDays / 7)\r\n    if (diffInWeeks < 4) return `${diffInWeeks}주 전`\r\n    \r\n    // 월 단위 계산 (30일 기준)\r\n    const diffInMonths = Math.floor(diffInDays / 30)\r\n    if (diffInMonths < 12) return `${diffInMonths}개월 전`\r\n    \r\n    // 년 단위 계산\r\n    const diffInYears = Math.floor(diffInDays / 365)\r\n    return `${diffInYears}년 전`\r\n  } catch (error) {\r\n    console.error('상대적 날짜 포맷팅 오류:', error)\r\n    return '날짜 정보 없음'\r\n  }\r\n}\r\n\r\n/**\r\n * 모던한 Intl.RelativeTimeFormat API를 사용한 상대적 시간 포맷팅\r\n * @param dateString - 포맷팅할 날짜 문자열\r\n * @param locale - 로케일 (기본값: 'ko-KR')\r\n * @returns 상대적 시간 문자열\r\n */\r\nexport const formatRelativeDateModern = (dateString: string, locale: string = 'ko-KR'): string => {\r\n  try {\r\n    const date = new Date(dateString)\r\n    const now = new Date()\r\n    const diffInSeconds = (now.getTime() - date.getTime()) / 1000\r\n    \r\n    // 음수인 경우 미래 날짜\r\n    if (diffInSeconds < 0) return '방금 전'\r\n    \r\n    const formatter = new Intl.RelativeTimeFormat(locale, { numeric: 'auto' })\r\n    \r\n    // 초 단위\r\n    if (diffInSeconds < 60) {\r\n      return '방금 전'\r\n    }\r\n    \r\n    // 분 단위\r\n    if (diffInSeconds < 3600) {\r\n      return formatter.format(Math.floor(-diffInSeconds / 60), 'minute')\r\n    }\r\n    \r\n    // 시간 단위\r\n    if (diffInSeconds < 86400) {\r\n      return formatter.format(Math.floor(-diffInSeconds / 3600), 'hour')\r\n    }\r\n    \r\n    // 일 단위\r\n    if (diffInSeconds < 2592000) { // 30일 미만\r\n      return formatter.format(Math.floor(-diffInSeconds / 86400), 'day')\r\n    }\r\n    \r\n    // 월 단위\r\n    if (diffInSeconds < 31536000) { // 365일 미만\r\n      return formatter.format(Math.floor(-diffInSeconds / 2592000), 'month')\r\n    }\r\n    \r\n    // 년 단위\r\n    return formatter.format(Math.floor(-diffInSeconds / 31536000), 'year')\r\n  } catch (error) {\r\n    console.error('모던 상대적 날짜 포맷팅 오류:', error)\r\n    return '날짜 정보 없음'\r\n  }\r\n}\r\n\r\n/**\r\n * 날짜가 유효한지 확인\r\n * @param dateString - 확인할 날짜 문자열\r\n * @returns 유효한 날짜인지 여부\r\n */\r\nexport const isValidDate = (dateString: string): boolean => {\r\n  try {\r\n    const date = new Date(dateString)\r\n    return !isNaN(date.getTime())\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * 두 날짜 사이의 차이를 계산\r\n * @param startDate - 시작 날짜 문자열\r\n * @param endDate - 종료 날짜 문자열 (기본값: 현재 시간)\r\n * @returns 차이 정보 객체\r\n */\r\nexport const getDateDifference = (\r\n  startDate: string, \r\n  endDate: string = new Date().toISOString()\r\n): {\r\n  days: number\r\n  hours: number\r\n  minutes: number\r\n  totalMs: number\r\n} => {\r\n  try {\r\n    const start = new Date(startDate)\r\n    const end = new Date(endDate)\r\n    const diffInMs = Math.abs(end.getTime() - start.getTime())\r\n    \r\n    const days = Math.floor(diffInMs / (1000 * 60 * 60 * 24))\r\n    const hours = Math.floor((diffInMs % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\r\n    const minutes = Math.floor((diffInMs % (1000 * 60 * 60)) / (1000 * 60))\r\n    \r\n    return {\r\n      days,\r\n      hours,\r\n      minutes,\r\n      totalMs: diffInMs\r\n    }\r\n  } catch (error) {\r\n    console.error('날짜 차이 계산 오류:', error)\r\n    return {\r\n      days: 0,\r\n      hours: 0,\r\n      minutes: 0,\r\n      totalMs: 0\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 날짜를 다양한 형식으로 포맷팅\r\n * @param dateString - 포맷팅할 날짜 문자열\r\n * @param format - 포맷 타입 ('short', 'long', 'time', 'datetime')\r\n * @returns 포맷팅된 날짜 문자열\r\n */\r\nexport const formatDateByType = (\r\n  dateString: string, \r\n  format: 'short' | 'long' | 'time' | 'datetime' = 'short'\r\n): string => {\r\n  try {\r\n    const date = new Date(dateString)\r\n    \r\n    switch (format) {\r\n      case 'short':\r\n        return date.toLocaleDateString('ko-KR', {\r\n          year: 'numeric',\r\n          month: 'numeric',\r\n          day: 'numeric'\r\n        })\r\n      case 'long':\r\n        return date.toLocaleDateString('ko-KR', {\r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric',\r\n          weekday: 'long'\r\n        })\r\n      case 'time':\r\n        return date.toLocaleTimeString('ko-KR', {\r\n          hour: '2-digit',\r\n          minute: '2-digit'\r\n        })\r\n      case 'datetime':\r\n        return date.toLocaleString('ko-KR', {\r\n          year: 'numeric',\r\n          month: 'numeric',\r\n          day: 'numeric',\r\n          hour: '2-digit',\r\n          minute: '2-digit'\r\n        })\r\n      default:\r\n        return date.toLocaleDateString('ko-KR')\r\n    }\r\n  } catch (error) {\r\n    console.error('날짜 타입별 포맷팅 오류:', error)\r\n    return '날짜 정보 없음'\r\n  }\r\n}\r\n\r\n/**\r\n * 날짜가 오늘인지 확인\r\n * @param dateString - 확인할 날짜 문자열\r\n * @returns 오늘인지 여부\r\n */\r\nexport const isToday = (dateString: string): boolean => {\r\n  try {\r\n    const date = new Date(dateString)\r\n    const today = new Date()\r\n    \r\n    return date.getDate() === today.getDate() &&\r\n           date.getMonth() === today.getMonth() &&\r\n           date.getFullYear() === today.getFullYear()\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * 날짜가 최근 N일 이내인지 확인\r\n * @param dateString - 확인할 날짜 문자열\r\n * @param days - 기준 일수 (기본값: 7)\r\n * @returns 최근 N일 이내인지 여부\r\n */\r\nexport const isRecent = (dateString: string, days: number = 7): boolean => {\r\n  try {\r\n    const date = new Date(dateString)\r\n    const now = new Date()\r\n    const diffInMs = now.getTime() - date.getTime()\r\n    const diffInDays = Math.floor(diffInMs / (1000 * 60 * 60 * 24))\r\n    \r\n    return diffInDays <= days && diffInDays >= 0\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n","// =================================================================\r\n// 📹 유튜브 영상 관련 유틸리티 함수\r\n// =================================================================\r\n\r\n/**\r\n * 다양한 유튜브 URL 형식에서 영상 ID 추출\r\n * @param url - 유튜브 URL\r\n * @returns 영상 ID 또는 null\r\n */\r\nexport const extractYouTubeId = (url: string): string | null => {\r\n  if (!url) return null\r\n  \r\n  // 다양한 유튜브 URL 패턴\r\n  const patterns = [\r\n    /(?:youtube\\.com\\/watch\\?v=)([a-zA-Z0-9_-]{11})/,  // https://www.youtube.com/watch?v=VIDEO_ID\r\n    /(?:youtu\\.be\\/)([a-zA-Z0-9_-]{11})/,  // https://youtu.be/VIDEO_ID\r\n    /(?:youtube\\.com\\/embed\\/)([a-zA-Z0-9_-]{11})/,  // https://www.youtube.com/embed/VIDEO_ID\r\n    /(?:youtube\\.com\\/shorts\\/)([a-zA-Z0-9_-]{11})/,  // https://www.youtube.com/shorts/VIDEO_ID\r\n    /(?:youtube\\.com\\/v\\/)([a-zA-Z0-9_-]{11})/,  // https://www.youtube.com/v/VIDEO_ID\r\n  ]\r\n  \r\n  for (const pattern of patterns) {\r\n    const match = url.match(pattern)\r\n    if (match && match[1]) {\r\n      return match[1]\r\n    }\r\n  }\r\n  \r\n  return null\r\n}\r\n\r\n/**\r\n * 유튜브 영상 ID로 고해상도 썸네일 URL 생성\r\n * @param videoId - 유튜브 영상 ID\r\n * @param quality - 썸네일 품질 (maxresdefault, hqdefault, mqdefault, sddefault)\r\n * @returns 썸네일 URL\r\n */\r\nexport const getYouTubeThumbnail = (videoId: string, quality: string = 'maxresdefault'): string => {\r\n  return `https://img.youtube.com/vi/${videoId}/${quality}.jpg`\r\n}\r\n\r\n/**\r\n * 유튜브 임베드 URL 생성 (타임스탬프 지원, 전문성 최적화)\r\n * @param videoId - 유튜브 영상 ID\r\n * @param startTime - 시작 시간 (초 단위)\r\n * @param autoplay - 자동 재생 여부 (기본값: false)\r\n * @returns 임베드 URL\r\n */\r\nexport const getYouTubeEmbedUrl = (videoId: string, startTime?: number, autoplay: boolean = false): string => {\r\n  const baseUrl = `https://www.youtube.com/embed/${videoId}`\r\n  const params = new URLSearchParams()\r\n  \r\n  if (startTime !== undefined && startTime > 0) {\r\n    params.append('start', startTime.toString())\r\n  }\r\n  \r\n  if (autoplay) {\r\n    params.append('autoplay', '1')\r\n  }\r\n  \r\n  // 🌟 전문성을 위한 플레이어 최적화 파라미터\r\n  params.append('rel', '0')  // 관련 영상 추천 비활성화\r\n  params.append('modestbranding', '1')  // 유튜브 로고 최소화 & '동영상 더보기' 툴팁 제거\r\n  params.append('iv_load_policy', '3')  // 영상 주석(annotations) 비활성화\r\n  params.append('showinfo', '0')  // 영상 정보 표시 최소화\r\n  params.append('fs', '1')  // 전체 화면 버튼 표시\r\n  params.append('cc_load_policy', '0')  // 자막 자동 로드 비활성화\r\n  params.append('controls', '1')  // 컨트롤러 표시\r\n  \r\n  return `${baseUrl}?${params.toString()}`\r\n}\r\n\r\n/**\r\n * 텍스트에서 타임스탬프 패턴 추출 및 초 단위 변환\r\n * @param text - 타임스탬프를 포함한 텍스트\r\n * @returns 타임스탬프 정보 배열 [{ text: '[1:30]', seconds: 90, position: 10 }]\r\n */\r\nexport interface TimestampMatch {\r\n  text: string  // 원본 텍스트 (예: '[1:30]')\r\n  seconds: number  // 초 단위 시간\r\n  position: number  // 텍스트 내 위치\r\n}\r\n\r\nexport const parseTimestamps = (text: string): TimestampMatch[] => {\r\n  if (!text) return []\r\n  \r\n  // 타임스탬프 패턴: [MM:SS] 또는 [H:MM:SS]\r\n  const pattern = /\\[(\\d{1,2}):(\\d{2})(?::(\\d{2}))?\\]/g\r\n  const matches: TimestampMatch[] = []\r\n  \r\n  let match\r\n  while ((match = pattern.exec(text)) !== null) {\r\n    const hours = match[3] ? parseInt(match[1] || '0', 10) : 0\r\n    const minutes = match[3] ? parseInt(match[2] || '0', 10) : parseInt(match[1] || '0', 10)\r\n    const seconds = match[3] ? parseInt(match[3] || '0', 10) : parseInt(match[2] || '0', 10)\r\n    \r\n    const totalSeconds = hours * 3600 + minutes * 60 + seconds\r\n    \r\n    matches.push({\r\n      text: match[0],\r\n      seconds: totalSeconds,\r\n      position: match.index,\r\n    })\r\n  }\r\n  \r\n  return matches\r\n}\r\n\r\n/**\r\n * 타임스탬프가 포함된 텍스트를 클릭 가능한 링크로 변환\r\n * @param text - 원본 텍스트\r\n * @param onTimestampClick - 타임스탬프 클릭 핸들러\r\n * @returns JSX 요소 배열\r\n */\r\nexport const renderTextWithTimestamps = (\r\n  text: string,\r\n  onTimestampClick?: (seconds: number) => void\r\n): (string | JSX.Element)[] => {\r\n  if (!text) return []\r\n  \r\n  const timestamps = parseTimestamps(text)\r\n  if (timestamps.length === 0) return [text]\r\n  \r\n  const result: (string | JSX.Element)[] = []\r\n  let lastIndex = 0\r\n  \r\n  timestamps.forEach((ts, idx) => {\r\n    // 타임스탬프 이전 텍스트 추가\r\n    if (ts.position > lastIndex) {\r\n      result.push(text.substring(lastIndex, ts.position))\r\n    }\r\n    \r\n    // 타임스탬프를 클릭 가능한 버튼으로 추가\r\n    if (onTimestampClick) {\r\n      result.push(\r\n        <button\r\n          key={`ts-${idx}`}\r\n          onClick={() => onTimestampClick(ts.seconds)}\r\n          className=\"inline-flex items-center px-2 py-1 bg-blue-600 hover:bg-blue-700 text-white rounded font-mono text-xs font-bold transition-colors mx-1\"\r\n          title={`영상 ${ts.text} 위치로 이동`}\r\n        >\r\n          {ts.text}\r\n        </button>\r\n      )\r\n    } else {\r\n      result.push(\r\n        <span key={`ts-${idx}`} className=\"inline-flex items-center px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded font-mono text-xs font-bold mx-1\">\r\n          {ts.text}\r\n        </span>\r\n      )\r\n    }\r\n    \r\n    lastIndex = ts.position + ts.text.length\r\n  })\r\n  \r\n  // 마지막 타임스탬프 이후 텍스트 추가\r\n  if (lastIndex < text.length) {\r\n    result.push(text.substring(lastIndex))\r\n  }\r\n  \r\n  return result\r\n}\r\n\r\n/**\r\n * 유튜브 URL 유효성 검사\r\n * @param url - 검증할 URL\r\n * @returns 유효한 유튜브 URL 여부\r\n */\r\nexport const isValidYouTubeUrl = (url: string): boolean => {\r\n  if (!url) return false\r\n  return extractYouTubeId(url) !== null\r\n}\r\n\r\n/**\r\n * 유튜브 재생 목록 ID 추출\r\n * @param url - 유튜브 재생 목록 URL\r\n * @returns 재생 목록 ID 또는 null\r\n */\r\nexport const extractYouTubePlaylistId = (url: string): string | null => {\r\n  if (!url) return null\r\n  \r\n  // 재생 목록 URL 패턴\r\n  const patterns = [\r\n    /[?&]list=([a-zA-Z0-9_-]{13,})/,  // ?list=PLAYLIST_ID 또는 &list=PLAYLIST_ID\r\n    /youtube\\.com\\/playlist\\?list=([a-zA-Z0-9_-]{13,})/,  // playlist 전용 URL\r\n  ]\r\n  \r\n  for (const pattern of patterns) {\r\n    const match = url.match(pattern)\r\n    if (match && match[1]) {\r\n      return match[1]\r\n    }\r\n  }\r\n  \r\n  return null\r\n}\r\n\r\n/**\r\n * 유튜브 재생 목록 임베드 URL 생성\r\n * @param playlistId - 유튜브 재생 목록 ID\r\n * @param startVideoId - 시작할 영상 ID (선택사항)\r\n * @returns 재생 목록 임베드 URL\r\n */\r\nexport const getYouTubePlaylistEmbedUrl = (playlistId: string, startVideoId?: string): string => {\r\n  const params = new URLSearchParams()\r\n  \r\n  params.append('list', playlistId)\r\n  params.append('rel', '0')\r\n  params.append('modestbranding', '1')\r\n  params.append('iv_load_policy', '3')\r\n  params.append('showinfo', '0')\r\n  params.append('fs', '1')\r\n  params.append('cc_load_policy', '0')\r\n  params.append('controls', '1')\r\n  params.append('enablejsapi', '1')\r\n  \r\n  if (startVideoId) {\r\n    // 특정 영상부터 시작\r\n    return `https://www.youtube.com/embed/${startVideoId}?${params.toString()}`\r\n  } else {\r\n    // 재생 목록 첫 영상부터 시작\r\n    return `https://www.youtube.com/embed?${params.toString()}`\r\n  }\r\n}\r\n\r\n/**\r\n * 유튜브 재생 목록 썸네일 URL 생성\r\n * @param playlistId - 유튜브 재생 목록 ID\r\n * @returns 썸네일 URL\r\n */\r\nexport const getYouTubePlaylistThumbnail = (playlistId: string): string => {\r\n  // 재생 목록 썸네일은 특정 API를 통해서만 가능하므로\r\n  // 대신 첫 번째 영상의 썸네일을 사용하거나 기본 이미지 사용\r\n  return `https://i.ytimg.com/vi//hqdefault.jpg` // 플레이스홀더\r\n}\r\n\r\n/**\r\n * 마크다운을 HTML로 변환\r\n * @param markdown - 마크다운 텍스트\r\n * @returns HTML 문자열\r\n */\r\nexport const renderMarkdown = (markdown: string): string => {\r\n  if (!markdown) return ''\r\n  \r\n  return markdown\r\n    // 제목\r\n    .replace(/^### (.*$)/gim, '<h3 class=\"text-lg font-semibold mt-4 mb-2 text-gray-900 dark:text-white\">$1</h3>')\r\n    .replace(/^## (.*$)/gim, '<h2 class=\"text-xl font-semibold mt-4 mb-2 text-gray-900 dark:text-white\">$1</h2>')\r\n    .replace(/^# (.*$)/gim, '<h1 class=\"text-2xl font-bold mt-4 mb-2 text-gray-900 dark:text-white\">$1</h1>')\r\n    // 볼드\r\n    .replace(/\\*\\*(.*?)\\*\\*/g, '<strong class=\"font-bold\">$1</strong>')\r\n    // 이탤릭\r\n    .replace(/\\*(.*?)\\*/g, '<em class=\"italic\">$1</em>')\r\n    // 밑줄\r\n    .replace(/__(.*?)__/g, '<u class=\"underline\">$1</u>')\r\n    // 인라인 코드\r\n    .replace(/`(.*?)`/g, '<code class=\"bg-gray-200 dark:bg-gray-600 text-red-600 dark:text-red-400 px-1 rounded text-sm\">$1</code>')\r\n    // 토글\r\n    .replace(/^▶ (.*$)/gim, '<div class=\"flex items-center mt-2 mb-1\"><span class=\"mr-2\">▶</span><span class=\"font-medium text-gray-900 dark:text-white\">$1</span></div>')\r\n    // 불릿 리스트\r\n    .replace(/^[\\s]*[-*+]\\s(.*$)/gim, '<div class=\"ml-4 mb-1\"><span class=\"mr-2\">•</span>$1</div>')\r\n    // 숫자 리스트\r\n    .replace(/^[\\s]*\\d+\\.\\s(.*$)/gim, '<div class=\"ml-4 mb-1\"><span class=\"mr-2\">1.</span>$1</div>')\r\n    // 코드 블록\r\n    .replace(/```(.*?)\\n([\\s\\S]*?)\\n```/gim, (_match, p1, p2) => {\r\n      const lang = p1 ? `language-${p1.trim()}` : ''\r\n      return `<pre class=\"bg-gray-800 p-3 rounded-lg overflow-x-auto my-3\"><code class=\"${lang} text-sm text-gray-100\">${p2.trim()}</code></pre>`\r\n    })\r\n    // 줄바꿈\r\n    .replace(/\\n/g, '<br>')\r\n}\r\n\r\n/**\r\n * 마크다운을 HTML로 변환하고 타임스탬프를 클릭 가능한 버튼으로 변환\r\n * @param markdown - 마크다운 형식의 콘텐츠\r\n * @param onTimestampClick - 타임스탬프 클릭 핸들러\r\n * @returns 변환된 HTML 문자열\r\n */\r\nexport const renderHtmlWithTimestamps = (\r\n  markdown: string,\r\n  onTimestampClick?: (seconds: number) => void\r\n): string => {\r\n  if (!markdown) return ''\r\n  \r\n  // 1단계: 마크다운을 HTML로 변환\r\n  let html = renderMarkdown(markdown)\r\n  \r\n  // 2단계: 타임스탬프를 버튼으로 변환\r\n  const pattern = /\\[(\\d{1,2}):(\\d{2})(?::(\\d{2}))?\\]/g\r\n  \r\n  html = html.replace(pattern, (match, ...groups) => {\r\n    const hours = groups[2] ? parseInt(groups[0], 10) : 0\r\n    const minutes = groups[2] ? parseInt(groups[1], 10) : parseInt(groups[0], 10)\r\n    const seconds = groups[2] ? parseInt(groups[2], 10) : parseInt(groups[1], 10)\r\n    \r\n    const totalSeconds = hours * 3600 + minutes * 60 + seconds\r\n    \r\n    // 데이터 속성으로 초를 저장하여 클릭 이벤트에서 사용\r\n    return `<button \r\n      class=\"inline-flex items-center px-2 py-1 bg-blue-600 hover:bg-blue-700 text-white rounded font-mono text-xs font-bold transition-colors mx-1 cursor-pointer\"\r\n      data-timestamp=\"${totalSeconds}\"\r\n      title=\"영상 ${match} 위치로 이동\"\r\n    >${match}</button>`\r\n  })\r\n  \r\n  return html\r\n}\r\n\r\n","import React from 'react'\r\nimport { FaBook, FaBriefcase, FaProjectDiagram, FaSync, FaCalendarAlt } from 'react-icons/fa'\r\n\r\ninterface DataCounts {\r\n  books: number\r\n  experiences: number\r\n  projects: number\r\n  messages: number\r\n  skills: number\r\n}\r\n\r\ninterface DashboardHomeProps {\r\n  counts: DataCounts\r\n}\r\n\r\nconst DashboardHome: React.FC<DashboardHomeProps> = ({ counts }) => {\r\n  // 사이트 활동 통계를 위한 가상 데이터 (실제로는 API에서 가져와야 함)\r\n  const siteActivityStats = {\r\n    recentUpdates: [\r\n      { type: 'book', typeName: '책', title: '최신 도서 추가', updatedAt: new Date() },\r\n      { type: 'project', typeName: '프로젝트', title: '새 프로젝트 완료', updatedAt: new Date() },\r\n      { type: 'experience', typeName: '경력', title: '경력 정보 업데이트', updatedAt: new Date() }\r\n    ],\r\n    weeklyStats: {\r\n      booksAdded: 2,\r\n      projectsCompleted: 1,\r\n      experiencesUpdated: 3\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-2xl font-bold mb-6\">관리자 설정</h2>\r\n      \r\n      {/* 콘텐츠 통계 카드 */}\r\n      <div className=\"mb-8\">\r\n        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\r\n          📊 콘텐츠 통계\r\n        </h2>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          <button className=\"bg-orange-50 dark:bg-orange-900/20 p-6 rounded-lg border border-orange-200 dark:border-orange-800 hover:bg-orange-100 dark:hover:bg-orange-900/30 transition-colors text-left w-full\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-orange-600 dark:text-orange-400\">등록된 책</p>\r\n                <p className=\"text-3xl font-bold text-orange-900 dark:text-orange-100\">{counts.books}</p>\r\n                <p className=\"text-xs text-orange-500 dark:text-orange-400 mt-1\">권</p>\r\n              </div>\r\n              <FaBook className=\"text-orange-500 text-3xl\" />\r\n            </div>\r\n          </button>\r\n\r\n          <button className=\"bg-blue-50 dark:bg-blue-900/20 p-6 rounded-lg border border-blue-200 dark:border-blue-800 hover:bg-blue-100 dark:hover:bg-blue-900/30 transition-colors text-left w-full\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-blue-600 dark:text-blue-400\">등록된 경력</p>\r\n                <p className=\"text-3xl font-bold text-blue-900 dark:text-blue-100\">{counts.experiences}</p>\r\n                <p className=\"text-xs text-blue-500 dark:text-blue-400 mt-1\">개</p>\r\n              </div>\r\n              <FaBriefcase className=\"text-blue-500 text-3xl\" />\r\n            </div>\r\n          </button>\r\n\r\n          <button className=\"bg-green-50 dark:bg-green-900/20 p-6 rounded-lg border border-green-200 dark:border-green-800 hover:bg-green-100 dark:hover:bg-green-900/30 transition-colors text-left w-full\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-green-600 dark:text-green-400\">등록된 프로젝트</p>\r\n                <p className=\"text-3xl font-bold text-green-900 dark:text-green-100\">{counts.projects}</p>\r\n                <p className=\"text-xs text-green-500 dark:text-green-400 mt-1\">개</p>\r\n              </div>\r\n              <FaProjectDiagram className=\"text-green-500 text-3xl\" />\r\n            </div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 사이트 활동 통계 카드 */}\r\n      <div className=\"mb-8\">\r\n        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\r\n          📊 사이트 활동\r\n        </h2>\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n          {/* 최근 업데이트된 콘텐츠 */}\r\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n            <div className=\"flex items-center gap-3 mb-4\">\r\n              <FaSync className=\"text-purple-500 text-xl\" />\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">최근 업데이트</h3>\r\n            </div>\r\n            <div className=\"space-y-3\">\r\n              {siteActivityStats.recentUpdates.length > 0 ? (\r\n                siteActivityStats.recentUpdates.map((item, index) => (\r\n                  <div key={`${item.type}-${index}`} className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                    <div className=\"flex items-center gap-3\">\r\n                      <div className={`w-2 h-2 rounded-full ${\r\n                        index === 0 ? 'bg-green-500' : index === 1 ? 'bg-yellow-500' : 'bg-blue-500'\r\n                      }`}></div>\r\n                      <div>\r\n                        <p className=\"text-sm font-medium text-gray-900 dark:text-white\">{item.title}</p>\r\n                        <p className=\"text-xs text-gray-500 dark:text-gray-400\">{item.typeName}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-xs text-gray-400 dark:text-gray-500\">\r\n                      {item.updatedAt.toLocaleDateString('ko-KR')}\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <p className=\"text-gray-500 dark:text-gray-400 text-sm\">최근 업데이트된 콘텐츠가 없습니다.</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 주간 통계 */}\r\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n            <div className=\"flex items-center gap-3 mb-4\">\r\n              <FaCalendarAlt className=\"text-indigo-500 text-xl\" />\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">이번 주 활동</h3>\r\n            </div>\r\n            <div className=\"space-y-4\">\r\n              <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <FaBook className=\"text-orange-500\" />\r\n                  <span className=\"text-sm text-gray-900 dark:text-white\">새로 추가된 책</span>\r\n                </div>\r\n                <span className=\"text-lg font-bold text-orange-600 dark:text-orange-400\">\r\n                  {siteActivityStats.weeklyStats.booksAdded}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <FaProjectDiagram className=\"text-green-500\" />\r\n                  <span className=\"text-sm text-gray-900 dark:text-white\">완료된 프로젝트</span>\r\n                </div>\r\n                <span className=\"text-lg font-bold text-green-600 dark:text-green-400\">\r\n                  {siteActivityStats.weeklyStats.projectsCompleted}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <FaBriefcase className=\"text-blue-500\" />\r\n                  <span className=\"text-sm text-gray-900 dark:text-white\">업데이트된 경력</span>\r\n                </div>\r\n                <span className=\"text-lg font-bold text-blue-600 dark:text-blue-400\">\r\n                  {siteActivityStats.weeklyStats.experiencesUpdated}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DashboardHome","import React, { useState, useMemo, useCallback, useEffect } from 'react'\r\nimport { FaPlus, FaEdit, FaTrash, FaEye, FaTimes, FaBook, FaStar } from 'react-icons/fa'\r\nimport { Book, BookFormData, Learning, Chapter } from '../../types'\r\nimport BookForm from '../forms/BookForm'\r\nimport ChapterForm from '../forms/ChapterForm'\r\nimport LearningForm from '../forms/LearningForm'\r\nimport ChapterLearningList from '../common/ChapterLearningList'\r\nimport ToastContainer from '../common/Toast'\r\nimport { useBookManagerData } from '../../hooks/useBookManagerData'\r\nimport { useCRUDManager } from '../../hooks/useCRUDManager'\r\nimport { useOptimisticArrayUpdate } from '../../hooks/useOptimisticUpdate'\r\nimport { useAbortController } from '../../hooks/useAbortController'\r\nimport { useToastHelpers } from '../../hooks/useToast'\r\nimport { chaptersAPI, learningsAPI } from '../../services/api'\r\nimport { formatDate } from '../../utils/dateUtils'\r\n\r\ninterface BookManagerProps {\r\n  bookFilter?: 'all' | 'five-star' | 'category'\r\n  bookSearchTerm?: string\r\n  selectedBookCategory?: string\r\n  initialEditId?: string  // 🌟 URL state로 전달된 수정 대상 ID\r\n}\r\n\r\nconst BookManager: React.FC<BookManagerProps> = ({ \r\n  bookFilter = 'all', \r\n  bookSearchTerm = '', \r\n  selectedBookCategory = '',\r\n  initialEditId  // 🌟 초기 수정 ID 받기\r\n}) => {\r\n  const { books, isLoading, createBook, updateBook, deleteBook } = useBookManagerData()\r\n  const { success, error } = useToastHelpers()\r\n  const { createAbortController } = useAbortController()\r\n  \r\n  // Toast 상태\r\n  const { toasts, hideToast } = useToastHelpers()\r\n  \r\n  // 서적 CRUD 관리\r\n  const [bookState, bookActions] = useCRUDManager<Book>({\r\n    onSave: async (data: BookFormData, editingItem) => {\r\n      console.log('📚 BookManager - 저장 시작:', data)\r\n      console.log('🔗 skillIds:', data.skillIds)\r\n      \r\n      if (editingItem) {\r\n        console.log('✏️ 서적 수정 모드:', editingItem._id)\r\n        const result = await updateBook(editingItem._id, data)\r\n        console.log('✅ 수정 결과:', result)\r\n        success('서적 수정 완료', '서적 정보가 성공적으로 수정되었습니다.')\r\n      } else {\r\n        console.log('➕ 서적 생성 모드')\r\n        const result = await createBook(data)\r\n        console.log('✅ 생성 결과:', result)\r\n        success('서적 추가 완료', '새로운 서적이 성공적으로 추가되었습니다.')\r\n      }\r\n    },\r\n    onDelete: async (book: Book) => {\r\n      await deleteBook(book._id)\r\n      success('서적 삭제 완료', `${book.title}이(가) 삭제되었습니다.`)\r\n    },\r\n    onError: (err) => {\r\n      console.error('❌ 서적 저장 실패:', err)\r\n      error('작업 실패', err.message || '알 수 없는 오류가 발생했습니다.')\r\n    }\r\n  })\r\n\r\n  // 목차 낙관적 업데이트\r\n  const {\r\n    data: chapters,\r\n    optimisticAdd: optimisticAddChapter,\r\n    optimisticUpdateItem: optimisticUpdateChapter,\r\n    optimisticDelete: optimisticDeleteChapter,\r\n    resetData: resetChapters\r\n  } = useOptimisticArrayUpdate<Chapter>([])\r\n\r\n  // 학습 내용 낙관적 업데이트 (현재는 사용하지 않지만 향후 확장을 위해 유지)\r\n  // const {\r\n  //   data: learnings,\r\n  //   optimisticAdd: optimisticAddLearning,\r\n  //   optimisticUpdateItem: optimisticUpdateLearning,\r\n  //   optimisticDelete: optimisticDeleteLearning,\r\n  //   resetData: resetLearnings\r\n  // } = useOptimisticArrayUpdate<Learning>([])\r\n\r\n  // 서적 상세보기 모달 상태\r\n  const [showBookDetailModal, setShowBookDetailModal] = useState(false)\r\n  const [selectedBook, setSelectedBook] = useState<Book | null>(null)\r\n  const [selectedChapterId, setSelectedChapterId] = useState<string | null>(null)\r\n\r\n  // 폼 상태\r\n  const [showChapterForm, setShowChapterForm] = useState(false)\r\n  const [editingChapter, setEditingChapter] = useState<Chapter | null>(null)\r\n  const [showLearningForm, setShowLearningForm] = useState(false)\r\n  const [editingLearning, setEditingLearning] = useState<Learning | null>(null)\r\n  const [hasAutoOpened, setHasAutoOpened] = useState(false)  // 🌟 자동 열림 추적\r\n\r\n  // 🌟 initialEditId가 전달되면 자동으로 해당 서적 수정 모드로 전환 (한 번만)\r\n  useEffect(() => {\r\n    if (initialEditId && books.length > 0 && !hasAutoOpened) {\r\n      const bookToEdit = books.find(book => book._id === initialEditId)\r\n      if (bookToEdit) {\r\n        console.log('🎯 자동 수정 모드 활성화:', bookToEdit.title)\r\n        bookActions.handleEdit(bookToEdit)\r\n        setHasAutoOpened(true)  // 🌟 한 번만 실행되도록 표시\r\n      }\r\n    }\r\n  }, [initialEditId, books, hasAutoOpened, bookActions])\r\n\r\n  // 필터링된 서적 목록 계산\r\n  const filteredBooks = useMemo(() => {\r\n    let filtered = [...books]\r\n\r\n    // 필터 적용\r\n    if (bookFilter === 'five-star') {\r\n      filtered = filtered.filter(book => book.rating === 5)\r\n    } else if (bookFilter === 'category' && selectedBookCategory) {\r\n      filtered = filtered.filter(book => book.category === selectedBookCategory)\r\n    }\r\n\r\n    // 검색어 적용\r\n    if (bookSearchTerm) {\r\n      const searchLower = bookSearchTerm.toLowerCase()\r\n      filtered = filtered.filter(book => \r\n        book.title.toLowerCase().includes(searchLower) ||\r\n        book.author.toLowerCase().includes(searchLower) ||\r\n        book.category.toLowerCase().includes(searchLower)\r\n      )\r\n    }\r\n\r\n    return filtered.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())\r\n  }, [books, bookFilter, bookSearchTerm, selectedBookCategory])\r\n\r\n  // 서적 상세보기 모달 열기\r\n  const handleBookDetailClick = useCallback(async (book: Book) => {\r\n    setSelectedBook(book)\r\n    setShowBookDetailModal(true)\r\n    setSelectedChapterId(null)\r\n\r\n    try {\r\n      const abortController = createAbortController()\r\n      \r\n      // 목차만 가져오기 (학습 내용은 populate되어 있음)\r\n      const chaptersResponse = await chaptersAPI.getByBook(book._id)\r\n\r\n      if (!abortController.signal.aborted) {\r\n        resetChapters(chaptersResponse.data || [])\r\n      }\r\n    } catch (err) {\r\n      if (!(err as Error).name?.includes('AbortError')) {\r\n        error('데이터 로드 실패', '서적 정보를 불러오는데 실패했습니다.')\r\n      }\r\n    }\r\n  }, [createAbortController, resetChapters, error])\r\n\r\n  // 목차 관리 핸들러들\r\n  const handleSaveChapter = useCallback(async (chapterData: { title: string; order: number }) => {\r\n    if (!selectedBook) return\r\n\r\n    try {\r\n      if (editingChapter) {\r\n        // 수정\r\n        await optimisticUpdateChapter(\r\n          editingChapter._id,\r\n          chapterData,\r\n          () => chaptersAPI.update(selectedBook._id, editingChapter._id, chapterData).then(res => res.data)\r\n        )\r\n        success('목차 수정 완료', '목차가 성공적으로 수정되었습니다.')\r\n        setShowChapterForm(false)\r\n        setEditingChapter(null)\r\n      } else {\r\n        // 추가\r\n        await optimisticAddChapter(\r\n          { ...chapterData, _id: '', learnings: [], createdAt: new Date().toISOString(), updatedAt: new Date().toISOString() } as Chapter,\r\n          () => chaptersAPI.create(selectedBook._id, chapterData).then(res => res.data)\r\n        )\r\n        success('목차 추가 완료', '새로운 목차가 추가되었습니다.')\r\n        setShowChapterForm(false)\r\n      }\r\n    } catch (err) {\r\n      error('목차 작업 실패', '목차 작업에 실패했습니다.')\r\n    }\r\n  }, [selectedBook, editingChapter, optimisticAddChapter, optimisticUpdateChapter, success, error])\r\n\r\n  const handleDeleteChapter = useCallback(async (chapter: Chapter) => {\r\n    if (!selectedBook) return\r\n\r\n    try {\r\n      await optimisticDeleteChapter(\r\n        chapter._id,\r\n        () => chaptersAPI.delete(selectedBook._id, chapter._id).then(() => {})\r\n      )\r\n      success('목차 삭제 완료', '목차가 삭제되었습니다.')\r\n    } catch (err) {\r\n      error('목차 삭제 실패', '목차 삭제에 실패했습니다.')\r\n    }\r\n  }, [selectedBook, optimisticDeleteChapter, success, error])\r\n\r\n  // 학습 내용 관리 핸들러들\r\n  const handleAddLearningClick = useCallback((chapterId: string) => {\r\n    setSelectedChapterId(chapterId)\r\n    setShowLearningForm(true)\r\n    setEditingLearning(null)\r\n  }, [])\r\n\r\n  const handleEditLearningClick = useCallback((learning: Learning, chapterId: string) => {\r\n    setSelectedChapterId(chapterId)\r\n    setEditingLearning(learning)\r\n    setShowLearningForm(true)\r\n  }, [])\r\n\r\n  const handleDeleteLearningClick = useCallback(async (learning: Learning, chapterId: string) => {\r\n    if (!selectedBook) return\r\n\r\n    try {\r\n      await learningsAPI.deleteForChapter(selectedBook._id, chapterId, learning._id)\r\n      \r\n      // 목차 데이터 새로고침 (학습 내용이 populate되어 있음)\r\n      const chaptersResponse = await chaptersAPI.getByBook(selectedBook._id)\r\n      resetChapters(chaptersResponse.data || [])\r\n      \r\n      success('학습 내용 삭제 완료', '학습 내용이 삭제되었습니다.')\r\n    } catch (err) {\r\n      error('학습 내용 삭제 실패', '학습 내용 삭제에 실패했습니다.')\r\n    }\r\n  }, [selectedBook, resetChapters, success, error])\r\n\r\n  const handleSaveLearning = useCallback(async (learningData: { topic: string; content: string }) => {\r\n    if (!selectedBook || !selectedChapterId) return\r\n\r\n    try {\r\n      if (editingLearning) {\r\n        // 수정\r\n        await learningsAPI.updateForChapter(selectedBook._id, selectedChapterId, editingLearning._id, learningData)\r\n        success('학습 내용 수정 완료', '학습 내용이 성공적으로 수정되었습니다.')\r\n      } else {\r\n        // 추가\r\n        await learningsAPI.createForChapter(selectedBook._id, selectedChapterId, learningData)\r\n        success('학습 내용 추가 완료', '새로운 학습 내용이 추가되었습니다.')\r\n      }\r\n      \r\n      // 목차 데이터 새로고침\r\n      const chaptersResponse = await chaptersAPI.getByBook(selectedBook._id)\r\n      resetChapters(chaptersResponse.data || [])\r\n      \r\n      setShowLearningForm(false)\r\n      setEditingLearning(null)\r\n      setSelectedChapterId(null)\r\n    } catch (err) {\r\n      error('작업 실패', '학습 내용 저장에 실패했습니다.')\r\n    }\r\n  }, [selectedBook, selectedChapterId, editingLearning, resetChapters, success, error])\r\n\r\n  // 별점 렌더링\r\n  const renderRating = (rating: number) => {\r\n    return (\r\n      <div className=\"flex items-center gap-0.5\">\r\n        {Array.from({ length: 5 }, (_, i) => (\r\n          <FaStar \r\n            key={i} \r\n            className={`text-sm ${i < rating ? 'text-yellow-500' : 'text-gray-300 dark:text-gray-600'}`}\r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // 로딩 상태\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* Toast 알림 */}\r\n      <ToastContainer toasts={toasts} onClose={hideToast} />\r\n\r\n      <div className=\"space-y-6\">\r\n        {/* 🌟 헤더 및 서적 추가 버튼 */}\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">서적 관리</h2>\r\n            <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\r\n              총 {filteredBooks.length}권의 서적\r\n            </p>\r\n          </div>\r\n          <button\r\n            onClick={bookActions.handleCreate}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors shadow-md\"\r\n          >\r\n            <FaPlus />\r\n            서적 추가\r\n          </button>\r\n        </div>\r\n\r\n        {/* 🌟 서적 리스트 (테이블 형식) */}\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden\">\r\n          {filteredBooks.length === 0 ? (\r\n            <div className=\"text-center py-12\">\r\n              <FaBook className=\"text-6xl text-gray-400 mx-auto mb-4\" />\r\n              <p className=\"text-xl text-gray-600 dark:text-gray-400 mb-2\">\r\n                등록된 서적이 없습니다\r\n              </p>\r\n              <p className=\"text-sm text-gray-500 dark:text-gray-500\">\r\n                상단의 '서적 추가' 버튼을 눌러 새로운 서적을 등록하세요\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"w-full\">\r\n                <thead>\r\n                  <tr className=\"bg-gray-50 dark:bg-gray-700 border-b border-gray-200 dark:border-gray-600\">\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      서적 정보\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      저자\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      카테고리\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      평점\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      읽은 날짜\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      관리\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\r\n                  {filteredBooks.map((book) => (\r\n                    <tr \r\n                      key={book._id} \r\n                      onClick={() => handleBookDetailClick(book)}\r\n                      className=\"hover:bg-gray-50 dark:hover:bg-gray-700 cursor-pointer transition-colors\"\r\n                    >\r\n                      <td className=\"px-6 py-4\">\r\n                        <div className=\"flex items-center gap-3\">\r\n                          {book.coverImage ? (\r\n                            <img \r\n                              src={book.coverImage} \r\n                              alt={book.title}\r\n                              className=\"w-12 h-16 object-cover rounded shadow-sm\"\r\n                            />\r\n                          ) : (\r\n                            <div className=\"w-12 h-16 bg-gradient-to-br from-blue-400 to-blue-600 rounded flex items-center justify-center shadow-sm\">\r\n                              <FaBook className=\"text-white text-lg\" />\r\n                            </div>\r\n                          )}\r\n                          <div>\r\n                            <p className=\"font-semibold text-gray-900 dark:text-white\">\r\n                              {book.title}\r\n                            </p>\r\n                            <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-0.5\">\r\n                              {book.learnings?.length || 0}개의 학습 내용\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <p className=\"text-sm text-gray-900 dark:text-gray-300\">\r\n                          {book.author}\r\n                        </p>\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\">\r\n                          {book.category}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        {renderRating(book.rating)}\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <p className=\"text-sm text-gray-900 dark:text-gray-300\">\r\n                          {formatDate(book.readDate)}\r\n                        </p>\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <div className=\"flex items-center justify-end gap-2\">\r\n                          <button\r\n                            onClick={(e) => {\r\n                              e.stopPropagation()\r\n                              handleBookDetailClick(book)\r\n                            }}\r\n                            className=\"p-2 text-blue-600 hover:bg-blue-100 dark:hover:bg-blue-900 rounded-lg transition-colors\"\r\n                            title=\"상세보기\"\r\n                          >\r\n                            <FaEye />\r\n                          </button>\r\n                          <button\r\n                            onClick={(e) => {\r\n                              e.stopPropagation()\r\n                              bookActions.handleEdit(book)\r\n                            }}\r\n                            className=\"p-2 text-yellow-600 hover:bg-yellow-100 dark:hover:bg-yellow-900 rounded-lg transition-colors\"\r\n                            title=\"수정\"\r\n                          >\r\n                            <FaEdit />\r\n                          </button>\r\n                          <button\r\n                            onClick={(e) => {\r\n                              e.stopPropagation()\r\n                              bookActions.handleDelete(book)\r\n                            }}\r\n                            disabled={bookState.isDeleting}\r\n                            className=\"p-2 text-red-600 hover:bg-red-100 dark:hover:bg-red-900 rounded-lg transition-colors disabled:opacity-50\"\r\n                            title=\"삭제\"\r\n                          >\r\n                            <FaTrash />\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* 서적 폼 모달 */}\r\n        {bookState.showForm && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\r\n              <div className=\"p-6\">\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n                    {bookState.editingItem ? '서적 수정' : '서적 추가'}\r\n                  </h2>\r\n                  <button\r\n                    onClick={bookActions.handleCancel}\r\n                    className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\r\n                  >\r\n                    <FaTimes />\r\n                  </button>\r\n                </div>\r\n                <BookForm\r\n                  data={bookState.editingItem}\r\n                  onSave={bookActions.handleSave}\r\n                  onCancel={bookActions.handleCancel}\r\n                  isSaving={bookState.isSaving}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* 🌟 서적 상세보기 모달 */}\r\n        {showBookDetailModal && selectedBook && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-6xl w-full max-h-[90vh] flex flex-col shadow-2xl\">\r\n              {/* 🌟 고정 헤더 */}\r\n              <div className=\"flex-shrink-0 border-b border-gray-200 dark:border-gray-700 p-6\">\r\n                <div className=\"flex items-start justify-between\">\r\n                  <div className=\"flex items-start gap-4 flex-1\">\r\n                    {selectedBook.coverImage ? (\r\n                      <img \r\n                        src={selectedBook.coverImage} \r\n                        alt={selectedBook.title}\r\n                        className=\"w-20 h-28 object-cover rounded shadow-lg flex-shrink-0\"\r\n                      />\r\n                    ) : (\r\n                      <div className=\"w-20 h-28 bg-gradient-to-br from-blue-400 to-blue-600 rounded flex items-center justify-center shadow-lg flex-shrink-0\">\r\n                        <FaBook className=\"text-white text-2xl\" />\r\n                      </div>\r\n                    )}\r\n                    <div className=\"flex-1 min-w-0\">\r\n                      <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2 truncate\">\r\n                        {selectedBook.title}\r\n                      </h2>\r\n                      <p className=\"text-gray-600 dark:text-gray-400 mb-3\">\r\n                        저자: {selectedBook.author}\r\n                      </p>\r\n                      <div className=\"flex items-center gap-3 flex-wrap\">\r\n                        <span className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\">\r\n                          {selectedBook.category}\r\n                        </span>\r\n                        {renderRating(selectedBook.rating)}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    onClick={() => {\r\n                      setShowBookDetailModal(false)\r\n                      setSelectedChapterId(null)\r\n                    }}\r\n                    className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors flex-shrink-0\"\r\n                  >\r\n                    <FaTimes className=\"text-xl\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* 🌟 스크롤 가능한 콘텐츠 영역 */}\r\n              <div className=\"flex-1 overflow-y-auto p-6\">\r\n                <ChapterLearningList\r\n                  chapters={chapters}\r\n                  onAddChapter={() => {\r\n                    setShowChapterForm(true)\r\n                    setEditingChapter(null)\r\n                  }}\r\n                  onEditChapter={(chapter) => {\r\n                    setEditingChapter(chapter)\r\n                    setShowChapterForm(true)\r\n                  }}\r\n                  onDeleteChapter={handleDeleteChapter}\r\n                  onAddLearning={handleAddLearningClick}\r\n                  onEditLearning={handleEditLearningClick}\r\n                  onDeleteLearning={handleDeleteLearningClick}\r\n                  isAuthenticated={true}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* 🌟 목차 폼 모달 */}\r\n        {showChapterForm && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-[60]\">\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-md w-full mx-4 shadow-2xl\">\r\n              <ChapterForm\r\n                chapter={editingChapter}\r\n                onSave={handleSaveChapter}\r\n                onCancel={() => {\r\n                  setShowChapterForm(false)\r\n                  setEditingChapter(null)\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* 🌟 학습 내용 폼 모달 */}\r\n        {showLearningForm && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-[60] p-4\">\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto shadow-2xl\">\r\n              <LearningForm\r\n                learning={editingLearning}\r\n                onSave={handleSaveLearning}\r\n                onCancel={() => {\r\n                  setShowLearningForm(false)\r\n                  setEditingLearning(null)\r\n                  setSelectedChapterId(null)\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BookManager\r\n","import React, { useState, useMemo, useEffect } from 'react'\nimport { FaPlus, FaEdit, FaTrash, FaVideo, FaStar } from 'react-icons/fa'\nimport { VideoLearning, VideoLearningFormData } from '../../types'\nimport { useVideoLearningManagerData } from '../../hooks/useVideoLearnings'\nimport { useCRUDManager } from '../../hooks/useCRUDManager'\nimport { useToastHelpers } from '../../hooks/useToast'\nimport VideoLearningForm from '../forms/VideoLearningForm'\nimport { formatDate } from '../../utils/dateUtils'\nimport { extractUniqueCategories } from '../../utils/categoryUtils'\nimport { extractYouTubeId, getYouTubeThumbnail } from '../../utils/videoUtils'\n\ninterface VideoLearningManagerProps {\n  initialEditId?: string  // 🌟 URL state로 전달된 수정 대상 ID\n}\n\nconst VideoLearningManager: React.FC<VideoLearningManagerProps> = ({ initialEditId }) => {\n  const { success, error } = useToastHelpers()\n  const { \n    videoLearnings, \n    isLoading, \n    createVideoLearning, \n    updateVideoLearning, \n    deleteVideoLearning \n  } = useVideoLearningManagerData()\n\n  // 영상 학습 CRUD 관리\n  const [videoState, videoActions] = useCRUDManager<VideoLearning>({\n    onSave: async (data: VideoLearningFormData, editingItem) => {\n      console.log('📹 VideoLearningManager - 저장 시작:', data)\n      console.log('🔗 skillIds:', data.skillIds)\n      \n      if (editingItem) {\n        console.log('✏️ 영상 학습 수정 모드:', editingItem._id)\n        const result = await updateVideoLearning(editingItem._id, data)\n        console.log('✅ 수정 결과:', result)\n        if (result.success) {\n          success('영상 학습 수정 완료', '영상 학습 정보가 성공적으로 수정되었습니다.')\n        }\n      } else {\n        console.log('➕ 영상 학습 생성 모드')\n        const result = await createVideoLearning(data)\n        console.log('✅ 생성 결과:', result)\n        if (result.success) {\n          success('영상 학습 추가 완료', '새로운 영상 학습이 성공적으로 추가되었습니다.')\n        }\n      }\n    },\n    onDelete: async (video: VideoLearning) => {\n      await deleteVideoLearning(video._id)\n      success('영상 학습 삭제 완료', `${video.title}이(가) 삭제되었습니다.`)\n    },\n    onError: (err) => {\n      error('작업 실패', err.message || '알 수 없는 오류가 발생했습니다.')\n    }\n  })\n\n  // 카테고리 필터\n  const [categoryFilter, setCategoryFilter] = useState<string>('all')\n  const [hasAutoOpened, setHasAutoOpened] = useState(false)  // 🌟 자동 열림 추적\n  \n  // 동적 카테고리 추출\n  const availableCategories = useMemo(() => \n    extractUniqueCategories(videoLearnings), \n    [videoLearnings]\n  )\n\n  // 필터링된 영상 목록\n  const filteredVideos = useMemo(() => {\n    if (categoryFilter === 'all') return videoLearnings\n    return videoLearnings.filter(video => video.category === categoryFilter)\n  }, [videoLearnings, categoryFilter])\n\n  // 🌟 initialEditId가 전달되면 자동으로 해당 영상 수정 모드로 전환 (한 번만)\n  useEffect(() => {\n    if (initialEditId && videoLearnings.length > 0 && !hasAutoOpened) {\n      const videoToEdit = videoLearnings.find(video => video._id === initialEditId)\n      if (videoToEdit) {\n        console.log('🎯 자동 수정 모드 활성화:', videoToEdit.title)\n        videoActions.handleEdit(videoToEdit)\n        setHasAutoOpened(true)  // 🌟 한 번만 실행되도록 표시\n      }\n    }\n  }, [initialEditId, videoLearnings, hasAutoOpened, videoActions])\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center py-12\">\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* 헤더 */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white flex items-center gap-2\">\n            <FaVideo className=\"text-red-600\" /> 영상 학습 관리\n          </h2>\n          <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n            유튜브 영상을 통한 학습 기록을 관리합니다\n          </p>\n        </div>\n        {!videoState.showForm && (\n          <button\n            onClick={videoActions.handleCreate}\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors font-medium\"\n          >\n            <FaPlus /> 새 영상 추가\n          </button>\n        )}\n      </div>\n\n      {/* 카테고리 필터 */}\n      {!videoState.showForm && availableCategories.length > 0 && (\n        <div className=\"flex gap-2 flex-wrap\">\n          <button\n            onClick={() => setCategoryFilter('all')}\n            className={`px-4 py-2 rounded-lg transition-colors font-medium ${\n              categoryFilter === 'all'\n                ? 'bg-primary-600 text-white'\n                : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600'\n            }`}\n          >\n            전체 ({videoLearnings.length})\n          </button>\n          {availableCategories.map((cat) => {\n            const count = videoLearnings.filter(v => v.category === cat).length\n            return (\n              <button\n                key={cat}\n                onClick={() => setCategoryFilter(cat)}\n                className={`px-4 py-2 rounded-lg transition-colors font-medium ${\n                  categoryFilter === cat\n                    ? 'bg-primary-600 text-white'\n                    : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600'\n                }`}\n              >\n                {cat} ({count})\n              </button>\n            )\n          })}\n        </div>\n      )}\n\n      {/* 폼 */}\n      {videoState.showForm && (\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md border border-gray-200 dark:border-gray-700\">\n          <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-6\">\n            {videoState.editingItem ? '영상 학습 수정' : '새 영상 학습 추가'}\n          </h3>\n          <VideoLearningForm\n            data={videoState.editingItem || undefined}\n            onSave={videoActions.handleSave}\n            onCancel={videoActions.handleCancel}\n            isSaving={videoState.isSaving}\n            availableCategories={availableCategories}\n          />\n        </div>\n      )}\n\n      {/* 영상 목록 */}\n      {!videoState.showForm && (\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {filteredVideos.map((video) => {\n            const videoId = video.videoId\n            const thumbnailUrl = videoId ? getYouTubeThumbnail(videoId, 'hqdefault') : null\n\n            return (\n              <div\n                key={video._id}\n                className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden border border-gray-200 dark:border-gray-700 hover:shadow-lg transition-shadow\"\n              >\n                {/* 썸네일 */}\n                {thumbnailUrl && (\n                  <div className=\"relative aspect-video bg-gray-200 dark:bg-gray-700\">\n                    <img\n                      src={thumbnailUrl}\n                      alt={video.title}\n                      className=\"w-full h-full object-cover\"\n                    />\n                    <div className=\"absolute top-2 right-2 bg-black/70 px-2 py-1 rounded text-white text-xs font-medium\">\n                      YouTube\n                    </div>\n                  </div>\n                )}\n\n                {/* 내용 */}\n                <div className=\"p-4\">\n                  <div className=\"flex items-start justify-between mb-2\">\n                    <span className=\"px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded text-xs font-medium\">\n                      {video.category}\n                    </span>\n                    {video.rating && (\n                      <div className=\"flex items-center gap-1\">\n                        {Array.from({ length: 5 }, (_, i) => (\n                          <FaStar\n                            key={i}\n                            className={`text-xs ${\n                              i < video.rating! ? 'text-yellow-500' : 'text-gray-300 dark:text-gray-600'\n                            }`}\n                          />\n                        ))}\n                      </div>\n                    )}\n                  </div>\n\n                  <h4 className=\"font-bold text-gray-900 dark:text-white mb-2 line-clamp-2\">\n                    {video.title}\n                  </h4>\n\n                  {video.purpose && (\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-3 line-clamp-2\">\n                      {video.purpose}\n                    </p>\n                  )}\n\n                  <div className=\"flex items-center gap-2 text-xs text-gray-500 dark:text-gray-400 mb-4\">\n                    <span>{formatDate(video.watchDate)}</span>\n                    {video.skillIds && video.skillIds.length > 0 && (\n                      <>\n                        <span>•</span>\n                        <span>스킬 {video.skillIds.length}개</span>\n                      </>\n                    )}\n                  </div>\n\n                  {/* 액션 버튼 */}\n                  <div className=\"flex gap-2\">\n                    <button\n                      onClick={() => videoActions.handleEdit(video)}\n                      className=\"flex-1 flex items-center justify-center gap-2 px-3 py-2 bg-yellow-500 hover:bg-yellow-600 text-white rounded-lg transition-colors text-sm font-medium\"\n                    >\n                      <FaEdit /> 수정\n                    </button>\n                    <button\n                      onClick={() => videoActions.handleDelete(video)}\n                      className=\"flex-1 flex items-center justify-center gap-2 px-3 py-2 bg-red-500 hover:bg-red-600 text-white rounded-lg transition-colors text-sm font-medium\"\n                    >\n                      <FaTrash /> 삭제\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      )}\n\n      {/* 빈 상태 */}\n      {!videoState.showForm && filteredVideos.length === 0 && (\n        <div className=\"text-center py-12\">\n          <FaVideo className=\"text-6xl text-gray-400 mx-auto mb-4\" />\n          <p className=\"text-xl text-gray-600 dark:text-gray-400 mb-4\">\n            {categoryFilter === 'all' \n              ? '아직 등록된 영상 학습이 없습니다' \n              : `${categoryFilter} 카테고리에 영상 학습이 없습니다`}\n          </p>\n          <button\n            onClick={videoActions.handleCreate}\n            className=\"inline-flex items-center gap-2 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors font-medium\"\n          >\n            <FaPlus /> 첫 영상 추가하기\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default VideoLearningManager\n\n","/**\r\n * 카테고리 관련 유틸리티 함수들\r\n */\r\n\r\n/**\r\n * 카테고리 문자열의 첫 글자를 대문자로 변환하여 표시명 생성\r\n * @param category - 카테고리 문자열\r\n * @returns 표시용 카테고리 이름\r\n */\r\nexport const formatCategoryDisplayName = (category: string): string => {\r\n  if (!category) return '기타'\r\n  \r\n  // 특별한 경우 처리\r\n  const specialCases: { [key: string]: string } = {\r\n    'plc': 'PLC',\r\n    'iot': 'IoT',\r\n    '데이터분석': '데이터 분석',\r\n    '로봇공학': '로봇 공학',\r\n    '기타': '기타',\r\n    'all': '전체'\r\n  }\r\n  \r\n  const lowerCategory = category.toLowerCase()\r\n  if (specialCases[lowerCategory]) {\r\n    return specialCases[lowerCategory]\r\n  }\r\n  \r\n  // 일반적인 경우: 첫 글자만 대문자로 변환\r\n  return category.charAt(0).toUpperCase() + category.slice(1)\r\n}\r\n\r\n/**\r\n * 책 목록에서 모든 고유 카테고리를 추출\r\n * @param books - 책 목록\r\n * @returns 고유 카테고리 배열 (소문자로 정규화)\r\n */\r\nexport const extractUniqueCategories = (books: any[]): string[] => {\r\n  const categories = new Set<string>()\r\n  \r\n  // 기본 카테고리 추가\r\n  categories.add('all')\r\n  \r\n  // 책에서 카테고리 추출\r\n  books.forEach(book => {\r\n    if (book.category) {\r\n      categories.add(book.category.toLowerCase())\r\n    }\r\n  })\r\n  \r\n  return Array.from(categories).sort()\r\n}\r\n\r\n/**\r\n * 카테고리별 표시명 매핑 객체 생성\r\n * @param categories - 카테고리 배열\r\n * @returns 카테고리 표시명 매핑 객체\r\n */\r\nexport const createCategoryDisplayNames = (categories: string[]): { [key: string]: string } => {\r\n  const displayNames: { [key: string]: string } = {}\r\n  \r\n  categories.forEach(category => {\r\n    displayNames[category] = formatCategoryDisplayName(category)\r\n  })\r\n  \r\n  return displayNames\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FaPlus, FaEdit, FaTrash, FaList, FaStar, FaVideo, FaChevronDown, FaChevronUp } from 'react-icons/fa'\r\nimport { VideoPlaylist, VideoPlaylistFormData, PlaylistVideoFormData } from '../../types'\r\nimport { useVideoPlaylistManagerData, usePlaylistVideos, useCreatePlaylistVideo, useUpdatePlaylistVideo, useDeletePlaylistVideo } from '../../hooks/useVideoPlaylists'\r\nimport { useCRUDManager } from '../../hooks/useCRUDManager'\r\nimport { useToastHelpers } from '../../hooks/useToast'\r\nimport VideoPlaylistForm from '../forms/VideoPlaylistForm'\r\nimport PlaylistVideoForm from '../forms/PlaylistVideoForm'\r\nimport { formatDate } from '../../utils/dateUtils'\r\nimport { extractYouTubeId } from '../../utils/videoUtils'\r\n\r\nconst VideoPlaylistManager: React.FC = () => {\r\n  const { success, error } = useToastHelpers()\r\n  const { \r\n    playlists, \r\n    isLoading, \r\n    createPlaylist, \r\n    updatePlaylist, \r\n    deletePlaylist \r\n  } = useVideoPlaylistManagerData()\r\n\r\n  const [expandedPlaylistId, setExpandedPlaylistId] = useState<string | null>(null)\r\n  const [showVideoForm, setShowVideoForm] = useState(false)\r\n  const [editingVideo, setEditingVideo] = useState<any>(null)\r\n  const [showBulkAddForm, setShowBulkAddForm] = useState(false)\r\n  const [bulkVideoUrls, setBulkVideoUrls] = useState('')\r\n\r\n  const { data: playlistVideos = [] } = usePlaylistVideos(expandedPlaylistId || undefined)\r\n  const createVideoMutation = useCreatePlaylistVideo()\r\n  const updateVideoMutation = useUpdatePlaylistVideo()\r\n  const deleteVideoMutation = useDeletePlaylistVideo()\r\n\r\n  const [playlistState, playlistActions] = useCRUDManager<VideoPlaylist>({\r\n    onSave: async (data: VideoPlaylistFormData, editingItem) => {\r\n      if (editingItem) {\r\n        const result = await updatePlaylist(editingItem._id, data)\r\n        if (result.success) {\r\n          success('재생 목록 수정 완료', '재생 목록이 성공적으로 수정되었습니다.')\r\n        }\r\n      } else {\r\n        const result = await createPlaylist(data)\r\n        if (result.success) {\r\n          success('재생 목록 추가 완료', '새로운 재생 목록이 추가되었습니다.')\r\n        }\r\n      }\r\n    },\r\n    onDelete: async (playlist: VideoPlaylist) => {\r\n      await deletePlaylist(playlist._id)\r\n      success('재생 목록 삭제 완료', `${playlist.title}이(가) 삭제되었습니다.`)\r\n    },\r\n    onError: (err) => {\r\n      error('작업 실패', err.message || '알 수 없는 오류가 발생했습니다.')\r\n    }\r\n  })\r\n\r\n  // 영상 저장 핸들러\r\n  const handleSaveVideo = async (data: PlaylistVideoFormData) => {\r\n    try {\r\n      if (editingVideo) {\r\n        await updateVideoMutation.mutateAsync({ id: editingVideo._id, data })\r\n        success('영상 수정 완료', '영상 학습 기록이 수정되었습니다.')\r\n      } else {\r\n        await createVideoMutation.mutateAsync(data)\r\n        success('영상 추가 완료', '새로운 영상 학습 기록이 추가되었습니다.')\r\n      }\r\n      setShowVideoForm(false)\r\n      setEditingVideo(null)\r\n    } catch (err) {\r\n      error('영상 저장 실패', '영상 저장 중 오류가 발생했습니다.')\r\n    }\r\n  }\r\n\r\n  // 영상 삭제 핸들러\r\n  const handleDeleteVideo = async (videoId: string) => {\r\n    if (!confirm('이 영상 학습 기록을 삭제하시겠습니까?')) return\r\n    try {\r\n      await deleteVideoMutation.mutateAsync(videoId)\r\n      success('영상 삭제 완료', '영상 학습 기록이 삭제되었습니다.')\r\n    } catch (err) {\r\n      error('영상 삭제 실패', '영상 삭제 중 오류가 발생했습니다.')\r\n    }\r\n  }\r\n\r\n  // 영상 URL 일괄 추가 핸들러\r\n  const handleBulkAddVideos = async () => {\r\n    if (!bulkVideoUrls.trim() || !expandedPlaylistId) {\r\n      alert('영상 URL을 입력해주세요')\r\n      return\r\n    }\r\n\r\n    const urls = bulkVideoUrls.split('\\n').map(url => url.trim()).filter((url): url is string => Boolean(url))\r\n    \r\n    if (urls.length === 0) {\r\n      alert('유효한 URL이 없습니다')\r\n      return\r\n    }\r\n\r\n    try {\r\n      let successCount = 0\r\n      \r\n      for (const url of urls) {\r\n        if (!url) continue\r\n        \r\n        const videoId = extractYouTubeId(url)\r\n        \r\n        if (!videoId) {\r\n          console.warn(`유효하지 않은 URL: ${url}`)\r\n          continue\r\n        }\r\n\r\n        const videoData: PlaylistVideoFormData = {\r\n          playlistId: expandedPlaylistId!,\r\n          videoId: videoId,\r\n          title: `영상 ${playlistVideos.length + successCount + 1}`,\r\n          keyTakeaways: '',\r\n          order: playlistVideos.length + successCount,\r\n        }\r\n\r\n        await createVideoMutation.mutateAsync(videoData)\r\n        successCount++\r\n      }\r\n\r\n      setBulkVideoUrls('')\r\n      setShowBulkAddForm(false)\r\n      success('일괄 추가 완료', `${successCount}개의 영상이 추가되었습니다. 각 영상의 제목과 핵심 배움을 수정해주세요.`)\r\n    } catch (err) {\r\n      error('일괄 추가 실패', '영상 추가 중 오류가 발생했습니다.')\r\n    }\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-12\">\r\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white flex items-center gap-2\">\r\n          <FaList className=\"text-red-600\" />\r\n          재생 목록 관리\r\n        </h2>\r\n        <button\r\n          onClick={playlistActions.handleCreate}\r\n          className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors shadow-md\"\r\n        >\r\n          <FaPlus />\r\n          재생 목록 추가\r\n        </button>\r\n      </div>\r\n\r\n      {/* 재생 목록 폼 */}\r\n      {playlistState.showForm && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"p-6\">\r\n              <h2 className=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">\r\n                {playlistState.editingItem ? '재생 목록 수정' : '재생 목록 추가'}\r\n              </h2>\r\n              {playlistState.editingItem ? (\r\n                <VideoPlaylistForm\r\n                  data={playlistState.editingItem}\r\n                  onSave={playlistActions.handleSave}\r\n                  onCancel={playlistActions.handleCancel}\r\n                  isSaving={playlistState.isSaving}\r\n                />\r\n              ) : (\r\n                <VideoPlaylistForm\r\n                  onSave={playlistActions.handleSave}\r\n                  onCancel={playlistActions.handleCancel}\r\n                  isSaving={playlistState.isSaving}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 영상 폼 모달 */}\r\n      {showVideoForm && expandedPlaylistId && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"p-6\">\r\n              <h2 className=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">\r\n                {editingVideo ? '영상 학습 기록 수정' : '영상 학습 기록 추가'}\r\n              </h2>\r\n              <PlaylistVideoForm\r\n                playlistId={expandedPlaylistId}\r\n                data={editingVideo}\r\n                onSave={handleSaveVideo}\r\n                onCancel={() => {\r\n                  setShowVideoForm(false)\r\n                  setEditingVideo(null)\r\n                }}\r\n                isSaving={createVideoMutation.isPending || updateVideoMutation.isPending}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 재생 목록 목록 */}\r\n      <div className=\"grid gap-4\">\r\n        {playlists.map((playlist) => {\r\n          const isExpanded = expandedPlaylistId === playlist._id\r\n          const currentVideos = isExpanded ? playlistVideos : []\r\n          \r\n          return (\r\n            <div\r\n              key={playlist._id}\r\n              className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 overflow-hidden hover:shadow-lg transition-shadow\"\r\n            >\r\n              {/* 재생 목록 헤더 */}\r\n              <div className=\"p-6\">\r\n                <div className=\"flex items-start justify-between\">\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"flex items-center gap-2 mb-2\">\r\n                      <h3 className=\"text-xl font-bold text-gray-900 dark:text-white\">\r\n                        {playlist.title}\r\n                      </h3>\r\n                      <button\r\n                        onClick={() => setExpandedPlaylistId(isExpanded ? null : playlist._id)}\r\n                        className=\"p-1 hover:bg-gray-100 dark:hover:bg-gray-700 rounded\"\r\n                        title={isExpanded ? '영상 목록 접기' : '영상 목록 펼치기'}\r\n                      >\r\n                        {isExpanded ? <FaChevronUp /> : <FaChevronDown />}\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"flex flex-wrap gap-3 text-sm text-gray-600 dark:text-gray-400 mb-2\">\r\n                      {/* 🌟 다중 카테고리 표시 */}\r\n                      {playlist.categoryIds && playlist.categoryIds.length > 0 ? (\r\n                        (playlist.categoryIds as any[]).map((catIdOrObj: any) => {\r\n                          const catName = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?.name\r\n                          return catName ? (\r\n                            <span \r\n                              key={typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id}\r\n                              className=\"px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded\"\r\n                            >\r\n                              {catName}\r\n                            </span>\r\n                          ) : null\r\n                        })\r\n                      ) : (\r\n                        // 호환성: categoryIds가 없으면 기존 category 표시\r\n                        playlist.category && (\r\n                          <span className=\"px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded\">\r\n                            {playlist.category}\r\n                          </span>\r\n                        )\r\n                      )}\r\n                      {playlist.rating && (\r\n                        <div className=\"flex items-center gap-1\">\r\n                          {Array.from({ length: 5 }, (_, i) => (\r\n                            <FaStar\r\n                              key={i}\r\n                              className={`text-sm ${\r\n                                i < playlist.rating! ? 'text-yellow-500' : 'text-gray-300'\r\n                              }`}\r\n                            />\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n                      <span>시청일: {formatDate(playlist.watchDate)}</span>\r\n                    </div>\r\n                    {playlist.purpose && (\r\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400 line-clamp-2\">{playlist.purpose}</p>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"flex gap-2 ml-4\">\r\n                    <button\r\n                      onClick={() => playlistActions.handleEdit(playlist)}\r\n                      className=\"p-2 text-yellow-600 hover:bg-yellow-100 dark:hover:bg-yellow-900 rounded-lg transition-colors\"\r\n                      title=\"재생 목록 수정\"\r\n                    >\r\n                      <FaEdit />\r\n                    </button>\r\n                    <button\r\n                      onClick={() => playlistActions.handleDelete(playlist)}\r\n                      disabled={playlistState.isDeleting}\r\n                      className=\"p-2 text-red-600 hover:bg-red-100 dark:hover:bg-red-900 rounded-lg transition-colors\"\r\n                      title=\"재생 목록 삭제\"\r\n                    >\r\n                      <FaTrash />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* 영상 관리 섹션 - 펼쳐진 경우에만 표시 */}\r\n              {isExpanded && (\r\n                <div className=\"border-t border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-900 p-6\">\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <h4 className=\"font-bold text-gray-900 dark:text-white flex items-center gap-2\">\r\n                      <FaVideo /> 영상 관리 ({currentVideos.length}개)\r\n                    </h4>\r\n                    <div className=\"flex gap-2\">\r\n                      <button\r\n                        onClick={() => setShowBulkAddForm(!showBulkAddForm)}\r\n                        className=\"flex items-center gap-2 px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors text-sm\"\r\n                      >\r\n                        <FaList /> 영상 일괄 추가\r\n                      </button>\r\n                      <button\r\n                        onClick={() => {\r\n                          setEditingVideo(null)\r\n                          setShowVideoForm(true)\r\n                        }}\r\n                        className=\"flex items-center gap-2 px-3 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm\"\r\n                      >\r\n                        <FaPlus /> 영상 추가\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* 영상 URL 일괄 추가 폼 */}\r\n                  {showBulkAddForm && (\r\n                    <div className=\"mb-4 p-4 border-2 border-green-500 rounded-lg bg-white dark:bg-gray-800\">\r\n                      <h5 className=\"font-bold text-gray-900 dark:text-white mb-2\">\r\n                        📝 영상 URL 일괄 추가\r\n                      </h5>\r\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-3\">\r\n                        재생 목록의 각 영상 URL을 한 줄에 하나씩 입력하세요. 위에서부터 순서대로 추가됩니다.\r\n                      </p>\r\n                      <textarea\r\n                        value={bulkVideoUrls}\r\n                        onChange={(e) => setBulkVideoUrls(e.target.value)}\r\n                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white font-mono text-sm mb-3\"\r\n                        rows={6}\r\n                        placeholder=\"https://www.youtube.com/watch?v=VIDEO_ID_1&#10;https://www.youtube.com/watch?v=VIDEO_ID_2&#10;https://www.youtube.com/watch?v=VIDEO_ID_3\"\r\n                      />\r\n                      <div className=\"flex gap-2\">\r\n                        <button\r\n                          onClick={handleBulkAddVideos}\r\n                          disabled={createVideoMutation.isPending}\r\n                          className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors text-sm font-medium\"\r\n                        >\r\n                          {createVideoMutation.isPending ? '추가 중...' : '일괄 추가'}\r\n                        </button>\r\n                        <button\r\n                          onClick={() => {\r\n                            setShowBulkAddForm(false)\r\n                            setBulkVideoUrls('')\r\n                          }}\r\n                          className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors text-sm font-medium\"\r\n                        >\r\n                          취소\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* 영상 목록 */}\r\n                  {currentVideos.length > 0 ? (\r\n                    <div className=\"space-y-2\">\r\n                      {currentVideos.map((video, index) => (\r\n                        <div\r\n                          key={video._id}\r\n                          className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4\"\r\n                        >\r\n                          <div className=\"flex items-start justify-between\">\r\n                            <div className=\"flex-1\">\r\n                              <div className=\"flex items-center gap-2 mb-1\">\r\n                                <span className=\"text-sm font-bold text-primary-600 dark:text-primary-400\">\r\n                                  #{index + 1}\r\n                                </span>\r\n                                <h5 className=\"font-semibold text-gray-900 dark:text-white\">\r\n                                  {video.title}\r\n                                </h5>\r\n                              </div>\r\n                              <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                                ID: {video.videoId}\r\n                              </p>\r\n                              {video.keyTakeaways && (\r\n                                <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-2 line-clamp-2\">\r\n                                  {video.keyTakeaways}\r\n                                </p>\r\n                              )}\r\n                            </div>\r\n                            <div className=\"flex gap-2 ml-4\">\r\n                              <button\r\n                                onClick={() => {\r\n                                  setEditingVideo(video)\r\n                                  setShowVideoForm(true)\r\n                                }}\r\n                                className=\"p-2 text-yellow-600 hover:bg-yellow-100 dark:hover:bg-yellow-900 rounded transition-colors\"\r\n                                title=\"영상 수정\"\r\n                              >\r\n                                <FaEdit />\r\n                              </button>\r\n                              <button\r\n                                onClick={() => handleDeleteVideo(video._id)}\r\n                                className=\"p-2 text-red-600 hover:bg-red-100 dark:hover:bg-red-900 rounded transition-colors\"\r\n                                title=\"영상 삭제\"\r\n                              >\r\n                                <FaTrash />\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"text-center py-8 text-gray-500 dark:text-gray-400 bg-white dark:bg-gray-800 rounded-lg\">\r\n                      <FaVideo className=\"text-4xl mx-auto mb-2 opacity-30\" />\r\n                      <p className=\"text-sm\">이 재생 목록에 등록된 영상이 없습니다</p>\r\n                      <p className=\"text-xs mt-1\">위의 \"영상 일괄 추가\" 버튼을 사용하세요</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )\r\n        })}\r\n\r\n        {playlists.length === 0 && (\r\n          <div className=\"text-center py-12 text-gray-500 dark:text-gray-400\">\r\n            <FaList className=\"text-6xl mx-auto mb-4 opacity-30\" />\r\n            <p>아직 등록된 재생 목록이 없습니다</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VideoPlaylistManager\r\n\r\n","import React, { useState, useMemo } from 'react'\r\nimport { FaPlus, FaEdit, FaTrash } from 'react-icons/fa'\r\nimport { Experience, ExperienceFormData } from '../../types'\r\nimport ExperienceForm from '../forms/ExperienceForm'\r\nimport { useExperienceManagerData } from '../../hooks/useExperienceManagerData'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\ninterface ExperienceManagerProps {\r\n  experienceFilter?: 'all' | 'company' | 'year'\r\n  experienceSearchTerm?: string\r\n  selectedExperienceCompany?: string\r\n  selectedExperienceYear?: string\r\n}\r\n\r\nconst ExperienceManager: React.FC<ExperienceManagerProps> = ({ \r\n  experienceFilter = 'all', \r\n  experienceSearchTerm = '', \r\n  selectedExperienceCompany = '',\r\n  selectedExperienceYear = ''\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { experiences, isLoading, createExperience, updateExperience, deleteExperience } = useExperienceManagerData()\r\n  const [showForm, setShowForm] = useState(false)\r\n  const [editingItem, setEditingItem] = useState<Experience | null>(null)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n\r\n  // 필터링된 경력 목록 계산\r\n  const filteredExperiences = useMemo(() => {\r\n    let filtered = [...experiences]\r\n\r\n    // 필터 적용\r\n    if (experienceFilter === 'company' && selectedExperienceCompany) {\r\n      filtered = filtered.filter(exp => exp.company === selectedExperienceCompany)\r\n    } else if (experienceFilter === 'year' && selectedExperienceYear) {\r\n      filtered = filtered.filter(exp => {\r\n        // period에서 연도 추출 (예: \"2023.01 - 2023.12\" 또는 \"2023 - 현재\")\r\n        const period = exp.period || ''\r\n        return period.includes(selectedExperienceYear)\r\n      })\r\n    }\r\n\r\n    // 검색어 적용\r\n    if (experienceSearchTerm) {\r\n      const searchLower = experienceSearchTerm.toLowerCase()\r\n      filtered = filtered.filter(exp => \r\n        exp.title.toLowerCase().includes(searchLower) ||\r\n        exp.company.toLowerCase().includes(searchLower) ||\r\n        (exp.description && exp.description.toLowerCase().includes(searchLower))\r\n      )\r\n    }\r\n\r\n    return filtered\r\n  }, [experiences, experienceFilter, experienceSearchTerm, selectedExperienceCompany, selectedExperienceYear])\r\n\r\n  // 회사 목록은 필요시 사용\r\n  // const experienceCompanies = useMemo(() => {\r\n  //   const companies = [...new Set(experiences.map(exp => exp.company))]\r\n  //   return companies.sort()\r\n  // }, [experiences])\r\n\r\n  // 연도 목록은 필요시 사용\r\n  // const experienceYears = useMemo(() => {\r\n  //   const years = new Set<string>()\r\n  //   experiences.forEach(exp => {\r\n  //     const period = exp.period || ''\r\n  //     const yearMatches = period.match(/\\b(20\\d{2})\\b/g)\r\n  //     if (yearMatches) {\r\n  //       yearMatches.forEach(year => years.add(year))\r\n  //     }\r\n  //   })\r\n  //   return Array.from(years).sort().reverse()\r\n  // }, [experiences])\r\n\r\n  const handleSave = async (data: ExperienceFormData) => {\r\n    try {\r\n      setIsSaving(true)\r\n      if (editingItem) {\r\n        const result = await updateExperience(editingItem._id!, data)\r\n        if (result.success) {\r\n          setShowForm(false)\r\n          setEditingItem(null)\r\n        }\r\n      } else {\r\n        const result = await createExperience(data)\r\n        if (result.success) {\r\n          setShowForm(false)\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('저장 실패:', error)\r\n    } finally {\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setShowForm(false)\r\n    setEditingItem(null)\r\n  }\r\n\r\n  const handleDelete = async (experience: Experience) => {\r\n    if (confirm(t('experience.confirmDelete'))) {\r\n      try {\r\n        setIsDeleting(true)\r\n        await deleteExperience(experience._id!)\r\n      } catch (error) {\r\n        console.error('삭제 실패:', error)\r\n      } finally {\r\n        setIsDeleting(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleAddNew = () => {\r\n    setEditingItem(null)\r\n    setShowForm(true)\r\n  }\r\n\r\n  const handleEdit = (experience: Experience) => {\r\n    setEditingItem(experience)\r\n    setShowForm(true)\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-8\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n        <span className=\"ml-2\">{t('experience.loading')}</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <h2 className=\"text-2xl font-bold\">{t('experience.management')}</h2>\r\n        <button\r\n          onClick={handleAddNew}\r\n          className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2\"\r\n        >\r\n          <FaPlus />\r\n          {t('experience.add')}\r\n        </button>\r\n      </div>\r\n\r\n      {/* 필터 정보 표시 */}\r\n      {(experienceFilter !== 'all' || experienceSearchTerm || selectedExperienceCompany || selectedExperienceYear) && (\r\n        <div className=\"mb-4 p-4 bg-gray-100 dark:bg-gray-700 rounded-lg\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                {t('experience.currentFilter')}\r\n                {experienceFilter === 'all' && !experienceSearchTerm && ` 💼 ${t('experience.allExperiences')}`}\r\n                {experienceFilter === 'company' && selectedExperienceCompany && ` 🏢 ${selectedExperienceCompany} ${t('experience.company_')}`}\r\n                {experienceFilter === 'year' && selectedExperienceYear && ` 📅 ${selectedExperienceYear}${t('experience.year')}`}\r\n                {experienceSearchTerm && ` 🔍 \"${experienceSearchTerm}\" ${t('experience.search')}`}\r\n              </h4>\r\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n                {filteredExperiences.length}{t('experience.showing')} {experiences.length}{t('experience.total')}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {showForm && (\r\n        <div className=\"mb-6\">\r\n          <ExperienceForm\r\n            data={editingItem}\r\n            onSave={handleSave}\r\n            onCancel={handleCancel}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* 경력 목록 */}\r\n      {filteredExperiences.length > 0 ? (\r\n        <div className=\"space-y-4\">\r\n          {filteredExperiences.map((experience) => (\r\n            <div key={experience._id} className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg border border-gray-200 dark:border-gray-600\">\r\n              <div className=\"flex justify-between items-start\">\r\n                <div className=\"flex-1\">\r\n                  <h3 className=\"font-semibold text-lg\">{experience.title}</h3>\r\n                  <p className=\"text-gray-600 dark:text-gray-400\">{experience.company}</p>\r\n                  <p className=\"text-sm text-gray-500 dark:text-gray-500\">\r\n                    {experience.period}\r\n                  </p>\r\n                  {experience.description && (\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-2 line-clamp-2\">\r\n                      {experience.description}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                <div className=\"flex gap-2 ml-4\">\r\n                  <button\r\n                    onClick={() => handleEdit(experience)}\r\n                    className=\"p-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\r\n                    disabled={isSaving || isDeleting}\r\n                  >\r\n                    <FaEdit />\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleDelete(experience)}\r\n                    className=\"p-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\r\n                    disabled={isSaving || isDeleting}\r\n                  >\r\n                    <FaTrash />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center py-12\">\r\n          <p className=\"text-gray-500 dark:text-gray-400 text-lg mb-4\">\r\n            {experienceFilter !== 'all' || experienceSearchTerm || selectedExperienceCompany || selectedExperienceYear\r\n              ? t('experience.noFilteredResults')\r\n              : t('experience.noExperiences')\r\n            }\r\n          </p>\r\n          {(experienceFilter !== 'all' || experienceSearchTerm || selectedExperienceCompany || selectedExperienceYear) && (\r\n            <p className=\"text-sm text-gray-400 dark:text-gray-500\">\r\n              {t('experience.resetFilter')}\r\n            </p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExperienceManager","import React, { useState, useMemo } from 'react'\r\nimport { FaPlus, FaEdit, FaTrash } from 'react-icons/fa'\r\nimport { Project, ProjectFormData } from '../../types'\r\nimport ProjectForm from '../forms/ProjectForm'\r\nimport { useProjectManagerData } from '../../hooks/useProjectManagerData'\r\n\r\ninterface ProjectManagerProps {\r\n  projectFilter?: 'all' | 'category' | 'featured'\r\n  projectSearchTerm?: string\r\n  selectedProjectCategory?: string\r\n}\r\n\r\nconst ProjectManager: React.FC<ProjectManagerProps> = ({ \r\n  projectFilter = 'all', \r\n  projectSearchTerm = '', \r\n  selectedProjectCategory = ''\r\n}) => {\r\n  const { projects, isLoading, createProject, updateProject, deleteProject } = useProjectManagerData()\r\n  const [showForm, setShowForm] = useState(false)\r\n  const [editingItem, setEditingItem] = useState<Project | null>(null)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n\r\n  // 필터링된 프로젝트 목록 계산\r\n  const filteredProjects = useMemo(() => {\r\n    let filtered = [...projects]\r\n\r\n    // 필터 적용\r\n    if (projectFilter === 'category' && selectedProjectCategory) {\r\n      filtered = filtered.filter(project => project.category === selectedProjectCategory)\r\n    } else if (projectFilter === 'featured') {\r\n      // 주요 프로젝트: 완료된 프로젝트 중 상세 설명이 있는 것\r\n      filtered = filtered.filter(project => \r\n        project.status === 'completed' && \r\n        project.detailedDescription && \r\n        project.detailedDescription.trim().length > 0\r\n      )\r\n    }\r\n\r\n    // 검색어 적용\r\n    if (projectSearchTerm) {\r\n      const searchLower = projectSearchTerm.toLowerCase()\r\n      filtered = filtered.filter(project => \r\n        project.title.toLowerCase().includes(searchLower) ||\r\n        project.description.toLowerCase().includes(searchLower) ||\r\n        (project.technologies && project.technologies.some(tech => \r\n          tech.toLowerCase().includes(searchLower)\r\n        )) ||\r\n        (project.category && project.category.toLowerCase().includes(searchLower))\r\n      )\r\n    }\r\n\r\n    return filtered\r\n  }, [projects, projectFilter, projectSearchTerm, selectedProjectCategory])\r\n\r\n  // 카테고리 목록은 필요시 사용\r\n  // const projectCategories = useMemo(() => {\r\n  //   const categories = [...new Set(projects.map(project => project.category).filter(Boolean))]\r\n  //   return categories.sort()\r\n  // }, [projects])\r\n\r\n  // 주요 프로젝트 수 계산\r\n  const featuredProjectsCount = useMemo(() => {\r\n    return projects.filter(project => \r\n      project.status === 'completed' && \r\n      project.detailedDescription && \r\n      project.detailedDescription.trim().length > 0\r\n    ).length\r\n  }, [projects])\r\n\r\n  const handleSave = async (data: ProjectFormData) => {\r\n    console.log('🎯 ProjectManager handleSave 호출됨')\r\n    console.log('📦 받은 데이터:', data)\r\n    console.log('🔗 skillIds:', data.skillIds)\r\n    \r\n    try {\r\n      setIsSaving(true)\r\n      console.log('⏳ isSaving = true 설정됨')\r\n      \r\n      if (editingItem) {\r\n        console.log('✏️ 프로젝트 수정 모드:', editingItem._id)\r\n        const result = await updateProject(editingItem._id!, data)\r\n        console.log('✅ 수정 결과:', result)\r\n        if (result.success) {\r\n          setShowForm(false)\r\n          setEditingItem(null)\r\n          alert('✅ 프로젝트가 성공적으로 수정되었습니다!')\r\n        } else {\r\n          // 🌟 서버 오류 메시지 상세 출력\r\n          console.error('❌ 서버 거부 이유:', result.error)\r\n          const errorMsg = (result.error as any)?.response?.data?.message || '알 수 없는 오류'\r\n          alert(`❌ 프로젝트 수정 실패: ${errorMsg}`)\r\n          if ((result.error as any)?.response?.data) {\r\n            console.error('📋 서버 응답 상세:', (result.error as any).response.data)\r\n          }\r\n        }\r\n      } else {\r\n        console.log('➕ 프로젝트 생성 모드')\r\n        const result = await createProject(data)\r\n        console.log('✅ 생성 결과:', result)\r\n        if (result.success) {\r\n          setShowForm(false)\r\n          alert('✅ 프로젝트가 성공적으로 추가되었습니다!')\r\n        } else {\r\n          // 🌟 서버 오류 메시지 상세 출력\r\n          console.error('❌ 서버 거부 이유:', result.error)\r\n          const errorMsg = (result.error as any)?.response?.data?.message || '알 수 없는 오류'\r\n          alert(`❌ 프로젝트 추가 실패: ${errorMsg}`)\r\n          if ((result.error as any)?.response?.data) {\r\n            console.error('📋 서버 응답 상세:', (result.error as any).response.data)\r\n          }\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      console.error('❌ 저장 실패:', error)\r\n      // 🌟 Axios 오류 상세 정보 출력\r\n      const errorMsg = error?.response?.data?.message || error.message || '알 수 없는 오류'\r\n      alert(`❌ 저장 중 오류 발생: ${errorMsg}`)\r\n      if (error?.response?.data) {\r\n        console.error('📋 서버 응답 상세:', error.response.data)\r\n        console.error('🔢 상태 코드:', error.response.status)\r\n      }\r\n    } finally {\r\n      console.log('🏁 isSaving = false 설정됨')\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setShowForm(false)\r\n    setEditingItem(null)\r\n  }\r\n\r\n  const handleDelete = async (project: Project) => {\r\n    if (confirm('정말 삭제하시겠습니까?')) {\r\n      try {\r\n        setIsDeleting(true)\r\n        await deleteProject(project._id!)\r\n      } catch (error) {\r\n        console.error('삭제 실패:', error)\r\n      } finally {\r\n        setIsDeleting(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleAddNew = () => {\r\n    setEditingItem(null)\r\n    setShowForm(true)\r\n  }\r\n\r\n  const handleEdit = (project: Project) => {\r\n    setEditingItem(project)\r\n    setShowForm(true)\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-8\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n        <span className=\"ml-2\">프로젝트 데이터를 불러오는 중...</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <h2 className=\"text-2xl font-bold\">프로젝트 관리</h2>\r\n        <button\r\n          onClick={handleAddNew}\r\n          className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2\"\r\n        >\r\n          <FaPlus />\r\n          프로젝트 추가\r\n        </button>\r\n      </div>\r\n\r\n      {/* 필터 정보 표시 */}\r\n      {(projectFilter !== 'all' || projectSearchTerm || selectedProjectCategory) && (\r\n        <div className=\"mb-4 p-4 bg-gray-100 dark:bg-gray-700 rounded-lg\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                현재 필터: \r\n                {projectFilter === 'all' && !projectSearchTerm && ' 📁 모든 프로젝트'}\r\n                {projectFilter === 'category' && selectedProjectCategory && ` 🏷️ ${selectedProjectCategory} 카테고리`}\r\n                {projectFilter === 'featured' && ' 🌟 주요 프로젝트'}\r\n                {projectSearchTerm && ` 🔍 \"${projectSearchTerm}\" 검색`}\r\n              </h4>\r\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n                {filteredProjects.length}개 프로젝트 표시 중 (전체 {projects.length}개)\r\n                {projectFilter === 'featured' && ` (주요 프로젝트: ${featuredProjectsCount}개)`}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {showForm && (\r\n        <div className=\"mb-6\">\r\n          <ProjectForm\r\n            data={editingItem}\r\n            onSave={handleSave}\r\n            onCancel={handleCancel}\r\n            isSaving={isSaving}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* 프로젝트 목록 */}\r\n      {filteredProjects.length > 0 ? (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {filteredProjects.map((project) => (\r\n            <div key={project._id} className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg border border-gray-200 dark:border-gray-600\">\r\n              <h3 className=\"font-semibold text-lg mb-2\">{project.title}</h3>\r\n              <p className=\"text-gray-600 dark:text-gray-400 text-sm mb-2 line-clamp-2\">{project.description}</p>\r\n              {project.category && (\r\n                <p className=\"text-xs text-blue-600 dark:text-blue-400 mb-3\">{project.category}</p>\r\n              )}\r\n              {project.technologies && project.technologies.length > 0 && (\r\n                <div className=\"flex flex-wrap gap-1 mb-3\">\r\n                  {project.technologies.slice(0, 3).map((tech, index) => (\r\n                    <span key={index} className=\"text-xs bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-gray-300 px-2 py-1 rounded\">\r\n                      {tech}\r\n                    </span>\r\n                  ))}\r\n                  {project.technologies.length > 3 && (\r\n                    <span className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                      +{project.technologies.length - 3}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              )}\r\n              <div className=\"flex justify-between items-center\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <span className={`px-2 py-1 rounded text-xs ${\r\n                    project.status === 'completed' \r\n                      ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-300' \r\n                      : 'bg-yellow-100 dark:bg-yellow-900/30 text-yellow-800 dark:text-yellow-300'\r\n                  }`}>\r\n                    {project.status === 'completed' ? '완료' : '진행중'}\r\n                  </span>\r\n                  {project.status === 'completed' && project.detailedDescription && project.detailedDescription.trim().length > 0 && (\r\n                    <span className=\"text-xs bg-purple-100 dark:bg-purple-900/30 text-purple-800 dark:text-purple-300 px-2 py-1 rounded\">\r\n                      🌟 주요\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div className=\"flex gap-2\">\r\n                  <button\r\n                    onClick={() => handleEdit(project)}\r\n                    className=\"p-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\r\n                    disabled={isSaving || isDeleting}\r\n                  >\r\n                    <FaEdit />\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleDelete(project)}\r\n                    className=\"p-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\r\n                    disabled={isSaving || isDeleting}\r\n                  >\r\n                    <FaTrash />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center py-12\">\r\n          <p className=\"text-gray-500 dark:text-gray-400 text-lg mb-4\">\r\n            {projectFilter !== 'all' || projectSearchTerm || selectedProjectCategory\r\n              ? '필터 조건에 맞는 프로젝트가 없습니다.'\r\n              : '등록된 프로젝트가 없습니다.'\r\n            }\r\n          </p>\r\n          {(projectFilter !== 'all' || projectSearchTerm || selectedProjectCategory) && (\r\n            <p className=\"text-sm text-gray-400 dark:text-gray-500\">\r\n              필터를 초기화하거나 다른 검색어를 시도해보세요.\r\n            </p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectManager","import React, { useState } from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport { FaTimes, FaEnvelope, FaUser, FaCalendar, FaCheck, FaTrash, FaReply, FaArrowLeft, FaSpinner } from 'react-icons/fa'\r\nimport { ContactMessage } from '../../types'\r\nimport { useMessageDetail } from '../../hooks/useMessageDetail'\r\n\r\ninterface MessageDetailProps {\r\n  messageId: string | undefined\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  onMarkAsRead: (id: string) => Promise<void>\r\n  onDelete: (id: string) => Promise<void>\r\n  onReply?: (message: ContactMessage) => void\r\n}\r\n\r\nconst MessageDetail: React.FC<MessageDetailProps> = ({\r\n  messageId,\r\n  isOpen,\r\n  onClose,\r\n  onMarkAsRead,\r\n  onDelete,\r\n  onReply\r\n}) => {\r\n  const [isProcessing, setIsProcessing] = useState(false)\r\n  const [showReplyForm, setShowReplyForm] = useState(false)\r\n  const [replyContent, setReplyContent] = useState('')\r\n\r\n  // React Query를 사용한 메시지 상세 정보 로딩\r\n  const { \r\n    data: message, \r\n    isLoading, \r\n    isError, \r\n    error,\r\n    refetch \r\n  } = useMessageDetail(messageId, {\r\n    enabled: isOpen && !!messageId // 모달이 열려있고 messageId가 있을 때만 쿼리 실행\r\n  })\r\n\r\n  const handleMarkAsRead = async () => {\r\n    if (!message || message.isRead) return\r\n    \r\n    try {\r\n      setIsProcessing(true)\r\n      await onMarkAsRead(message._id!)\r\n    } catch (error) {\r\n      console.error('읽음 처리 실패:', error)\r\n    } finally {\r\n      setIsProcessing(false)\r\n    }\r\n  }\r\n\r\n  const handleDelete = async () => {\r\n    if (!message || !confirm('정말 이 메시지를 삭제하시겠습니까?')) return\r\n    \r\n    try {\r\n      setIsProcessing(true)\r\n      await onDelete(message._id!)\r\n      onClose()\r\n    } catch (error) {\r\n      console.error('삭제 실패:', error)\r\n    } finally {\r\n      setIsProcessing(false)\r\n    }\r\n  }\r\n\r\n  const handleReply = () => {\r\n    if (!message) return\r\n    if (onReply) {\r\n      onReply(message)\r\n    } else {\r\n      setShowReplyForm(true)\r\n    }\r\n  }\r\n\r\n  const handleSendReply = () => {\r\n    // 답장 기능 구현 (이메일 발송 등)\r\n    console.log('답장 내용:', replyContent)\r\n    alert('답장 기능은 향후 구현 예정입니다.')\r\n    setShowReplyForm(false)\r\n    setReplyContent('')\r\n  }\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleString('ko-KR', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    })\r\n  }\r\n\r\n  if (!isOpen) return null\r\n\r\n  // 로딩 상태 처리\r\n  if (isLoading) {\r\n    return (\r\n      <AnimatePresence>\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\"\r\n          onClick={onClose}\r\n        >\r\n          <motion.div\r\n            initial={{ scale: 0.9, opacity: 0 }}\r\n            animate={{ scale: 1, opacity: 1 }}\r\n            exit={{ scale: 0.9, opacity: 0 }}\r\n            className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-md w-full p-8\"\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <div className=\"flex flex-col items-center justify-center\">\r\n              <FaSpinner className=\"text-4xl text-blue-600 dark:text-blue-400 animate-spin mb-4\" />\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\r\n                메시지 로딩 중...\r\n              </h3>\r\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                잠시만 기다려주세요\r\n              </p>\r\n            </div>\r\n          </motion.div>\r\n        </motion.div>\r\n      </AnimatePresence>\r\n    )\r\n  }\r\n\r\n  // 에러 상태 처리\r\n  if (isError) {\r\n    return (\r\n      <AnimatePresence>\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\"\r\n          onClick={onClose}\r\n        >\r\n          <motion.div\r\n            initial={{ scale: 0.9, opacity: 0 }}\r\n            animate={{ scale: 1, opacity: 1 }}\r\n            exit={{ scale: 0.9, opacity: 0 }}\r\n            className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-md w-full p-8\"\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <div className=\"text-center\">\r\n              <div className=\"text-red-500 text-4xl mb-4\">⚠️</div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\r\n                메시지를 불러올 수 없습니다\r\n              </h3>\r\n              <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-4\">\r\n                {error?.message || '알 수 없는 오류가 발생했습니다.'}\r\n              </p>\r\n              <div className=\"flex gap-3 justify-center\">\r\n                <button\r\n                  onClick={() => refetch()}\r\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n                >\r\n                  다시 시도\r\n                </button>\r\n                <button\r\n                  onClick={onClose}\r\n                  className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\r\n                >\r\n                  닫기\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        </motion.div>\r\n      </AnimatePresence>\r\n    )\r\n  }\r\n\r\n  // 메시지 데이터가 없는 경우\r\n  if (!message) {\r\n    return (\r\n      <AnimatePresence>\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\"\r\n          onClick={onClose}\r\n        >\r\n          <motion.div\r\n            initial={{ scale: 0.9, opacity: 0 }}\r\n            animate={{ scale: 1, opacity: 1 }}\r\n            exit={{ scale: 0.9, opacity: 0 }}\r\n            className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-md w-full p-8\"\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <div className=\"text-center\">\r\n              <FaEnvelope className=\"text-4xl text-gray-400 mx-auto mb-4\" />\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\r\n                메시지를 찾을 수 없습니다\r\n              </h3>\r\n              <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-4\">\r\n                요청하신 메시지가 존재하지 않거나 삭제되었습니다.\r\n              </p>\r\n              <button\r\n                onClick={onClose}\r\n                className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\r\n              >\r\n                닫기\r\n              </button>\r\n            </div>\r\n          </motion.div>\r\n        </motion.div>\r\n      </AnimatePresence>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\"\r\n        onClick={onClose}\r\n      >\r\n        <motion.div\r\n          initial={{ scale: 0.9, opacity: 0 }}\r\n          animate={{ scale: 1, opacity: 1 }}\r\n          exit={{ scale: 0.9, opacity: 0 }}\r\n          className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-hidden\"\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          {/* Header */}\r\n          <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <FaEnvelope className=\"text-blue-600 dark:text-blue-400 text-xl\" />\r\n              <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">\r\n                메시지 상세\r\n              </h2>\r\n              {!message.isRead && (\r\n                <span className=\"bg-blue-500 text-white text-xs px-2 py-1 rounded-full\">\r\n                  새 메시지\r\n                </span>\r\n              )}\r\n            </div>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\r\n            >\r\n              <FaTimes className=\"text-gray-500 dark:text-gray-400\" />\r\n            </button>\r\n          </div>\r\n\r\n          {/* Content */}\r\n          <div className=\"p-6 overflow-y-auto max-h-[calc(90vh-140px)]\">\r\n            {/* 메시지 정보 */}\r\n            <div className=\"grid md:grid-cols-2 gap-6 mb-6\">\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex items-start gap-3\">\r\n                  <FaUser className=\"text-gray-500 dark:text-gray-400 mt-1\" />\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">보낸이</p>\r\n                    <p className=\"font-medium text-gray-900 dark:text-white\">\r\n                      {message.name}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"flex items-start gap-3\">\r\n                  <FaEnvelope className=\"text-gray-500 dark:text-gray-400 mt-1\" />\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">이메일</p>\r\n                    <p className=\"font-medium text-gray-900 dark:text-white\">\r\n                      {message.email}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"flex items-start gap-3\">\r\n                  <FaCalendar className=\"text-gray-500 dark:text-gray-400 mt-1\" />\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">받은 시간</p>\r\n                    <p className=\"font-medium text-gray-900 dark:text-white\">\r\n                      {formatDate(message.createdAt || '')}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-2\">상태</p>\r\n                  <div className=\"flex items-center gap-2\">\r\n                    {message.isRead ? (\r\n                      <span className=\"flex items-center gap-1 text-green-600 dark:text-green-400\">\r\n                        <FaCheck /> 읽음\r\n                      </span>\r\n                    ) : (\r\n                      <span className=\"flex items-center gap-1 text-blue-600 dark:text-blue-400\">\r\n                        <FaEnvelope /> 읽지 않음\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 제목 */}\r\n            <div className=\"mb-6\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                {message.subject}\r\n              </h3>\r\n            </div>\r\n\r\n            {/* 메시지 내용 */}\r\n            <div className=\"mb-6\">\r\n              <h4 className=\"text-sm font-medium text-gray-500 dark:text-gray-400 mb-3\">\r\n                메시지 내용\r\n              </h4>\r\n              <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\r\n                <p className=\"text-gray-900 dark:text-white whitespace-pre-wrap\">\r\n                  {message.message}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 답장 폼 */}\r\n            <AnimatePresence>\r\n              {showReplyForm && (\r\n                <motion.div\r\n                  initial={{ opacity: 0, height: 0 }}\r\n                  animate={{ opacity: 1, height: 'auto' }}\r\n                  exit={{ opacity: 0, height: 0 }}\r\n                  className=\"mb-6 border-t border-gray-200 dark:border-gray-700 pt-6\"\r\n                >\r\n                  <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n                    답장 작성\r\n                  </h4>\r\n                  <div className=\"space-y-4\">\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                        받는 사람\r\n                      </label>\r\n                      <input\r\n                        type=\"email\"\r\n                        value={message.email}\r\n                        disabled\r\n                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-500 dark:text-gray-400\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                        답장 내용\r\n                      </label>\r\n                      <textarea\r\n                        value={replyContent}\r\n                        onChange={(e) => setReplyContent(e.target.value)}\r\n                        placeholder=\"답장 내용을 입력하세요...\"\r\n                        rows={6}\r\n                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-vertical\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"flex gap-3\">\r\n                      <button\r\n                        onClick={handleSendReply}\r\n                        disabled={!replyContent.trim()}\r\n                        className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors flex items-center gap-2\"\r\n                      >\r\n                        <FaReply /> 답장 보내기\r\n                      </button>\r\n                      <button\r\n                        onClick={() => {\r\n                          setShowReplyForm(false)\r\n                          setReplyContent('')\r\n                        }}\r\n                        className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\r\n                      >\r\n                        취소\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </motion.div>\r\n              )}\r\n            </AnimatePresence>\r\n          </div>\r\n\r\n          {/* Footer */}\r\n          <div className=\"flex items-center justify-between p-6 border-t border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-700\">\r\n            <button\r\n              onClick={handleReply}\r\n              className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n            >\r\n              <FaReply /> 답장\r\n            </button>\r\n            \r\n            <div className=\"flex gap-3\">\r\n              {!message.isRead && (\r\n                <button\r\n                  onClick={handleMarkAsRead}\r\n                  disabled={isProcessing}\r\n                  className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors\"\r\n                >\r\n                  <FaCheck /> {isProcessing ? '처리 중...' : '읽음 처리'}\r\n                </button>\r\n              )}\r\n              <button\r\n                onClick={handleDelete}\r\n                disabled={isProcessing}\r\n                className=\"flex items-center gap-2 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors\"\r\n              >\r\n                <FaTrash /> {isProcessing ? '삭제 중...' : '삭제'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  )\r\n}\r\n\r\nexport default MessageDetail\r\n","import React, { useState } from 'react'\r\nimport { FaTrash, FaEye, FaEnvelope } from 'react-icons/fa'\r\nimport { ContactMessage } from '../../types'\r\nimport { useMessageManagerData } from '../../hooks/useMessageManagerData'\r\nimport MessageDetail from './MessageDetail'\r\n\r\nconst MessageManager: React.FC = () => {\r\n  const { messages, isLoading, markAsRead, deleteMessage } = useMessageManagerData()\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [selectedMessageId, setSelectedMessageId] = useState<string | undefined>(undefined)\r\n  const [showDetail, setShowDetail] = useState(false)\r\n\r\n  const handleMarkAsRead = async (message: ContactMessage) => {\r\n    try {\r\n      await markAsRead(message._id!)\r\n    } catch (error) {\r\n      console.error('읽음 처리 실패:', error)\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (message: ContactMessage) => {\r\n    if (confirm('정말 삭제하시겠습니까?')) {\r\n      try {\r\n        setIsDeleting(true)\r\n        await deleteMessage(message._id!)\r\n      } catch (error) {\r\n        console.error('삭제 실패:', error)\r\n      } finally {\r\n        setIsDeleting(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleViewDetail = (message: ContactMessage) => {\r\n    setSelectedMessageId(message._id)\r\n    setShowDetail(true)\r\n  }\r\n\r\n  const handleCloseDetail = () => {\r\n    setShowDetail(false)\r\n    setSelectedMessageId(undefined)\r\n  }\r\n\r\n  const handleDetailMarkAsRead = async (id: string) => {\r\n    await markAsRead(id)\r\n  }\r\n\r\n  const handleDetailDelete = async (id: string) => {\r\n    await deleteMessage(id)\r\n    handleCloseDetail()\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-8\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n        <span className=\"ml-2\">메시지 데이터를 불러오는 중...</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <h2 className=\"text-2xl font-bold\">메시지 관리</h2>\r\n          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n            총 {messages.length}개의 메시지\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"space-y-4\">\r\n          {messages.map((message) => (\r\n            <div \r\n              key={message._id} \r\n              className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg border border-gray-200 dark:border-gray-600 hover:shadow-md transition-shadow cursor-pointer\"\r\n              onClick={() => handleViewDetail(message)}\r\n            >\r\n              <div className=\"flex justify-between items-start\">\r\n                <div className=\"flex-1\">\r\n                  <div className=\"flex items-center gap-2 mb-2\">\r\n                    <h3 className=\"font-semibold text-lg\">{message.subject}</h3>\r\n                    {!message.isRead && (\r\n                      <span className=\"bg-blue-500 text-white text-xs px-2 py-1 rounded-full\">\r\n                        새 메시지\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  <p \r\n                    className=\"text-gray-600 dark:text-gray-400 mb-2\"\r\n                    style={{\r\n                      display: '-webkit-box',\r\n                      WebkitLineClamp: 2,\r\n                      WebkitBoxOrient: 'vertical',\r\n                      overflow: 'hidden'\r\n                    }}\r\n                  >\r\n                    {message.message.length > 100 ? `${message.message.substring(0, 100)}...` : message.message}\r\n                  </p>\r\n                  <div className=\"text-sm text-gray-500 dark:text-gray-500\">\r\n                    <p>보낸이: {message.name} ({message.email})</p>\r\n                    <p>받은 시간: {message.createdAt ? new Date(message.createdAt).toLocaleString('ko-KR') : '알 수 없음'}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex gap-2 ml-4\" onClick={(e) => e.stopPropagation()}>\r\n                  <button\r\n                    onClick={() => handleViewDetail(message)}\r\n                    className=\"p-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\r\n                    title=\"상세 보기\"\r\n                  >\r\n                    <FaEye />\r\n                  </button>\r\n                  {!message.isRead && (\r\n                    <button\r\n                      onClick={() => handleMarkAsRead(message)}\r\n                      className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 transition-colors text-sm\"\r\n                    >\r\n                      읽음 처리\r\n                    </button>\r\n                  )}\r\n                  <button\r\n                    onClick={() => handleDelete(message)}\r\n                    className=\"p-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\r\n                    disabled={isDeleting}\r\n                    title=\"삭제\"\r\n                  >\r\n                    <FaTrash />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 메시지 상세 보기 모달 */}\r\n      {showDetail && (\r\n        <MessageDetail\r\n          messageId={selectedMessageId}\r\n          isOpen={showDetail}\r\n          onClose={handleCloseDetail}\r\n          onMarkAsRead={handleDetailMarkAsRead}\r\n          onDelete={handleDetailDelete}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MessageManager","import React from 'react'\r\nimport { FaPlus, FaEdit, FaTrash, FaChevronDown, FaChevronRight, FaBars } from 'react-icons/fa'\r\nimport { useSortable } from '@dnd-kit/sortable'\r\nimport { CSS } from '@dnd-kit/utilities'\r\nimport { SkillCategory } from '../../types'\r\n\r\ninterface SortableCategoryCardProps {\r\n  category: SkillCategory\r\n  isExpanded: boolean\r\n  onToggle: (categoryId: string) => void\r\n  onAddSkill: (categoryId: string) => void\r\n  onEdit: (category: SkillCategory) => void\r\n  onDelete: (category: SkillCategory) => void\r\n  isSaving: boolean\r\n  isDeleting: boolean\r\n  children?: React.ReactNode\r\n}\r\n\r\nconst SortableCategoryCard: React.FC<SortableCategoryCardProps> = ({\r\n  category,\r\n  isExpanded,\r\n  onToggle,\r\n  onAddSkill,\r\n  onEdit,\r\n  onDelete,\r\n  isSaving,\r\n  isDeleting,\r\n  children\r\n}) => {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition,\r\n    isDragging,\r\n  } = useSortable({ id: category._id! })\r\n\r\n  const style = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition,\r\n    opacity: isDragging ? 0.5 : 1,\r\n  }\r\n\r\n  return (\r\n    <div \r\n      ref={setNodeRef} \r\n      style={style}\r\n      className=\"bg-gray-50 dark:bg-gray-700 rounded-lg border border-gray-200 dark:border-gray-600 overflow-hidden\"\r\n    >\r\n      <div className=\"p-4 hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center gap-3 flex-1\" onClick={() => onToggle(category._id!)}>\r\n            {/* 🌟 드래그 핸들 */}\r\n            <div\r\n              {...attributes}\r\n              {...listeners}\r\n              className=\"cursor-grab active:cursor-grabbing text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 p-1\"\r\n              title=\"드래그하여 순서 변경\"\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              <FaBars />\r\n            </div>\r\n            <div \r\n              className=\"w-4 h-4 rounded-full\"\r\n              style={{ backgroundColor: category.color }}\r\n            ></div>\r\n            <h3 className=\"font-semibold text-lg cursor-pointer\">{category.title}</h3>\r\n            <span className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              ({category.skills?.length || 0}개 스킬)\r\n            </span>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation()\r\n                onAddSkill(category._id!)\r\n              }}\r\n              className=\"p-2 bg-green-600 text-white rounded hover:bg-green-700 transition-colors\"\r\n              disabled={isSaving || isDeleting}\r\n            >\r\n              <FaPlus size={12} />\r\n            </button>\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation()\r\n                onEdit(category)\r\n              }}\r\n              className=\"p-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\r\n              disabled={isSaving || isDeleting}\r\n            >\r\n              <FaEdit size={12} />\r\n            </button>\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation()\r\n                onDelete(category)\r\n              }}\r\n              className=\"p-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\r\n              disabled={isSaving || isDeleting}\r\n            >\r\n              <FaTrash size={12} />\r\n            </button>\r\n            {isExpanded ? (\r\n              <FaChevronDown className=\"text-gray-400\" />\r\n            ) : (\r\n              <FaChevronRight className=\"text-gray-400\" />\r\n            )}\r\n          </div>\r\n        </div>\r\n        {category.description && (\r\n          <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-2 ml-7\">\r\n            {category.description}\r\n          </p>\r\n        )}\r\n      </div>\r\n      \r\n      {/* 스킬 목록 (children으로 전달) */}\r\n      {isExpanded && children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SortableCategoryCard\r\n\r\n","import React from 'react'\r\nimport { FaEdit, FaTrash, FaBars, FaSave } from 'react-icons/fa'\r\nimport { useSortable } from '@dnd-kit/sortable'\r\nimport { CSS } from '@dnd-kit/utilities'\r\nimport { Skill } from '../../types'\r\nimport DynamicIcon from '../common/DynamicIcon'\r\n\r\ninterface SortableSkillItemProps {\r\n  skill: Skill\r\n  categoryColor: string\r\n  currentLevel: number\r\n  hasChanges: boolean\r\n  isSavingThis: boolean\r\n  isSaving: boolean\r\n  isDeleting: boolean\r\n  onLevelChange: (skillId: string, level: number) => void\r\n  onSaveLevel: (skill: Skill) => void\r\n  onEdit: (skill: Skill) => void\r\n  onDelete: (skill: Skill) => void\r\n  onToggleSidebar: (skill: Skill) => void\r\n  onToggleLanguageCard: (skill: Skill) => void\r\n}\r\n\r\nconst SortableSkillItem: React.FC<SortableSkillItemProps> = ({\r\n  skill,\r\n  categoryColor,\r\n  currentLevel,\r\n  hasChanges,\r\n  isSavingThis,\r\n  isSaving,\r\n  isDeleting,\r\n  onLevelChange,\r\n  onSaveLevel,\r\n  onEdit,\r\n  onDelete,\r\n  onToggleSidebar,\r\n  onToggleLanguageCard\r\n}) => {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition,\r\n    isDragging,\r\n  } = useSortable({ id: skill._id! })\r\n\r\n  const style = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition,\r\n    opacity: isDragging ? 0.5 : 1,\r\n  }\r\n\r\n  return (\r\n    <div \r\n      ref={setNodeRef} \r\n      style={style}\r\n      className=\"flex items-center justify-between bg-white dark:bg-gray-700 p-3 rounded-lg\"\r\n    >\r\n      <div className=\"flex items-center gap-3 flex-1\">\r\n        {/* 🌟 드래그 핸들 */}\r\n        <div\r\n          {...attributes}\r\n          {...listeners}\r\n          className=\"cursor-grab active:cursor-grabbing text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 p-1\"\r\n          title=\"드래그하여 순서 변경\"\r\n        >\r\n          <FaBars />\r\n        </div>\r\n        \r\n        {/* 🌟 사이드바/언어 카드 표시 체크박스 */}\r\n        <div className=\"flex flex-col gap-1\">\r\n          <label className=\"flex items-center gap-1 text-xs cursor-pointer\" title=\"사이드바 핵심기술에 표시\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={skill.showInSidebar || false}\r\n              onChange={() => onToggleSidebar(skill)}\r\n              disabled={isSaving || isDeleting}\r\n              className=\"w-3 h-3 text-blue-600 rounded focus:ring-2 focus:ring-blue-500\"\r\n            />\r\n            <span className=\"text-gray-600 dark:text-gray-400\">핵심</span>\r\n          </label>\r\n          <label className=\"flex items-center gap-1 text-xs cursor-pointer\" title=\"사이드바 언어카드에 표시\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={skill.showInLanguageCard || false}\r\n              onChange={() => onToggleLanguageCard(skill)}\r\n              disabled={isSaving || isDeleting}\r\n              className=\"w-3 h-3 text-green-600 rounded focus:ring-2 focus:ring-green-500\"\r\n            />\r\n            <span className=\"text-gray-600 dark:text-gray-400\">언어</span>\r\n          </label>\r\n        </div>\r\n        \r\n        <div className=\"text-lg text-blue-600 dark:text-blue-400\">\r\n          <DynamicIcon iconName={skill.icon} size={18} />\r\n        </div>\r\n        <span className=\"font-medium min-w-[120px]\">{skill.name}</span>\r\n        <div className=\"flex items-center gap-2 flex-1 max-w-md\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            step=\"5\"\r\n            value={currentLevel}\r\n            onChange={(e) => {\r\n              const newLevel = parseInt(e.target.value)\r\n              onLevelChange(skill._id!, newLevel)\r\n            }}\r\n            className=\"flex-1 h-2 bg-gray-200 dark:bg-gray-600 rounded-lg appearance-none cursor-pointer slider-thumb\"\r\n            style={{\r\n              background: `linear-gradient(to right, ${categoryColor} 0%, ${categoryColor} ${currentLevel}%, #e5e7eb ${currentLevel}%, #e5e7eb 100%)`\r\n            }}\r\n            disabled={isSaving || isDeleting || isSavingThis}\r\n          />\r\n          <span className=\"text-sm text-gray-600 dark:text-gray-400 min-w-[45px] text-right font-medium\">\r\n            {currentLevel}%\r\n          </span>\r\n          {hasChanges && (\r\n            <button\r\n              onClick={() => onSaveLevel(skill)}\r\n              disabled={isSavingThis}\r\n              className={`px-3 py-1 bg-green-600 hover:bg-green-700 text-white rounded text-xs font-medium transition-colors flex items-center gap-1 ${\r\n                isSavingThis ? 'opacity-50 cursor-not-allowed' : ''\r\n              }`}\r\n              title=\"변경된 숙련도 저장\"\r\n            >\r\n              {isSavingThis ? (\r\n                <>\r\n                  <div className=\"w-3 h-3 border-2 border-white border-t-transparent rounded-full animate-spin\" />\r\n                  저장중\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <FaSave size={10} />\r\n                  저장\r\n                </>\r\n              )}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"flex gap-2 ml-2\">\r\n        <button\r\n          onClick={() => onEdit(skill)}\r\n          className=\"p-2 bg-yellow-600 text-white rounded hover:bg-yellow-700 transition-colors\"\r\n          disabled={isSaving || isDeleting}\r\n        >\r\n          <FaEdit size={12} />\r\n        </button>\r\n        <button\r\n          onClick={() => onDelete(skill)}\r\n          className=\"p-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\r\n          disabled={isSaving || isDeleting}\r\n        >\r\n          <FaTrash size={12} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SortableSkillItem\r\n\r\n","import React, { useState, useCallback } from 'react'\r\nimport { FaPlus } from 'react-icons/fa'\r\nimport { SkillCategory, Skill, SkillCategoryFormData, SkillFormData } from '../../types'\r\nimport { useSkillsManagerData } from '../../hooks/useSkillsManagerData'\r\nimport SkillCategoryForm from '../forms/SkillCategoryForm'\r\nimport SkillForm from '../forms/SkillForm'\r\nimport SortableCategoryCard from './SortableCategoryCard'\r\nimport SortableSkillItem from './SortableSkillItem'\r\nimport { DndContext, closestCenter, DragEndEvent } from '@dnd-kit/core'\r\nimport { SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable'\r\nimport { arrayMove } from '@dnd-kit/sortable'\r\n\r\nconst SkillsManager: React.FC = () => {\r\n  const { \r\n    skillCategories, \r\n    isLoading, \r\n    createSkillCategory,\r\n    updateSkillCategory,\r\n    deleteSkillCategory,\r\n    createSkill,\r\n    updateSkill,\r\n    deleteSkill\r\n  } = useSkillsManagerData()\r\n\r\n\r\n  // 단일 폼 상태 관리 - 한 번에 하나의 작업만 가능\r\n  const [activeForm, setActiveForm] = useState<'category' | 'skill' | null>(null)\r\n  const [editingCategory, setEditingCategory] = useState<SkillCategory | null>(null)\r\n  const [editingSkill, setEditingSkill] = useState<Skill | null>(null)\r\n  const [selectedCategoryId, setSelectedCategoryId] = useState<string | null>(null)\r\n  const [expandedCategories, setExpandedCategories] = useState<Set<string>>(new Set())\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n\r\n  // 🌟 숙련도 로컬 상태 관리 (변경사항 추적용)\r\n  const [localLevels, setLocalLevels] = useState<Map<string, number>>(new Map())\r\n  \r\n  // 🌟 저장 중인 스킬 ID 추적\r\n  const [savingSkillIds, setSavingSkillIds] = useState<Set<string>>(new Set())\r\n\r\n  // 🌟 슬라이더 변경 핸들러 (즉시 저장 없이 로컬 상태만 업데이트)\r\n  const handleLevelChange = useCallback((skillId: string, newLevel: number) => {\r\n    setLocalLevels(prev => {\r\n      const newMap = new Map(prev)\r\n      newMap.set(skillId, newLevel)\r\n      return newMap\r\n    })\r\n  }, [])\r\n\r\n  // 🌟 개별 스킬 숙련도 저장 핸들러\r\n  const handleSaveLevel = useCallback(async (skill: Skill) => {\r\n    const skillId = skill._id!\r\n    const newLevel = localLevels.get(skillId)\r\n    \r\n    if (newLevel === undefined || newLevel === skill.level) {\r\n      // 변경사항이 없으면 로컬 상태만 정리\r\n      setLocalLevels(prev => {\r\n        const newMap = new Map(prev)\r\n        newMap.delete(skillId)\r\n        return newMap\r\n      })\r\n      return\r\n    }\r\n\r\n    try {\r\n      setSavingSkillIds(prev => new Set(prev).add(skillId))\r\n      console.log(`💾 숙련도 저장: ${skill.name} = ${newLevel}%`)\r\n      \r\n      await updateSkill(skillId, { \r\n        name: skill.name,\r\n        icon: skill.icon,\r\n        level: newLevel,\r\n        order: skill.order,\r\n        ...(skill.description && { description: skill.description }),\r\n        ...(skill.color && { color: skill.color }),\r\n        ...(skill.showInSidebar !== undefined && { showInSidebar: skill.showInSidebar }),\r\n        ...(skill.showInLanguageCard !== undefined && { showInLanguageCard: skill.showInLanguageCard })\r\n      })\r\n      \r\n      console.log(`✅ 저장 완료: ${skill.name}`)\r\n      \r\n      // 저장 성공 후 로컬 상태 정리\r\n      setLocalLevels(prev => {\r\n        const newMap = new Map(prev)\r\n        newMap.delete(skillId)\r\n        return newMap\r\n      })\r\n    } catch (error) {\r\n      console.error(`❌ 저장 실패: ${skill.name}`, error)\r\n      alert(`저장 실패: ${skill.name}`)\r\n    } finally {\r\n      setSavingSkillIds(prev => {\r\n        const newSet = new Set(prev)\r\n        newSet.delete(skillId)\r\n        return newSet\r\n      })\r\n    }\r\n  }, [localLevels, updateSkill])\r\n\r\n  // 🌟 사이드바 표시 토글 핸들러\r\n  const handleToggleSidebar = useCallback(async (skill: Skill) => {\r\n    if (!skill._id) return\r\n    \r\n    try {\r\n      setSavingSkillIds(prev => new Set(prev).add(skill._id!))\r\n      const newValue = !skill.showInSidebar\r\n      console.log(`💾 [핵심기술] 토글: ${skill.name} = ${newValue}`)\r\n      console.log(`📋 [핵심기술] 전송 데이터:`, {\r\n        name: skill.name,\r\n        showInSidebar: newValue,\r\n        showInLanguageCard: skill.showInLanguageCard\r\n      })\r\n      \r\n      const result = await updateSkill(skill._id, {\r\n        name: skill.name,\r\n        icon: skill.icon,\r\n        level: skill.level,\r\n        order: skill.order,\r\n        showInSidebar: newValue,\r\n        ...(skill.description && { description: skill.description }),\r\n        ...(skill.color && { color: skill.color }),\r\n        ...(skill.showInLanguageCard !== undefined && { showInLanguageCard: skill.showInLanguageCard })\r\n      })\r\n      \r\n      console.log(`✅ [핵심기술] 토글 완료:`, result)\r\n    } catch (error) {\r\n      console.error(`❌ [핵심기술] 토글 실패: ${skill.name}`, error)\r\n      alert(`사이드바 표시 토글 실패: ${skill.name}`)\r\n    } finally {\r\n      setSavingSkillIds(prev => {\r\n        const newSet = new Set(prev)\r\n        newSet.delete(skill._id!)\r\n        return newSet\r\n      })\r\n    }\r\n  }, [updateSkill])\r\n\r\n  // 🌟 언어 카드 표시 토글 핸들러\r\n  const handleToggleLanguageCard = useCallback(async (skill: Skill) => {\r\n    if (!skill._id) return\r\n    \r\n    try {\r\n      setSavingSkillIds(prev => new Set(prev).add(skill._id!))\r\n      const newValue = !skill.showInLanguageCard\r\n      console.log(`💾 [언어카드] 토글: ${skill.name} = ${newValue}`)\r\n      console.log(`📋 [언어카드] 전송 데이터:`, {\r\n        name: skill.name,\r\n        showInSidebar: skill.showInSidebar,\r\n        showInLanguageCard: newValue\r\n      })\r\n      \r\n      const result = await updateSkill(skill._id, {\r\n        name: skill.name,\r\n        icon: skill.icon,\r\n        level: skill.level,\r\n        order: skill.order,\r\n        showInLanguageCard: newValue,\r\n        ...(skill.description && { description: skill.description }),\r\n        ...(skill.color && { color: skill.color }),\r\n        ...(skill.showInSidebar !== undefined && { showInSidebar: skill.showInSidebar })\r\n      })\r\n      \r\n      console.log(`✅ [언어카드] 토글 완료:`, result)\r\n    } catch (error) {\r\n      console.error(`❌ [언어카드] 토글 실패: ${skill.name}`, error)\r\n      alert(`언어 카드 표시 토글 실패: ${skill.name}`)\r\n    } finally {\r\n      setSavingSkillIds(prev => {\r\n        const newSet = new Set(prev)\r\n        newSet.delete(skill._id!)\r\n        return newSet\r\n      })\r\n    }\r\n  }, [updateSkill])\r\n\r\n  // 🌟 카테고리 드래그 앤 드롭 핸들러\r\n  const handleCategoryDragEnd = useCallback(async (event: DragEndEvent) => {\r\n    const { active, over } = event\r\n    \r\n    if (!over || active.id === over.id) return\r\n    \r\n    const oldIndex = skillCategories.findIndex(cat => cat._id === active.id)\r\n    const newIndex = skillCategories.findIndex(cat => cat._id === over.id)\r\n    \r\n    if (oldIndex === -1 || newIndex === -1) return\r\n    \r\n    // 배열 순서 변경\r\n    const reorderedCategories = arrayMove(skillCategories, oldIndex, newIndex)\r\n    \r\n    // 각 카테고리의 order 값을 새로운 인덱스로 업데이트하고 저장\r\n    try {\r\n      for (let i = 0; i < reorderedCategories.length; i++) {\r\n        const category = reorderedCategories[i]\r\n        if (!category?._id) continue\r\n        \r\n        await updateSkillCategory(category._id, {\r\n          title: category.title,\r\n          color: category.color,\r\n          order: i,\r\n          ...(category.description && { description: category.description })\r\n        })\r\n      }\r\n      console.log('✅ 카테고리 순서 변경 완료')\r\n    } catch (error) {\r\n      console.error('❌ 카테고리 순서 변경 실패:', error)\r\n      alert('순서 변경에 실패했습니다.')\r\n    }\r\n  }, [skillCategories, updateSkillCategory])\r\n\r\n  // 🌟 스킬 드래그 앤 드롭 핸들러 (카테고리별)\r\n  const handleSkillDragEnd = useCallback(async (event: DragEndEvent, categoryId: string) => {\r\n    const { active, over } = event\r\n    \r\n    if (!over || active.id === over.id) return\r\n    \r\n    const category = skillCategories.find(cat => cat._id === categoryId)\r\n    if (!category || !category.skills) return\r\n    \r\n    const oldIndex = category.skills.findIndex(skill => skill._id === active.id)\r\n    const newIndex = category.skills.findIndex(skill => skill._id === over.id)\r\n    \r\n    if (oldIndex === -1 || newIndex === -1) return\r\n    \r\n    // 스킬 배열 순서 변경\r\n    const reorderedSkills = arrayMove(category.skills, oldIndex, newIndex)\r\n    \r\n    // 각 스킬의 order 값을 새로운 인덱스로 업데이트하고 저장\r\n    try {\r\n      for (let i = 0; i < reorderedSkills.length; i++) {\r\n        const skill = reorderedSkills[i]\r\n        if (!skill?._id) continue\r\n        \r\n        await updateSkill(skill._id, {\r\n          name: skill.name,\r\n          icon: skill.icon,\r\n          level: skill.level,\r\n          order: i,\r\n          ...(skill.description && { description: skill.description }),\r\n          ...(skill.color && { color: skill.color })\r\n        })\r\n      }\r\n      console.log(`✅ 스킬 순서 변경 완료 (카테고리: ${category.title})`)\r\n    } catch (error) {\r\n      console.error('❌ 스킬 순서 변경 실패:', error)\r\n      alert('순서 변경에 실패했습니다.')\r\n    }\r\n  }, [skillCategories, updateSkill])\r\n\r\n  const toggleCategory = (categoryId: string) => {\r\n    setExpandedCategories(prev => {\r\n      const newSet = new Set(prev)\r\n      if (newSet.has(categoryId)) {\r\n        newSet.delete(categoryId)\r\n      } else {\r\n        newSet.add(categoryId)\r\n      }\r\n      return newSet\r\n    })\r\n  }\r\n\r\n  const handleAddCategory = () => {\r\n    setEditingCategory(null)\r\n    setActiveForm('category')\r\n  }\r\n\r\n  const handleEditCategory = (category: SkillCategory) => {\r\n    setEditingCategory(category)\r\n    setActiveForm('category')\r\n  }\r\n\r\n  const handleSaveCategory = async (data: SkillCategoryFormData) => {\r\n    try {\r\n      setIsSaving(true)\r\n      console.log('🔍 카테고리 저장 시작:', data)\r\n      \r\n      if (editingCategory) {\r\n        console.log('📝 카테고리 수정 모드:', editingCategory._id)\r\n        const result = await updateSkillCategory(editingCategory._id!, data)\r\n        console.log('✅ 수정 결과:', result)\r\n        if (result.success) {\r\n          setActiveForm(null)\r\n          setEditingCategory(null)\r\n          alert('카테고리가 성공적으로 수정되었습니다.')\r\n        } else {\r\n          alert(`카테고리 수정 실패: ${result.error || '알 수 없는 오류'}`)\r\n        }\r\n      } else {\r\n        console.log('➕ 카테고리 생성 모드')\r\n        const result = await createSkillCategory(data)\r\n        console.log('✅ 생성 결과:', result)\r\n        if (result.success) {\r\n          setActiveForm(null)\r\n          alert('카테고리가 성공적으로 추가되었습니다.')\r\n        } else {\r\n          alert(`카테고리 추가 실패: ${result.error || '알 수 없는 오류'}`)\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ 카테고리 저장 실패:', error)\r\n      alert(`카테고리 저장 중 오류가 발생했습니다: ${error}`)\r\n    } finally {\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n\r\n  const handleDeleteCategory = async (category: SkillCategory) => {\r\n    if (confirm('정말 삭제하시겠습니까? 카테고리 내 모든 스킬도 함께 삭제됩니다.')) {\r\n      try {\r\n        setIsDeleting(true)\r\n        await deleteSkillCategory(category._id!)\r\n      } catch (error) {\r\n        console.error('카테고리 삭제 실패:', error)\r\n      } finally {\r\n        setIsDeleting(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleAddSkill = (categoryId: string) => {\r\n    setSelectedCategoryId(categoryId)\r\n    setEditingSkill(null)\r\n    setActiveForm('skill')\r\n  }\r\n\r\n  const handleEditSkill = (skill: Skill) => {\r\n    setEditingSkill(skill)\r\n    setSelectedCategoryId(skill.categoryId)\r\n    setActiveForm('skill')\r\n  }\r\n\r\n  const handleSaveSkill = async (data: SkillFormData) => {\r\n    if (!selectedCategoryId && !editingSkill) return\r\n    \r\n    try {\r\n      setIsSaving(true)\r\n      const categoryId = editingSkill?.categoryId || selectedCategoryId!\r\n      \r\n      if (editingSkill) {\r\n        const result = await updateSkill(editingSkill._id!, data)\r\n        if (result.success) {\r\n          setActiveForm(null)\r\n          setEditingSkill(null)\r\n          setSelectedCategoryId(null)\r\n        }\r\n      } else {\r\n        const result = await createSkill(categoryId, data)\r\n        if (result.success) {\r\n          setActiveForm(null)\r\n          setSelectedCategoryId(null)\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('스킬 저장 실패:', error)\r\n    } finally {\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n\r\n  const handleDeleteSkill = async (skill: Skill) => {\r\n    if (confirm('정말 삭제하시겠습니까?')) {\r\n      try {\r\n        setIsDeleting(true)\r\n        await deleteSkill(skill._id!)\r\n      } catch (error) {\r\n        console.error('스킬 삭제 실패:', error)\r\n      } finally {\r\n        setIsDeleting(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setActiveForm(null)\r\n    setEditingCategory(null)\r\n    setEditingSkill(null)\r\n    setSelectedCategoryId(null)\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-8\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n        <span className=\"ml-2\">기술 데이터를 불러오는 중...</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <h2 className=\"text-2xl font-bold\">기술 관리</h2>\r\n        <button\r\n          onClick={handleAddCategory}\r\n          className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2\"\r\n        >\r\n          <FaPlus />\r\n          카테고리 추가\r\n        </button>\r\n      </div>\r\n\r\n      {/* 카테고리 폼 */}\r\n      {activeForm === 'category' && (\r\n        <SkillCategoryForm\r\n          initialData={editingCategory}\r\n          onSave={handleSaveCategory}\r\n          onCancel={handleCancel}\r\n          isSaving={isSaving}\r\n        />\r\n      )}\r\n\r\n      {/* 스킬 폼 */}\r\n      {activeForm === 'skill' && (\r\n        <SkillForm\r\n          initialData={editingSkill}\r\n          categoryId={selectedCategoryId || undefined}\r\n          onSave={handleSaveSkill}\r\n          onCancel={handleCancel}\r\n          isSaving={isSaving}\r\n        />\r\n      )}\r\n\r\n      {/* 카테고리 목록 - 🌟 드래그 앤 드롭 적용 */}\r\n      <DndContext collisionDetection={closestCenter} onDragEnd={handleCategoryDragEnd}>\r\n        <SortableContext items={skillCategories.map(cat => cat._id!)} strategy={verticalListSortingStrategy}>\r\n          <div className=\"space-y-4\">\r\n            {skillCategories.map((category) => {\r\n              const isExpanded = expandedCategories.has(category._id!)\r\n              return (\r\n                <SortableCategoryCard\r\n                  key={category._id}\r\n                  category={category}\r\n                  isExpanded={isExpanded}\r\n                  onToggle={toggleCategory}\r\n                  onAddSkill={handleAddSkill}\r\n                  onEdit={handleEditCategory}\r\n                  onDelete={handleDeleteCategory}\r\n                  isSaving={isSaving}\r\n                  isDeleting={isDeleting}\r\n                >\r\n              \r\n                  {/* 스킬 목록 - 🌟 드래그 앤 드롭 적용 */}\r\n                  <div className=\"border-t border-gray-200 dark:border-gray-600 bg-gray-100 dark:bg-gray-800\">\r\n                    {category.skills && category.skills.length > 0 ? (\r\n                      <DndContext \r\n                        collisionDetection={closestCenter} \r\n                        onDragEnd={(event) => handleSkillDragEnd(event, category._id!)}\r\n                      >\r\n                        <SortableContext \r\n                          items={category.skills.map(skill => skill._id!)} \r\n                          strategy={verticalListSortingStrategy}\r\n                        >\r\n                          <div className=\"p-4 space-y-2\">\r\n                            {category.skills\r\n                              .sort((a, b) => a.order - b.order)\r\n                              .map((skill) => {\r\n                                const currentLevel = localLevels.get(skill._id!) ?? skill.level\r\n                                const hasChanges = localLevels.has(skill._id!) && localLevels.get(skill._id!) !== skill.level\r\n                                const isSavingThis = savingSkillIds.has(skill._id!)\r\n                                \r\n                                return (\r\n                                  <SortableSkillItem\r\n                                    key={skill._id}\r\n                                    skill={skill}\r\n                                    categoryColor={category.color || '#3B82F6'}\r\n                                    currentLevel={currentLevel}\r\n                                    hasChanges={hasChanges}\r\n                                    isSavingThis={isSavingThis}\r\n                                    isSaving={isSaving}\r\n                                    isDeleting={isDeleting}\r\n                                    onLevelChange={handleLevelChange}\r\n                                    onSaveLevel={handleSaveLevel}\r\n                                    onEdit={handleEditSkill}\r\n                                    onDelete={handleDeleteSkill}\r\n                                    onToggleSidebar={handleToggleSidebar}\r\n                                    onToggleLanguageCard={handleToggleLanguageCard}\r\n                                  />\r\n                                )\r\n                              })}\r\n                          </div>\r\n                        </SortableContext>\r\n                      </DndContext>\r\n                    ) : (\r\n                      <div className=\"p-4 text-center text-gray-500 dark:text-gray-400\">\r\n                        <FaPlus size={32} className=\"text-blue-400 dark:text-blue-500 mx-auto mb-2\" />\r\n                        <p className=\"text-sm\">아직 스킬이 없습니다.</p>\r\n                        <p className=\"text-xs mt-1\">카테고리 제목 옆의 + 버튼을 클릭하여 스킬을 추가하세요.</p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </SortableCategoryCard>\r\n              )\r\n            })}\r\n          </div>\r\n        </SortableContext>\r\n      </DndContext>\r\n\r\n      {skillCategories.length === 0 && (\r\n        <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\r\n          <p className=\"text-lg mb-2\">아직 생성된 카테고리가 없습니다.</p>\r\n          <p>위의 \"카테고리 추가\" 버튼을 클릭하여 첫 번째 카테고리를 만들어보세요.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SkillsManager\r\n","import React, { useState } from 'react'\r\nimport { FaPlus, FaEdit, FaTrash, FaFolder, FaBars } from 'react-icons/fa'\r\nimport { Category, CategoryFormData } from '../../types'\r\nimport { useCategoryManagerData, useCategoryUsage } from '../../hooks/useCategories'\r\nimport { useCRUDManager } from '../../hooks/useCRUDManager'\r\nimport { useToastHelpers } from '../../hooks/useToast'\r\nimport CategoryForm from '../forms/CategoryForm'\r\nimport { DndContext, closestCenter, DragEndEvent } from '@dnd-kit/core'\r\nimport { SortableContext, verticalListSortingStrategy, useSortable, arrayMove } from '@dnd-kit/sortable'\r\nimport { CSS } from '@dnd-kit/utilities'\r\n\r\n// 드래그 가능한 카테고리 카드 컴포넌트\r\ninterface SortableCategoryCardProps {\r\n  category: Category\r\n  onEdit: () => void\r\n  onDelete: () => void\r\n  isDeleting: boolean\r\n}\r\n\r\nconst SortableCategoryCard: React.FC<SortableCategoryCardProps> = ({ \r\n  category, \r\n  onEdit, \r\n  onDelete, \r\n  isDeleting \r\n}) => {\r\n  const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({ \r\n    id: category._id \r\n  })\r\n\r\n  const style = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition,\r\n    opacity: isDragging ? 0.5 : 1,\r\n  }\r\n\r\n  // 카테고리 사용 통계 조회\r\n  const { data: usageData } = useCategoryUsage(category._id)\r\n\r\n  return (\r\n    <div\r\n      ref={setNodeRef}\r\n      style={style}\r\n      className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4 hover:shadow-lg transition-shadow\"\r\n    >\r\n      <div className=\"flex items-start justify-between\">\r\n        <div className=\"flex items-start gap-3 flex-1\">\r\n          {/* 드래그 핸들 */}\r\n          <button\r\n            {...attributes}\r\n            {...listeners}\r\n            className=\"mt-1 p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 cursor-grab active:cursor-grabbing\"\r\n            title=\"드래그하여 순서 변경\"\r\n          >\r\n            <FaBars />\r\n          </button>\r\n\r\n          <div className=\"flex-1\">\r\n            <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-2\">\r\n              {category.name}\r\n            </h3>\r\n            \r\n            {/* 사용 통계 */}\r\n            {usageData && (\r\n              <div className=\"flex flex-wrap gap-2 text-sm\">\r\n                {usageData.usage.books > 0 && (\r\n                  <span className=\"px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded\">\r\n                    📚 서적 {usageData.usage.books}개\r\n                  </span>\r\n                )}\r\n                {usageData.usage.projects > 0 && (\r\n                  <span className=\"px-2 py-1 bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 rounded\">\r\n                    🚀 프로젝트 {usageData.usage.projects}개\r\n                  </span>\r\n                )}\r\n                {usageData.usage.videoLearnings > 0 && (\r\n                  <span className=\"px-2 py-1 bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-200 rounded\">\r\n                    📹 영상 {usageData.usage.videoLearnings}개\r\n                  </span>\r\n                )}\r\n                {usageData.usage.videoPlaylists > 0 && (\r\n                  <span className=\"px-2 py-1 bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200 rounded\">\r\n                    📺 재생 목록 {usageData.usage.videoPlaylists}개\r\n                  </span>\r\n                )}\r\n                {usageData.usage.total === 0 && (\r\n                  <span className=\"text-gray-500 dark:text-gray-400 text-xs\">\r\n                    사용 중이지 않음\r\n                  </span>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex gap-2 ml-4\">\r\n          <button\r\n            onClick={onEdit}\r\n            className=\"p-2 text-yellow-600 hover:bg-yellow-100 dark:hover:bg-yellow-900 rounded-lg transition-colors\"\r\n            title=\"수정\"\r\n          >\r\n            <FaEdit />\r\n          </button>\r\n          <button\r\n            onClick={onDelete}\r\n            disabled={isDeleting}\r\n            className=\"p-2 text-red-600 hover:bg-red-100 dark:hover:bg-red-900 rounded-lg transition-colors disabled:opacity-50\"\r\n            title=\"삭제\"\r\n          >\r\n            <FaTrash />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst CategoryManager: React.FC = () => {\r\n  const { success, error } = useToastHelpers()\r\n  const { \r\n    categories, \r\n    isLoading, \r\n    createCategory, \r\n    updateCategory, \r\n    deleteCategory \r\n  } = useCategoryManagerData()\r\n\r\n  const [categoryState, categoryActions] = useCRUDManager<Category>({\r\n    onSave: async (data: CategoryFormData, editingItem) => {\r\n      if (editingItem) {\r\n        const result = await updateCategory(editingItem._id, data)\r\n        if (result.success) {\r\n          success('카테고리 수정 완료', '카테고리가 성공적으로 수정되었습니다.')\r\n        } else {\r\n          throw result.error\r\n        }\r\n      } else {\r\n        const result = await createCategory(data)\r\n        if (result.success) {\r\n          success('카테고리 추가 완료', '새로운 카테고리가 추가되었습니다.')\r\n        } else {\r\n          throw result.error\r\n        }\r\n      }\r\n    },\r\n    onDelete: async (category: Category) => {\r\n      const result = await deleteCategory(category._id)\r\n      if (result.success) {\r\n        success('카테고리 삭제 완료', `${category.name}이(가) 삭제되었습니다.`)\r\n      } else {\r\n        // 사용 중인 경우 에러 메시지 표시\r\n        const errorMsg = result.error?.response?.data?.message || '카테고리 삭제에 실패했습니다'\r\n        const usage = result.error?.response?.data?.usage\r\n        \r\n        if (usage) {\r\n          const usageDetails = []\r\n          if (usage.books > 0) usageDetails.push(`서적 ${usage.books}개`)\r\n          if (usage.projects > 0) usageDetails.push(`프로젝트 ${usage.projects}개`)\r\n          if (usage.videoLearnings > 0) usageDetails.push(`영상 ${usage.videoLearnings}개`)\r\n          if (usage.videoPlaylists > 0) usageDetails.push(`재생 목록 ${usage.videoPlaylists}개`)\r\n          \r\n          error('삭제 불가', `이 카테고리는 ${usageDetails.join(', ')}에서 사용 중입니다. 먼저 해당 항목들의 카테고리를 변경해주세요.`)\r\n        } else {\r\n          error('삭제 실패', errorMsg)\r\n        }\r\n        throw result.error\r\n      }\r\n    },\r\n    onError: (err) => {\r\n      error('작업 실패', err.message || '알 수 없는 오류가 발생했습니다.')\r\n    }\r\n  })\r\n\r\n  // 드래그 앤 드롭으로 순서 변경\r\n  const handleDragEnd = async (event: DragEndEvent) => {\r\n    const { active, over } = event\r\n\r\n    if (!over || active.id === over.id) return\r\n\r\n    const oldIndex = categories.findIndex(cat => cat._id === active.id)\r\n    const newIndex = categories.findIndex(cat => cat._id === over.id)\r\n\r\n    const reorderedCategories = arrayMove(categories, oldIndex, newIndex)\r\n\r\n    // 순서 업데이트\r\n    for (let i = 0; i < reorderedCategories.length; i++) {\r\n      const category = reorderedCategories[i]\r\n      if (category && category.order !== i) {\r\n        await updateCategory(category._id, { name: category.name, order: i })\r\n      }\r\n    }\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-12\">\r\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white flex items-center gap-2\">\r\n          <FaFolder className=\"text-yellow-600\" />\r\n          카테고리 관리\r\n        </h2>\r\n        <button\r\n          onClick={categoryActions.handleCreate}\r\n          className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors shadow-md\"\r\n        >\r\n          <FaPlus />\r\n          카테고리 추가\r\n        </button>\r\n      </div>\r\n\r\n      {/* 카테고리 폼 모달 */}\r\n      {categoryState.showForm && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-md w-full mx-4\">\r\n            <div className=\"p-6\">\r\n              <h2 className=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">\r\n                {categoryState.editingItem ? '카테고리 수정' : '카테고리 추가'}\r\n              </h2>\r\n              {categoryState.editingItem ? (\r\n                <CategoryForm\r\n                  data={categoryState.editingItem}\r\n                  onSave={categoryActions.handleSave}\r\n                  onCancel={categoryActions.handleCancel}\r\n                  isSaving={categoryState.isSaving}\r\n                />\r\n              ) : (\r\n                <CategoryForm\r\n                  onSave={categoryActions.handleSave}\r\n                  onCancel={categoryActions.handleCancel}\r\n                  isSaving={categoryState.isSaving}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 카테고리 목록 - 드래그 앤 드롭 */}\r\n      <DndContext collisionDetection={closestCenter} onDragEnd={handleDragEnd}>\r\n        <SortableContext items={categories.map(c => c._id)} strategy={verticalListSortingStrategy}>\r\n          <div className=\"grid gap-4\">\r\n            {categories.map((category) => (\r\n              <SortableCategoryCard\r\n                key={category._id}\r\n                category={category}\r\n                onEdit={() => categoryActions.handleEdit(category)}\r\n                onDelete={() => categoryActions.handleDelete(category)}\r\n                isDeleting={categoryState.isDeleting}\r\n              />\r\n            ))}\r\n          </div>\r\n        </SortableContext>\r\n      </DndContext>\r\n\r\n      {categories.length === 0 && (\r\n        <div className=\"text-center py-12 text-gray-500 dark:text-gray-400\">\r\n          <FaFolder className=\"text-6xl mx-auto mb-4 opacity-30\" />\r\n          <p>아직 등록된 카테고리가 없습니다</p>\r\n          <p className=\"text-sm mt-2\">위의 \"카테고리 추가\" 버튼을 클릭하여 첫 카테고리를 만들어보세요</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryManager\r\n","import { SiteSettings } from '@/types'\r\nimport { Field, SectionDefinition } from './types'\r\n\r\n// Initial settings with default values\r\nexport const initialSettings: Partial<SiteSettings> = {\r\n  fullName: '', firstName: '', role: '', subtitle: '', location: '', education: '', \r\n  yearsOfExperience: '', email: '', phone: '', githubUrl: '', linkedinUrl: '', \r\n  heroTitle: '', heroSubtitle: '', aboutTitle: '', aboutSubtitle: '', aboutDescription1: '', \r\n  aboutDescription2: '', skillsTitle: '', skillsSubtitle: '', projectsTitle: '', \r\n  projectsSubtitle: '', booksTitle: '', booksSubtitle: '', contactTitle: '', \r\n  contactSubtitle: '', stat1Number: '', stat1Label: '', stat2Number: '', stat2Label: '',\r\n  experienceTitle: '', experienceSubtitle: '',\r\n  // Learning goals defaults\r\n  learningGoalsTitle: '앞으로의 학습 목표',\r\n  learningGoalsDescription: '4차 산업혁명 시대에 발맞춰 **지능형 공장(Smart Factory) 구현**을 위해 다음 기술들을 집중적으로 탐구하여 전문성을 확대해 나가겠습니다.',\r\n  learningGoalsList: ['첨단 로봇 제어', '딥러닝 기반 비전 시스템', '엣지 컴퓨팅', '클라우드 연동', 'MES/ERP 연동 기술'],\r\n  // SEO defaults\r\n  siteTitle: '', siteDescription: '', siteKeywords: '', siteAuthor: '', siteLanguage: 'ko',\r\n  siteUrl: '', ogTitle: '', ogDescription: '', ogImage: '', ogType: 'website',\r\n  twitterCard: 'summary_large_image', twitterSite: '', twitterCreator: '',\r\n  robotsIndex: true, robotsFollow: true, googleAnalyticsId: '', googleSiteVerification: '',\r\n  // Social media defaults\r\n  instagramUrl: '', twitterUrl: '', facebookUrl: '', youtubeUrl: '', tiktokUrl: '',\r\n  behanceUrl: '', dribbbleUrl: '', mediumUrl: '', telegramUrl: '', discordUrl: '',\r\n  kakaoTalkUrl: '', naverBlogUrl: '', tistoryUrl: '', velogUrl: '', notionUrl: '',\r\n  // Analytics defaults\r\n  googleTagManagerId: '', facebookPixelId: '', naverAnalyticsId: '', kakaoPixelId: '',\r\n  hotjarId: '', mixpanelToken: '', amplitudeApiKey: '', sentryDsn: '',\r\n  logRocketId: '', fullStoryOrgId: '', intercomAppId: '', zendeskWidgetKey: '',\r\n  crispWebsiteId: '', tawkToPropertyId: '', liveChatLicense: '', olarkSiteId: '',\r\n  // Security defaults\r\n  enableHttps: true, enableCsp: true, cspDirectives: \"default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:;\",\r\n  enableHsts: true, hstsMaxAge: '31536000', enableXssProtection: true, enableContentTypeOptions: true,\r\n  enableFrameOptions: true, frameOptionsValue: 'DENY', enableReferrerPolicy: true, referrerPolicyValue: 'strict-origin-when-cross-origin',\r\n  enablePermissionsPolicy: true, permissionsPolicyValue: 'camera=(), microphone=(), geolocation=(), payment=()', enableApiRateLimit: true, apiRateLimitPerMinute: '60',\r\n  enableAdminAuth: true, adminSessionTimeout: '3600', enableTwoFactorAuth: false, enableIpWhitelist: false, allowedIpAddresses: '',\r\n  enableAuditLog: true, enableBackup: true, backupFrequency: 'daily'\r\n}\r\n\r\n// All settings sections with field definitions\r\nexport const allSections: SectionDefinition[] = [\r\n  {\r\n    title: '🧑 개인 정보',\r\n    fields: [\r\n      { key: 'fullName', label: '전체 이름', type: 'text', placeholder: '최주영', isMultilingual: true },\r\n      { key: 'firstName', label: '이름', type: 'text', placeholder: '주영', isMultilingual: true },\r\n      { key: 'role', label: '역할/직책', type: 'text', placeholder: '공장자동화 전문가', isMultilingual: true },\r\n      { key: 'subtitle', label: '부제목', type: 'text', placeholder: '바리스타 → 자동화 엔지니어', isMultilingual: true },\r\n      { key: 'location', label: '위치', type: 'text', placeholder: '부산', isMultilingual: true },\r\n      { key: 'education', label: '교육', type: 'text', placeholder: '부산인력개발원', isMultilingual: true },\r\n      { key: 'yearsOfExperience', label: '경력 기간', type: 'text', placeholder: '5년', isMultilingual: true },\r\n      { key: 'email', label: '이메일', type: 'email', placeholder: 'your@email.com' },\r\n      { key: 'phone', label: '전화번호', type: 'tel', placeholder: '+82 10-1234-5678' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🔗 소셜 링크',\r\n    fields: [\r\n      { key: 'githubUrl', label: 'GitHub URL', type: 'url', placeholder: 'https://github.com/username' },\r\n      { key: 'linkedinUrl', label: 'LinkedIn URL', type: 'url', placeholder: 'https://linkedin.com/in/username' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '⚙️ 사이드바 설정',\r\n    fields: [\r\n      { key: 'sidebarSkillCount', label: '사이드바 핵심기술 표시 개수', type: 'number', min: 3, max: 6, placeholder: '4' },\r\n      { key: 'languageCardSkillCount', label: '사이드바 언어카드 표시 개수', type: 'number', min: 2, max: 5, placeholder: '3' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🏠 Hero 섹션 (메인 페이지)',\r\n    fields: [\r\n      { key: 'heroTitle', label: 'Hero 제목', type: 'text', placeholder: '공장자동화 전문가', isMultilingual: true },\r\n      { key: 'heroSubtitle', label: 'Hero 부제목', type: 'textarea', rows: 6, placeholder: '여러분의 소개를 작성하세요...', isMultilingual: true },\r\n      { key: 'heroTag', label: 'Hero 태그', type: 'text', placeholder: '🎯 취업 준비 중', isMultilingual: true },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '👤 About 섹션',\r\n    fields: [\r\n      { key: 'aboutTitle', label: 'About 제목', type: 'text', placeholder: '저의 여정', isMultilingual: true },\r\n      { key: 'aboutSubtitle', label: 'About 부제목', type: 'text', placeholder: '커피 한 잔에서 시작된...', isMultilingual: true },\r\n      { key: 'aboutDescription1', label: 'About 설명 1', type: 'textarea', rows: 6, placeholder: '첫 번째 문단...', isMultilingual: true },\r\n      { key: 'aboutDescription2', label: 'About 설명 2', type: 'textarea', rows: 6, placeholder: '두 번째 문단...', isMultilingual: true },\r\n      { key: 'aboutCardTitle', label: '소개 카드 제목', type: 'text', placeholder: '바리스타에서 자동화 전문가로', isMultilingual: true },\r\n      { key: 'aboutJourneyTitle', label: '성장 여정 제목', type: 'text', placeholder: '성장 여정', isMultilingual: true },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '💼 Experience 섹션',\r\n    fields: [\r\n      { key: 'experienceTitle', label: 'Experience 제목', type: 'text', placeholder: '경력 & 학습', isMultilingual: true },\r\n      { key: 'experienceSubtitle', label: 'Experience 부제목', type: 'text', placeholder: '바리스타에서 자동화 전문가로...', isMultilingual: true },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🛠️ Skills 섹션',\r\n    fields: [\r\n      { key: 'skillsTitle', label: 'Skills 제목', type: 'text', placeholder: '기술 스택', isMultilingual: true },\r\n      { key: 'skillsSubtitle', label: 'Skills 부제목', type: 'text', placeholder: '공장자동화와 데이터 분석을...', isMultilingual: true },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🎯 학습 목표 (Skills 페이지)',\r\n    fields: [\r\n      { key: 'learningGoalsTitle', label: '학습 목표 제목', type: 'text', placeholder: '앞으로의 학습 목표', isMultilingual: true },\r\n      { key: 'learningGoalsDescription', label: '학습 목표 설명', type: 'textarea', placeholder: '4차 산업혁명 시대에...', isMultilingual: true },\r\n      { key: 'learningGoalsList', label: '학습 목표 기술 목록', type: 'array', placeholder: '기술 이름 입력 (Enter로 추가)' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '📁 Projects 섹션',\r\n    fields: [\r\n      { key: 'projectsTitle', label: 'Projects 제목', type: 'text', placeholder: '프로젝트', isMultilingual: true },\r\n      { key: 'projectsSubtitle', label: 'Projects 부제목', type: 'text', placeholder: '다양한 분야의 프로젝트...', isMultilingual: true },\r\n      { key: 'projectsUpdateTitle', label: '업데이트 카드 제목', type: 'text', placeholder: '프로젝트 업데이트 예정', isMultilingual: true },\r\n      { key: 'projectsUpdateDescription', label: '업데이트 카드 설명', type: 'textarea', placeholder: '현재 학습 중인 기술들을 활용한 실제 프로젝트들을 곧 업로드할 예정입니다.', isMultilingual: true },\r\n      { key: 'projectsUpdateTechList', label: '업데이트 예정 기술 목록', type: 'array', placeholder: '기술 이름 입력 (Enter로 추가)' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '📚 Books 섹션',\r\n    fields: [\r\n      { key: 'booksTitle', label: 'Books 제목', type: 'text', placeholder: '기술 서적 & 학습 노트', isMultilingual: true },\r\n      { key: 'booksSubtitle', label: 'Books 부제목', type: 'text', placeholder: '읽은 기술 서적과...', isMultilingual: true },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '📞 Contact 섹션',\r\n    fields: [\r\n      { key: 'contactTitle', label: 'Contact 제목', type: 'text', placeholder: '연락처', isMultilingual: true },\r\n      { key: 'contactSubtitle', label: 'Contact 부제목', type: 'text', placeholder: '프로젝트나 협업에...', isMultilingual: true },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '📊 통계 섹션',\r\n    fields: [\r\n      { key: 'stat1Number', label: '통계 1 숫자', type: 'text', placeholder: '5+' },\r\n      { key: 'stat1Label', label: '통계 1 라벨', type: 'text', placeholder: '년 경력', isMultilingual: true },\r\n      { key: 'stat2Number', label: '통계 2 숫자', type: 'text', placeholder: '10+' },\r\n      { key: 'stat2Label', label: '통계 2 라벨', type: 'text', placeholder: '기술 스택', isMultilingual: true },\r\n      { key: 'stat3Number', label: '통계 3 숫자', type: 'text', placeholder: '3+' },\r\n      { key: 'stat3Label', label: '통계 3 라벨', type: 'text', placeholder: '완료 프로젝트', isMultilingual: true },\r\n    ] as Field[]\r\n  },\r\n  // SEO Settings\r\n  {\r\n    title: '🔍 기본 SEO 설정',\r\n    fields: [\r\n      { key: 'siteTitle', label: '사이트 제목', type: 'text', placeholder: '포트폴리오 - 홍길동' },\r\n      { key: 'siteDescription', label: '사이트 설명', type: 'textarea', rows: 3, placeholder: '공장자동화 전문가 홍길동의 포트폴리오입니다. PLC 프로그래밍, 데이터 분석, 자동화 시스템 개발 경험을 소개합니다.' },\r\n      { key: 'siteKeywords', label: '키워드 (쉼표로 구분)', type: 'text', placeholder: '공장자동화, PLC, 데이터분석, 자동화시스템' },\r\n      { key: 'siteAuthor', label: '작성자', type: 'text', placeholder: '홍길동' },\r\n      { key: 'siteLanguage', label: '사이트 언어', type: 'select', placeholder: '언어 선택', options: [\r\n        { value: 'ko', label: '한국어 (ko)' },\r\n        { value: 'en', label: 'English (en)' },\r\n        { value: 'ja', label: '日本語 (ja)' },\r\n        { value: 'zh', label: '中文 (zh)' }\r\n      ]},\r\n      { key: 'siteUrl', label: '사이트 URL', type: 'url', placeholder: 'https://yourportfolio.com' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '📱 Open Graph (Facebook, LinkedIn)',\r\n    fields: [\r\n      { key: 'ogTitle', label: 'OG 제목', type: 'text', placeholder: '포트폴리오 - 홍길동' },\r\n      { key: 'ogDescription', label: 'OG 설명', type: 'textarea', rows: 3, placeholder: '공장자동화 전문가 홍길동의 포트폴리오를 확인해보세요.' },\r\n      { key: 'ogImage', label: 'OG 이미지 URL', type: 'url', placeholder: 'https://yourportfolio.com/og-image.jpg' },\r\n      { key: 'ogType', label: 'OG 타입', type: 'select', placeholder: '타입 선택', options: [\r\n        { value: 'website', label: '웹사이트 (website)' },\r\n        { value: 'profile', label: '프로필 (profile)' },\r\n        { value: 'article', label: '기사 (article)' }\r\n      ]},\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🐦 Twitter Card',\r\n    fields: [\r\n      { key: 'twitterCard', label: 'Twitter Card 타입', type: 'select', placeholder: '카드 타입 선택', options: [\r\n        { value: 'summary', label: '요약 (summary)' },\r\n        { value: 'summary_large_image', label: '큰 이미지 요약 (summary_large_image)' },\r\n        { value: 'app', label: '앱 (app)' },\r\n        { value: 'player', label: '플레이어 (player)' }\r\n      ]},\r\n      { key: 'twitterSite', label: 'Twitter 사이트 계정', type: 'text', placeholder: '@yourhandle' },\r\n      { key: 'twitterCreator', label: 'Twitter 작성자 계정', type: 'text', placeholder: '@yourhandle' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🤖 검색 엔진 설정',\r\n    fields: [\r\n      { key: 'robotsIndex', label: '검색 엔진 인덱싱 허용', type: 'checkbox', placeholder: '검색 엔진이 이 사이트를 인덱싱할 수 있도록 허용합니다.' },\r\n      { key: 'robotsFollow', label: '링크 팔로우 허용', type: 'checkbox', placeholder: '검색 엔진이 이 사이트의 링크를 따라갈 수 있도록 허용합니다.' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '📊 Google 설정',\r\n    fields: [\r\n      { key: 'googleAnalyticsId', label: 'Google Analytics ID', type: 'text', placeholder: 'G-XXXXXXXXXX' },\r\n      { key: 'googleSiteVerification', label: 'Google 사이트 인증 코드', type: 'text', placeholder: 'google-site-verification=...' },\r\n    ] as Field[]\r\n  },\r\n  // Social Media\r\n  {\r\n    title: '📱 글로벌 소셜 미디어',\r\n    fields: [\r\n      { key: 'instagramUrl', label: 'Instagram URL', type: 'url', placeholder: 'https://instagram.com/yourhandle' },\r\n      { key: 'twitterUrl', label: 'Twitter URL', type: 'url', placeholder: 'https://twitter.com/yourhandle' },\r\n      { key: 'facebookUrl', label: 'Facebook URL', type: 'url', placeholder: 'https://facebook.com/yourpage' },\r\n      { key: 'youtubeUrl', label: 'YouTube URL', type: 'url', placeholder: 'https://youtube.com/@yourchannel' },\r\n      { key: 'tiktokUrl', label: 'TikTok URL', type: 'url', placeholder: 'https://tiktok.com/@yourhandle' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🎨 디자인 & 포트폴리오',\r\n    fields: [\r\n      { key: 'behanceUrl', label: 'Behance URL', type: 'url', placeholder: 'https://behance.net/yourprofile' },\r\n      { key: 'dribbbleUrl', label: 'Dribbble URL', type: 'url', placeholder: 'https://dribbble.com/yourhandle' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '✍️ 블로그 & 글쓰기',\r\n    fields: [\r\n      { key: 'mediumUrl', label: 'Medium URL', type: 'url', placeholder: 'https://medium.com/@yourhandle' },\r\n      { key: 'velogUrl', label: 'Velog URL', type: 'url', placeholder: 'https://velog.io/@yourhandle' },\r\n      { key: 'tistoryUrl', label: 'Tistory URL', type: 'url', placeholder: 'https://yourblog.tistory.com' },\r\n      { key: 'naverBlogUrl', label: '네이버 블로그 URL', type: 'url', placeholder: 'https://blog.naver.com/yourblog' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '💬 메신저 & 커뮤니케이션',\r\n    fields: [\r\n      { key: 'telegramUrl', label: 'Telegram URL', type: 'url', placeholder: 'https://t.me/yourhandle' },\r\n      { key: 'discordUrl', label: 'Discord URL', type: 'url', placeholder: 'https://discord.gg/yourserver' },\r\n      { key: 'kakaoTalkUrl', label: '카카오톡 URL', type: 'url', placeholder: 'https://open.kakao.com/o/yourgroup' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '📝 워크스페이스 & 도구',\r\n    fields: [\r\n      { key: 'notionUrl', label: 'Notion 워크스페이스 URL', type: 'url', placeholder: 'https://notion.so/yourworkspace' },\r\n    ] as Field[]\r\n  },\r\n  // Analytics\r\n  {\r\n    title: '📊 웹 분석 도구',\r\n    fields: [\r\n      { key: 'googleTagManagerId', label: 'Google Tag Manager ID', type: 'text', placeholder: 'GTM-XXXXXXX' },\r\n      { key: 'facebookPixelId', label: 'Facebook Pixel ID', type: 'text', placeholder: '123456789012345' },\r\n      { key: 'naverAnalyticsId', label: '네이버 웹마스터 도구 ID', type: 'text', placeholder: 'naver-site-verification=...' },\r\n      { key: 'kakaoPixelId', label: '카카오 픽셀 ID', type: 'text', placeholder: '1234567890' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🔍 사용자 행동 분석',\r\n    fields: [\r\n      { key: 'hotjarId', label: 'Hotjar Site ID', type: 'text', placeholder: '1234567' },\r\n      { key: 'mixpanelToken', label: 'Mixpanel Project Token', type: 'text', placeholder: 'abc123def456...' },\r\n      { key: 'amplitudeApiKey', label: 'Amplitude API Key', type: 'text', placeholder: 'abc123def456...' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🐛 에러 추적 & 모니터링',\r\n    fields: [\r\n      { key: 'sentryDsn', label: 'Sentry DSN', type: 'text', placeholder: 'https://abc123@sentry.io/123456' },\r\n      { key: 'logRocketId', label: 'LogRocket App ID', type: 'text', placeholder: 'abc123def456' },\r\n      { key: 'fullStoryOrgId', label: 'FullStory Org ID', type: 'text', placeholder: 'ABC123' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '💬 고객 지원 & 채팅',\r\n    fields: [\r\n      { key: 'intercomAppId', label: 'Intercom App ID', type: 'text', placeholder: 'abc123def' },\r\n      { key: 'zendeskWidgetKey', label: 'Zendesk Widget Key', type: 'text', placeholder: 'abc123def456...' },\r\n      { key: 'crispWebsiteId', label: 'Crisp Website ID', type: 'text', placeholder: 'abc123def456...' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🎧 추가 채팅 도구',\r\n    fields: [\r\n      { key: 'tawkToPropertyId', label: 'Tawk.to Property ID', type: 'text', placeholder: 'abc123def456...' },\r\n      { key: 'liveChatLicense', label: 'LiveChat License Number', type: 'text', placeholder: '12345678' },\r\n      { key: 'olarkSiteId', label: 'Olark Site ID', type: 'text', placeholder: 'abc123def456...' },\r\n    ] as Field[]\r\n  },\r\n  // Security\r\n  {\r\n    title: '🔒 기본 보안 헤더',\r\n    fields: [\r\n      { key: 'enableHttps', label: 'HTTPS 강제 사용', type: 'checkbox', placeholder: '모든 HTTP 요청을 HTTPS로 리다이렉트합니다.' },\r\n      { key: 'enableCsp', label: 'Content Security Policy (CSP) 활성화', type: 'checkbox', placeholder: 'XSS 공격을 방지하기 위한 CSP 헤더를 설정합니다.' },\r\n      { key: 'cspDirectives', label: 'CSP 지시문', type: 'textarea', rows: 3, placeholder: 'Content Security Policy 지시문을 설정합니다.' },\r\n      { key: 'enableHsts', label: 'HTTP Strict Transport Security (HSTS) 활성화', type: 'checkbox', placeholder: 'HTTPS 연결을 강제하는 HSTS 헤더를 설정합니다.' },\r\n      { key: 'hstsMaxAge', label: 'HSTS 최대 나이 (초)', type: 'text', placeholder: '31536000 (1년)' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🛡️ 추가 보안 헤더',\r\n    fields: [\r\n      { key: 'enableXssProtection', label: 'XSS 보호 활성화', type: 'checkbox', placeholder: '브라우저의 XSS 필터를 활성화합니다.' },\r\n      { key: 'enableContentTypeOptions', label: 'Content-Type 옵션 활성화', type: 'checkbox', placeholder: 'MIME 타입 스니핑 공격을 방지합니다.' },\r\n      { key: 'enableFrameOptions', label: 'X-Frame-Options 활성화', type: 'checkbox', placeholder: '클릭재킹 공격을 방지합니다.' },\r\n      { key: 'frameOptionsValue', label: 'X-Frame-Options 값', type: 'select', placeholder: '헤더 값 선택', options: [\r\n        { value: 'DENY', label: 'DENY (모든 프레임 차단)' },\r\n        { value: 'SAMEORIGIN', label: 'SAMEORIGIN (같은 도메인만 허용)' },\r\n        { value: 'ALLOW-FROM', label: 'ALLOW-FROM (특정 도메인 허용)' }\r\n      ]},\r\n      { key: 'enableReferrerPolicy', label: 'Referrer Policy 활성화', type: 'checkbox', placeholder: '리퍼러 정보 노출을 제어합니다.' },\r\n      { key: 'referrerPolicyValue', label: 'Referrer Policy 값', type: 'select', placeholder: '정책 값 선택', options: [\r\n        { value: 'no-referrer', label: 'no-referrer (리퍼러 정보 전송 안함)' },\r\n        { value: 'strict-origin-when-cross-origin', label: 'strict-origin-when-cross-origin (교차 도메인시 도메인만)' },\r\n        { value: 'same-origin', label: 'same-origin (같은 도메인만)' }\r\n      ]},\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '🔐 권한 및 정책',\r\n    fields: [\r\n      { key: 'enablePermissionsPolicy', label: 'Permissions Policy 활성화', type: 'checkbox', placeholder: '브라우저 기능 사용을 제어합니다.' },\r\n      { key: 'permissionsPolicyValue', label: 'Permissions Policy 값', type: 'textarea', rows: 2, placeholder: 'camera=(), microphone=(), geolocation=(), payment=()' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '⚡ API 보안',\r\n    fields: [\r\n      { key: 'enableApiRateLimit', label: 'API 속도 제한 활성화', type: 'checkbox', placeholder: 'API 요청 빈도를 제한하여 DDoS 공격을 방지합니다.' },\r\n      { key: 'apiRateLimitPerMinute', label: '분당 API 요청 제한', type: 'text', placeholder: '60 (분당 60회)' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '👤 관리자 인증',\r\n    fields: [\r\n      { key: 'enableAdminAuth', label: '관리자 인증 활성화', type: 'checkbox', placeholder: '관리자 대시보드 접근을 위한 인증을 활성화합니다.' },\r\n      { key: 'adminSessionTimeout', label: '관리자 세션 타임아웃 (초)', type: 'text', placeholder: '3600 (1시간)' },\r\n      { key: 'enableTwoFactorAuth', label: '2단계 인증 활성화', type: 'checkbox', placeholder: '관리자 로그인시 2단계 인증을 요구합니다.' },\r\n      { key: 'enableIpWhitelist', label: 'IP 화이트리스트 활성화', type: 'checkbox', placeholder: '특정 IP 주소에서만 관리자 접근을 허용합니다.' },\r\n      { key: 'allowedIpAddresses', label: '허용된 IP 주소 (쉼표로 구분)', type: 'text', placeholder: '192.168.1.1, 10.0.0.1' },\r\n    ] as Field[]\r\n  },\r\n  {\r\n    title: '📋 로그 & 백업',\r\n    fields: [\r\n      { key: 'enableAuditLog', label: '감사 로그 활성화', type: 'checkbox', placeholder: '관리자 활동을 기록하여 보안 감사를 지원합니다.' },\r\n      { key: 'enableBackup', label: '자동 백업 활성화', type: 'checkbox', placeholder: '정기적으로 데이터를 백업합니다.' },\r\n      { key: 'backupFrequency', label: '백업 빈도', type: 'select', placeholder: '백업 주기 선택', options: [\r\n        { value: 'hourly', label: '매시간 (hourly)' },\r\n        { value: 'daily', label: '매일 (daily)' },\r\n        { value: 'weekly', label: '매주 (weekly)' },\r\n        { value: 'monthly', label: '매월 (monthly)' }\r\n      ]},\r\n    ] as Field[]\r\n  },\r\n]\r\n\r\n","import { AdminLanguage } from '@/components/common/LanguageTabs'\r\nimport { SectionDefinition } from './types'\r\nimport { allSections } from './constants'\r\n\r\n/**\r\n * Generate multilingual field key based on language\r\n * @param baseKey - Base field key (e.g., 'heroTitle')\r\n * @param lang - Target language ('ko', 'en', 'ja')\r\n * @returns Localized field key (e.g., 'heroTitleEn' for 'en')\r\n */\r\nexport const getMultilingualKey = (baseKey: string, lang: AdminLanguage): string => {\r\n  if (lang === 'ko') return baseKey\r\n  if (lang === 'en') return `${baseKey}En`\r\n  if (lang === 'ja') return `${baseKey}Ja`\r\n  return baseKey\r\n}\r\n\r\n/**\r\n * Check if a multilingual field has values in all languages\r\n * @param settings - Settings object containing field values\r\n * @param fieldKey - Base field key to check\r\n * @returns Object with completion status for each language\r\n */\r\nexport const isFieldTranslated = (\r\n  settings: any,\r\n  fieldKey: string\r\n): { ko: boolean; en: boolean; ja: boolean; complete: boolean } => {\r\n  const koValue = settings[fieldKey]\r\n  const enValue = settings[getMultilingualKey(fieldKey, 'en')]\r\n  const jaValue = settings[getMultilingualKey(fieldKey, 'ja')]\r\n\r\n  const hasKo = Boolean(koValue && (typeof koValue === 'string' ? koValue.trim() : koValue))\r\n  const hasEn = Boolean(enValue && (typeof enValue === 'string' ? enValue.trim() : enValue))\r\n  const hasJa = Boolean(jaValue && (typeof jaValue === 'string' ? jaValue.trim() : jaValue))\r\n\r\n  return {\r\n    ko: hasKo,\r\n    en: hasEn,\r\n    ja: hasJa,\r\n    complete: hasKo && hasEn && hasJa\r\n  }\r\n}\r\n\r\n/**\r\n * Get active section title based on section ID\r\n * @param activeSection - Section ID ('general', 'appearance', etc.)\r\n * @returns Human-readable section title\r\n */\r\nexport const getActiveSectionTitle = (activeSection: string | null): string => {\r\n  switch (activeSection) {\r\n    case 'general': return '🏠 일반 설정'\r\n    case 'appearance': return '🎨 외관 설정'\r\n    case 'seo': return '🔍 SEO 설정'\r\n    case 'social': return '📱 소셜 미디어'\r\n    case 'analytics': return '📊 분석 도구'\r\n    case 'security': return '🔒 보안 설정'\r\n    default: return '사이트 설정'\r\n  }\r\n}\r\n\r\n/**\r\n * Get active section description based on section ID\r\n * @param activeSection - Section ID ('general', 'appearance', etc.)\r\n * @returns Section description text\r\n */\r\nexport const getActiveSectionDescription = (activeSection: string | null): string => {\r\n  switch (activeSection) {\r\n    case 'general': return '사이트의 기본 정보와 개인 정보를 설정합니다.'\r\n    case 'appearance': return '각 섹션의 제목과 내용을 편집합니다.'\r\n    case 'seo': return '검색 엔진 최적화 설정을 관리합니다.'\r\n    case 'social': return '소셜 미디어 링크와 연락처 정보를 설정합니다.'\r\n    case 'analytics': return 'Google Analytics 등 분석 도구를 설정합니다.'\r\n    case 'security': return '인증 및 보안 설정을 관리합니다.'\r\n    default: return '포트폴리오의 모든 텍스트를 편집하고 저장하세요.'\r\n  }\r\n}\r\n\r\n/**\r\n * Filter sections based on active section ID\r\n * @param activeSection - Section ID or null for all sections\r\n * @returns Filtered array of section definitions\r\n */\r\nexport const getFilteredSections = (activeSection: string | null): SectionDefinition[] => {\r\n  if (!activeSection) return allSections\r\n\r\n  switch (activeSection) {\r\n    case 'general':\r\n      // General settings: Personal info + Social links + Sidebar settings\r\n      return allSections.filter(section =>\r\n        section.title.includes('개인 정보') || \r\n        section.title.includes('소셜 링크') || \r\n        section.title.includes('사이드바 설정')\r\n      )\r\n    \r\n    case 'appearance':\r\n      // Appearance: Hero + About + Experience + Skills + Learning Goals + Projects + Books + Contact + Stats\r\n      return allSections.filter(section =>\r\n        section.title.includes('Hero') ||\r\n        section.title.includes('About') ||\r\n        section.title.includes('Experience') ||\r\n        section.title.includes('Skills') ||\r\n        section.title.includes('학습 목표') ||\r\n        section.title.includes('Projects') ||\r\n        section.title.includes('Books') ||\r\n        section.title.includes('Contact') ||\r\n        section.title.includes('통계')\r\n      )\r\n    \r\n    case 'seo':\r\n      // SEO: All SEO-related sections\r\n      return allSections.filter(section =>\r\n        section.title.includes('SEO') ||\r\n        section.title.includes('Open Graph') ||\r\n        section.title.includes('Twitter Card') ||\r\n        section.title.includes('검색 엔진') ||\r\n        section.title.includes('Google')\r\n      )\r\n    \r\n    case 'social':\r\n      // Social media: Social links + all social media sections\r\n      return allSections.filter(section =>\r\n        section.title.includes('소셜 링크') ||\r\n        section.title.includes('글로벌 소셜 미디어') ||\r\n        section.title.includes('디자인 & 포트폴리오') ||\r\n        section.title.includes('블로그 & 글쓰기') ||\r\n        section.title.includes('메신저 & 커뮤니케이션') ||\r\n        section.title.includes('워크스페이스 & 도구')\r\n      )\r\n    \r\n    case 'analytics':\r\n      // Analytics: All analytics-related sections\r\n      return allSections.filter(section =>\r\n        section.title.includes('웹 분석 도구') ||\r\n        section.title.includes('사용자 행동 분석') ||\r\n        section.title.includes('에러 추적') ||\r\n        section.title.includes('고객 지원') ||\r\n        section.title.includes('추가 채팅 도구')\r\n      )\r\n    \r\n    case 'security':\r\n      // Security: All security-related sections\r\n      return allSections.filter(section =>\r\n        section.title.includes('기본 보안 헤더') ||\r\n        section.title.includes('추가 보안 헤더') ||\r\n        section.title.includes('권한 및 정책') ||\r\n        section.title.includes('API 보안') ||\r\n        section.title.includes('관리자 인증') ||\r\n        section.title.includes('로그 & 백업')\r\n      )\r\n    \r\n    default:\r\n      return allSections\r\n  }\r\n}\r\n\r\n","import { useState, useEffect, useCallback } from 'react'\r\nimport { SiteSettings } from '@/types'\r\nimport { AdminLanguage } from '@/components/common/LanguageTabs'\r\nimport { settingsAPI } from '@/services/api'\r\nimport { useSiteSettings } from '@/hooks/useSiteSettings'\r\nimport { MessageType } from '../types'\r\nimport { initialSettings } from '../constants'\r\nimport { getFilteredSections } from '../utils'\r\n\r\n/**\r\n * Custom hook for managing settings form state and business logic\r\n * @param activeSection - Optional section filter ('general', 'appearance', etc.)\r\n */\r\nexport const useSettingsForm = (activeSection: string | null = null) => {\r\n  const { refetchSettings } = useSiteSettings()\r\n  const [settings, setSettings] = useState<SiteSettings>(initialSettings as SiteSettings)\r\n  const [loading, setLoading] = useState(true)\r\n  const [saving, setSaving] = useState(false)\r\n  const [message, setMessage] = useState<MessageType | null>(null)\r\n  const [expandedSections, setExpandedSections] = useState<Set<string>>(\r\n    new Set(['개인 정보', '소셜 링크'])\r\n  )\r\n  const [currentLang, setCurrentLang] = useState<AdminLanguage>('ko')\r\n\r\n  /**\r\n   * Normalize settings data, ensuring number fields are properly typed\r\n   */\r\n  const normalizeSettings = (data: any): SiteSettings => {\r\n    const normalized = { ...initialSettings, ...data }\r\n    \r\n    // Ensure number fields are numbers, not strings\r\n    if (normalized.sidebarSkillCount) {\r\n      normalized.sidebarSkillCount = typeof normalized.sidebarSkillCount === 'number' \r\n        ? normalized.sidebarSkillCount \r\n        : parseInt(String(normalized.sidebarSkillCount)) || 4\r\n    }\r\n    if (normalized.languageCardSkillCount) {\r\n      normalized.languageCardSkillCount = typeof normalized.languageCardSkillCount === 'number'\r\n        ? normalized.languageCardSkillCount\r\n        : parseInt(String(normalized.languageCardSkillCount)) || 3\r\n    }\r\n\r\n    return normalized\r\n  }\r\n\r\n  /**\r\n   * Fetch settings from API\r\n   */\r\n  const fetchSettings = useCallback(async () => {\r\n    try {\r\n      const response = await settingsAPI.get()\r\n      const normalizedData = normalizeSettings(response.data)\r\n      setSettings(normalizedData)\r\n    } catch (error) {\r\n      console.error('Failed to fetch settings:', error)\r\n      setMessage({ \r\n        type: 'error', \r\n        text: '설정을 불러오는데 실패했습니다. 기본 값으로 표시됩니다.' \r\n      })\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }, [])\r\n\r\n  /**\r\n   * Save settings to API\r\n   */\r\n  const handleSave = async () => {\r\n    setSaving(true)\r\n    setMessage(null)\r\n\r\n    try {\r\n      await settingsAPI.update(settings)\r\n      await refetchSettings()\r\n      \r\n      setMessage({ \r\n        type: 'success', \r\n        text: '✅ 설정이 성공적으로 저장되었습니다! 화면이 업데이트됩니다.' \r\n      })\r\n      \r\n      // Auto-hide message after 5 seconds\r\n      setTimeout(() => setMessage(null), 5000)\r\n    } catch (error) {\r\n      console.error('Failed to save settings:', error)\r\n      setMessage({ \r\n        type: 'error', \r\n        text: '❌ 설정 저장에 실패했습니다. 콘솔을 확인해주세요.' \r\n      })\r\n    } finally {\r\n      setSaving(false)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update a single field value\r\n   */\r\n  const handleChange = (field: keyof SiteSettings, value: string | boolean | string[] | number) => {\r\n    setSettings(prevSettings => ({ ...prevSettings, [field]: value }))\r\n  }\r\n\r\n  /**\r\n   * Toggle section expand/collapse state\r\n   */\r\n  const toggleSection = (sectionTitle: string) => {\r\n    setExpandedSections(prev => {\r\n      const newSet = new Set(prev)\r\n      if (newSet.has(sectionTitle)) {\r\n        newSet.delete(sectionTitle)\r\n      } else {\r\n        newSet.add(sectionTitle)\r\n      }\r\n      return newSet\r\n    })\r\n  }\r\n\r\n  // Initial fetch on mount\r\n  useEffect(() => {\r\n    fetchSettings()\r\n  }, [fetchSettings])\r\n\r\n  // Auto-expand sections based on activeSection\r\n  useEffect(() => {\r\n    if (activeSection) {\r\n      if (activeSection === 'appearance') {\r\n        // Start with all sections collapsed for appearance\r\n        setExpandedSections(new Set())\r\n      } else {\r\n        // Expand all filtered sections for other categories\r\n        const filteredSections = getFilteredSections(activeSection)\r\n        const sectionTitles = filteredSections.map(section => section.title)\r\n        setExpandedSections(new Set(sectionTitles))\r\n      }\r\n    } else {\r\n      // Default expanded sections\r\n      setExpandedSections(new Set(['개인 정보', '소셜 링크']))\r\n    }\r\n  }, [activeSection])\r\n\r\n  return {\r\n    settings,\r\n    loading,\r\n    saving,\r\n    message,\r\n    expandedSections,\r\n    currentLang,\r\n    setCurrentLang,\r\n    handleChange,\r\n    handleSave,\r\n    toggleSection,\r\n    setExpandedSections\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\nimport { FaPlus } from 'react-icons/fa'\r\nimport { FieldRendererProps } from '../types'\r\nimport { getMultilingualKey } from '../utils'\r\n\r\n/**\r\n * SettingField Component\r\n * Renders an individual form field with language indicators for multilingual fields\r\n */\r\nconst SettingField: React.FC<FieldRendererProps> = ({ \r\n  field, \r\n  value, \r\n  onChange, \r\n  currentLang = 'ko', \r\n  settings \r\n}) => {\r\n  // Language indicator for multilingual fields\r\n  const renderLanguageIndicator = () => {\r\n    if (!field.isMultilingual || !settings) return null\r\n\r\n    const koValue = settings[field.key]\r\n    const enValue = settings[getMultilingualKey(field.key as string, 'en')]\r\n    const jaValue = settings[getMultilingualKey(field.key as string, 'ja')]\r\n\r\n    return (\r\n      <div className=\"flex gap-2 text-xs mb-2\">\r\n        <span className={`px-2 py-1 rounded ${koValue ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300' : 'bg-gray-100 dark:bg-gray-700 text-gray-500'}`}>\r\n          🇰🇷 {koValue ? '✓' : '○'}\r\n        </span>\r\n        <span className={`px-2 py-1 rounded ${enValue ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300' : 'bg-gray-100 dark:bg-gray-700 text-gray-500'}`}>\r\n          🇺🇸 {enValue ? '✓' : '○'}\r\n        </span>\r\n        <span className={`px-2 py-1 rounded ${jaValue ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300' : 'bg-gray-100 dark:bg-gray-700 text-gray-500'}`}>\r\n          🇯🇵 {jaValue ? '✓' : '○'}\r\n        </span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Render input based on field type\r\n  const renderInput = () => {\r\n    switch (field.type) {\r\n      case 'textarea':\r\n        return (\r\n          <>\r\n            {renderLanguageIndicator()}\r\n            <textarea\r\n              id={field.key}\r\n              value={(value as string) || ''}\r\n              onChange={(e) => onChange(e.target.value)}\r\n              rows={field.rows || 3}\r\n              placeholder={field.placeholder}\r\n              className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-vertical\"\r\n            />\r\n          </>\r\n        )\r\n\r\n      case 'select':\r\n        return (\r\n          <select\r\n            id={field.key}\r\n            value={(value as string) || ''}\r\n            onChange={(e) => onChange(e.target.value)}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          >\r\n            {field.options?.map((option) => (\r\n              <option key={option.value} value={option.value}>\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        )\r\n\r\n      case 'checkbox':\r\n        return (\r\n          <div className=\"flex items-center space-x-3\">\r\n            <input\r\n              id={field.key}\r\n              type=\"checkbox\"\r\n              checked={(value as boolean) || false}\r\n              onChange={(e) => onChange(e.target.checked)}\r\n              className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\r\n            />\r\n            <label htmlFor={field.key} className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n              {field.placeholder}\r\n            </label>\r\n          </div>\r\n        )\r\n\r\n      case 'number':\r\n        return (\r\n          <input\r\n            id={field.key}\r\n            type=\"number\"\r\n            value={(value as number) || ''}\r\n            onChange={(e) => onChange(parseInt(e.target.value) || 0)}\r\n            min={field.min}\r\n            max={field.max}\r\n            placeholder={field.placeholder}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          />\r\n        )\r\n\r\n      case 'array':\r\n        return (\r\n          <div className=\"space-y-2\">\r\n            {((value as string[]) || []).map((item, index) => (\r\n              <div key={index} className=\"flex items-center gap-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={item}\r\n                  onChange={(e) => {\r\n                    const newArray = [...(value as string[])]\r\n                    newArray[index] = e.target.value\r\n                    onChange(newArray)\r\n                  }}\r\n                  className=\"flex-1 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                  placeholder={field.placeholder}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    const newArray = (value as string[]).filter((_, i) => i !== index)\r\n                    onChange(newArray)\r\n                  }}\r\n                  className=\"p-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\"\r\n                >\r\n                  삭제\r\n                </button>\r\n              </div>\r\n            ))}\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                const newArray = [...((value as string[]) || []), '']\r\n                onChange(newArray)\r\n              }}\r\n              className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2\"\r\n            >\r\n              <FaPlus size={12} /> 항목 추가\r\n            </button>\r\n          </div>\r\n        )\r\n\r\n      default:\r\n        return (\r\n          <>\r\n            {renderLanguageIndicator()}\r\n            <input\r\n              id={field.key}\r\n              type={field.type}\r\n              value={(value as string) || ''}\r\n              onChange={(e) => onChange(e.target.value)}\r\n              placeholder={field.placeholder}\r\n              className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            />\r\n          </>\r\n        )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {field.type !== 'checkbox' && (\r\n        <label\r\n          htmlFor={field.key}\r\n          className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\"\r\n        >\r\n          {field.label}\r\n        </label>\r\n      )}\r\n      {renderInput()}\r\n      {field.type === 'checkbox' && (\r\n        <label\r\n          htmlFor={field.key}\r\n          className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\"\r\n        >\r\n          {field.label}\r\n        </label>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SettingField\r\n\r\n","import React from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport { FaEdit, FaChevronDown, FaChevronRight } from 'react-icons/fa'\r\nimport { SiteSettings } from '@/types'\r\nimport { AdminLanguage } from '@/components/common/LanguageTabs'\r\nimport LanguageTabs from '@/components/common/LanguageTabs'\r\nimport { SectionDefinition } from '../types'\r\nimport { getMultilingualKey } from '../utils'\r\nimport SettingField from './SettingField'\r\n\r\ninterface SettingsSectionProps {\r\n  section: SectionDefinition\r\n  isExpanded: boolean\r\n  onToggle: () => void\r\n  currentLang: AdminLanguage\r\n  settings: SiteSettings\r\n  onChange: (field: keyof SiteSettings, value: string | boolean | string[] | number) => void\r\n  setCurrentLang: (lang: AdminLanguage) => void\r\n}\r\n\r\n/**\r\n * SettingsSection Component\r\n * Renders a collapsible section containing multiple setting fields\r\n */\r\nconst SettingsSection: React.FC<SettingsSectionProps> = ({\r\n  section,\r\n  isExpanded,\r\n  onToggle,\r\n  currentLang,\r\n  settings,\r\n  onChange,\r\n  setCurrentLang\r\n}) => {\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden\">\r\n      {/* Section Header */}\r\n      <button\r\n        onClick={onToggle}\r\n        className=\"w-full p-6 text-left hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\"\r\n      >\r\n        <h3 className=\"text-xl font-bold text-gray-900 dark:text-white flex items-center gap-3\">\r\n          <FaEdit className=\"text-primary-500\" size={20} />\r\n          {section.title}\r\n          {isExpanded ? (\r\n            <FaChevronDown className=\"text-gray-400 ml-auto\" size={16} />\r\n          ) : (\r\n            <FaChevronRight className=\"text-gray-400 ml-auto\" size={16} />\r\n          )}\r\n        </h3>\r\n      </button>\r\n\r\n      {/* Section Content */}\r\n      <AnimatePresence>\r\n        {isExpanded && (\r\n          <motion.div\r\n            initial={{ height: 0, opacity: 0 }}\r\n            animate={{ height: 'auto', opacity: 1 }}\r\n            exit={{ height: 0, opacity: 0 }}\r\n            transition={{ duration: 0.3, ease: 'easeInOut' }}\r\n            className=\"overflow-hidden\"\r\n          >\r\n            <div className={`p-6 pt-4 border-t border-gray-200 dark:border-gray-700 ${\r\n              section.title.includes('Hero 섹션') ? 'py-8' : ''\r\n            }`}>\r\n              {/* Language tabs for multilingual sections */}\r\n              {section.fields.some(f => f.isMultilingual) && (\r\n                <LanguageTabs\r\n                  activeLanguage={currentLang}\r\n                  onChange={setCurrentLang}\r\n                />\r\n              )}\r\n\r\n              {/* Fields grid */}\r\n              <div className={`grid gap-6 ${\r\n                section.title.includes('About 섹션') ||\r\n                section.title.includes('Hero 섹션') ||\r\n                section.title.includes('Experience 섹션') ||\r\n                section.title.includes('Skills 섹션') ||\r\n                section.title.includes('Projects 섹션') ||\r\n                section.title.includes('Books 섹션') ||\r\n                section.title.includes('소셜 링크') ||\r\n                section.title.includes('Contact 섹션')\r\n                  ? 'grid-cols-1'\r\n                  : 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3'\r\n              }`}>\r\n                {section.fields.map((field) => {\r\n                  // Use multilingual key if field supports it\r\n                  const activeKey = field.isMultilingual\r\n                    ? getMultilingualKey(field.key as string, currentLang) as keyof SiteSettings\r\n                    : field.key\r\n\r\n                  return (\r\n                    <SettingField\r\n                      key={field.key}\r\n                      field={field}\r\n                      value={settings[activeKey] || (field.type === 'checkbox' ? false : field.type === 'array' ? [] : '')}\r\n                      onChange={(value) => onChange(activeKey, value)}\r\n                      currentLang={currentLang}\r\n                      settings={settings}\r\n                    />\r\n                  )\r\n                })}\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SettingsSection\r\n\r\n","import React from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { FaSave } from 'react-icons/fa'\r\nimport { SiteSettingsEditorProps } from './settings/types'\r\nimport { useSettingsForm } from './settings/hooks/useSettingsForm'\r\nimport { getFilteredSections, getActiveSectionTitle, getActiveSectionDescription } from './settings/utils'\r\nimport SettingsSection from './settings/components/SettingsSection'\r\n\r\n/**\r\n * SiteSettingsEditor - Main orchestrator component\r\n * Manages the site settings editing interface with categorized sections\r\n */\r\nconst SiteSettingsEditor: React.FC<SiteSettingsEditorProps> = ({ activeSection = null }) => {\r\n  const {\r\n    settings,\r\n    loading,\r\n    saving,\r\n    message,\r\n    expandedSections,\r\n    currentLang,\r\n    setCurrentLang,\r\n    handleChange,\r\n    handleSave,\r\n    toggleSection,\r\n    setExpandedSections\r\n  } = useSettingsForm(activeSection)\r\n\r\n  // Loading state\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center py-20\">\r\n        <div className=\"w-16 h-16 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mb-4\"></div>\r\n        <p className=\"text-gray-600 dark:text-gray-400\">설정을 불러오는 중...</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const sections = getFilteredSections(activeSection)\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Header with action buttons */}\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n            {getActiveSectionTitle(activeSection)}\r\n          </h2>\r\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\r\n            {getActiveSectionDescription(activeSection)}\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center gap-3\">\r\n          <button\r\n            onClick={() => {\r\n              const allSectionTitles = sections.map(s => s.title)\r\n              setExpandedSections(new Set(allSectionTitles))\r\n            }}\r\n            className=\"flex items-center gap-2 bg-gray-500 hover:bg-gray-600 text-white font-medium px-4 py-2 rounded-lg transition-colors text-sm\"\r\n          >\r\n            모두 펼치기\r\n          </button>\r\n          <button\r\n            onClick={() => setExpandedSections(new Set())}\r\n            className=\"flex items-center gap-2 bg-gray-500 hover:bg-gray-600 text-white font-medium px-4 py-2 rounded-lg transition-colors text-sm\"\r\n          >\r\n            모두 접기\r\n          </button>\r\n          <button\r\n            onClick={handleSave}\r\n            disabled={saving}\r\n            className=\"flex items-center gap-2 bg-blue-600 hover:bg-blue-700 text-white font-medium px-6 py-3 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            <FaSave />\r\n            {saving ? '저장 중...' : '모두 저장'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Success/Error message */}\r\n      {message && (\r\n        <motion.div\r\n          initial={{ opacity: 0, y: -10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          exit={{ opacity: 0 }}\r\n          transition={{ duration: 0.3 }}\r\n          className={`p-4 rounded-lg shadow-md ${\r\n            message.type === 'success'\r\n              ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-300 border border-green-400 dark:border-green-700'\r\n              : 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-300 border border-red-400 dark:border-red-700'\r\n          }`}\r\n        >\r\n          {message.text}\r\n        </motion.div>\r\n      )}\r\n\r\n      {/* Settings sections */}\r\n      {sections.map((section) => (\r\n        <SettingsSection\r\n          key={section.title}\r\n          section={section}\r\n          isExpanded={expandedSections.has(section.title)}\r\n          onToggle={() => toggleSection(section.title)}\r\n          currentLang={currentLang}\r\n          settings={settings}\r\n          onChange={handleChange}\r\n          setCurrentLang={setCurrentLang}\r\n        />\r\n      ))}\r\n\r\n      {/* Bottom save button (hidden for quick menu) */}\r\n      {!activeSection && (\r\n        <div className=\"py-4\">\r\n          <button\r\n            onClick={handleSave}\r\n            disabled={saving}\r\n            className=\"w-full flex items-center justify-center gap-2 bg-blue-600 hover:bg-blue-700 text-white font-medium px-8 py-4 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            <FaSave size={20} />\r\n            {saving ? '설정 저장 중...' : '모두 저장하고 적용'}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SiteSettingsEditor\r\n\r\n","import React, { useState, useEffect, useMemo } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useAuth } from '@/contexts/AuthContext'\r\nimport { FaSignOutAlt } from 'react-icons/fa'\r\n\r\n// 분리된 컴포넌트들 import\r\nimport DashboardHome from '@/components/admin/DashboardHome'\r\nimport BookManager from '@/components/admin/BookManager'\r\nimport VideoLearningManager from '@/components/admin/VideoLearningManager'\r\nimport VideoPlaylistManager from '@/components/admin/VideoPlaylistManager'\r\nimport ExperienceManager from '@/components/admin/ExperienceManager'\r\nimport ProjectManager from '@/components/admin/ProjectManager'\r\nimport MessageManager from '@/components/admin/MessageManager'\r\nimport SkillsManager from '@/components/admin/SkillsManager'\r\nimport CategoryManager from '@/components/admin/CategoryManager'\r\nimport NotificationDropdown from '@/components/common/NotificationDropdown'\r\nimport RightSidebar from '@/components/common/RightSidebar'\r\nimport SiteSettingsEditor from '@/admin/SiteSettingsEditor'\r\nimport ToastContainer from '@/components/common/Toast'\r\nimport useDataCounts from '@/hooks/useDataCounts'\r\n\r\n// 새로운 리팩토링된 훅 import\r\nimport { useAdminSidebarState, AdminTab } from '@/hooks/useAdminSidebarState'\r\nimport { useToastHelpers } from '@/hooks/useToast'\r\nimport { useMessages } from '@/hooks/useMessageManagerData'\r\n\r\nconst AdminDashboard: React.FC = () => {\r\n  const { isAuthenticated, logout, isLoading } = useAuth()\r\n  const location = useLocation()\r\n  const [showNotifications, setShowNotifications] = useState(false)\r\n  \r\n  // Toast 시스템 추가\r\n  const { toasts, hideToast } = useToastHelpers()\r\n  \r\n  // 새로운 리팩토링된 상태 관리 훅 사용\r\n  const {\r\n    activeTab,\r\n    setActiveTab,\r\n    activeSettingsSection,\r\n    setActiveSettingsSection,\r\n    bookFilters,\r\n    experienceFilters,\r\n    projectFilters,\r\n  } = useAdminSidebarState()\r\n  \r\n  // 데이터 카운트 훅 사용\r\n  const { counts, refreshCounts } = useDataCounts()\r\n  \r\n  // 🔔 메시지 데이터를 가져와서 알림으로 변환\r\n  const { data: messages = [] } = useMessages()\r\n  \r\n  // 🔔 읽지 않은 메시지를 알림 형태로 변환\r\n  const notifications = useMemo(() => {\r\n    return messages\r\n      .filter(msg => !msg.isRead)\r\n      .map(msg => ({\r\n        id: msg._id || '',\r\n        message: `${msg.name}님으로부터 새로운 메시지: ${msg.subject}`,\r\n        read: false,\r\n        createdAt: msg.createdAt || new Date().toISOString()\r\n      }))\r\n      .sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()) // 최신순 정렬\r\n  }, [messages])\r\n\r\n  // 🌟 URL state를 통해 전달된 탭과 수정 ID 처리\r\n  useEffect(() => {\r\n    const state = location.state as { tab?: AdminTab; editId?: string } | null\r\n    if (state?.tab) {\r\n      setActiveTab(state.tab)\r\n    }\r\n    // editId는 각 Manager 컴포넌트에서 처리\r\n  }, [location.state, setActiveTab])\r\n\r\n  // 인증되지 않은 경우 로그인 페이지로 리다이렉트\r\n  if (!isAuthenticated && !isLoading) {\r\n    return <div>로그인이 필요합니다.</div>\r\n  }\r\n\r\n  // 로딩 중일 때\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600 dark:text-gray-400\">로딩 중...</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // 탭별 컴포넌트 렌더링 함수\r\n  const renderActiveTabContent = () => {\r\n    // 🌟 location.state에서 editId 추출\r\n    const state = location.state as { tab?: AdminTab; editId?: string } | null\r\n    const editId = state?.editId\r\n    \r\n    switch (activeTab) {\r\n      case 'books':\r\n        return <BookManager \r\n          bookFilter={bookFilters.state.filter}\r\n          bookSearchTerm={bookFilters.state.searchTerm}\r\n          selectedBookCategory={bookFilters.state.selectedCategory}\r\n          initialEditId={editId}  // 🌟 수정할 서적 ID 전달\r\n        />\r\n      case 'videoLearnings':\r\n        return <VideoLearningManager initialEditId={editId} />  // 🌟 수정할 영상 ID 전달\r\n      case 'videoPlaylists':\r\n        return <VideoPlaylistManager />\r\n      case 'experiences':\r\n        return <ExperienceManager \r\n          experienceFilter={experienceFilters.state.filter}\r\n          experienceSearchTerm={experienceFilters.state.searchTerm}\r\n          selectedExperienceCompany={experienceFilters.state.selectedCompany}\r\n          selectedExperienceYear={experienceFilters.state.selectedYear}\r\n        />\r\n      case 'projects':\r\n        return <ProjectManager \r\n          projectFilter={projectFilters.state.filter}\r\n          projectSearchTerm={projectFilters.state.searchTerm}\r\n          selectedProjectCategory={projectFilters.state.selectedCategory}\r\n        />\r\n      case 'messages':\r\n        return <MessageManager />\r\n      case 'skills':\r\n        return <SkillsManager />\r\n      case 'categories':\r\n        return <CategoryManager />\r\n      default: // 'settings'\r\n        // activeSettingsSection이 있으면 SiteSettingsEditor를, 없으면 DashboardHome을 표시\r\n        return activeSettingsSection \r\n          ? <SiteSettingsEditor activeSection={activeSettingsSection} />\r\n          : <DashboardHome counts={counts} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* Toast 알림 시스템 */}\r\n      <ToastContainer toasts={toasts} onClose={hideToast} />\r\n      \r\n      <div className=\"bg-gray-50 dark:bg-gray-900 min-h-screen text-gray-900 dark:text-white\">\r\n        <div className=\"flex\">\r\n        {/* 메인 컨텐츠 영역 */}\r\n        <div className=\"flex-1 p-8\">\r\n          <div className=\"max-w-7xl mx-auto\">\r\n            <div className=\"flex gap-8\">\r\n              {/* 메인 콘텐츠 영역 */}\r\n              <div className=\"flex-1\">\r\n                {/* Header */}\r\n                <div className=\"flex items-center justify-between mb-8\">\r\n                  <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white\">\r\n                    관리자 대시보드\r\n                  </h1>\r\n                  <div className=\"flex items-center gap-4\">\r\n                    {/* 알림 드롭다운 - 읽지 않은 메시지 표시 */}\r\n                    <NotificationDropdown\r\n                      notifications={notifications}\r\n                      showNotifications={showNotifications}\r\n                      onToggle={() => setShowNotifications(!showNotifications)}\r\n                      onNotificationClick={() => {\r\n                        setActiveTab('messages')\r\n                        setShowNotifications(false)\r\n                      }}\r\n                    />\r\n                    \r\n                    {/* 로그아웃 버튼 */}\r\n                    <button\r\n                      onClick={logout}\r\n                      className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors flex items-center gap-2\"\r\n                    >\r\n                      <FaSignOutAlt />\r\n                      로그아웃\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 탭 콘텐츠 */}\r\n                {renderActiveTabContent()}\r\n              </div>\r\n\r\n              {/* 리팩토링된 RightSidebar 컴포넌트 사용 */}\r\n              <RightSidebar\r\n                activeTab={activeTab}\r\n                setActiveTab={setActiveTab}\r\n                activeSettingsSection={activeSettingsSection}\r\n                setActiveSettingsSection={setActiveSettingsSection}\r\n                counts={counts}\r\n                refreshCounts={refreshCounts}\r\n                bookFilters={bookFilters}\r\n                experienceFilters={experienceFilters}\r\n                projectFilters={projectFilters}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminDashboard\r\n"],"names":["API_BASE_URL","VITE_API_URL","api","axios","create","baseURL","withCredentials","timeout","authAPI","username","password","post","booksAPI","getAll","get","getById","id","data","update","put","delete","chaptersAPI","getByBook","bookId","chapterId","reorder","chapterIds","learningsAPI","createForBook","updateForBook","learningId","deleteForBook","getByChapter","createForChapter","updateForChapter","deleteForChapter","updateSkills","skillIds","patch","experiencesAPI","projectsAPI","settingsAPI","contactAPI","sendEmail","messagesAPI","markAsRead","skillsAPI","getCategories","createCategory","updateCategory","deleteCategory","getByCategory","categoryId","clearAllData","cleanupDuplicates","reorderSkills","reorderCategories","categoryIds","categoriesAPI","getUsage","videoLearningsAPI","videoPlaylistsAPI","playlistVideosAPI","getByPlaylist","playlistId","AuthContext","createContext","AuthProvider","children","user","setUser","useState","isLoading","setIsLoading","useEffect","async","response","error","login","useCallback","Error","_b","_a","message","logout","value","useMemo","isAuthenticated","jsx","Provider","useAuth","context","useContext","formatDate","dateString","Date","toLocaleDateString","formatRelativeDate","date","diffInMs","getTime","diffInMinutes","Math","floor","diffInHours","diffInDays","diffInWeeks","diffInMonths","extractYouTubeId","url","patterns","pattern","match","getYouTubeThumbnail","videoId","quality","extractYouTubePlaylistId","getYouTubePlaylistThumbnail","renderHtmlWithTimestamps","markdown","onTimestampClick","html","replace","_match","p1","p2","trim","renderMarkdown","groups","parseInt","DashboardHome","counts","siteActivityStats","recentUpdates","type","typeName","title","updatedAt","weeklyStats","booksAdded","projectsCompleted","experiencesUpdated","className","jsxs","books","FaBook","experiences","FaBriefcase","projects","FaProjectDiagram","FaSync","length","map","item","index","FaCalendarAlt","BookManager","bookFilter","bookSearchTerm","selectedBookCategory","initialEditId","createBook","updateBook","deleteBook","useBookManagerData","success","useToastHelpers","createAbortController","useAbortController","toasts","hideToast","bookState","bookActions","useCRUDManager","onSave","editingItem","_id","onDelete","book","onError","err","chapters","optimisticAdd","optimisticAddChapter","optimisticUpdateItem","optimisticUpdateChapter","optimisticDelete","optimisticDeleteChapter","resetData","resetChapters","useOptimisticArrayUpdate","showBookDetailModal","setShowBookDetailModal","selectedBook","setSelectedBook","selectedChapterId","setSelectedChapterId","showChapterForm","setShowChapterForm","editingChapter","setEditingChapter","showLearningForm","setShowLearningForm","editingLearning","setEditingLearning","hasAutoOpened","setHasAutoOpened","bookToEdit","find","handleEdit","filteredBooks","filtered","filter","rating","category","searchLower","toLowerCase","includes","author","sort","a","b","createdAt","handleBookDetailClick","abortController","chaptersResponse","signal","aborted","name","handleSaveChapter","chapterData","then","res","learnings","toISOString","handleDeleteChapter","chapter","handleAddLearningClick","handleEditLearningClick","learning","handleDeleteLearningClick","handleSaveLearning","learningData","renderRating","Array","from","_","i","jsxRuntimeExports","FaStar","Fragment","ToastContainer","onClose","onClick","handleCreate","FaPlus","coverImage","src","alt","readDate","e","stopPropagation","FaEye","FaEdit","handleDelete","disabled","isDeleting","FaTrash","showForm","handleCancel","FaTimes","BookForm","handleSave","onCancel","isSaving","ChapterLearningList","onAddChapter","onEditChapter","onDeleteChapter","onAddLearning","onEditLearning","onDeleteLearning","ChapterForm","LearningForm","VideoLearningManager","videoLearnings","createVideoLearning","updateVideoLearning","deleteVideoLearning","useVideoLearningManagerData","videoState","videoActions","video","categoryFilter","setCategoryFilter","availableCategories","categories","Set","add","forEach","extractUniqueCategories","filteredVideos","videoToEdit","FaVideo","cat","count","v","VideoLearningForm","thumbnailUrl","purpose","watchDate","VideoPlaylistManager","playlists","createPlaylist","updatePlaylist","deletePlaylist","useVideoPlaylistManagerData","expandedPlaylistId","setExpandedPlaylistId","showVideoForm","setShowVideoForm","editingVideo","setEditingVideo","showBulkAddForm","setShowBulkAddForm","bulkVideoUrls","setBulkVideoUrls","playlistVideos","usePlaylistVideos","createVideoMutation","useCreatePlaylistVideo","updateVideoMutation","useUpdatePlaylistVideo","deleteVideoMutation","useDeletePlaylistVideo","playlistState","playlistActions","playlist","handleBulkAddVideos","alert","urls","split","Boolean","successCount","videoData","keyTakeaways","order","mutateAsync","FaList","VideoPlaylistForm","PlaylistVideoForm","isPending","isExpanded","currentVideos","FaChevronUp","FaChevronDown","catIdOrObj","catName","onChange","target","rows","placeholder","confirm","handleDeleteVideo","ExperienceManager","experienceFilter","experienceSearchTerm","selectedExperienceCompany","selectedExperienceYear","t","useTranslation","createExperience","updateExperience","deleteExperience","useExperienceManagerData","setShowForm","setEditingItem","setIsSaving","setIsDeleting","filteredExperiences","exp","company","period","description","ExperienceForm","experience","ProjectManager","projectFilter","projectSearchTerm","selectedProjectCategory","createProject","updateProject","deleteProject","useProjectManagerData","filteredProjects","project","status","detailedDescription","technologies","some","tech","featuredProjectsCount","ProjectForm","result","errorMsg","_c","_e","_d","_h","_f","_g","_j","_i","_l","_k","_m","slice","MessageDetail","messageId","isOpen","onMarkAsRead","onReply","isProcessing","setIsProcessing","showReplyForm","setShowReplyForm","replyContent","setReplyContent","isError","refetch","useMessageDetail","enabled","AnimatePresence","motion","div","initial","opacity","animate","exit","scale","FaSpinner","FaEnvelope","isRead","FaUser","email","FaCalendar","toLocaleString","year","month","day","hour","minute","FaCheck","subject","height","FaReply","MessageManager","messages","deleteMessage","useMessageManagerData","selectedMessageId","setSelectedMessageId","showDetail","setShowDetail","handleViewDetail","handleCloseDetail","style","display","WebkitLineClamp","WebkitBoxOrient","overflow","substring","handleMarkAsRead","SortableCategoryCard","onToggle","onAddSkill","onEdit","attributes","listeners","setNodeRef","transform","transition","isDragging","useSortable","CSS","Transform","toString","ref","FaBars","backgroundColor","color","skills","size","FaChevronRight","SortableSkillItem","skill","categoryColor","currentLevel","hasChanges","isSavingThis","onLevelChange","onSaveLevel","onToggleSidebar","onToggleLanguageCard","checked","showInSidebar","showInLanguageCard","DynamicIcon","iconName","icon","min","max","step","newLevel","background","FaSave","SkillsManager","skillCategories","createSkillCategory","updateSkillCategory","deleteSkillCategory","createSkill","updateSkill","deleteSkill","useSkillsManagerData","activeForm","setActiveForm","editingCategory","setEditingCategory","editingSkill","setEditingSkill","selectedCategoryId","setSelectedCategoryId","expandedCategories","setExpandedCategories","localLevels","setLocalLevels","Map","savingSkillIds","setSavingSkillIds","handleLevelChange","skillId","prev","newMap","set","handleSaveLevel","level","newSet","handleToggleSidebar","newValue","handleToggleLanguageCard","handleCategoryDragEnd","event","active","over","oldIndex","findIndex","newIndex","reorderedCategories","arrayMove","handleSkillDragEnd","reorderedSkills","toggleCategory","has","handleEditCategory","handleDeleteCategory","handleAddSkill","handleEditSkill","handleDeleteSkill","SkillCategoryForm","initialData","SkillForm","DndContext","collisionDetection","closestCenter","onDragEnd","SortableContext","items","strategy","verticalListSortingStrategy","usageData","useCategoryUsage","usage","videoPlaylists","total","CategoryManager","useCategoryManagerData","categoryState","categoryActions","usageDetails","push","join","FaFolder","CategoryForm","c","initialSettings","fullName","firstName","role","subtitle","location","education","yearsOfExperience","phone","githubUrl","linkedinUrl","heroTitle","heroSubtitle","aboutTitle","aboutSubtitle","aboutDescription1","aboutDescription2","skillsTitle","skillsSubtitle","projectsTitle","projectsSubtitle","booksTitle","booksSubtitle","contactTitle","contactSubtitle","stat1Number","stat1Label","stat2Number","stat2Label","experienceTitle","experienceSubtitle","learningGoalsTitle","learningGoalsDescription","learningGoalsList","siteTitle","siteDescription","siteKeywords","siteAuthor","siteLanguage","siteUrl","ogTitle","ogDescription","ogImage","ogType","twitterCard","twitterSite","twitterCreator","robotsIndex","robotsFollow","googleAnalyticsId","googleSiteVerification","instagramUrl","twitterUrl","facebookUrl","youtubeUrl","tiktokUrl","behanceUrl","dribbbleUrl","mediumUrl","telegramUrl","discordUrl","kakaoTalkUrl","naverBlogUrl","tistoryUrl","velogUrl","notionUrl","googleTagManagerId","facebookPixelId","naverAnalyticsId","kakaoPixelId","hotjarId","mixpanelToken","amplitudeApiKey","sentryDsn","logRocketId","fullStoryOrgId","intercomAppId","zendeskWidgetKey","crispWebsiteId","tawkToPropertyId","liveChatLicense","olarkSiteId","enableHttps","enableCsp","cspDirectives","enableHsts","hstsMaxAge","enableXssProtection","enableContentTypeOptions","enableFrameOptions","frameOptionsValue","enableReferrerPolicy","referrerPolicyValue","enablePermissionsPolicy","permissionsPolicyValue","enableApiRateLimit","apiRateLimitPerMinute","enableAdminAuth","adminSessionTimeout","enableTwoFactorAuth","enableIpWhitelist","allowedIpAddresses","enableAuditLog","enableBackup","backupFrequency","allSections","fields","key","label","isMultilingual","options","getMultilingualKey","baseKey","lang","getActiveSectionTitle","activeSection","getActiveSectionDescription","getFilteredSections","section","useSettingsForm","refetchSettings","useSiteSettings","settings","setSettings","loading","setLoading","saving","setSaving","setMessage","expandedSections","setExpandedSections","currentLang","setCurrentLang","fetchSettings","normalizedData","normalized","sidebarSkillCount","String","languageCardSkillCount","normalizeSettings","text","sectionTitles","handleChange","field","prevSettings","setTimeout","toggleSection","sectionTitle","SettingField","renderLanguageIndicator","koValue","enValue","jaValue","htmlFor","option","newArray","renderInput","SettingsSection","duration","ease","f","LanguageTabs","activeLanguage","activeKey","SiteSettingsEditor","sections","allSectionTitles","s","y","useLocation","showNotifications","setShowNotifications","activeTab","setActiveTab","activeSettingsSection","setActiveSettingsSection","bookFilters","experienceFilters","projectFilters","useAdminSidebarState","refreshCounts","useDataCounts","useMessages","notifications","msg","read","state","tab","NotificationDropdown","onNotificationClick","FaSignOutAlt","editId","searchTerm","selectedCategory","selectedCompany","selectedYear","renderActiveTabContent","RightSidebar"],"mappings":"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"}