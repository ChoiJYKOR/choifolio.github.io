{"version":3,"file":"Books-f6a6bb39.js","sources":["../../src/components/BookCoverImage.tsx","../../src/pages/Books.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { FaBook, FaImage } from 'react-icons/fa'\r\n\r\ninterface BookCoverImageProps {\r\n  src?: string\r\n  alt: string\r\n  className?: string\r\n  fallbackIcon?: React.ReactNode\r\n}\r\n\r\n/**\r\n * 책 커버 이미지 컴포넌트\r\n * - 지연 로딩 지원\r\n * - 로딩 상태 표시\r\n * - 오류 시 대체 아이콘 표시\r\n */\r\nconst BookCoverImage: React.FC<BookCoverImageProps> = ({\r\n  src,\r\n  alt,\r\n  className = \"w-full h-64 object-cover group-hover:scale-105 transition-transform duration-300\",\r\n  fallbackIcon\r\n}) => {\r\n  const [imageState, setImageState] = useState<'loading' | 'loaded' | 'error'>('loading')\r\n  const [imageSrc, setImageSrc] = useState(src)\r\n\r\n  const handleImageLoad = () => {\r\n    setImageState('loaded')\r\n  }\r\n\r\n  const handleImageError = () => {\r\n    setImageState('error')\r\n    setImageSrc(undefined)\r\n  }\r\n\r\n  // 이미지가 없거나 오류가 발생한 경우 대체 아이콘 표시\r\n  if (!imageSrc || imageState === 'error') {\r\n    return (\r\n      <div className=\"w-full h-64 bg-gradient-to-br from-primary-400 to-primary-600 flex items-center justify-center\">\r\n        {fallbackIcon || <FaBook className=\"text-white text-6xl\" />}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative overflow-hidden\">\r\n      {/* 로딩 상태 스켈레톤 */}\r\n      {imageState === 'loading' && (\r\n        <div className=\"absolute inset-0 bg-gray-200 dark:bg-gray-700 animate-pulse flex items-center justify-center\">\r\n          <FaImage className=\"text-gray-400 text-4xl\" />\r\n        </div>\r\n      )}\r\n      \r\n      {/* 실제 이미지 */}\r\n      <img\r\n        src={imageSrc}\r\n        alt={alt}\r\n        className={`${className} ${imageState === 'loading' ? 'opacity-0' : 'opacity-100'} transition-opacity duration-300`}\r\n        loading=\"lazy\"\r\n        decoding=\"async\"\r\n        width=\"400\"\r\n        height=\"256\"\r\n        onLoad={handleImageLoad}\r\n        onError={handleImageError}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BookCoverImage\r\n","import React, { useState, useMemo, useEffect } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { useInView } from 'react-intersection-observer'\r\nimport { FaBook, FaPlus, FaStar, FaCalendar } from 'react-icons/fa'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { useAuth } from '@/contexts/AuthContext'\r\nimport { useSiteSettings } from '@/hooks/useSiteSettings'\r\nimport { useBooks } from '@/hooks/useBooks'\r\nimport { useCategories } from '@/hooks/useCategories'\r\nimport { formatDate } from '@/utils/dateUtils'\r\nimport BookCoverImage from '@/components/BookCoverImage'\r\nimport ScrollToTopButton from '@/components/common/ScrollToTopButton'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { getLocalizedField, getLocalizedCategoryName } from '@/utils/i18nUtils'\r\n\r\nconst Books: React.FC = () => {\r\n  const { settings: siteSettings, loading: settingsLoading } = useSiteSettings()\r\n  const { t, i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  // 🌟 React Query useBooks 훅의 반환값 구조 수정\r\n  const { data: books = [], isLoading: loading } = useBooks()\r\n  // 🌟 카테고리 데이터 가져오기\r\n  const { data: categories = [], isLoading: categoriesLoading } = useCategories()\r\n  const location = useLocation()\r\n  \r\n  const [ref, inView] = useInView({\r\n    triggerOnce: true,\r\n    threshold: 0.1,\r\n  })\r\n\r\n  const [filter, setFilter] = useState('all')\r\n  const { isAuthenticated } = useAuth()\r\n  \r\n  // 🌟 스크롤 위치 복원\r\n  useEffect(() => {\r\n    const scrollPosition = (location.state as any)?.scrollPosition\r\n    if (scrollPosition) {\r\n      window.scrollTo(0, scrollPosition)\r\n      // state를 정리하여 뒤로가기 시 다시 복원되지 않도록\r\n      window.history.replaceState({}, document.title)\r\n    }\r\n  }, [])\r\n\r\n  // =================================================================\r\n  // 🔍 필터링 로직 (categoryIds 배열 기반)\r\n  // =================================================================\r\n  \r\n  const filteredBooks = useMemo(() => {\r\n    const safeBooks = books || []\r\n    if (filter === 'all') return safeBooks\r\n    \r\n    // categoryIds 배열에 선택된 카테고리 ID가 포함되어 있는지 확인\r\n    return safeBooks.filter(book => {\r\n      if (!book.categoryIds || book.categoryIds.length === 0) {\r\n        // 호환성: categoryIds가 없으면 기존 category 문자열 사용\r\n        return book.category?.toLowerCase() === filter\r\n      }\r\n      \r\n      // categoryIds가 populate된 객체 배열인 경우와 ID 문자열 배열인 경우 모두 처리\r\n      return (book.categoryIds as any[]).some((catIdOrObj: any) => {\r\n        const catId = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\r\n        return catId === filter\r\n      })\r\n    })\r\n  }, [books, filter])\r\n\r\n  // 로딩 상태 통합: 설정 데이터와 책 데이터 중 하나라도 로딩 중이면 로딩 표시\r\n  const isPageLoading = settingsLoading || loading\r\n\r\n  const containerVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.2,\r\n      },\r\n    },\r\n  }\r\n\r\n  const itemVariants = {\r\n    hidden: { opacity: 0, y: 30 },\r\n    visible: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        duration: 0.6,\r\n        ease: 'easeOut',\r\n      },\r\n    },\r\n  }\r\n\r\n  return (\r\n    <section className=\"section-padding bg-white dark:bg-dark-800 min-h-screen\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <motion.div\r\n          ref={ref}\r\n          variants={containerVariants}\r\n          initial=\"hidden\"\r\n          animate={inView ? 'visible' : 'hidden'}\r\n        >\r\n          {/* 1. 제목 및 부제목 */}\r\n          <motion.div variants={itemVariants} className=\"text-center mb-16\">\r\n            <h2 className=\"text-4xl md:text-5xl font-bold text-dark-900 dark:text-white mb-6\">\r\n              {getLocalizedField(currentLang, siteSettings?.booksTitle, siteSettings?.booksTitleEn, siteSettings?.booksTitleJa) || '기술 서적 & 학습 노트'}\r\n            </h2>\r\n            <p className=\"text-xl text-dark-600 dark:text-dark-300 max-w-3xl mx-auto mb-8\">\r\n              {getLocalizedField(currentLang, siteSettings?.booksSubtitle, siteSettings?.booksSubtitleEn, siteSettings?.booksSubtitleJa) || '읽은 기술 서적과 그로부터 배운 지식을 공유합니다'}\r\n            </p>\r\n          </motion.div>\r\n\r\n          {/* 2. 서적 추가 버튼 (인증된 경우) */}\r\n          {isAuthenticated && (\r\n            <motion.div variants={itemVariants} className=\"mb-8 flex justify-end\">\r\n              <Link\r\n                to=\"/admin\"\r\n                className=\"inline-flex items-center gap-2 bg-accent-500 hover:bg-accent-600 text-white font-medium px-6 py-3 rounded-lg transition-colors duration-600 shadow-medium hover:shadow-glow\"\r\n              >\r\n                <FaPlus /> 서적 추가\r\n              </Link>\r\n            </motion.div>\r\n          )}\r\n\r\n          {/* 3. 카테고리 필터 (categoryIds 배열 기반) */}\r\n          <motion.div variants={itemVariants} className=\"flex justify-center flex-wrap gap-3 mb-12\">\r\n            {/* '전체' 버튼 */}\r\n            <button\r\n              key=\"all\"\r\n              onClick={() => setFilter('all')}\r\n              className={`px-4 py-2 rounded-full text-sm font-medium transition-colors duration-600 border ${\r\n                filter === 'all'\r\n                  ? 'bg-primary-500 text-white border-primary-500 dark:bg-primary-600 dark:border-primary-600 shadow-glow'\r\n                  : 'bg-white text-dark-700 border-secondary-300 hover:bg-secondary-50 dark:bg-dark-700 dark:text-dark-300 dark:border-dark-600 dark:hover:bg-dark-600'\r\n              }`}\r\n            >\r\n              전체\r\n            </button>\r\n            {/* 카테고리 버튼 렌더링 */}\r\n            {categories.map((category) => (\r\n              <button\r\n                key={category._id}\r\n                onClick={() => setFilter(category._id)}\r\n                className={`px-4 py-2 rounded-full text-sm font-medium transition-colors duration-600 border ${\r\n                  filter === category._id\r\n                    ? 'bg-primary-500 text-white border-primary-500 dark:bg-primary-600 dark:border-primary-600 shadow-glow'\r\n                    : 'bg-white text-dark-700 border-secondary-300 hover:bg-secondary-50 dark:bg-dark-700 dark:text-dark-300 dark:border-dark-600 dark:hover:bg-dark-600'\r\n                }`}\r\n              >\r\n                {getLocalizedCategoryName(currentLang, category)}\r\n              </button>\r\n            ))}\r\n          </motion.div>\r\n\r\n          {/* 4. 로딩, 결과 없음, 또는 책 목록 */}\r\n          {isPageLoading ? (\r\n            <div className=\"text-center py-12\">\r\n              <div className=\"inline-block w-12 h-12 border-4 border-primary-500 border-t-transparent rounded-full animate-spin\"></div>\r\n              <p className=\"mt-4 text-dark-500 dark:text-dark-400\">데이터를 불러오는 중...</p>\r\n            </div>\r\n          ) : filteredBooks.length === 0 ? (\r\n            <motion.div\r\n              variants={itemVariants}\r\n              className=\"text-center py-12\"\r\n            >\r\n              <FaBook className=\"text-6xl text-dark-400 mx-auto mb-4\" />\r\n              <p className=\"text-xl text-dark-600 dark:text-dark-400\">\r\n                {filter === 'all' ? '전체' : (() => {\r\n                  const cat = categories.find(c => c._id === filter)\r\n                  return cat ? getLocalizedCategoryName(currentLang, cat) : '선택한'\r\n                })()} 카테고리의 등록된 서적이 없습니다.\r\n              </p>\r\n            </motion.div>\r\n          ) : (\r\n            <motion.div\r\n              variants={containerVariants}\r\n              className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\"\r\n            >\r\n              {filteredBooks.map((book) => (\r\n                <motion.div\r\n                  key={book._id}\r\n                  variants={itemVariants}\r\n                  whileHover={{ y: -5 }}\r\n                  className=\"card hover-lift\"\r\n                >\r\n                  <Link\r\n                    to={`/books/${book._id}`}\r\n                    state={{ scrollPosition: window.scrollY }}\r\n                    className=\"block overflow-hidden h-full group\"\r\n                  >\r\n                    {/* 개선된 이미지 컴포넌트 사용 */}\r\n                    <BookCoverImage\r\n                      src={book.coverImage || ''}\r\n                      alt={book.title}\r\n                      className=\"w-full h-64 object-cover group-hover:scale-105 transition-transform duration-600\"\r\n                    />\r\n                    \r\n                    <div className=\"p-6\">\r\n                      <div className=\"flex items-center justify-between mb-3\">\r\n                        {/* 카테고리 배지 (복수 표시) */}\r\n                        <div className=\"flex flex-wrap gap-2\">\r\n                          {book.categoryIds && book.categoryIds.length > 0 ? (\r\n                            (book.categoryIds as any[]).map((catIdOrObj: any) => {\r\n                              const catId = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\r\n                              const categoryObj = typeof catIdOrObj === 'string' \r\n                                ? categories.find(c => c._id === catId)\r\n                                : catIdOrObj\r\n                              \r\n                              return categoryObj ? (\r\n                                <span \r\n                                  key={catId}\r\n                                  className=\"px-3 py-1 bg-primary-100 dark:bg-primary-800/50 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\"\r\n                                >\r\n                                  {getLocalizedCategoryName(currentLang, categoryObj)}\r\n                                </span>\r\n                              ) : null\r\n                            })\r\n                          ) : (\r\n                            // 호환성: categoryIds가 없으면 기존 category 표시\r\n                            book.category && (\r\n                              <span className=\"px-3 py-1 bg-primary-100 dark:bg-primary-800/50 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\">\r\n                                {book.category}\r\n                              </span>\r\n                            )\r\n                          )}\r\n                        </div>\r\n                        <div className=\"flex items-center gap-1\">\r\n                          <FaStar className=\"text-yellow-500\" />\r\n                          <span className=\"text-dark-700 dark:text-dark-300 font-medium\">\r\n                            {book.rating}/5\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <h3 className=\"text-xl font-bold text-dark-900 dark:text-white mb-2 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors duration-600\">\r\n                        {getLocalizedField(currentLang, book.title, book.titleEn, book.titleJa)}\r\n                      </h3>\r\n                      <p className=\"text-dark-600 dark:text-dark-400 mb-4\">\r\n                        {getLocalizedField(currentLang, book.author, book.authorEn, book.authorJa)}\r\n                      </p>\r\n                      <div className=\"flex items-center justify-between text-sm text-dark-500 dark:text-dark-500 pt-2 border-t border-secondary-200 dark:border-dark-600\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <FaCalendar />\r\n                          <span>{formatDate(book.readDate)}</span>\r\n                        </div>\r\n                        <span \r\n                          className=\"hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-600 font-medium\"\r\n                        >\r\n                          {(() => {\r\n                            // 목차가 있는 경우: 목차별 학습 내용 합계\r\n                            if (book.chapters && book.chapters.length > 0) {\r\n                              const totalChapterLearnings = book.chapters.reduce((sum, chapter) => \r\n                                sum + (chapter.learnings?.length || 0), 0\r\n                              )\r\n                              return `${book.chapters.length}개 목차, ${totalChapterLearnings}개 학습 내용`\r\n                            }\r\n                            // 기존 학습 내용이 있는 경우\r\n                            else if (book.learnings && book.learnings.length > 0) {\r\n                              return `${book.learnings.length}개의 학습 내용`\r\n                            }\r\n                            // 학습 내용이 없는 경우\r\n                            else {\r\n                              return '학습 내용 없음'\r\n                            }\r\n                          })()}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </Link>\r\n                </motion.div>\r\n              ))}\r\n            </motion.div>\r\n          )}\r\n        </motion.div>\r\n      </div>\r\n      \r\n      {/* 🌟 스크롤 투 탑 버튼 */}\r\n      <ScrollToTopButton />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Books\r\n\r\n\r\n"],"names":["BookCoverImage","src","alt","className","fallbackIcon","imageState","setImageState","useState","imageSrc","setImageSrc","jsxs","children","jsx","FaImage","jsxRuntimeExports","loading","decoding","width","height","onLoad","onError","FaBook","Books","settings","siteSettings","settingsLoading","useSiteSettings","t","i18n","useTranslation","currentLang","language","data","books","isLoading","useBooks","categories","categoriesLoading","useCategories","location","useLocation","ref","inView","useInView","triggerOnce","threshold","filter","setFilter","isAuthenticated","useAuth","useEffect","scrollPosition","_a","state","window","scrollTo","history","replaceState","document","title","filteredBooks","useMemo","safeBooks","book","categoryIds","length","some","catIdOrObj","_id","category","toLowerCase","isPageLoading","containerVariants","hidden","opacity","visible","transition","staggerChildren","itemVariants","y","duration","ease","motion","div","variants","initial","animate","getLocalizedField","booksTitle","booksTitleEn","booksTitleJa","booksSubtitle","booksSubtitleEn","booksSubtitleJa","Link","to","FaPlus","onClick","map","getLocalizedCategoryName","cat","find","c","whileHover","scrollY","coverImage","catId","categoryObj","FaStar","rating","titleEn","titleJa","author","authorEn","authorJa","FaCalendar","formatDate","readDate","chapters","totalChapterLearnings","reduce","sum","chapter","learnings","ScrollToTopButton"],"mappings":"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"}