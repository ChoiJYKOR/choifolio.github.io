{"version":3,"file":"ProjectDetail-5856ed53.js","sources":["../../src/hooks/useProjectDetail.ts","../../src/components/ProjectDetail.tsx"],"sourcesContent":["import { useState, useEffect, useMemo } from 'react'\r\nimport { projectsAPI } from '../services/api'\r\nimport { Project, Skill } from '../types'\r\nimport { useSkills } from './useSkills'\r\nimport { \r\n  getLocalizedField, \r\n  getLocalizedArrayField,\r\n  getLocalizedSkillName,\r\n  getLocalizedSkillDescription,\r\n  Language \r\n} from '@/utils/i18nUtils'\r\n\r\ninterface LocalizedProject extends Omit<Project, 'technologies' | 'features' | 'learnings' | 'videoDescriptions'> {\r\n  title: string\r\n  description: string\r\n  detailedDescription: string\r\n  technologies: string[]\r\n  features: string[]\r\n  learnings: string[]\r\n  videoDescriptions: string[]\r\n}\r\n\r\ninterface LinkedSkill extends Skill {\r\n  levelText: string\r\n}\r\n\r\ninterface UseProjectDetailReturn {\r\n  loading: boolean\r\n  error: string | null\r\n  localizedProject: LocalizedProject | null\r\n  linkedSkills: LinkedSkill[]\r\n}\r\n\r\n/**\r\n * Custom hook for ProjectDetail component\r\n * Handles data fetching, multilingual field processing, and skill matching\r\n */\r\nexport const useProjectDetail = (\r\n  id: string | undefined,\r\n  currentLang: Language\r\n): UseProjectDetailReturn => {\r\n  const [project, setProject] = useState<Project | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const { skillCategories } = useSkills()\r\n\r\n  // Fetch project data by ID\r\n  useEffect(() => {\r\n    const fetchProject = async () => {\r\n      if (!id) return\r\n\r\n      try {\r\n        setLoading(true)\r\n        const response = await projectsAPI.getById(id)\r\n        setProject(response.data)\r\n      } catch (error) {\r\n        console.error('Failed to fetch project:', error)\r\n        setError('프로젝트를 불러오는데 실패했습니다.')\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n    fetchProject()\r\n  }, [id])\r\n\r\n  // Create localized project object with all multilingual fields processed\r\n  const localizedProject = useMemo<LocalizedProject | null>(() => {\r\n    if (!project) return null\r\n\r\n    return {\r\n      ...project,\r\n      // String fields\r\n      title: getLocalizedField(currentLang, project.title, project.titleEn, project.titleJa),\r\n      description: getLocalizedField(currentLang, project.description, project.descriptionEn, project.descriptionJa),\r\n      detailedDescription: getLocalizedField(\r\n        currentLang,\r\n        project.detailedDescription,\r\n        project.detailedDescriptionEn,\r\n        project.detailedDescriptionJa\r\n      ),\r\n      // Array fields - CRITICAL: Always add || [] fallback to prevent runtime errors\r\n      technologies: getLocalizedArrayField(\r\n        currentLang,\r\n        project.technologies,\r\n        project.technologiesEn,\r\n        project.technologiesJa\r\n      ) || [],\r\n      features: getLocalizedArrayField(\r\n        currentLang,\r\n        project.features,\r\n        project.featuresEn,\r\n        project.featuresJa\r\n      ) || [],\r\n      learnings: getLocalizedArrayField(\r\n        currentLang,\r\n        project.learnings,\r\n        project.learningsEn,\r\n        project.learningsJa\r\n      ) || [],\r\n      videoDescriptions: getLocalizedArrayField(\r\n        currentLang,\r\n        project.videoDescriptions,\r\n        project.videoDescriptionsEn,\r\n        project.videoDescriptionsJa\r\n      ) || [],\r\n    }\r\n  }, [project, currentLang])\r\n\r\n  // Helper function to get level text\r\n  const getLevelText = (level: number): string => {\r\n    if (level >= 90) return 'Expert'\r\n    if (level >= 70) return 'Proficient'\r\n    if (level >= 50) return 'Competent'\r\n    return 'Basic'\r\n  }\r\n\r\n  // Process linked skills with multilingual support\r\n  const linkedSkills = useMemo<LinkedSkill[]>(() => {\r\n    if (!project || !skillCategories) return []\r\n\r\n    // Flatten all skills from categories\r\n    const allSkills = skillCategories.flatMap(category => category.skills || [])\r\n\r\n    // Create Set for O(1) lookup performance\r\n    const skillIdSet = new Set(project.skillIds || [])\r\n\r\n    // Filter and map skills with localization\r\n    return allSkills\r\n      .filter(skill => skillIdSet.has(skill._id!))\r\n      .map(skill => ({\r\n        ...skill,\r\n        name: getLocalizedSkillName(currentLang, skill),\r\n        description: getLocalizedSkillDescription(currentLang, skill),\r\n        levelText: getLevelText(skill.level || 0),\r\n      }))\r\n  }, [project, skillCategories, currentLang])\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    localizedProject,\r\n    linkedSkills,\r\n  }\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { useParams, useNavigate, Link, useLocation } from 'react-router-dom'\r\nimport { motion } from 'framer-motion'\r\nimport { FaArrowLeft, FaGithub, FaExternalLinkAlt, FaPlay, FaImage, FaCode, FaChevronLeft, FaChevronRight } from 'react-icons/fa'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { useProjectDetail } from '../hooks/useProjectDetail'\r\n\r\nconst ProjectDetail: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  const { i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  \r\n  // Use custom hook for data fetching and i18n processing\r\n  const { loading, error, localizedProject, linkedSkills } = useProjectDetail(id, currentLang)\r\n  \r\n  // UI state management\r\n  const [selectedImage, setSelectedImage] = useState<string | null>(null)\r\n  const [currentVideoIndex, setCurrentVideoIndex] = useState(0)\r\n  const [currentShortsIndex, setCurrentShortsIndex] = useState(0)\r\n\r\n  // Utility function for skill badge styling\r\n  const getBadgeStyle = (colorCode: string) => {\r\n    const bgColor = `${colorCode}26`\r\n    const textColor = colorCode\r\n    \r\n    return {\r\n      backgroundColor: bgColor,\r\n      color: textColor,\r\n    } as React.CSSProperties\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (error || !localizedProject) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <p className=\"text-xl text-gray-600 dark:text-gray-400 mb-4\">{error || '프로젝트를 찾을 수 없습니다.'}</p>\r\n          <button\r\n            onClick={() => navigate('/projects', { state: location.state })}\r\n            className=\"text-primary-600 hover:text-primary-700\"\r\n          >\r\n            목록으로 돌아가기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const isYouTubeUrl = (url: string) => {\r\n    return url.includes('youtube.com') || url.includes('youtu.be')\r\n  }\r\n\r\n  // 🌟 유튜브 쇼츠 URL 판별 함수 추가\r\n  const isYouTubeShorts = (url: string) => {\r\n    return url.includes('youtube.com/shorts/')\r\n  }\r\n\r\n  const getYouTubeEmbedUrl = (url: string) => {\r\n    let videoId = ''\r\n    // 🌟 유튜브 쇼츠 지원 추가\r\n    if (url.includes('youtube.com/shorts/')) {\r\n      videoId = url.split('shorts/')[1]?.split('?')[0] || ''\r\n    } else if (url.includes('youtube.com/watch?v=')) {\r\n      videoId = url.split('v=')[1]?.split('&')[0] || ''\r\n    } else if (url.includes('youtu.be/')) {\r\n      videoId = url.split('youtu.be/')[1]?.split('?')[0] || ''\r\n    }\r\n    return videoId ? `https://www.youtube.com/embed/${videoId}?rel=0&modestbranding=1&showinfo=0` : ''\r\n  }\r\n\r\n  // 🌟 동영상 분류 (쇼츠 vs 일반)\r\n  const regularVideos = localizedProject.videos?.filter((video: string) => !isYouTubeShorts(video)) || []\r\n  const shortsVideos = localizedProject.videos?.filter((video: string) => isYouTubeShorts(video)) || []\r\n\r\n  return (\r\n    <section className=\"section-padding bg-gray-50 dark:bg-dark-900 min-h-screen\">\r\n      <div className=\"max-w-6xl mx-auto px-4\">\r\n        {/* Header */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"mb-8\"\r\n        >\r\n          <Link\r\n            to=\"/projects\"\r\n            state={location.state}\r\n            className=\"inline-flex items-center gap-2 text-primary-600 hover:text-primary-700 mb-6 dark:text-primary-400\"\r\n          >\r\n            <FaArrowLeft /> 목록으로 돌아가기\r\n          </Link>\r\n        </motion.div>\r\n\r\n        {/* Project Header */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8 mb-8\"\r\n        >\r\n          <div className=\"flex flex-col md:flex-row gap-8\">\r\n            {/* 🌟 Main Image - 왼쪽으로 이동 */}\r\n            {localizedProject.image && (\r\n              <div className=\"md:w-1/3\">\r\n                <img \r\n                  src={localizedProject.image}\r\n                  alt={localizedProject.title}\r\n                  className=\"w-full h-auto rounded-lg shadow-lg object-cover\"\r\n                  loading=\"eager\"\r\n                  decoding=\"async\"\r\n                  width=\"800\"\r\n                  height=\"600\"\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {/* 🌟 텍스트 내용 - 오른쪽 */}\r\n            <div className=\"flex-1\">\r\n              <div className=\"flex items-start gap-4 mb-4 flex-wrap\">\r\n                {/* 카테고리 배지 (복수 표시) */}\r\n                {localizedProject.categoryIds && localizedProject.categoryIds.length > 0 ? (\r\n                  (localizedProject.categoryIds as any[]).map((catIdOrObj: any) => {\r\n                    const catName = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?.name\r\n                    return catName ? (\r\n                      <span \r\n                        key={typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id}\r\n                        className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\"\r\n                      >\r\n                        {catName}\r\n                      </span>\r\n                    ) : null\r\n                  })\r\n                ) : (\r\n                  // 호환성: categoryIds가 없으면 기존 category 표시\r\n                  localizedProject.category && (\r\n                    <span className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\">\r\n                      {localizedProject.category}\r\n                    </span>\r\n                  )\r\n                )}\r\n                <span className={`px-3 py-1 rounded-full text-sm font-medium ${\r\n                  localizedProject.status === 'completed' \r\n                    ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200'\r\n                    : localizedProject.status === 'planning'\r\n                    ? 'bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200'\r\n                    : 'bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200'\r\n                }`}>\r\n                  {localizedProject.status === 'completed' ? '완료' : localizedProject.status === 'planning' ? '기획중' : '준비중'}\r\n                </span>\r\n              </div>\r\n              <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4\">\r\n                {localizedProject.title}\r\n              </h1>\r\n              <p className=\"text-lg text-gray-600 dark:text-gray-300 mb-6 leading-relaxed\">\r\n                {localizedProject.description}\r\n              </p>\r\n              \r\n              {/* Technologies */}\r\n              {localizedProject.technologies.length > 0 && (\r\n                <div className=\"mb-6\">\r\n                  <h3 className=\"text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3 flex items-center gap-2\">\r\n                    <FaCode /> 사용 기술\r\n                  </h3>\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    {localizedProject.technologies.map((tech, index) => (\r\n                      <span\r\n                        key={index}\r\n                        className=\"px-3 py-1 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg text-sm font-medium\"\r\n                      >\r\n                        {tech}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* 🌟 Linked Skills (스킬 배지) */}\r\n              {linkedSkills.length > 0 && (\r\n                <div className=\"mb-6\">\r\n                  <h3 className=\"text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3 flex items-center gap-2\">\r\n                    <FaCode /> 사용된 핵심 스킬\r\n                  </h3>\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    {linkedSkills.map((skill) => {\r\n                      // 🌟 동적 스타일 적용\r\n                      const badgeStyle = skill.color ? getBadgeStyle(skill.color) : undefined\r\n\r\n                      return (\r\n                        <Link\r\n                          key={skill._id}\r\n                          to={`/projects?skillId=${skill._id}`}\r\n                          className=\"inline-flex items-center px-3 py-1 rounded-lg text-sm font-medium hover:ring-2 transition-all hover:opacity-80\"\r\n                          title={`${skill.name} 스킬이 사용된 모든 프로젝트 보기`}\r\n                          style={{\r\n                            ...badgeStyle,\r\n                            '--tw-ring-color': skill.color || '#3B82F6',\r\n                          } as React.CSSProperties}\r\n                        >\r\n                          <span className=\"font-semibold\">{skill.name}</span>\r\n                          <span \r\n                            className=\"text-xs font-semibold ml-1\"\r\n                            style={{ color: skill.color || '#3B82F6' }}\r\n                          >\r\n                            [{skill.levelText}]\r\n                          </span>\r\n                        </Link>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Links */}\r\n              <div className=\"flex flex-wrap gap-4\">\r\n                {localizedProject.githubLink && (\r\n                  <a\r\n                    href={localizedProject.githubLink}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"inline-flex items-center gap-2 px-4 py-2 bg-gray-900 dark:bg-gray-700 text-white rounded-lg hover:bg-gray-800 dark:hover:bg-gray-600 transition-colors\"\r\n                  >\r\n                    <FaGithub /> GitHub\r\n                  </a>\r\n                )}\r\n                {localizedProject.liveLink && (\r\n                  <a\r\n                    href={localizedProject.liveLink}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"inline-flex items-center gap-2 px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors\"\r\n                  >\r\n                    <FaExternalLinkAlt /> Live Demo\r\n                  </a>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\">\r\n          {/* Additional Images - 전체 너비 */}\r\n          {localizedProject.images && localizedProject.images.length > 0 && (\r\n            <div className=\"lg:col-span-4 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8\">\r\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-6 flex items-center gap-2\">\r\n                <FaImage /> 프로젝트 이미지\r\n              </h3>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                {localizedProject.images.map((image, index) => (\r\n                  <motion.div\r\n                    key={index}\r\n                    initial={{ opacity: 0, scale: 0.9 }}\r\n                    animate={{ opacity: 1, scale: 1 }}\r\n                    transition={{ delay: index * 0.1 }}\r\n                    className=\"cursor-pointer group\"\r\n                    onClick={() => setSelectedImage(image)}\r\n                  >\r\n                    <div className=\"aspect-video rounded-lg overflow-hidden shadow-md group-hover:shadow-xl transition-shadow\">\r\n                      <img\r\n                        src={image}\r\n                        alt={`${localizedProject.title} ${index + 1}`}\r\n                        className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\r\n                        loading=\"lazy\"\r\n                        decoding=\"async\"\r\n                        width=\"640\"\r\n                        height=\"360\"\r\n                      />\r\n                    </div>\r\n                  </motion.div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* 🌟 영상 섹션 - 가로 배치 */}\r\n          {/* 🌟 일반 동영상 (가로형) - 왼쪽 (3/4) */}\r\n          {regularVideos.length > 0 && (\r\n            <div className=\"lg:col-span-3 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8\" data-video-section>\r\n              <div className=\"flex items-center justify-between mb-6\">\r\n                <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white flex items-center gap-2\">\r\n                  <FaPlay /> 프로젝트 동영상\r\n                </h3>\r\n                {regularVideos.length > 1 && (\r\n                  <span className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                    {currentVideoIndex + 1} / {regularVideos.length}\r\n                  </span>\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"relative\">\r\n                {/* 영상 컨테이너 */}\r\n                <div className=\"relative group\">\r\n                  {(() => {\r\n                    const video = regularVideos[currentVideoIndex]\r\n                    if (!video) return null\r\n                    \r\n                    return (\r\n                      <div>\r\n                        {isYouTubeUrl(video) ? (\r\n                          <div className=\"relative w-full rounded-lg overflow-hidden shadow-lg bg-gray-100 dark:bg-gray-700\">\r\n                            <div className=\"aspect-video\">\r\n                              <iframe\r\n                                src={getYouTubeEmbedUrl(video)}\r\n                                title={`${localizedProject.title} 동영상 ${currentVideoIndex + 1}`}\r\n                                className=\"w-full h-full\"\r\n                                allowFullScreen\r\n                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                              />\r\n                            </div>\r\n                            {/* YouTube 링크 */}\r\n                            <div className=\"absolute bottom-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity z-10\">\r\n                              <a\r\n                                href={video}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm font-medium transition-colors\"\r\n                              >\r\n                                YouTube에서 보기\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"relative w-full rounded-lg overflow-hidden shadow-lg bg-gray-100 dark:bg-gray-700\">\r\n                            <div className=\"aspect-video\">\r\n                              <video\r\n                                src={video}\r\n                                controls\r\n                                className=\"w-full h-full object-cover\"\r\n                                preload=\"metadata\"\r\n                              >\r\n                                <source src={video} type=\"video/mp4\" />\r\n                                <source src={video} type=\"video/webm\" />\r\n                                <source src={video} type=\"video/ogg\" />\r\n                                브라우저가 비디오를 지원하지 않습니다.\r\n                              </video>\r\n                            </div>\r\n                            {/* 직접 링크 */}\r\n                            <div className=\"absolute bottom-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity z-10\">\r\n                              <a\r\n                                href={video}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded text-sm font-medium transition-colors\"\r\n                              >\r\n                                원본 보기\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                        \r\n                        {/* 🌟 영상 설명 (HTML 렌더링) */}\r\n                        {localizedProject.videoDescriptions?.[currentVideoIndex] && (\r\n                          <div className=\"mt-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                            <div \r\n                              className=\"text-gray-700 dark:text-gray-300 text-sm leading-relaxed prose prose-sm dark:prose-invert max-w-none\"\r\n                              dangerouslySetInnerHTML={{ __html: localizedProject.videoDescriptions[currentVideoIndex] }}\r\n                            />\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )\r\n                  })()}\r\n                  \r\n                  {/* 🌟 좌우 화살표 (영상이 2개 이상일 때) */}\r\n                  {regularVideos.length > 1 && (\r\n                    <>\r\n                      <button\r\n                        onClick={() => setCurrentVideoIndex((prev) => (prev === 0 ? regularVideos.length - 1 : prev - 1))}\r\n                        className=\"absolute left-2 top-1/2 -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-all opacity-0 group-hover:opacity-100 z-10\"\r\n                        aria-label=\"이전 영상\"\r\n                      >\r\n                        <FaChevronLeft size={20} />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => setCurrentVideoIndex((prev) => (prev === regularVideos.length - 1 ? 0 : prev + 1))}\r\n                        className=\"absolute right-2 top-1/2 -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-all opacity-0 group-hover:opacity-100 z-10\"\r\n                        aria-label=\"다음 영상\"\r\n                      >\r\n                        <FaChevronRight size={20} />\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                </div>\r\n                \r\n                {/* 🌟 인디케이터 (영상이 2개 이상일 때) */}\r\n                {regularVideos.length > 1 && (\r\n                  <div className=\"flex justify-center gap-2 mt-4\">\r\n                    {regularVideos.map((_: string, index: number) => (\r\n                      <button\r\n                        key={index}\r\n                        onClick={() => setCurrentVideoIndex(index)}\r\n                        className={`h-2 rounded-full transition-all ${\r\n                          index === currentVideoIndex \r\n                            ? 'w-8 bg-blue-600 dark:bg-blue-400' \r\n                            : 'w-2 bg-gray-300 dark:bg-gray-600 hover:bg-gray-400 dark:hover:bg-gray-500'\r\n                        }`}\r\n                        aria-label={`${index + 1}번째 영상 보기`}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* 🌟 유튜브 쇼츠 (세로형) - 오른쪽 (1/4) */}\r\n          {shortsVideos.length > 0 && (\r\n            <div className=\"lg:col-span-1 bg-white dark:bg-gray-800 rounded-2xl shadow-lg px-4 py-8\" data-shorts-section>\r\n              {/* 🌟 쇼츠 컨테이너 - 완전 중앙 정렬 */}\r\n              <div className=\"flex justify-center items-center\">\r\n                <div className=\"relative group px-0\" style={{ maxWidth: '280px', width: '100%' }}>\r\n                  {/* 🌟 타이틀을 영상 컨테이너 안으로 이동 */}\r\n                  <div className=\"flex items-center justify-between mb-6\">\r\n                    <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white flex items-center gap-2\">\r\n                      <FaPlay /> Shorts\r\n                    </h3>\r\n                    {shortsVideos.length > 1 && (\r\n                      <span className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                        {currentShortsIndex + 1} / {shortsVideos.length}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  {(() => {\r\n                    const video = shortsVideos[currentShortsIndex]\r\n                    if (!video) return null\r\n                    \r\n                    const videoIndexInAll = localizedProject.videos?.indexOf(video) ?? -1\r\n                    \r\n                    return (\r\n                      <div className=\"w-full\">\r\n                        <div className=\"relative w-full rounded-lg overflow-hidden shadow-lg bg-black\">\r\n                          {/* 🌟 세로 형식 (9:16 비율) - 최대 높이 설정 */}\r\n                          <div className=\"aspect-[9/16] w-full\" style={{ maxHeight: '600px' }}>\r\n                            <iframe\r\n                              src={getYouTubeEmbedUrl(video)}\r\n                              title={`${localizedProject.title} Shorts ${currentShortsIndex + 1}`}\r\n                              className=\"w-full h-full\"\r\n                              allowFullScreen\r\n                              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                            />\r\n                          </div>\r\n                          {/* YouTube 쇼츠 링크 */}\r\n                          <div className=\"absolute bottom-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity z-10\">\r\n                            <a\r\n                              href={video}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                              className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm font-medium transition-colors flex items-center gap-1 shadow-lg\"\r\n                            >\r\n                              Shorts\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        {/* 🌟 영상 설명 (HTML 렌더링) */}\r\n                        {localizedProject.videoDescriptions?.[videoIndexInAll] && (\r\n                          <div className=\"mt-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\" style={{ maxWidth: '600px', margin: '1rem auto 0' }}>\r\n                            <div \r\n                              className=\"text-gray-700 dark:text-gray-300 text-sm leading-relaxed prose prose-sm dark:prose-invert max-w-none\"\r\n                              dangerouslySetInnerHTML={{ __html: localizedProject.videoDescriptions[videoIndexInAll] }}\r\n                            />\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )\r\n                  })()}\r\n                  \r\n                  {/* 🌟 좌우 화살표 (쇼츠가 2개 이상일 때) */}\r\n                  {shortsVideos.length > 1 && (\r\n                    <>\r\n                      <button\r\n                        onClick={() => setCurrentShortsIndex((prev) => (prev === 0 ? shortsVideos.length - 1 : prev - 1))}\r\n                        className=\"absolute left-2 top-1/2 -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-all opacity-0 group-hover:opacity-100 z-10\"\r\n                        aria-label=\"이전 쇼츠\"\r\n                      >\r\n                        <FaChevronLeft size={20} />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => setCurrentShortsIndex((prev) => (prev === shortsVideos.length - 1 ? 0 : prev + 1))}\r\n                        className=\"absolute right-2 top-1/2 -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-all opacity-0 group-hover:opacity-100 z-10\"\r\n                        aria-label=\"다음 쇼츠\"\r\n                      >\r\n                        <FaChevronRight size={20} />\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              {/* 🌟 인디케이터 (쇼츠가 2개 이상일 때) */}\r\n              {shortsVideos.length > 1 && (\r\n                <div className=\"flex justify-center gap-2 mt-4\">\r\n                  {shortsVideos.map((_: string, index: number) => (\r\n                    <button\r\n                      key={index}\r\n                      onClick={() => setCurrentShortsIndex(index)}\r\n                      className={`h-2 rounded-full transition-all ${\r\n                        index === currentShortsIndex \r\n                          ? 'w-8 bg-red-600 dark:bg-red-400' \r\n                          : 'w-2 bg-gray-300 dark:bg-gray-600 hover:bg-gray-400 dark:hover:bg-gray-500'\r\n                      }`}\r\n                      aria-label={`${index + 1}번째 쇼츠 보기`}\r\n                    />\r\n                  ))}\r\n                </div>\r\n          )}\r\n          </div>\r\n          )}\r\n\r\n          {/* 프로젝트 설명 - 전체 너비 */}\r\n          {localizedProject.detailedDescription && (\r\n            <div className=\"lg:col-span-4 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8\">\r\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\r\n                상세 설명\r\n              </h3>\r\n              <div \r\n                className=\"prose prose-lg dark:prose-invert max-w-none text-gray-700 dark:text-gray-300\"\r\n                dangerouslySetInnerHTML={{ __html: localizedProject.detailedDescription }}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {/* Features & Learnings - 가로 배치 */}\r\n          {/* Features */}\r\n          {localizedProject.features.length > 0 && (\r\n            <div className=\"lg:col-span-2 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8\">\r\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\r\n                주요 기능\r\n              </h3>\r\n              <ul className=\"space-y-3\">\r\n                {localizedProject.features.map((feature, index) => (\r\n                  <li key={index} className=\"flex items-start gap-3\">\r\n                    <span className=\"flex-shrink-0 w-6 h-6 rounded-full bg-primary-100 dark:bg-primary-900 text-primary-600 dark:text-primary-300 flex items-center justify-center text-sm font-medium mt-0.5\">\r\n                      {index + 1}\r\n                    </span>\r\n                    <span className=\"text-gray-700 dark:text-gray-300\">{feature}</span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n\r\n          {/* Learnings */}\r\n          {localizedProject.learnings.length > 0 && (\r\n            <div className=\"lg:col-span-2 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8\">\r\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\r\n                배운 점\r\n              </h3>\r\n              <ul className=\"space-y-3\">\r\n                {localizedProject.learnings.map((learning, index) => (\r\n                  <li key={index} className=\"flex items-start gap-3\">\r\n                    <span className=\"flex-shrink-0 w-2 h-2 rounded-full bg-primary-600 dark:bg-primary-400 mt-2\"></span>\r\n                    <span className=\"text-gray-700 dark:text-gray-300\">{learning}</span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Image Modal */}\r\n      {selectedImage && (\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n          className=\"fixed inset-0 bg-black/90 z-50 flex items-center justify-center p-4\"\r\n          onClick={() => setSelectedImage(null)}\r\n        >\r\n          <button\r\n            onClick={() => setSelectedImage(null)}\r\n            className=\"absolute top-4 right-4 text-white hover:text-gray-300 text-3xl\"\r\n          >\r\n            ×\r\n          </button>\r\n          <img\r\n            src={selectedImage}\r\n            alt=\"확대 이미지\"\r\n            className=\"max-w-full max-h-full object-contain\"\r\n            loading=\"eager\"\r\n            decoding=\"async\"\r\n          />\r\n        </motion.div>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ProjectDetail\r\n"],"names":["ProjectDetail","id","useParams","navigate","useNavigate","location","useLocation","i18n","useTranslation","currentLang","language","loading","error","localizedProject","linkedSkills","project","setProject","useState","setLoading","setError","skillCategories","useSkills","useEffect","async","response","projectsAPI","getById","data","useMemo","title","getLocalizedField","titleEn","titleJa","description","descriptionEn","descriptionJa","detailedDescription","detailedDescriptionEn","detailedDescriptionJa","technologies","getLocalizedArrayField","technologiesEn","technologiesJa","features","featuresEn","featuresJa","learnings","learningsEn","learningsJa","videoDescriptions","videoDescriptionsEn","videoDescriptionsJa","allSkills","flatMap","category","skills","skillIdSet","Set","skillIds","filter","skill","has","_id","map","name","getLocalizedSkillName","getLocalizedSkillDescription","levelText","level","useProjectDetail","selectedImage","setSelectedImage","currentVideoIndex","setCurrentVideoIndex","currentShortsIndex","setCurrentShortsIndex","jsxRuntimeExports","jsx","className","children","jsxs","onClick","state","isYouTubeShorts","url","includes","getYouTubeEmbedUrl","videoId","_a","split","_b","_c","regularVideos","videos","video","shortsVideos","motion","div","initial","opacity","y","animate","Link","to","FaArrowLeft","image","src","alt","decoding","width","height","categoryIds","length","catIdOrObj","catName","status","FaCode","tech","index","badgeStyle","color","backgroundColor","colorCode","style","githubLink","href","target","rel","FaGithub","liveLink","FaExternalLinkAlt","images","FaImage","scale","transition","delay","FaPlay","allowFullScreen","allow","controls","preload","type","dangerouslySetInnerHTML","__html","Fragment","prev","FaChevronLeft","size","FaChevronRight","_","maxWidth","videoIndexInAll","indexOf","maxHeight","margin","feature","learning","exit"],"mappings":"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"}