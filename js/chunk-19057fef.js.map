{"version":3,"file":"chunk-19057fef.js","sources":["../../src/utils/videoUtils.tsx","../../src/components/forms/BookForm.tsx","../../src/components/forms/ChapterForm.tsx","../../src/components/forms/LearningForm.tsx","../../src/components/forms/VideoLearningForm.tsx","../../src/components/forms/VideoPlaylistForm.tsx","../../src/components/forms/PlaylistVideoForm.tsx","../../src/components/forms/ExperienceForm.tsx","../../src/components/forms/ProjectForm.tsx","../../src/components/forms/SkillCategoryForm.tsx","../../src/components/forms/SkillForm.tsx","../../src/components/forms/CategoryForm.tsx"],"sourcesContent":["// =================================================================\r\n// 📹 유튜브 영상 관련 유틸리티 함수\r\n// =================================================================\r\n\r\n/**\r\n * 다양한 유튜브 URL 형식에서 영상 ID 추출\r\n * @param url - 유튜브 URL\r\n * @returns 영상 ID 또는 null\r\n */\r\nexport const extractYouTubeId = (url: string): string | null => {\r\n  if (!url) return null\r\n  \r\n  // 다양한 유튜브 URL 패턴\r\n  const patterns = [\r\n    /(?:youtube\\.com\\/watch\\?v=)([a-zA-Z0-9_-]{11})/,  // https://www.youtube.com/watch?v=VIDEO_ID\r\n    /(?:youtu\\.be\\/)([a-zA-Z0-9_-]{11})/,  // https://youtu.be/VIDEO_ID\r\n    /(?:youtube\\.com\\/embed\\/)([a-zA-Z0-9_-]{11})/,  // https://www.youtube.com/embed/VIDEO_ID\r\n    /(?:youtube\\.com\\/shorts\\/)([a-zA-Z0-9_-]{11})/,  // https://www.youtube.com/shorts/VIDEO_ID\r\n    /(?:youtube\\.com\\/v\\/)([a-zA-Z0-9_-]{11})/,  // https://www.youtube.com/v/VIDEO_ID\r\n  ]\r\n  \r\n  for (const pattern of patterns) {\r\n    const match = url.match(pattern)\r\n    if (match && match[1]) {\r\n      return match[1]\r\n    }\r\n  }\r\n  \r\n  return null\r\n}\r\n\r\n/**\r\n * 유튜브 영상 ID로 고해상도 썸네일 URL 생성\r\n * @param videoId - 유튜브 영상 ID\r\n * @param quality - 썸네일 품질 (maxresdefault, hqdefault, mqdefault, sddefault)\r\n * @returns 썸네일 URL\r\n */\r\nexport const getYouTubeThumbnail = (videoId: string, quality: string = 'maxresdefault'): string => {\r\n  return `https://img.youtube.com/vi/${videoId}/${quality}.jpg`\r\n}\r\n\r\n/**\r\n * 유튜브 임베드 URL 생성 (타임스탬프 지원, 전문성 최적화)\r\n * @param videoId - 유튜브 영상 ID\r\n * @param startTime - 시작 시간 (초 단위)\r\n * @param autoplay - 자동 재생 여부 (기본값: false)\r\n * @returns 임베드 URL\r\n */\r\nexport const getYouTubeEmbedUrl = (videoId: string, startTime?: number, autoplay: boolean = false): string => {\r\n  const baseUrl = `https://www.youtube.com/embed/${videoId}`\r\n  const params = new URLSearchParams()\r\n  \r\n  if (startTime !== undefined && startTime > 0) {\r\n    params.append('start', startTime.toString())\r\n  }\r\n  \r\n  if (autoplay) {\r\n    params.append('autoplay', '1')\r\n  }\r\n  \r\n  // 🌟 전문성을 위한 플레이어 최적화 파라미터\r\n  params.append('rel', '0')  // 관련 영상 추천 비활성화\r\n  params.append('modestbranding', '1')  // 유튜브 로고 최소화 & '동영상 더보기' 툴팁 제거\r\n  params.append('iv_load_policy', '3')  // 영상 주석(annotations) 비활성화\r\n  params.append('showinfo', '0')  // 영상 정보 표시 최소화\r\n  params.append('fs', '1')  // 전체 화면 버튼 표시\r\n  params.append('cc_load_policy', '0')  // 자막 자동 로드 비활성화\r\n  params.append('controls', '1')  // 컨트롤러 표시\r\n  \r\n  return `${baseUrl}?${params.toString()}`\r\n}\r\n\r\n/**\r\n * 텍스트에서 타임스탬프 패턴 추출 및 초 단위 변환\r\n * @param text - 타임스탬프를 포함한 텍스트\r\n * @returns 타임스탬프 정보 배열 [{ text: '[1:30]', seconds: 90, position: 10 }]\r\n */\r\nexport interface TimestampMatch {\r\n  text: string  // 원본 텍스트 (예: '[1:30]')\r\n  seconds: number  // 초 단위 시간\r\n  position: number  // 텍스트 내 위치\r\n}\r\n\r\nexport const parseTimestamps = (text: string): TimestampMatch[] => {\r\n  if (!text) return []\r\n  \r\n  // 타임스탬프 패턴: [MM:SS] 또는 [H:MM:SS]\r\n  const pattern = /\\[(\\d{1,2}):(\\d{2})(?::(\\d{2}))?\\]/g\r\n  const matches: TimestampMatch[] = []\r\n  \r\n  let match\r\n  while ((match = pattern.exec(text)) !== null) {\r\n    const hours = match[3] ? parseInt(match[1] || '0', 10) : 0\r\n    const minutes = match[3] ? parseInt(match[2] || '0', 10) : parseInt(match[1] || '0', 10)\r\n    const seconds = match[3] ? parseInt(match[3] || '0', 10) : parseInt(match[2] || '0', 10)\r\n    \r\n    const totalSeconds = hours * 3600 + minutes * 60 + seconds\r\n    \r\n    matches.push({\r\n      text: match[0],\r\n      seconds: totalSeconds,\r\n      position: match.index,\r\n    })\r\n  }\r\n  \r\n  return matches\r\n}\r\n\r\n/**\r\n * 타임스탬프가 포함된 텍스트를 클릭 가능한 링크로 변환\r\n * @param text - 원본 텍스트\r\n * @param onTimestampClick - 타임스탬프 클릭 핸들러\r\n * @returns JSX 요소 배열\r\n */\r\nexport const renderTextWithTimestamps = (\r\n  text: string,\r\n  onTimestampClick?: (seconds: number) => void\r\n): (string | JSX.Element)[] => {\r\n  if (!text) return []\r\n  \r\n  const timestamps = parseTimestamps(text)\r\n  if (timestamps.length === 0) return [text]\r\n  \r\n  const result: (string | JSX.Element)[] = []\r\n  let lastIndex = 0\r\n  \r\n  timestamps.forEach((ts, idx) => {\r\n    // 타임스탬프 이전 텍스트 추가\r\n    if (ts.position > lastIndex) {\r\n      result.push(text.substring(lastIndex, ts.position))\r\n    }\r\n    \r\n    // 타임스탬프를 클릭 가능한 버튼으로 추가\r\n    if (onTimestampClick) {\r\n      result.push(\r\n        <button\r\n          key={`ts-${idx}`}\r\n          onClick={() => onTimestampClick(ts.seconds)}\r\n          className=\"inline-flex items-center px-2 py-1 bg-blue-600 hover:bg-blue-700 text-white rounded font-mono text-xs font-bold transition-colors mx-1\"\r\n          title={`영상 ${ts.text} 위치로 이동`}\r\n        >\r\n          {ts.text}\r\n        </button>\r\n      )\r\n    } else {\r\n      result.push(\r\n        <span key={`ts-${idx}`} className=\"inline-flex items-center px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded font-mono text-xs font-bold mx-1\">\r\n          {ts.text}\r\n        </span>\r\n      )\r\n    }\r\n    \r\n    lastIndex = ts.position + ts.text.length\r\n  })\r\n  \r\n  // 마지막 타임스탬프 이후 텍스트 추가\r\n  if (lastIndex < text.length) {\r\n    result.push(text.substring(lastIndex))\r\n  }\r\n  \r\n  return result\r\n}\r\n\r\n/**\r\n * 유튜브 URL 유효성 검사\r\n * @param url - 검증할 URL\r\n * @returns 유효한 유튜브 URL 여부\r\n */\r\nexport const isValidYouTubeUrl = (url: string): boolean => {\r\n  if (!url) return false\r\n  return extractYouTubeId(url) !== null\r\n}\r\n\r\n/**\r\n * 유튜브 재생 목록 ID 추출\r\n * @param url - 유튜브 재생 목록 URL\r\n * @returns 재생 목록 ID 또는 null\r\n */\r\nexport const extractYouTubePlaylistId = (url: string): string | null => {\r\n  if (!url) return null\r\n  \r\n  // 재생 목록 URL 패턴\r\n  const patterns = [\r\n    /[?&]list=([a-zA-Z0-9_-]{13,})/,  // ?list=PLAYLIST_ID 또는 &list=PLAYLIST_ID\r\n    /youtube\\.com\\/playlist\\?list=([a-zA-Z0-9_-]{13,})/,  // playlist 전용 URL\r\n  ]\r\n  \r\n  for (const pattern of patterns) {\r\n    const match = url.match(pattern)\r\n    if (match && match[1]) {\r\n      return match[1]\r\n    }\r\n  }\r\n  \r\n  return null\r\n}\r\n\r\n/**\r\n * 유튜브 재생 목록 임베드 URL 생성\r\n * @param playlistId - 유튜브 재생 목록 ID\r\n * @param startVideoId - 시작할 영상 ID (선택사항)\r\n * @returns 재생 목록 임베드 URL\r\n */\r\nexport const getYouTubePlaylistEmbedUrl = (playlistId: string, startVideoId?: string): string => {\r\n  const params = new URLSearchParams()\r\n  \r\n  params.append('list', playlistId)\r\n  params.append('rel', '0')\r\n  params.append('modestbranding', '1')\r\n  params.append('iv_load_policy', '3')\r\n  params.append('showinfo', '0')\r\n  params.append('fs', '1')\r\n  params.append('cc_load_policy', '0')\r\n  params.append('controls', '1')\r\n  params.append('enablejsapi', '1')\r\n  \r\n  if (startVideoId) {\r\n    // 특정 영상부터 시작\r\n    return `https://www.youtube.com/embed/${startVideoId}?${params.toString()}`\r\n  } else {\r\n    // 재생 목록 첫 영상부터 시작\r\n    return `https://www.youtube.com/embed?${params.toString()}`\r\n  }\r\n}\r\n\r\n/**\r\n * 유튜브 재생 목록 썸네일 URL 생성\r\n * @param playlistId - 유튜브 재생 목록 ID\r\n * @returns 썸네일 URL\r\n */\r\nexport const getYouTubePlaylistThumbnail = (playlistId: string): string => {\r\n  // 재생 목록 썸네일은 특정 API를 통해서만 가능하므로\r\n  // 대신 첫 번째 영상의 썸네일을 사용하거나 기본 이미지 사용\r\n  return `https://i.ytimg.com/vi//hqdefault.jpg` // 플레이스홀더\r\n}\r\n\r\n/**\r\n * 마크다운을 HTML로 변환\r\n * @param markdown - 마크다운 텍스트\r\n * @returns HTML 문자열\r\n */\r\nexport const renderMarkdown = (markdown: string): string => {\r\n  if (!markdown) return ''\r\n  \r\n  return markdown\r\n    // 제목\r\n    .replace(/^### (.*$)/gim, '<h3 class=\"text-lg font-semibold mt-4 mb-2 text-gray-900 dark:text-white\">$1</h3>')\r\n    .replace(/^## (.*$)/gim, '<h2 class=\"text-xl font-semibold mt-4 mb-2 text-gray-900 dark:text-white\">$1</h2>')\r\n    .replace(/^# (.*$)/gim, '<h1 class=\"text-2xl font-bold mt-4 mb-2 text-gray-900 dark:text-white\">$1</h1>')\r\n    // 볼드\r\n    .replace(/\\*\\*(.*?)\\*\\*/g, '<strong class=\"font-bold\">$1</strong>')\r\n    // 이탤릭\r\n    .replace(/\\*(.*?)\\*/g, '<em class=\"italic\">$1</em>')\r\n    // 밑줄\r\n    .replace(/__(.*?)__/g, '<u class=\"underline\">$1</u>')\r\n    // 인라인 코드\r\n    .replace(/`(.*?)`/g, '<code class=\"bg-gray-200 dark:bg-gray-600 text-red-600 dark:text-red-400 px-1 rounded text-sm\">$1</code>')\r\n    // 토글\r\n    .replace(/^▶ (.*$)/gim, '<div class=\"flex items-center mt-2 mb-1\"><span class=\"mr-2\">▶</span><span class=\"font-medium text-gray-900 dark:text-white\">$1</span></div>')\r\n    // 불릿 리스트\r\n    .replace(/^[\\s]*[-*+]\\s(.*$)/gim, '<div class=\"ml-4 mb-1\"><span class=\"mr-2\">•</span>$1</div>')\r\n    // 숫자 리스트\r\n    .replace(/^[\\s]*\\d+\\.\\s(.*$)/gim, '<div class=\"ml-4 mb-1\"><span class=\"mr-2\">1.</span>$1</div>')\r\n    // 코드 블록\r\n    .replace(/```(.*?)\\n([\\s\\S]*?)\\n```/gim, (_match, p1, p2) => {\r\n      const lang = p1 ? `language-${p1.trim()}` : ''\r\n      return `<pre class=\"bg-gray-800 p-3 rounded-lg overflow-x-auto my-3\"><code class=\"${lang} text-sm text-gray-100\">${p2.trim()}</code></pre>`\r\n    })\r\n    // 줄바꿈\r\n    .replace(/\\n/g, '<br>')\r\n}\r\n\r\n/**\r\n * 마크다운을 HTML로 변환하고 타임스탬프를 클릭 가능한 버튼으로 변환\r\n * @param markdown - 마크다운 형식의 콘텐츠\r\n * @param onTimestampClick - 타임스탬프 클릭 핸들러\r\n * @returns 변환된 HTML 문자열\r\n */\r\nexport const renderHtmlWithTimestamps = (\r\n  markdown: string,\r\n  onTimestampClick?: (seconds: number) => void\r\n): string => {\r\n  if (!markdown) return ''\r\n  \r\n  // 1단계: 마크다운을 HTML로 변환\r\n  let html = renderMarkdown(markdown)\r\n  \r\n  // 2단계: 타임스탬프를 버튼으로 변환\r\n  const pattern = /\\[(\\d{1,2}):(\\d{2})(?::(\\d{2}))?\\]/g\r\n  \r\n  html = html.replace(pattern, (match, ...groups) => {\r\n    const hours = groups[2] ? parseInt(groups[0], 10) : 0\r\n    const minutes = groups[2] ? parseInt(groups[1], 10) : parseInt(groups[0], 10)\r\n    const seconds = groups[2] ? parseInt(groups[2], 10) : parseInt(groups[1], 10)\r\n    \r\n    const totalSeconds = hours * 3600 + minutes * 60 + seconds\r\n    \r\n    // 데이터 속성으로 초를 저장하여 클릭 이벤트에서 사용\r\n    return `<button \r\n      class=\"inline-flex items-center px-2 py-1 bg-blue-600 hover:bg-blue-700 text-white rounded font-mono text-xs font-bold transition-colors mx-1 cursor-pointer\"\r\n      data-timestamp=\"${totalSeconds}\"\r\n      title=\"영상 ${match} 위치로 이동\"\r\n    >${match}</button>`\r\n  })\r\n  \r\n  return html\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { FaSave, FaStar, FaTimes } from 'react-icons/fa'\r\nimport { Book, BookFormData, Skill, SkillCategory } from '../../types'\r\nimport { useSkills } from '../../hooks/useSkills'\r\nimport { useCategories } from '../../hooks/useCategories'\r\n\r\n// 폼 컴포넌트의 Props 타입 정의\r\ninterface FormProps {\r\n  data: Book | null\r\n  onSave: (data: BookFormData) => Promise<void>\r\n  onCancel: () => void\r\n  isSaving?: boolean\r\n  availableCategories?: string[] // 동적 카테고리 목록\r\n}\r\n\r\nconst BookForm: React.FC<FormProps> = ({ \r\n  data, \r\n  onSave, \r\n  onCancel, \r\n  isSaving = false, \r\n  availableCategories = ['PLC', '데이터분석', '로봇공학', 'IoT', '기타'] \r\n}) => {\r\n  // 🌟 스킬 목록 가져오기\r\n  const { skillCategories, loading: skillsLoading } = useSkills()\r\n  \r\n  // 🌟 카테고리 데이터 가져오기\r\n  const { data: categories = [], isLoading: categoriesLoading } = useCategories()\r\n  \r\n  // readDate 초기값 수정\r\n  const initialReadDate = data?.readDate && !isNaN(new Date(data.readDate).getTime())\r\n    ? new Date(data.readDate).toISOString().split('T')[0]\r\n    : new Date().toISOString().split('T')[0]\r\n\r\n  // 🌟 categoryIds 초기값 처리\r\n  const initialCategoryIds = data?.categoryIds \r\n    ? (data.categoryIds as any[]).map((catIdOrObj: any) => \r\n        typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj._id\r\n      ).filter(Boolean) as string[]\r\n    : []\r\n\r\n  // 🌟 skillIds 초기값 처리 (객체 또는 문자열 모두 처리)\r\n  const initialSkillIds = data?.skillIds \r\n    ? (data.skillIds as any[]).map((skillIdOrObj: any) => \r\n        typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj._id\r\n      ).filter(Boolean) as string[]\r\n    : []\r\n\r\n  const [formData, setFormData] = useState<BookFormData>(\r\n    data\r\n      ? { \r\n          title: data.title,\r\n          author: data.author,\r\n          category: data.category,\r\n          categoryIds: initialCategoryIds,\r\n          coverImage: data.coverImage || '',\r\n          readDate: initialReadDate as string,\r\n          rating: data.rating,\r\n          skillIds: initialSkillIds  // 🌟 스킬 ID 문자열 배열로 초기화\r\n        } \r\n      : {\r\n          title: '',\r\n          author: '',\r\n          category: availableCategories[0] || 'PLC', // 동적 카테고리 첫 번째 항목 사용\r\n          categoryIds: [],\r\n          coverImage: '',\r\n          readDate: initialReadDate as string, // initialReadDate를 사용\r\n          rating: 5,\r\n          skillIds: []  // 🌟 스킬 ID 초기값\r\n        }\r\n  )\r\n  \r\n  \r\n  // 🌟 카테고리 선택/해제 핸들러 (체크박스용)\r\n  const handleCategoryToggle = (categoryId: string) => {\r\n    const currentCategoryIds = formData.categoryIds || []\r\n    const isSelected = currentCategoryIds.includes(categoryId)\r\n    \r\n    const newCategoryIds = isSelected\r\n      ? currentCategoryIds.filter((id: string) => id !== categoryId)\r\n      : [...currentCategoryIds, categoryId]\r\n    \r\n    setFormData({ \r\n      ...formData, \r\n      categoryIds: newCategoryIds \r\n    })\r\n  }\r\n\r\n  // 🌟 스킬 선택/해제 핸들러 (체크박스용)\r\n  const handleSkillToggle = (skillId: string) => {\r\n    const currentSkillIds = formData.skillIds || []\r\n    const isSelected = currentSkillIds.includes(skillId)\r\n    \r\n    const newSkillIds = isSelected\r\n      ? currentSkillIds.filter((id: string) => id !== skillId)\r\n      : [...currentSkillIds, skillId]\r\n    \r\n    setFormData({ \r\n      ...formData, \r\n      skillIds: newSkillIds \r\n    })\r\n  }\r\n  \r\n  // 🌟 스킬 카테고리 전체 선택/해제 핸들러\r\n  const handleSkillCategoryToggle = (category: SkillCategory) => {\r\n    const categorySkillIds = (category.skills || []).map(skill => skill._id!).filter(Boolean)\r\n    const currentSkillIds = formData.skillIds || []\r\n    \r\n    const allSelected = categorySkillIds.every((id: string) => currentSkillIds.includes(id))\r\n    \r\n    let newSkillIds: string[]\r\n    if (allSelected) {\r\n      newSkillIds = currentSkillIds.filter((id: string) => !categorySkillIds.includes(id))\r\n    } else {\r\n      const uniqueIds = new Set([...currentSkillIds, ...categorySkillIds])\r\n      newSkillIds = Array.from(uniqueIds)\r\n    }\r\n    \r\n    setFormData({ \r\n      ...formData, \r\n      skillIds: newSkillIds \r\n    })\r\n  }\r\n\r\n  // 필수 필드 검증\r\n  const isFormValid = formData.title.trim() !== '' && \r\n                     formData.author.trim() !== '' && \r\n                     formData.category.trim() !== ''\r\n\r\n  const handleFormSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!isFormValid) {\r\n      alert('필수 필드(제목, 저자, 카테고리)를 모두 입력해주세요.')\r\n      return\r\n    }\r\n    \r\n    console.log('📚 서적 저장 시작:', formData)\r\n    console.log('🔗 선택된 스킬 IDs:', formData.skillIds)\r\n    \r\n    // 🌟 skillIds와 categoryIds를 문자열 배열로 확실하게 변환 + 중복 제거\r\n    const skillIds = Array.from(new Set(\r\n      (formData.skillIds || []).map((skillIdOrObj: any) => \r\n        typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj?._id\r\n      ).filter(Boolean)\r\n    ))\r\n    \r\n    const categoryIds = Array.from(new Set(\r\n      (formData.categoryIds || []).map((catIdOrObj: any) => \r\n        typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\r\n      ).filter(Boolean)\r\n    ))\r\n    \r\n    const { title, author, category, coverImage, readDate, rating } = formData\r\n    \r\n    const saveData = { \r\n      title, \r\n      author, \r\n      category, \r\n      coverImage: coverImage || '', \r\n      readDate, \r\n      rating,\r\n      skillIds,  // 🌟 변환된 skillIds\r\n      categoryIds  // 🌟 변환된 categoryIds\r\n    }\r\n    \r\n    console.log('📤 최종 전송 데이터:', saveData)\r\n    onSave(saveData)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit} className=\"space-y-4\">\r\n      <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">\r\n        {data ? '서적 수정' : '서적 추가'}\r\n      </h3>\r\n      <div className=\"grid md:grid-cols-2 gap-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            제목\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.title}\r\n            onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            저자\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.author}\r\n            onChange={(e) => setFormData({ ...formData, author: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          />\r\n        </div>\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n            카테고리 선택 📂 (다중 선택 가능)\r\n          </label>\r\n\r\n          {/* 선택된 카테고리 태그 표시 */}\r\n          {formData.categoryIds && formData.categoryIds.length > 0 && (\r\n            <div className=\"flex flex-wrap gap-2 mb-3 p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\r\n              {formData.categoryIds.map((catId) => {\r\n                const category = categories.find(c => c._id === catId)\r\n                return category ? (\r\n                  <span\r\n                    key={catId}\r\n                    className=\"inline-flex items-center gap-1 px-3 py-1 bg-blue-600 text-white rounded-full text-sm\"\r\n                  >\r\n                    {category.name}\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => handleCategoryToggle(catId)}\r\n                      className=\"hover:bg-blue-700 rounded-full p-0.5\"\r\n                    >\r\n                      <FaTimes className=\"text-xs\" />\r\n                    </button>\r\n                  </span>\r\n                ) : null\r\n              })}\r\n            </div>\r\n          )}\r\n\r\n          {/* 카테고리 체크박스 목록 */}\r\n          {categoriesLoading ? (\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">카테고리 로딩 중...</p>\r\n          ) : categories.length > 0 ? (\r\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2\">\r\n              {categories.map((category) => {\r\n                const isSelected = (formData.categoryIds || []).includes(category._id)\r\n                return (\r\n                  <label\r\n                    key={category._id}\r\n                    className={`flex items-center gap-2 p-3 border-2 rounded-lg cursor-pointer transition-all ${\r\n                      isSelected\r\n                        ? 'border-primary-600 bg-primary-50 dark:bg-primary-900/20'\r\n                        : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600'\r\n                    }`}\r\n                  >\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={isSelected}\r\n                      onChange={() => handleCategoryToggle(category._id)}\r\n                      className=\"w-4 h-4\"\r\n                    />\r\n                    <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                      {category.name}\r\n                    </span>\r\n                  </label>\r\n                )\r\n              })}\r\n            </div>\r\n          ) : (\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              등록된 카테고리가 없습니다. 관리자 메뉴의 \"카테고리 관리\"에서 추가하세요.\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            평점\r\n          </label>\r\n          <div className=\"flex items-center gap-2\">\r\n            {/* 시각적 별 선택 */}\r\n            <div className=\"flex gap-1\">\r\n              {[1, 2, 3, 4, 5].map((star) => (\r\n                <button\r\n                  key={star}\r\n                  type=\"button\"\r\n                  onClick={() => setFormData({ ...formData, rating: star })}\r\n                  className={`text-2xl transition-colors ${\r\n                    star <= formData.rating \r\n                      ? 'text-yellow-500 hover:text-yellow-600' \r\n                      : 'text-gray-300 hover:text-gray-400'\r\n                  }`}\r\n                >\r\n                  <FaStar />\r\n                </button>\r\n              ))}\r\n            </div>\r\n            {/* 숫자 입력 (보조) */}\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max=\"5\"\r\n              step=\"0.5\"\r\n              value={formData.rating}\r\n              onChange={(e) => {\r\n                const value = e.target.value\r\n                // 입력값이 비어있거나, 유효한 숫자가 아니면 이전 값 유지\r\n                const newRating = value === '' ? 0 : parseFloat(value)\r\n                setFormData({ \r\n                  ...formData, \r\n                  rating: isNaN(newRating) ? formData.rating : Math.max(1, Math.min(5, newRating))\r\n                })\r\n              }}\r\n              className=\"w-20 px-2 py-1 border border-gray-300 dark:border-gray-600 rounded focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            읽은 날짜\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            value={formData.readDate}\r\n            onChange={(e) => setFormData({ ...formData, readDate: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            표지 이미지 URL\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.coverImage}\r\n            onChange={(e) => setFormData({ ...formData, coverImage: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"https://...\"\r\n          />\r\n        </div>\r\n        \r\n        {/* 🌟 서적에서 다루는 핵심 스킬 선택 - 체크박스 UI */}\r\n        <div className=\"md:col-span-2\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n              이 서적에서 다루는 핵심 스킬 🔗\r\n            </label>\r\n            {formData.skillIds && formData.skillIds.length > 0 && (\r\n              <span className=\"text-xs font-semibold text-blue-600 dark:text-blue-400 bg-blue-100 dark:bg-blue-900/30 px-2 py-1 rounded\">\r\n                ✓ {formData.skillIds.length}개 선택됨\r\n              </span>\r\n            )}\r\n          </div>\r\n          \r\n          {skillsLoading ? (\r\n            <div className=\"text-sm text-gray-500 dark:text-gray-400 py-2\">\r\n              스킬 목록을 불러오는 중입니다...\r\n            </div>\r\n          ) : skillCategories.length === 0 ? (\r\n            <div className=\"text-sm text-gray-500 dark:text-gray-400 py-4 text-center border border-gray-300 dark:border-gray-600 rounded-lg\">\r\n              등록된 스킬이 없습니다. 먼저 스킬을 추가해주세요.\r\n            </div>\r\n          ) : (\r\n            <div className=\"border border-gray-300 dark:border-gray-600 rounded-lg p-4 bg-gray-50 dark:bg-gray-800 max-h-[400px] overflow-y-auto\">\r\n              {skillCategories.map((category: SkillCategory) => {\r\n                const categorySkillIds = (category.skills || []).map(skill => skill._id!).filter(Boolean)\r\n                const currentSkillIds = formData.skillIds || []\r\n                \r\n                const selectedCount = categorySkillIds.filter(id => currentSkillIds.includes(id)).length\r\n                const allSelected = categorySkillIds.length > 0 && selectedCount === categorySkillIds.length\r\n                const someSelected = selectedCount > 0 && selectedCount < categorySkillIds.length\r\n                \r\n                return (\r\n                  <div key={category._id} className=\"mb-4 last:mb-0\">\r\n                    {/* 카테고리 헤더 (전체 선택/해제) */}\r\n                    <div \r\n                      className=\"flex items-center gap-2 mb-2 pb-2 border-b border-gray-300 dark:border-gray-600 cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700 p-2 rounded\"\r\n                      onClick={() => handleSkillCategoryToggle(category)}\r\n                    >\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={allSelected}\r\n                        ref={el => {\r\n                          if (el) {\r\n                            el.indeterminate = someSelected\r\n                          }\r\n                        }}\r\n                        onChange={() => handleSkillCategoryToggle(category)}\r\n                        className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\r\n                        onClick={(e) => e.stopPropagation()}\r\n                      />\r\n                      <label \r\n                        className=\"font-semibold text-gray-900 dark:text-white flex-1 cursor-pointer\"\r\n                        style={{ color: category.color || '#3B82F6' }}\r\n                      >\r\n                        {category.title}\r\n                        {selectedCount > 0 && (\r\n                          <span className=\"ml-2 text-xs font-normal text-gray-500 dark:text-gray-400\">\r\n                            ({selectedCount}/{categorySkillIds.length})\r\n                          </span>\r\n                        )}\r\n                      </label>\r\n                    </div>\r\n                    \r\n                    {/* 스킬 목록 */}\r\n                    <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2 pl-6\">\r\n                      {(category.skills || []).map((skill: Skill) => {\r\n                        const currentSkillIds = formData.skillIds || []\r\n                        const isSelected = currentSkillIds.includes(skill._id!)\r\n                        \r\n                        return (\r\n                          <label\r\n                            key={skill._id}\r\n                            className={`flex items-center gap-2 p-2 rounded cursor-pointer transition-colors ${\r\n                              isSelected \r\n                                ? 'bg-blue-50 dark:bg-blue-900/20 border border-blue-300 dark:border-blue-700' \r\n                                : 'hover:bg-gray-100 dark:hover:bg-gray-700 border border-transparent'\r\n                            }`}\r\n                          >\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              checked={isSelected}\r\n                              onChange={() => handleSkillToggle(skill._id!)}\r\n                              className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\r\n                            />\r\n                            <span className={`text-sm ${isSelected ? 'font-semibold text-blue-700 dark:text-blue-300' : 'text-gray-700 dark:text-gray-300'}`}>\r\n                              {skill.name}\r\n                            </span>\r\n                          </label>\r\n                        )\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          )}\r\n          \r\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\r\n            💡 이 서적에서 주요하게 다루는 스킬을 선택하세요. 개별 학습 내용에서도 추가로 스킬을 연결할 수 있습니다.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex gap-3 pt-4\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSaving || !isFormValid}\r\n          className={`flex-1 flex items-center justify-center gap-2 bg-primary-600 hover:bg-primary-700 text-white font-medium py-2 rounded-lg transition-colors ${\r\n            isSaving || !isFormValid ? 'opacity-50 cursor-not-allowed' : ''\r\n          }`}\r\n        >\r\n          {isSaving ? (\r\n            <>\r\n              <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n              저장 중...\r\n            </>\r\n          ) : (\r\n            <>\r\n              <FaSave /> 저장\r\n            </>\r\n          )}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={onCancel}\r\n          className=\"flex-1 bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-900 dark:text-white font-medium py-2 rounded-lg transition-colors\"\r\n        >\r\n          취소\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default BookForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport { FaSave, FaTimes } from 'react-icons/fa'\r\nimport { Chapter } from '../../types'\r\n\r\ninterface ChapterFormProps {\r\n  chapter?: Chapter | null\r\n  onSave: (data: { title: string; order: number }) => Promise<void>\r\n  onCancel: () => void\r\n  maxOrder?: number\r\n}\r\n\r\nconst ChapterForm: React.FC<ChapterFormProps> = ({\r\n  chapter,\r\n  onSave,\r\n  onCancel,\r\n  maxOrder = 0\r\n}) => {\r\n  const [title, setTitle] = useState('')\r\n  const [order, setOrder] = useState(0)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (chapter) {\r\n      setTitle(chapter.title)\r\n      setOrder(chapter.order)\r\n    } else {\r\n      setTitle('')\r\n      setOrder(maxOrder)\r\n    }\r\n  }, [chapter, maxOrder])\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!title.trim()) {\r\n      alert('목차 제목을 입력해주세요.')\r\n      return\r\n    }\r\n\r\n    try {\r\n      setIsSaving(true)\r\n      await onSave({ title: title.trim(), order })\r\n    } catch (error) {\r\n      console.error('목차 저장 실패:', error)\r\n    } finally {\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\">\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n          {chapter ? '목차 수정' : '목차 추가'}\r\n        </h3>\r\n        <button\r\n          onClick={onCancel}\r\n          className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\r\n        >\r\n          <FaTimes className=\"text-gray-500 dark:text-gray-400\" />\r\n        </button>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <div>\r\n          <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            목차 제목\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            placeholder=\"목차 제목을 입력하세요\"\r\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"order\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            순서\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"order\"\r\n            value={order}\r\n            onChange={(e) => setOrder(parseInt(e.target.value) || 0)}\r\n            min=\"0\"\r\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex gap-3 pt-4\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isSaving || !title.trim()}\r\n            className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors flex items-center justify-center gap-2\"\r\n          >\r\n            <FaSave />\r\n            {isSaving ? '저장 중...' : (chapter ? '수정' : '추가')}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onCancel}\r\n            className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\r\n          >\r\n            취소\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChapterForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport { FaSave, FaTimes } from 'react-icons/fa'\r\nimport ReactQuill from 'react-quill'\r\nimport 'react-quill/dist/quill.snow.css'\r\nimport { Learning } from '../../types'\r\n\r\n// 마크다운 문법 변환 함수 (향후 사용을 위해 유지)\r\n// const convertMarkdownToHtml = (text: string): string => {\r\n//   return text\r\n//     .replace(/^### (.*$)/gim, '<h3>$1</h3>')\r\n//     .replace(/^## (.*$)/gim, '<h2>$1</h2>')\r\n//     .replace(/^# (.*$)/gim, '<h1>$1</h1>')\r\n//     .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n//     .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n//     .replace(/```([\\s\\S]*?)```/g, '<pre><code>$1</code></pre>')\r\n//     .replace(/`([^`]+)`/g, '<code>$1</code>')\r\n//     .replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<a href=\"$2\">$1</a>')\r\n//     .replace(/\\n/g, '<br>')\r\n// }\r\n\r\ninterface LearningFormProps {\r\n  learning?: Learning | null\r\n  onSave: (data: { topic: string; content: string }) => Promise<void>\r\n  onCancel: () => void\r\n}\r\n\r\nconst LearningForm: React.FC<LearningFormProps> = ({\r\n  learning,\r\n  onSave,\r\n  onCancel\r\n}) => {\r\n  const [topic, setTopic] = useState('')\r\n  const [content, setContent] = useState('')\r\n  const [isSaving, setIsSaving] = useState(false)\r\n\r\n  // Quill 에디터 설정\r\n  const quillModules = {\r\n    toolbar: [\r\n      [{ 'header': [1, 2, 3, false] }],\r\n      ['bold', 'italic', 'underline', 'strike'],\r\n      [{ 'list': 'ordered'}, { 'list': 'bullet' }],\r\n      [{ 'indent': '-1'}, { 'indent': '+1' }],\r\n      ['blockquote', 'code-block'],\r\n      [{ 'color': [] }, { 'background': [] }],\r\n      ['link', 'image'],\r\n      ['clean']\r\n    ]\r\n  }\r\n\r\n  const quillFormats = [\r\n    'header', 'bold', 'italic', 'underline', 'strike',\r\n    'list', 'bullet', 'indent',\r\n    'blockquote', 'code-block',\r\n    'color', 'background',\r\n    'link', 'image'\r\n  ]\r\n\r\n  useEffect(() => {\r\n    if (learning) {\r\n      setTopic(learning.topic)\r\n      setContent(learning.content)\r\n    } else {\r\n      setTopic('')\r\n      setContent('')\r\n    }\r\n  }, [learning])\r\n\r\n  // HTML 태그를 제거하고 순수 텍스트만 추출하는 함수\r\n  const stripHtml = (html: string) => {\r\n    const tmp = document.createElement('div')\r\n    tmp.innerHTML = html\r\n    return tmp.textContent || tmp.innerText || ''\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!topic.trim()) {\r\n      alert('학습 주제를 입력해주세요.')\r\n      return\r\n    }\r\n\r\n    // HTML 태그를 제거한 순수 텍스트로 검증\r\n    const plainTextContent = stripHtml(content).trim()\r\n    if (!plainTextContent) {\r\n      alert('학습 내용을 입력해주세요.')\r\n      return\r\n    }\r\n\r\n    try {\r\n      setIsSaving(true)\r\n      await onSave({ topic: topic.trim(), content: content.trim() })\r\n    } catch (error) {\r\n      console.error('학습 내용 저장 실패:', error)\r\n    } finally {\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\">\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n          {learning ? '학습 내용 수정' : '학습 내용 추가'}\r\n        </h3>\r\n        <button\r\n          onClick={onCancel}\r\n          className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\r\n        >\r\n          <FaTimes className=\"text-gray-500 dark:text-gray-400\" />\r\n        </button>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <div>\r\n          <label htmlFor=\"topic\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            학습 주제\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"topic\"\r\n            value={topic}\r\n            onChange={(e) => setTopic(e.target.value)}\r\n            placeholder=\"학습 주제를 입력하세요\"\r\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"content\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            학습 내용\r\n            <span className=\"text-xs text-gray-500 ml-2\">\r\n              (마크다운 문법 지원: **굵게**, *기울임*, # 제목, - 목록)\r\n            </span>\r\n          </label>\r\n          <div className=\"rich-text-editor-container\">\r\n            <ReactQuill\r\n              theme=\"snow\"\r\n              value={content}\r\n              onChange={(value) => {\r\n                console.log('ReactQuill onChange:', value)\r\n                setContent(value)\r\n              }}\r\n              placeholder=\"학습 내용을 입력하세요. 마크다운 문법을 사용할 수 있습니다.\"\r\n              modules={quillModules}\r\n              formats={quillFormats}\r\n              className=\"rich-text-editor\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex gap-3 pt-4\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isSaving || !topic.trim() || !stripHtml(content).trim()}\r\n            className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors flex items-center justify-center gap-2\"\r\n          >\r\n            <FaSave />\r\n            {isSaving ? '저장 중...' : (learning ? '수정' : '추가')}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onCancel}\r\n            className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\r\n          >\r\n            취소\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LearningForm\r\n","import React, { useState, useMemo } from 'react'\r\nimport { FaSave, FaStar, FaTimes } from 'react-icons/fa'\r\nimport { VideoLearning, VideoLearningFormData, Skill, SkillCategory } from '../../types'\r\nimport { extractYouTubeId, getYouTubeThumbnail } from '../../utils/videoUtils'\r\nimport { useSkills } from '../../hooks/useSkills'\r\nimport { useCategories } from '../../hooks/useCategories'\r\n\r\ninterface FormProps {\r\n  data?: VideoLearning\r\n  onSave: (data: VideoLearningFormData) => void\r\n  onCancel: () => void\r\n  isSaving?: boolean\r\n  availableCategories?: string[]\r\n}\r\n\r\nconst VideoLearningForm: React.FC<FormProps> = ({ \r\n  data, \r\n  onSave, \r\n  onCancel, \r\n  isSaving = false, \r\n  availableCategories = ['PLC', '데이터분석', '로봇공학', 'IoT', '기타'] \r\n}) => {\r\n  // 🌟 스킬 데이터 가져오기\r\n  const { skillCategories, loading: skillsLoading } = useSkills()\r\n  \r\n  // 🌟 카테고리 데이터 가져오기\r\n  const { data: categories = [], isLoading: categoriesLoading } = useCategories()\r\n\r\n  // watchDate 초기값 수정\r\n  const initialWatchDate = data?.watchDate && !isNaN(new Date(data.watchDate).getTime())\r\n    ? new Date(data.watchDate).toISOString().split('T')[0]\r\n    : new Date().toISOString().split('T')[0]\r\n\r\n  // 🌟 폼 상태 관리 (내부에서는 videoUrl로 관리, 저장 시 videoId로 변환)\r\n  const [videoUrlInput, setVideoUrlInput] = useState<string>(() => {\r\n    // videoId가 있으면 URL로 변환, videoUrl이 있으면 그대로 사용 (호환성)\r\n    if (data?.videoId) return `https://www.youtube.com/watch?v=${data.videoId}`\r\n    if ((data as any)?.videoUrl) return (data as any).videoUrl\r\n    return ''\r\n  })\r\n\r\n  // 🌟 skillIds 초기값 처리 (populate된 객체 배열에서 _id만 추출)\r\n  const initialSkillIds = data?.skillIds \r\n    ? (data.skillIds as any[]).map((skillIdOrObj: any) => \r\n        typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj._id\r\n      ).filter(Boolean) as string[]\r\n    : []\r\n\r\n  // 🌟 categoryIds 초기값 처리\r\n  const initialCategoryIds = data?.categoryIds \r\n    ? (data.categoryIds as any[]).map((catIdOrObj: any) => \r\n        typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj._id\r\n      ).filter(Boolean) as string[]\r\n    : []\r\n\r\n  console.log('🎬 VideoLearningForm 초기화:', {\r\n    hasData: !!data,\r\n    rawSkillIds: data?.skillIds,\r\n    extractedSkillIds: initialSkillIds,\r\n    rawCategoryIds: data?.categoryIds,\r\n    extractedCategoryIds: initialCategoryIds,\r\n  })\r\n\r\n  const [formData, setFormData] = useState<Omit<VideoLearningFormData, 'videoId'>>(\r\n    data\r\n      ? { \r\n          title: data.title,\r\n          category: data.category,\r\n          categoryIds: initialCategoryIds,\r\n          watchDate: initialWatchDate as string,\r\n          rating: data.rating || 3,\r\n          purpose: data.purpose || '',\r\n          keyTakeaways: data.keyTakeaways || '',\r\n          application: data.application || '',\r\n          skillIds: initialSkillIds,\r\n          order: data.order || 0,\r\n        } \r\n      : {\r\n          title: '',\r\n          category: availableCategories[0] || 'PLC',\r\n          categoryIds: [],\r\n          watchDate: initialWatchDate as string,\r\n          rating: 3,\r\n          purpose: '',\r\n          keyTakeaways: '',\r\n          application: '',\r\n          skillIds: [],\r\n          order: 0,\r\n        }\r\n  )\r\n\r\n  // 🌟 유튜브 영상 ID 추출 (실시간) + 디버깅 로그\r\n  const videoId = useMemo(() => {\r\n    const id = extractYouTubeId(videoUrlInput)\r\n    console.log('🎬 VideoForm: URL 파싱 결과 -', { inputUrl: videoUrlInput, extractedId: id })\r\n    return id\r\n  }, [videoUrlInput])\r\n  \r\n  const thumbnailUrl = useMemo(() => videoId ? getYouTubeThumbnail(videoId) : null, [videoId])\r\n  const isValidUrl = useMemo(() => videoId !== null, [videoId])\r\n\r\n\r\n  // 🌟 카테고리 선택/해제 핸들러 (체크박스용)\r\n  const handleCategoryToggle = (categoryId: string) => {\r\n    const currentCategoryIds = formData.categoryIds || []\r\n    const isSelected = currentCategoryIds.includes(categoryId)\r\n    \r\n    const newCategoryIds = isSelected\r\n      ? currentCategoryIds.filter((id: string) => id !== categoryId)\r\n      : [...currentCategoryIds, categoryId]\r\n    \r\n    setFormData({ \r\n      ...formData, \r\n      categoryIds: newCategoryIds \r\n    })\r\n  }\r\n\r\n  // 🌟 스킬 선택/해제 핸들러 (체크박스용)\r\n  const handleSkillToggle = (skillId: string) => {\r\n    const currentSkillIds = formData.skillIds || []\r\n    const isSelected = currentSkillIds.includes(skillId)\r\n    \r\n    const newSkillIds = isSelected\r\n      ? currentSkillIds.filter((id: string) => id !== skillId)\r\n      : [...currentSkillIds, skillId]\r\n    \r\n    setFormData({ \r\n      ...formData, \r\n      skillIds: newSkillIds \r\n    })\r\n  }\r\n  \r\n  // 🌟 스킬 카테고리 전체 선택/해제 핸들러\r\n  const handleSkillCategoryToggle = (category: SkillCategory) => {\r\n    const categorySkillIds = (category.skills || []).map((skill: Skill) => skill._id!).filter(Boolean)\r\n    const currentSkillIds = formData.skillIds || []\r\n    \r\n    // 카테고리의 모든 스킬이 선택되어 있는지 확인\r\n    const allSelected = categorySkillIds.every((id: string) => currentSkillIds.includes(id))\r\n    \r\n    let newSkillIds: string[]\r\n    if (allSelected) {\r\n      // 모두 선택되어 있으면 전체 해제\r\n      newSkillIds = currentSkillIds.filter((id: string) => !categorySkillIds.includes(id))\r\n    } else {\r\n      // 일부만 선택되어 있거나 없으면 전체 선택\r\n      const uniqueIds = new Set([...currentSkillIds, ...categorySkillIds])\r\n      newSkillIds = Array.from(uniqueIds)\r\n    }\r\n    \r\n    setFormData({ \r\n      ...formData, \r\n      skillIds: newSkillIds \r\n    })\r\n  }\r\n\r\n  const handleFormSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!formData.title.trim() || !videoUrlInput.trim()) {\r\n      alert('필수 필드(제목, 영상 URL)를 모두 입력해주세요.')\r\n      return\r\n    }\r\n\r\n    if (!isValidUrl || !videoId) {\r\n      alert('❌ 올바른 유튜브 URL을 입력해주세요.')\r\n      return\r\n    }\r\n\r\n    console.log('📹 영상 학습 저장 시작:', formData)\r\n    console.log('🎬 추출된 영상 ID:', videoId)\r\n    console.log('🔗 선택된 스킬 IDs:', formData.skillIds)\r\n    \r\n    const { title, category, watchDate, rating, purpose, keyTakeaways, application, skillIds, order } = formData\r\n    \r\n    // 🌟 videoId로 변환하여 저장\r\n    onSave({ \r\n      title, \r\n      videoId: videoId!,  // 추출된 영상 ID\r\n      category, \r\n      watchDate, \r\n      ...(rating !== undefined && { rating }),\r\n      ...(purpose && { purpose }),\r\n      ...(keyTakeaways && { keyTakeaways }),\r\n      ...(application && { application }),\r\n      skillIds: skillIds || [],\r\n      order: order || 0,\r\n    })\r\n  }\r\n\r\n  // 폼 유효성 검사\r\n  const isFormValid = formData.title.trim() && videoUrlInput.trim() && isValidUrl\r\n\r\n  // 🌟 별점 렌더링 (클릭 가능)\r\n  const renderRatingStars = () => {\r\n    return Array.from({ length: 5 }, (_, i) => {\r\n      const starValue = i + 1\r\n      return (\r\n        <button\r\n          key={i}\r\n          type=\"button\"\r\n          onClick={() => setFormData({ ...formData, rating: starValue })}\r\n          className={`text-3xl transition-colors ${\r\n            starValue <= (formData.rating || 0)\r\n              ? 'text-yellow-500 hover:text-yellow-600'\r\n              : 'text-gray-300 dark:text-gray-600 hover:text-gray-400'\r\n          }`}\r\n        >\r\n          <FaStar />\r\n        </button>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit} className=\"space-y-6\">\r\n      {/* 기본 정보 */}\r\n      <div className=\"grid md:grid-cols-2 gap-6\">\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            제목 <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.title}\r\n            onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"영상 제목을 입력하세요\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            영상 URL <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={videoUrlInput}\r\n            onChange={(e) => setVideoUrlInput(e.target.value)}\r\n            className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white ${\r\n              videoUrlInput && !isValidUrl\r\n                ? 'border-red-500'\r\n                : 'border-gray-300 dark:border-gray-600'\r\n            }`}\r\n            placeholder=\"https://www.youtube.com/watch?v=...\"\r\n            required\r\n          />\r\n          {videoUrlInput && !isValidUrl && (\r\n            <p className=\"text-red-500 text-sm mt-1\">올바른 유튜브 URL을 입력해주세요</p>\r\n          )}\r\n          {videoId && (\r\n            <p className=\"text-green-600 text-sm mt-1\">✅ 영상 ID: <code className=\"bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded\">{videoId}</code></p>\r\n          )}\r\n          {/* 🌟 썸네일 미리보기 */}\r\n          {thumbnailUrl && isValidUrl && (\r\n            <div className=\"mt-3\">\r\n              <img \r\n                src={thumbnailUrl} \r\n                alt=\"영상 썸네일\" \r\n                className=\"w-full max-w-md rounded-lg shadow-md\"\r\n                onError={(e) => {\r\n                  // maxresdefault가 없으면 hqdefault로 폴백\r\n                  const target = e.target as HTMLImageElement\r\n                  if (target.src.includes('maxresdefault')) {\r\n                    target.src = getYouTubeThumbnail(videoId!, 'hqdefault')\r\n                  }\r\n                }}\r\n              />\r\n              <p className=\"text-sm text-green-600 dark:text-green-400 mt-2\">✓ 유효한 유튜브 URL</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n            카테고리 선택 📂 (다중 선택 가능)\r\n          </label>\r\n\r\n          {/* 선택된 카테고리 태그 표시 */}\r\n          {formData.categoryIds && formData.categoryIds.length > 0 && (\r\n            <div className=\"flex flex-wrap gap-2 mb-3 p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\r\n              {formData.categoryIds.map((catId) => {\r\n                const category = categories.find(c => c._id === catId)\r\n                return category ? (\r\n                  <span\r\n                    key={catId}\r\n                    className=\"inline-flex items-center gap-1 px-3 py-1 bg-blue-600 text-white rounded-full text-sm\"\r\n                  >\r\n                    {category.name}\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => handleCategoryToggle(catId)}\r\n                      className=\"hover:bg-blue-700 rounded-full p-0.5\"\r\n                    >\r\n                      <FaTimes className=\"text-xs\" />\r\n                    </button>\r\n                  </span>\r\n                ) : null\r\n              })}\r\n            </div>\r\n          )}\r\n\r\n          {/* 카테고리 체크박스 목록 */}\r\n          {categoriesLoading ? (\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">카테고리 로딩 중...</p>\r\n          ) : categories.length > 0 ? (\r\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2\">\r\n              {categories.map((category) => {\r\n                const isSelected = (formData.categoryIds || []).includes(category._id)\r\n                return (\r\n                  <label\r\n                    key={category._id}\r\n                    className={`flex items-center gap-2 p-3 border-2 rounded-lg cursor-pointer transition-all ${\r\n                      isSelected\r\n                        ? 'border-primary-600 bg-primary-50 dark:bg-primary-900/20'\r\n                        : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600'\r\n                    }`}\r\n                  >\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={isSelected}\r\n                      onChange={() => handleCategoryToggle(category._id)}\r\n                      className=\"w-4 h-4\"\r\n                    />\r\n                    <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                      {category.name}\r\n                    </span>\r\n                  </label>\r\n                )\r\n              })}\r\n            </div>\r\n          ) : (\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              등록된 카테고리가 없습니다. 관리자 메뉴의 \"카테고리 관리\"에서 추가하세요.\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            시청 날짜\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            value={formData.watchDate}\r\n            onChange={(e) => setFormData({ ...formData, watchDate: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            이해도 평점\r\n          </label>\r\n          <div className=\"flex items-center gap-2\">\r\n            {renderRatingStars()}\r\n            <span className=\"ml-3 text-gray-600 dark:text-gray-400\">{formData.rating}/5</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 상세 정보 */}\r\n      <div className=\"space-y-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            시청 목적\r\n          </label>\r\n          <textarea\r\n            value={formData.purpose}\r\n            onChange={(e) => setFormData({ ...formData, purpose: e.target.value })}\r\n            className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-vertical\"\r\n            rows={3}\r\n            placeholder=\"이 영상을 왜 시청했는지, 어떤 문제를 해결하기 위해서인지 작성하세요...\"\r\n          />\r\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">최대 1000자</p>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            핵심 배움 (마크다운 지원)\r\n          </label>\r\n          <textarea\r\n            value={formData.keyTakeaways}\r\n            onChange={(e) => setFormData({ ...formData, keyTakeaways: e.target.value })}\r\n            className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-vertical font-mono text-sm\"\r\n            rows={8}\r\n            placeholder=\"영상에서 얻은 핵심 지식 3-5가지를 정리하세요...&#10;&#10;예시:&#10;- [2:30] React Query의 staleTime과 cacheTime 차이&#10;- [5:15] Optimistic Updates 구현 방법&#10;- [8:45] Query Invalidation 전략\"\r\n          />\r\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n            최대 5000자 | 타임스탬프 형식: [MM:SS] 또는 [H:MM:SS]\r\n          </p>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            적용 계획 (마크다운 지원)\r\n          </label>\r\n          <textarea\r\n            value={formData.application}\r\n            onChange={(e) => setFormData({ ...formData, application: e.target.value })}\r\n            className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-vertical font-mono text-sm\"\r\n            rows={5}\r\n            placeholder=\"이 지식을 어떻게 활용할 계획인지, 또는 이미 적용한 경험을 작성하세요...\"\r\n          />\r\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">최대 3000자</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 🌟 스킬 연결 (체크박스 UI) */}\r\n      <div className=\"md:col-span-2\">\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          관련 기술 연동 🔗\r\n        </label>\r\n        {skillsLoading ? (\r\n          <div className=\"text-sm text-gray-500 dark:text-gray-400 py-2\">\r\n            스킬 목록을 불러오는 중입니다...\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {/* 선택된 스킬 개수 표시 */}\r\n            {(formData.skillIds || []).length > 0 && (\r\n              <div className=\"mb-3 px-3 py-2 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\r\n                <span className=\"text-sm text-blue-700 dark:text-blue-300 font-medium\">\r\n                  ✓ {(formData.skillIds || []).length}개 선택됨\r\n                </span>\r\n              </div>\r\n            )}\r\n            \r\n            {/* 카테고리별 스킬 체크박스 */}\r\n            <div className=\"border border-gray-300 dark:border-gray-600 rounded-lg p-4 max-h-[400px] overflow-y-auto bg-gray-50 dark:bg-gray-800/50\">\r\n              {skillCategories.map((category) => {\r\n                const categorySkills = category.skills || []\r\n                const categorySkillIds = categorySkills.map((s: Skill) => s._id!).filter(Boolean)\r\n                const selectedInCategory = categorySkillIds.filter((id: string) => \r\n                  (formData.skillIds || []).includes(id)\r\n                )\r\n                const allSelected = categorySkillIds.length > 0 && selectedInCategory.length === categorySkillIds.length\r\n                const someSelected = selectedInCategory.length > 0 && !allSelected\r\n\r\n                return (\r\n                  <div key={category._id} className=\"mb-4 last:mb-0\">\r\n                    {/* 카테고리 헤더 */}\r\n                    <div \r\n                      onClick={() => handleSkillCategoryToggle(category)}\r\n                      className=\"flex items-center gap-3 p-3 bg-white dark:bg-gray-700 rounded-lg cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors mb-2\"\r\n                    >\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={allSelected}\r\n                        ref={(input) => {\r\n                          if (input) input.indeterminate = someSelected\r\n                        }}\r\n                        onChange={() => {}}\r\n                        className=\"w-5 h-5 text-primary-600 rounded focus:ring-2 focus:ring-primary-500\"\r\n                      />\r\n                      <label \r\n                        className=\"font-bold text-base cursor-pointer flex-1\"\r\n                        style={{ color: category.color || '#3B82F6' }}\r\n                      >\r\n                        {category.title} ({selectedInCategory.length}/{categorySkills.length})\r\n                      </label>\r\n                    </div>\r\n\r\n                    {/* 개별 스킬 체크박스 */}\r\n                    <div className=\"ml-8 space-y-2\">\r\n                      {categorySkills.map((skill: Skill) => {\r\n                        const isSelected = (formData.skillIds || []).includes(skill._id!)\r\n                        return (\r\n                          <div\r\n                            key={skill._id}\r\n                            onClick={() => handleSkillToggle(skill._id!)}\r\n                            className={`flex items-center gap-3 p-2 rounded-lg cursor-pointer transition-all ${\r\n                              isSelected\r\n                                ? 'bg-blue-100 dark:bg-blue-900/30 font-medium'\r\n                                : 'hover:bg-gray-100 dark:hover:bg-gray-600'\r\n                            }`}\r\n                          >\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              checked={isSelected}\r\n                              onChange={() => {}}\r\n                              className=\"w-4 h-4 text-primary-600 rounded focus:ring-2 focus:ring-primary-500\"\r\n                            />\r\n                            <label \r\n                              className=\"cursor-pointer flex-1 text-sm\"\r\n                              style={{ color: isSelected ? skill.color : undefined }}\r\n                            >\r\n                              {skill.name}\r\n                            </label>\r\n                          </div>\r\n                        )\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {/* 순서 */}\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          순서 (낮을수록 먼저 표시)\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          value={formData.order}\r\n          onChange={(e) => setFormData({ ...formData, order: parseInt(e.target.value) || 0 })}\r\n          className=\"w-32 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          min=\"0\"\r\n        />\r\n      </div>\r\n\r\n      {/* 버튼 */}\r\n      <div className=\"flex gap-4 pt-4\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSaving || !isFormValid || !isValidUrl}\r\n          className=\"flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors font-medium\"\r\n        >\r\n          <FaSave /> {isSaving ? '저장 중...' : '저장'}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={onCancel}\r\n          className=\"px-6 py-3 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors font-medium\"\r\n        >\r\n          취소\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default VideoLearningForm\r\n\r\n","import React, { useState, useMemo } from 'react'\r\nimport { FaSave, FaStar, FaTimes } from 'react-icons/fa'\r\nimport { VideoPlaylist, VideoPlaylistFormData } from '../../types'\r\nimport { formatCategoryDisplayName } from '../../utils/categoryUtils'\r\nimport { extractYouTubePlaylistId, getYouTubePlaylistThumbnail } from '../../utils/videoUtils'\r\nimport { useSkills } from '../../hooks/useSkills'\r\nimport { useCategories } from '../../hooks/useCategories'\r\n\r\ninterface FormProps {\r\n  data?: VideoPlaylist\r\n  onSave: (data: VideoPlaylistFormData) => void\r\n  onCancel: () => void\r\n  isSaving?: boolean\r\n  availableCategories?: string[]\r\n}\r\n\r\nconst VideoPlaylistForm: React.FC<FormProps> = ({ \r\n  data, \r\n  onSave, \r\n  onCancel, \r\n  isSaving = false, \r\n  availableCategories = ['PLC', '데이터분석', '로봇공학', 'IoT', '기타'] \r\n}) => {\r\n  const { skillCategories, loading: skillsLoading } = useSkills()\r\n  \r\n  // 🌟 카테고리 데이터 가져오기\r\n  const { data: categories = [], isLoading: categoriesLoading } = useCategories()\r\n\r\n  const initialWatchDate = data?.watchDate && !isNaN(new Date(data.watchDate).getTime())\r\n    ? new Date(data.watchDate).toISOString().split('T')[0]\r\n    : new Date().toISOString().split('T')[0]\r\n\r\n  const [playlistUrlInput, setPlaylistUrlInput] = useState<string>(() => {\r\n    if (data?.playlistId) return `https://www.youtube.com/playlist?list=${data.playlistId}`\r\n    return ''\r\n  })\r\n\r\n  // 🌟 categoryIds 초기값 처리\r\n  const initialCategoryIds = data?.categoryIds \r\n    ? (data.categoryIds as any[]).map((catIdOrObj: any) => \r\n        typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj._id\r\n      ).filter(Boolean) as string[]\r\n    : []\r\n\r\n  const [formData, setFormData] = useState<Omit<VideoPlaylistFormData, 'playlistId'>>(\r\n    data\r\n      ? { \r\n          title: data.title,\r\n          category: data.category,\r\n          categoryIds: initialCategoryIds,\r\n          watchDate: initialWatchDate as string,\r\n          rating: data.rating || 3,\r\n          purpose: data.purpose || '',\r\n          application: data.application || '',\r\n          skillIds: (data.skillIds || []).map((skillIdOrObj: any) => \r\n            typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj._id\r\n          ).filter(Boolean) as string[],\r\n          order: data.order || 0,\r\n        } \r\n      : {\r\n          title: '',\r\n          category: availableCategories[0] || 'PLC',\r\n          categoryIds: [],\r\n          watchDate: initialWatchDate as string,\r\n          rating: 3,\r\n          purpose: '',\r\n          application: '',\r\n          skillIds: [],\r\n          order: 0,\r\n        }\r\n  )\r\n\r\n  const playlistId = useMemo(() => {\r\n    const id = extractYouTubePlaylistId(playlistUrlInput)\r\n    console.log('🎬 PlaylistForm: URL 파싱 결과 -', { inputUrl: playlistUrlInput, extractedId: id })\r\n    return id\r\n  }, [playlistUrlInput])\r\n  \r\n  const thumbnailUrl = useMemo(() => playlistId ? getYouTubePlaylistThumbnail(playlistId) : null, [playlistId])\r\n  const isValidUrl = useMemo(() => playlistId !== null, [playlistId])\r\n\r\n  // 🌟 카테고리 선택/해제 핸들러 (체크박스용)\r\n  const handleCategoryToggle = (categoryId: string) => {\r\n    const currentCategoryIds = formData.categoryIds || []\r\n    const isSelected = currentCategoryIds.includes(categoryId)\r\n    \r\n    const newCategoryIds = isSelected\r\n      ? currentCategoryIds.filter((id: string) => id !== categoryId)\r\n      : [...currentCategoryIds, categoryId]\r\n    \r\n    setFormData({ \r\n      ...formData, \r\n      categoryIds: newCategoryIds \r\n    })\r\n  }\r\n\r\n  const handleSkillToggle = (skillId: string) => {\r\n    const currentSkillIds = formData.skillIds || []\r\n    const isSelected = currentSkillIds.includes(skillId)\r\n    \r\n    const newSkillIds = isSelected\r\n      ? currentSkillIds.filter((id: string) => id !== skillId)\r\n      : [...currentSkillIds, skillId]\r\n    \r\n    setFormData({ \r\n      ...formData, \r\n      skillIds: newSkillIds \r\n    })\r\n  }\r\n\r\n  const handleFormSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!formData.title.trim() || !playlistUrlInput.trim()) {\r\n      alert('필수 필드(제목, 재생 목록 URL)를 모두 입력해주세요.')\r\n      return\r\n    }\r\n\r\n    if (!isValidUrl || !playlistId) {\r\n      alert('❌ 올바른 유튜브 재생 목록 URL을 입력해주세요.')\r\n      return\r\n    }\r\n    \r\n    const { title, category, categoryIds, watchDate, rating, purpose, application, skillIds, order } = formData\r\n    \r\n    const saveData = { \r\n      title, \r\n      playlistId: playlistId!,\r\n      category, \r\n      categoryIds: categoryIds || [],  // 🌟 다중 카테고리 추가\r\n      watchDate, \r\n      ...(rating !== undefined && { rating }),\r\n      ...(purpose && { purpose }),\r\n      ...(application && { application }),\r\n      skillIds: skillIds || [],\r\n      order: order || 0,\r\n    }\r\n    \r\n    console.log('📝 VideoPlaylistForm: 저장 데이터 전송', saveData)\r\n    onSave(saveData)\r\n  }\r\n\r\n  const isFormValid = formData.title.trim() && playlistUrlInput.trim() && isValidUrl\r\n\r\n  const renderRatingStars = () => {\r\n    return Array.from({ length: 5 }, (_, i) => {\r\n      const starValue = i + 1\r\n      return (\r\n        <button\r\n          key={i}\r\n          type=\"button\"\r\n          onClick={() => setFormData({ ...formData, rating: starValue })}\r\n          className={`text-3xl transition-colors ${\r\n            starValue <= (formData.rating || 0)\r\n              ? 'text-yellow-500 hover:text-yellow-600'\r\n              : 'text-gray-300 dark:text-gray-600 hover:text-gray-400'\r\n          }`}\r\n        >\r\n          <FaStar />\r\n        </button>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit} className=\"space-y-6\">\r\n      <div className=\"grid md:grid-cols-2 gap-6\">\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            제목 <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.title}\r\n            onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"재생 목록 제목을 입력하세요\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            재생 목록 URL <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={playlistUrlInput}\r\n            onChange={(e) => setPlaylistUrlInput(e.target.value)}\r\n            className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white ${\r\n              playlistUrlInput && !isValidUrl\r\n                ? 'border-red-500'\r\n                : 'border-gray-300 dark:border-gray-600'\r\n            }`}\r\n            placeholder=\"https://www.youtube.com/playlist?list=...\"\r\n            required\r\n          />\r\n          {playlistUrlInput && !isValidUrl && (\r\n            <p className=\"text-red-500 text-sm mt-1\">올바른 유튜브 재생 목록 URL을 입력해주세요</p>\r\n          )}\r\n          {playlistId && (\r\n            <p className=\"text-green-600 text-sm mt-1\">✅ 재생 목록 ID: <code className=\"bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded\">{playlistId}</code></p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n            카테고리 선택 📂 (다중 선택 가능)\r\n          </label>\r\n\r\n          {/* 선택된 카테고리 태그 표시 */}\r\n          {formData.categoryIds && formData.categoryIds.length > 0 && (\r\n            <div className=\"flex flex-wrap gap-2 mb-3 p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\r\n              {formData.categoryIds.map((catId) => {\r\n                const category = categories.find(c => c._id === catId)\r\n                return category ? (\r\n                  <span\r\n                    key={catId}\r\n                    className=\"inline-flex items-center gap-1 px-3 py-1 bg-blue-600 text-white rounded-full text-sm\"\r\n                  >\r\n                    {category.name}\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => handleCategoryToggle(catId)}\r\n                      className=\"hover:bg-blue-700 rounded-full p-0.5\"\r\n                    >\r\n                      <FaTimes className=\"text-xs\" />\r\n                    </button>\r\n                  </span>\r\n                ) : null\r\n              })}\r\n            </div>\r\n          )}\r\n\r\n          {/* 카테고리 체크박스 목록 */}\r\n          {categoriesLoading ? (\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">카테고리 로딩 중...</p>\r\n          ) : categories.length > 0 ? (\r\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2\">\r\n              {categories.map((category) => {\r\n                const isSelected = (formData.categoryIds || []).includes(category._id)\r\n                return (\r\n                  <label\r\n                    key={category._id}\r\n                    className={`flex items-center gap-2 p-3 border-2 rounded-lg cursor-pointer transition-all ${\r\n                      isSelected\r\n                        ? 'border-primary-600 bg-primary-50 dark:bg-primary-900/20'\r\n                        : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600'\r\n                    }`}\r\n                  >\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={isSelected}\r\n                      onChange={() => handleCategoryToggle(category._id)}\r\n                      className=\"w-4 h-4\"\r\n                    />\r\n                    <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                      {category.name}\r\n                    </span>\r\n                  </label>\r\n                )\r\n              })}\r\n            </div>\r\n          ) : (\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              등록된 카테고리가 없습니다. 관리자 메뉴의 \"카테고리 관리\"에서 추가하세요.\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            시청 날짜\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            value={formData.watchDate}\r\n            onChange={(e) => setFormData({ ...formData, watchDate: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            평점\r\n          </label>\r\n          <div className=\"flex items-center gap-2\">\r\n            {renderRatingStars()}\r\n            <span className=\"ml-3 text-gray-600 dark:text-gray-400\">{formData.rating}/5</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"space-y-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            시청 목적\r\n          </label>\r\n          <textarea\r\n            value={formData.purpose}\r\n            onChange={(e) => setFormData({ ...formData, purpose: e.target.value })}\r\n            className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-vertical\"\r\n            rows={3}\r\n            placeholder=\"이 재생 목록을 왜 시청했는지 작성하세요...\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            통합 적용 계획 (마크다운 지원)\r\n          </label>\r\n          <textarea\r\n            value={formData.application}\r\n            onChange={(e) => setFormData({ ...formData, application: e.target.value })}\r\n            className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-vertical font-mono text-sm\"\r\n            rows={5}\r\n            placeholder=\"이 지식을 어떻게 활용할 계획인지 작성하세요...\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* 스킬 연결 (VideoLearningForm과 동일한 UI) */}\r\n      <div className=\"md:col-span-2\">\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          관련 기술 연동 🔗\r\n        </label>\r\n        {skillsLoading ? (\r\n          <div className=\"text-sm text-gray-500 dark:text-gray-400 py-2\">\r\n            스킬 목록을 불러오는 중입니다...\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {(formData.skillIds || []).length > 0 && (\r\n              <div className=\"mb-3 px-3 py-2 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\r\n                <span className=\"text-sm text-blue-700 dark:text-blue-300 font-medium\">\r\n                  ✓ {(formData.skillIds || []).length}개 선택됨\r\n                </span>\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"border border-gray-300 dark:border-gray-600 rounded-lg p-4 max-h-[300px] overflow-y-auto bg-gray-50 dark:bg-gray-800/50\">\r\n              {skillCategories.map((category) => (\r\n                <div key={category._id} className=\"mb-3 last:mb-0\">\r\n                  <label \r\n                    className=\"font-bold text-sm block mb-2\"\r\n                    style={{ color: category.color || '#3B82F6' }}\r\n                  >\r\n                    {category.title}\r\n                  </label>\r\n                  <div className=\"ml-4 space-y-1\">\r\n                    {(category.skills || []).map((skill) => {\r\n                      const isSelected = (formData.skillIds || []).includes(skill._id!)\r\n                      return (\r\n                        <div\r\n                          key={skill._id}\r\n                          onClick={() => handleSkillToggle(skill._id!)}\r\n                          className={`flex items-center gap-2 p-2 rounded cursor-pointer transition-all ${\r\n                            isSelected\r\n                              ? 'bg-blue-100 dark:bg-blue-900/30 font-medium'\r\n                              : 'hover:bg-gray-100 dark:hover:bg-gray-600'\r\n                          }`}\r\n                        >\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={isSelected}\r\n                            onChange={() => {}}\r\n                            className=\"w-4 h-4\"\r\n                          />\r\n                          <span className=\"text-sm\">{skill.name}</span>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"flex gap-4 pt-4\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSaving || !isFormValid || !isValidUrl}\r\n          className=\"flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors font-medium\"\r\n        >\r\n          <FaSave /> {isSaving ? '저장 중...' : '저장'}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={onCancel}\r\n          className=\"px-6 py-3 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors font-medium\"\r\n        >\r\n          취소\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default VideoPlaylistForm\r\n\r\n","import React, { useState, useMemo } from 'react'\r\nimport { FaSave } from 'react-icons/fa'\r\nimport { PlaylistVideo, PlaylistVideoFormData } from '../../types'\r\nimport { extractYouTubeId, getYouTubeThumbnail } from '../../utils/videoUtils'\r\n\r\ninterface FormProps {\r\n  playlistId: string\r\n  data?: PlaylistVideo\r\n  onSave: (data: PlaylistVideoFormData) => void\r\n  onCancel: () => void\r\n  isSaving?: boolean\r\n}\r\n\r\nconst PlaylistVideoForm: React.FC<FormProps> = ({ \r\n  playlistId,\r\n  data, \r\n  onSave, \r\n  onCancel, \r\n  isSaving = false \r\n}) => {\r\n  // 🌟 영상 URL 입력 (videoId 자동 추출)\r\n  const [videoUrlInput, setVideoUrlInput] = useState<string>(() => {\r\n    if (data?.videoId) return `https://www.youtube.com/watch?v=${data.videoId}`\r\n    return ''\r\n  })\r\n\r\n  const [formData, setFormData] = useState<Omit<PlaylistVideoFormData, 'playlistId' | 'videoId'>>(\r\n    data\r\n      ? { \r\n          title: data.title,\r\n          keyTakeaways: data.keyTakeaways || '',\r\n          order: data.order || 0,\r\n        } \r\n      : {\r\n          title: '',\r\n          keyTakeaways: '',\r\n          order: 0,\r\n        }\r\n  )\r\n\r\n  const videoId = useMemo(() => extractYouTubeId(videoUrlInput), [videoUrlInput])\r\n  const thumbnailUrl = useMemo(() => videoId ? getYouTubeThumbnail(videoId) : null, [videoId])\r\n  const isValidUrl = useMemo(() => videoId !== null, [videoId])\r\n\r\n  const handleFormSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!formData.title.trim() || !videoUrlInput.trim()) {\r\n      alert('필수 필드(제목, 영상 URL)를 모두 입력해주세요.')\r\n      return\r\n    }\r\n\r\n    if (!isValidUrl || !videoId) {\r\n      alert('❌ 올바른 유튜브 영상 URL을 입력해주세요.')\r\n      return\r\n    }\r\n    \r\n    onSave({ \r\n      playlistId,\r\n      videoId: videoId!,\r\n      title: formData.title,\r\n      keyTakeaways: formData.keyTakeaways || '',\r\n      order: formData.order || 0,\r\n    })\r\n  }\r\n\r\n  const isFormValid = formData.title.trim() && videoUrlInput.trim() && isValidUrl\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit} className=\"space-y-4\">\r\n      <div className=\"grid gap-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            영상 URL <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={videoUrlInput}\r\n            onChange={(e) => setVideoUrlInput(e.target.value)}\r\n            className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white ${\r\n              videoUrlInput && !isValidUrl\r\n                ? 'border-red-500'\r\n                : 'border-gray-300 dark:border-gray-600'\r\n            }`}\r\n            placeholder=\"https://www.youtube.com/watch?v=...\"\r\n            required\r\n          />\r\n          {videoUrlInput && !isValidUrl && (\r\n            <p className=\"text-red-500 text-sm mt-1\">올바른 유튜브 URL을 입력해주세요</p>\r\n          )}\r\n          {videoId && (\r\n            <p className=\"text-green-600 text-sm mt-1\">✅ 영상 ID: <code className=\"bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded\">{videoId}</code></p>\r\n          )}\r\n          {/* 🌟 썸네일 미리보기 */}\r\n          {thumbnailUrl && isValidUrl && (\r\n            <div className=\"mt-3\">\r\n              <img \r\n                src={thumbnailUrl} \r\n                alt=\"영상 썸네일\" \r\n                className=\"w-full max-w-xs rounded-lg shadow-md\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            영상 제목 <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.title}\r\n            onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"영상 제목을 입력하세요\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            핵심 배움 (마크다운 지원)\r\n          </label>\r\n          <textarea\r\n            value={formData.keyTakeaways}\r\n            onChange={(e) => setFormData({ ...formData, keyTakeaways: e.target.value })}\r\n            className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-vertical font-mono text-sm\"\r\n            rows={6}\r\n            placeholder=\"예시:&#10;- [2:30] React Query의 staleTime 이해&#10;- [5:15] 캐시 무효화 전략&#10;- [8:45] Optimistic Updates\"\r\n          />\r\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n            타임스탬프 형식: [MM:SS] 또는 [H:MM:SS]\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex gap-4 pt-4\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSaving || !isFormValid}\r\n          className=\"flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors font-medium\"\r\n        >\r\n          <FaSave /> {isSaving ? '저장 중...' : '저장'}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={onCancel}\r\n          className=\"px-6 py-3 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors font-medium\"\r\n        >\r\n          취소\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PlaylistVideoForm\r\n\r\n","import React, { useState } from 'react'\r\nimport { \r\n  FaSave, \r\n  FaPlus, \r\n  FaTrash, \r\n  FaBriefcase, \r\n  FaCoffee, \r\n  FaGraduationCap, \r\n  FaChartLine, \r\n  FaCode, \r\n  FaCog, \r\n  FaRobot,\r\n  FaCar,           // 🚗 자동차\r\n  FaShieldAlt,     // 🛡️ 군인\r\n  FaLaptopCode,    // 💻 프로그래밍\r\n  FaBars           // 🌟 드래그 핸들 아이콘\r\n} from 'react-icons/fa'\r\nimport { Experience, ExperienceFormData, ExperienceDetail, Skill, SkillCategory } from '../../types'\r\nimport RichTextEditor from '../RichTextEditor'\r\nimport { DndContext, closestCenter, DragEndEvent } from '@dnd-kit/core'\r\nimport { SortableContext, verticalListSortingStrategy, useSortable } from '@dnd-kit/sortable'\r\nimport { CSS } from '@dnd-kit/utilities'\r\nimport { useSkills } from '../../hooks/useSkills'\r\nimport LanguageTabs, { AdminLanguage } from '../common/LanguageTabs'\r\n\r\n// 🌟 아이콘 옵션 정의\r\nconst iconOptions = [\r\n  { key: 'FaBriefcase', icon: FaBriefcase, label: '💼 일반 업무' },\r\n  { key: 'FaCoffee', icon: FaCoffee, label: '☕ 서비스/카페' },\r\n  { key: 'FaGraduationCap', icon: FaGraduationCap, label: '🎓 교육/학습' },\r\n  { key: 'FaChartLine', icon: FaChartLine, label: '📈 성장/분석' },\r\n  { key: 'FaLaptopCode', icon: FaLaptopCode, label: '💻 프로그래밍' },\r\n  { key: 'FaCode', icon: FaCode, label: '⌨️ 개발/코딩' },\r\n  { key: 'FaCog', icon: FaCog, label: '⚙️ 기술/엔지니어링' },\r\n  { key: 'FaRobot', icon: FaRobot, label: '🤖 자동화/AI' },\r\n  { key: 'FaCar', icon: FaCar, label: '🚗 자동차/운전' },\r\n  { key: 'FaShieldAlt', icon: FaShieldAlt, label: '🛡️ 군대/보안' },\r\n]\r\n\r\n// 🌟 Sortable 카테고리 아이템 컴포넌트\r\ninterface SortableCategoryItemProps {\r\n  detail: ExperienceDetail\r\n  index: number\r\n  editingCategoryIndex: number | null\r\n  onEdit: (index: number) => void\r\n  onRemove: (index: number) => void\r\n}\r\n\r\nconst SortableCategoryItem: React.FC<SortableCategoryItemProps> = ({ \r\n  detail, \r\n  index, \r\n  editingCategoryIndex,\r\n  onEdit,\r\n  onRemove\r\n}) => {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition,\r\n    isDragging,\r\n  } = useSortable({ id: index })\r\n\r\n  const style = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition,\r\n    opacity: isDragging ? 0.5 : 1,\r\n    zIndex: isDragging ? 1000 : 'auto',\r\n  }\r\n\r\n  return (\r\n    <div \r\n      ref={setNodeRef} \r\n      style={style}\r\n      className=\"bg-white dark:bg-gray-800 p-4 rounded-lg border-2 border-gray-300 dark:border-gray-600 hover:border-blue-400 dark:hover:border-blue-600 transition-colors\"\r\n    >\r\n      <div className=\"flex items-center justify-between mb-2\">\r\n        <div className=\"flex items-center gap-2\">\r\n          {/* 🌟 드래그 핸들 */}\r\n          <div\r\n            {...attributes}\r\n            {...listeners}\r\n            className=\"cursor-grab active:cursor-grabbing text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 p-1\"\r\n            title=\"드래그하여 순서 변경\"\r\n          >\r\n            <FaBars />\r\n          </div>\r\n          <div className=\"w-2 h-2 rounded-full bg-blue-600\"></div>\r\n          <h5 className=\"font-bold text-gray-900 dark:text-white\">{detail.category}</h5>\r\n          <span className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n            ({detail.items.length}개 항목)\r\n          </span>\r\n        </div>\r\n        <div className=\"flex gap-2\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onEdit(index)}\r\n            disabled={editingCategoryIndex !== null}\r\n            className={`px-3 py-1 text-xs bg-blue-600 hover:bg-blue-700 text-white rounded transition-colors ${\r\n              editingCategoryIndex !== null ? 'opacity-50 cursor-not-allowed' : ''\r\n            }`}\r\n          >\r\n            수정\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onRemove(index)}\r\n            disabled={editingCategoryIndex !== null}\r\n            className={`p-1.5 text-red-600 hover:bg-red-100 dark:hover:bg-red-900/30 rounded transition-colors ${\r\n              editingCategoryIndex !== null ? 'opacity-50 cursor-not-allowed' : ''\r\n            }`}\r\n            title=\"카테고리 삭제\"\r\n          >\r\n            <FaTrash className=\"text-xs\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <ul className=\"text-sm text-gray-700 dark:text-gray-300 pl-4\">\r\n        {detail.items.slice(0, 3).map((item, i) => (\r\n          <li key={i} className=\"list-disc\">{item}</li>\r\n        ))}\r\n        {detail.items.length > 3 && (\r\n          <li className=\"text-gray-500 dark:text-gray-400 italic\">\r\n            외 {detail.items.length - 3}개 항목...\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\n// 폼 컴포넌트의 Props 타입 정의\r\ninterface FormProps {\r\n  data: Experience | null\r\n  onSave: (data: ExperienceFormData) => Promise<void>\r\n  onCancel: () => void\r\n  isSaving?: boolean\r\n}\r\n\r\nconst ExperienceForm: React.FC<FormProps> = ({ data, onSave, onCancel, isSaving = false }) => {\r\n  const [currentLang, setCurrentLang] = useState<AdminLanguage>('ko')\r\n  \r\n  // 🌟 스킬 목록 가져오기\r\n  const { skillCategories, loading: skillsLoading } = useSkills()\r\n  \r\n  // 🌟 skillIds 초기값 처리 (객체 또는 문자열 모두 처리)\r\n  const initialSkillIds = data?.skillIds \r\n    ? (data.skillIds as any[]).map((skillIdOrObj: any) => \r\n        typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj?._id\r\n      ).filter(Boolean) as string[]\r\n    : []\r\n  \r\n  // 초기 formData 설정 (iconKey 포함, details에 order 호환성 처리)\r\n  const initialFormData: ExperienceFormData = data ? {\r\n    ...data,\r\n    iconKey: data.iconKey || 'FaBriefcase',\r\n    // 🌟 기존 데이터 호환성: details에 order가 없으면 인덱스를 기본값으로 설정\r\n    details: (data.details || []).map((detail, index) => ({\r\n      ...detail,\r\n      order: detail.order ?? index\r\n    })),\r\n    skills: data.skills || [],\r\n    skillsEn: data.skillsEn || [],\r\n    skillsJa: data.skillsJa || [],\r\n    skillIds: initialSkillIds  // 🌟 스킬 ID 문자열 배열로 초기화\r\n  } : {\r\n    period: '',\r\n    title: '',\r\n    company: '',\r\n    description: '',\r\n    details: [],\r\n    skills: [],\r\n    skillsEn: [],\r\n    skillsJa: [],\r\n    skillIds: [],  // 🌟 스킬 ID 초기값\r\n    order: 0,\r\n    iconKey: 'FaBriefcase'\r\n  }\r\n  \r\n  const [formData, setFormData] = useState<ExperienceFormData>(initialFormData)\r\n  \r\n  // 기술 입력을 위한 별도 상태 (입력 중에는 문자열로 유지)\r\n  const [skillsInput, setSkillsInput] = useState<string>(\r\n    Array.isArray(formData.skills) ? formData.skills.join(', ') : ''\r\n  )\r\n  \r\n  // 🌟 카테고리별 상세 내용 관리 상태\r\n  const [editingCategoryIndex, setEditingCategoryIndex] = useState<number | null>(null)\r\n  const [categoryFormData, setCategoryFormData] = useState<{ \r\n    category: string\r\n    categoryEn: string\r\n    categoryJa: string\r\n    content: string\r\n    contentEn: string\r\n    contentJa: string\r\n  }>({\r\n    category: '',\r\n    categoryEn: '',\r\n    categoryJa: '',\r\n    content: '',\r\n    contentEn: '',\r\n    contentJa: ''\r\n  })\r\n  \r\n  // 🌟 스킬 선택/해제 핸들러 (체크박스용)\r\n  const handleSkillToggle = (skillId: string) => {\r\n    const currentSkillIds = formData.skillIds || []\r\n    const isSelected = currentSkillIds.includes(skillId)\r\n    \r\n    const newSkillIds = isSelected\r\n      ? currentSkillIds.filter((id: string) => id !== skillId)\r\n      : [...currentSkillIds, skillId]\r\n    \r\n    setFormData({ \r\n      ...formData, \r\n      skillIds: newSkillIds \r\n    })\r\n  }\r\n  \r\n  // 🌟 스킬 카테고리 전체 선택/해제 핸들러\r\n  const handleSkillCategoryToggle = (category: SkillCategory) => {\r\n    const categorySkillIds = (category.skills || []).map(skill => skill._id!).filter(Boolean)\r\n    const currentSkillIds = formData.skillIds || []\r\n    \r\n    const allSelected = categorySkillIds.every((id: string) => currentSkillIds.includes(id))\r\n    \r\n    let newSkillIds: string[]\r\n    if (allSelected) {\r\n      newSkillIds = currentSkillIds.filter((id: string) => !categorySkillIds.includes(id))\r\n    } else {\r\n      const uniqueIds = new Set([...currentSkillIds, ...categorySkillIds])\r\n      newSkillIds = Array.from(uniqueIds)\r\n    }\r\n    \r\n    setFormData({ \r\n      ...formData, \r\n      skillIds: newSkillIds \r\n    })\r\n  }\r\n  \r\n  // 🌟 카테고리별 상세 내용 관리 함수들\r\n  const addDetailCategory = () => {\r\n    setEditingCategoryIndex((formData.details || []).length)\r\n    setCategoryFormData({ \r\n      category: '', \r\n      categoryEn: '', \r\n      categoryJa: '', \r\n      content: '', \r\n      contentEn: '', \r\n      contentJa: '' \r\n    })\r\n  }\r\n  \r\n  const editDetailCategory = (index: number) => {\r\n    const detail = (formData.details || [])[index]\r\n    if (detail) {\r\n      setEditingCategoryIndex(index)\r\n      setCategoryFormData({\r\n        category: detail.category,\r\n        categoryEn: detail.categoryEn || '',\r\n        categoryJa: detail.categoryJa || '',\r\n        content: detail.items.join('\\n'),\r\n        contentEn: detail.itemsEn?.join('\\n') || '',\r\n        contentJa: detail.itemsJa?.join('\\n') || ''\r\n      })\r\n    }\r\n  }\r\n  \r\n  const saveDetailCategory = () => {\r\n    if (!categoryFormData.category.trim() || !categoryFormData.content.trim()) {\r\n      alert('카테고리 이름과 내용을 모두 입력해주세요.')\r\n      return\r\n    }\r\n    \r\n    const items = categoryFormData.content.split('\\n').map(s => s.trim()).filter(s => s.length > 0)\r\n    const itemsEn = categoryFormData.contentEn.split('\\n').map(s => s.trim()).filter(s => s.length > 0)\r\n    const itemsJa = categoryFormData.contentJa.split('\\n').map(s => s.trim()).filter(s => s.length > 0)\r\n    \r\n    const newDetail: ExperienceDetail = {\r\n      category: categoryFormData.category.trim(),\r\n      categoryEn: categoryFormData.categoryEn.trim() || undefined,\r\n      categoryJa: categoryFormData.categoryJa.trim() || undefined,\r\n      items,\r\n      itemsEn: itemsEn.length > 0 ? itemsEn : undefined,\r\n      itemsJa: itemsJa.length > 0 ? itemsJa : undefined\r\n    }\r\n    \r\n    const newDetails = [...(formData.details || [])]\r\n    if (editingCategoryIndex !== null) {\r\n      newDetails[editingCategoryIndex] = newDetail\r\n    }\r\n    \r\n    setFormData({ ...formData, details: newDetails })\r\n    setEditingCategoryIndex(null)\r\n    setCategoryFormData({ \r\n      category: '', \r\n      categoryEn: '', \r\n      categoryJa: '', \r\n      content: '', \r\n      contentEn: '', \r\n      contentJa: '' \r\n    })\r\n  }\r\n  \r\n  const cancelDetailCategory = () => {\r\n    setEditingCategoryIndex(null)\r\n    setCategoryFormData({ \r\n      category: '', \r\n      categoryEn: '', \r\n      categoryJa: '', \r\n      content: '', \r\n      contentEn: '', \r\n      contentJa: '' \r\n    })\r\n  }\r\n  \r\n  const removeDetailCategory = (index: number) => {\r\n    if (!confirm('이 카테고리를 삭제하시겠습니까?')) return\r\n    const newDetails = [...(formData.details || [])]\r\n    newDetails.splice(index, 1)\r\n    setFormData({ ...formData, details: newDetails })\r\n  }\r\n  \r\n  // 🌟 드래그 앤 드롭 핸들러\r\n  const handleDragEnd = (event: DragEndEvent) => {\r\n    const { active, over } = event\r\n    \r\n    if (!over || active.id === over.id) return\r\n    \r\n    const oldIndex = (formData.details || []).findIndex((_, i) => i === active.id)\r\n    const newIndex = (formData.details || []).findIndex((_, i) => i === over.id)\r\n    \r\n    if (oldIndex === -1 || newIndex === -1) return\r\n    \r\n    // 배열 순서 변경\r\n    const newDetails = [...(formData.details || [])]\r\n    const [movedItem] = newDetails.splice(oldIndex, 1)\r\n    \r\n    if (!movedItem) return  // 안전성 체크\r\n    \r\n    newDetails.splice(newIndex, 0, movedItem)\r\n    \r\n    // 🌟 순서 변경 후 각 항목에 새로운 order 값 할당\r\n    const reorderedDetails = newDetails.map((detail, index) => ({\r\n      ...detail,\r\n      order: index\r\n    }))\r\n    \r\n    setFormData({ ...formData, details: reorderedDetails })\r\n  }\r\n\r\n  // 필수 필드 검증\r\n  const isFormValid = formData.title.trim() !== '' && \r\n                     formData.company.trim() !== '' && \r\n                     formData.period.trim() !== ''\r\n\r\n  const handleFormSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!isFormValid) {\r\n      alert('필수 필드(기간, 직책, 회사/기관)를 모두 입력해주세요.')\r\n      return\r\n    }\r\n    \r\n    // 제출 시 최신 기술 배열을 포함하여 저장 (호환성 유지)\r\n    const skillsArray = skillsInput.split(',').map((s) => s.trim()).filter(s => s.length > 0)\r\n    \r\n    // 🌟 skillIds를 문자열 배열로 확실하게 변환 + 중복 제거\r\n    const skillIds = Array.from(new Set(\r\n      (formData.skillIds || []).map((skillIdOrObj: any) => \r\n        typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj?._id\r\n      ).filter(Boolean)\r\n    ))\r\n    \r\n    // 🌟 details 배열의 각 항목에 order 값 할당 (현재 배열 순서 기준)\r\n    const orderedDetails = (formData.details || []).map((detail, index) => ({\r\n      ...detail,\r\n      order: detail.order ?? index  // 기존 order가 있으면 유지, 없으면 인덱스 사용\r\n    }))\r\n    \r\n    const finalFormData = { \r\n      ...formData, \r\n      skills: skillsArray,  // 🔄 호환성 유지\r\n      skillIds,  // 🌟 스킬 ID 배열\r\n      details: orderedDetails\r\n    }\r\n    \r\n    console.log('📤 경력 저장 데이터:', finalFormData)\r\n    onSave(finalFormData)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit} className=\"space-y-4\">\r\n      <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">\r\n        {data ? '경력 수정' : '경력 추가'}\r\n      </h3>\r\n      <div className=\"grid md:grid-cols-2 gap-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            기간\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.period}\r\n            onChange={(e) => setFormData({ ...formData, period: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"2018 - 2023\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            직책\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.title}\r\n            onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            회사/기관\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.company}\r\n            onChange={(e) => setFormData({ ...formData, company: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            순서\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={formData.order}\r\n            onChange={(e) => {\r\n              const value = parseInt(e.target.value)\r\n              setFormData({ ...formData, order: isNaN(value) ? 0 : value })\r\n            }}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            min=\"0\"\r\n            placeholder=\"표시 순서 (숫자가 작을수록 먼저 표시)\"\r\n          />\r\n        </div>\r\n        {/* 🌟 아이콘 선택 필드 (신규) */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            아이콘\r\n          </label>\r\n          <select\r\n            value={formData.iconKey || 'FaBriefcase'}\r\n            onChange={(e) => setFormData({ ...formData, iconKey: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          >\r\n            {iconOptions.map((option) => (\r\n              <option key={option.key} value={option.key}>\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {/* 미리보기 */}\r\n          <div className=\"mt-2 flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400\">\r\n            <span>미리보기:</span>\r\n            {React.createElement(\r\n              iconOptions.find(opt => opt.key === (formData.iconKey || 'FaBriefcase'))?.icon || FaBriefcase,\r\n              { className: 'text-xl' }\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* 🌟 카테고리별 상세 내용 입력 (신규) */}\r\n      <div className=\"bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg border-2 border-blue-200 dark:border-blue-800\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div>\r\n            <h4 className=\"text-md font-bold text-gray-900 dark:text-white\">\r\n              📋 카테고리별 상세 내용\r\n            </h4>\r\n            <p className=\"text-xs text-gray-600 dark:text-gray-400 mt-1\">\r\n              근무경험, 교육, 근무매장 등 카테고리별로 구체적인 내용을 정리하세요\r\n            </p>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={addDetailCategory}\r\n            disabled={editingCategoryIndex !== null}\r\n            className={`px-3 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg transition-colors flex items-center gap-2 text-sm ${\r\n              editingCategoryIndex !== null ? 'opacity-50 cursor-not-allowed' : ''\r\n            }`}\r\n          >\r\n            <FaPlus className=\"text-xs\" />\r\n            카테고리 추가\r\n          </button>\r\n        </div>\r\n        \r\n        {/* 저장된 카테고리 목록 - 🌟 드래그 앤 드롭 적용 */}\r\n        {formData.details && formData.details.length > 0 && (\r\n          <DndContext collisionDetection={closestCenter} onDragEnd={handleDragEnd}>\r\n            <SortableContext items={formData.details.map((_, i) => i)} strategy={verticalListSortingStrategy}>\r\n              <div className=\"space-y-3 mb-4\">\r\n                {formData.details.map((detail, index) => (\r\n                  <SortableCategoryItem\r\n                    key={index}\r\n                    detail={detail}\r\n                    index={index}\r\n                    editingCategoryIndex={editingCategoryIndex}\r\n                    onEdit={editDetailCategory}\r\n                    onRemove={removeDetailCategory}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </SortableContext>\r\n          </DndContext>\r\n        )}\r\n        \r\n        {/* 카테고리 추가/수정 폼 */}\r\n        {editingCategoryIndex !== null && (\r\n          <div className=\"bg-white dark:bg-gray-800 p-5 rounded-lg border-2 border-blue-400 dark:border-blue-600 shadow-lg\">\r\n            <h5 className=\"font-bold text-gray-900 dark:text-white mb-4\">\r\n              {editingCategoryIndex < (formData.details || []).length ? '카테고리 수정' : '카테고리 추가'}\r\n            </h5>\r\n            \r\n            {/* Language Tabs for Detail Category */}\r\n            <div className=\"mb-4\">\r\n              <LanguageTabs activeLanguage={currentLang} onChange={setCurrentLang} />\r\n            </div>\r\n            \r\n            <div className=\"space-y-4\">\r\n              {/* Category Name (Multilingual) */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  카테고리 이름 {currentLang === 'ko' && <span className=\"text-red-500\">*</span>}\r\n                  <span className=\"text-xs text-gray-500 ml-2\">\r\n                    ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n                  </span>\r\n                </label>\r\n                {currentLang === 'ko' && (\r\n                  <input\r\n                    type=\"text\"\r\n                    value={categoryFormData.category}\r\n                    onChange={(e) => setCategoryFormData({ ...categoryFormData, category: e.target.value })}\r\n                    placeholder=\"예: 근무경험, 교육, 근무매장\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white font-semibold\"\r\n                  />\r\n                )}\r\n                {currentLang === 'en' && (\r\n                  <input\r\n                    type=\"text\"\r\n                    value={categoryFormData.categoryEn}\r\n                    onChange={(e) => setCategoryFormData({ ...categoryFormData, categoryEn: e.target.value })}\r\n                    placeholder=\"e.g., Work Experience, Education, Store\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white font-semibold\"\r\n                  />\r\n                )}\r\n                {currentLang === 'ja' && (\r\n                  <input\r\n                    type=\"text\"\r\n                    value={categoryFormData.categoryJa}\r\n                    onChange={(e) => setCategoryFormData({ ...categoryFormData, categoryJa: e.target.value })}\r\n                    placeholder=\"例: 職務経験、教育、店舗\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white font-semibold\"\r\n                  />\r\n                )}\r\n              </div>\r\n              \r\n              {/* Category Content (Multilingual) */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  카테고리 내용 {currentLang === 'ko' && <span className=\"text-red-500\">*</span>}\r\n                  <span className=\"text-xs text-gray-500 ml-2\">\r\n                    ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n                  </span>\r\n                </label>\r\n                {currentLang === 'ko' && (\r\n                  <>\r\n                    <RichTextEditor\r\n                      value={categoryFormData.content}\r\n                      onChange={(value) => setCategoryFormData({ ...categoryFormData, content: value })}\r\n                      placeholder=\"항목들을 한 줄씩 입력하세요&#10;예:&#10;매장인원 관리&#10;신규파트너 교육&#10;라떼아트 교육\"\r\n                      rows={8}\r\n                      className=\"min-h-[200px]\"\r\n                    />\r\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\r\n                      💡 한 줄에 하나씩 항목을 입력하세요 (Enter로 구분)\r\n                    </p>\r\n                  </>\r\n                )}\r\n                {currentLang === 'en' && (\r\n                  <>\r\n                    <RichTextEditor\r\n                      value={categoryFormData.contentEn}\r\n                      onChange={(value) => setCategoryFormData({ ...categoryFormData, contentEn: value })}\r\n                      placeholder=\"Enter items one per line&#10;e.g.&#10;Store Staff Management&#10;New Partner Training&#10;Latte Art Education\"\r\n                      rows={8}\r\n                      className=\"min-h-[200px]\"\r\n                    />\r\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\r\n                      💡 Enter one item per line (separated by Enter)\r\n                    </p>\r\n                  </>\r\n                )}\r\n                {currentLang === 'ja' && (\r\n                  <>\r\n                    <RichTextEditor\r\n                      value={categoryFormData.contentJa}\r\n                      onChange={(value) => setCategoryFormData({ ...categoryFormData, contentJa: value })}\r\n                      placeholder=\"1行に1項目を入力してください&#10;例:&#10;店舗スタッフ管理&#10;新規パートナー教育&#10;ラテアート教育\"\r\n                      rows={8}\r\n                      className=\"min-h-[200px]\"\r\n                    />\r\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\r\n                      💡 1行に1項目を入力してください (Enterで区切る)\r\n                    </p>\r\n                  </>\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"flex gap-3\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={saveDetailCategory}\r\n                  className=\"flex-1 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors flex items-center justify-center gap-2\"\r\n                >\r\n                  <FaSave />\r\n                  저장\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={cancelDetailCategory}\r\n                  className=\"px-4 py-2 bg-gray-500 hover:bg-gray-600 text-white rounded-lg transition-colors\"\r\n                >\r\n                  취소\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* 빈 상태 */}\r\n        {(!formData.details || formData.details.length === 0) && editingCategoryIndex === null && (\r\n          <div className=\"text-center py-6 bg-white dark:bg-gray-800 rounded-lg border-2 border-dashed border-gray-300 dark:border-gray-600\">\r\n            <p className=\"text-gray-500 dark:text-gray-400 text-sm mb-2\">\r\n              아직 카테고리가 없습니다\r\n            </p>\r\n            <p className=\"text-xs text-gray-400 dark:text-gray-500\">\r\n              상단의 \"카테고리 추가\" 버튼을 눌러 시작하세요\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          설명 (리치텍스트 에디터) - 선택사항\r\n        </label>\r\n        <p className=\"text-xs text-gray-500 dark:text-gray-400 mb-2\">\r\n          💡 위의 \"카테고리별 상세 내용\"을 사용하면 더 체계적으로 정리됩니다. 이 필드는 하위 호환성을 위해 유지됩니다.\r\n        </p>\r\n        <RichTextEditor\r\n          value={formData.description || ''}\r\n          onChange={(value) => setFormData({ ...formData, description: value })}\r\n          placeholder=\"(선택사항) 전체적인 설명을 작성하거나, 위의 카테고리별 입력을 사용하세요.\"\r\n          rows={4}\r\n          className=\"min-h-[150px]\"\r\n        />\r\n      </div>\r\n      {/* 🌟 스킬 연결 (체크박스) */}\r\n      <div className=\"md:col-span-2\">\r\n        <div className=\"flex items-center justify-between mb-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n            이 경력에서 사용한 스킬 🔗\r\n          </label>\r\n          {formData.skillIds && formData.skillIds.length > 0 && (\r\n            <span className=\"text-xs font-semibold text-blue-600 dark:text-blue-400 bg-blue-100 dark:bg-blue-900/30 px-2 py-1 rounded\">\r\n              ✓ {formData.skillIds.length}개 선택됨\r\n            </span>\r\n          )}\r\n        </div>\r\n        \r\n        {skillsLoading ? (\r\n          <div className=\"text-sm text-gray-500 dark:text-gray-400 py-2\">\r\n            스킬 목록을 불러오는 중입니다...\r\n          </div>\r\n        ) : skillCategories.length === 0 ? (\r\n          <div className=\"text-sm text-gray-500 dark:text-gray-400 py-4 text-center border border-gray-300 dark:border-gray-600 rounded-lg\">\r\n            등록된 스킬이 없습니다. 먼저 스킬을 추가해주세요.\r\n          </div>\r\n        ) : (\r\n          <div className=\"border border-gray-300 dark:border-gray-600 rounded-lg p-4 bg-gray-50 dark:bg-gray-800 max-h-[400px] overflow-y-auto\">\r\n            {skillCategories.map((category: SkillCategory) => {\r\n              const categorySkillIds = (category.skills || []).map(skill => skill._id!).filter(Boolean)\r\n              const currentSkillIds = formData.skillIds || []\r\n              const selectedCount = categorySkillIds.filter(id => currentSkillIds.includes(id)).length\r\n              const allSelected = categorySkillIds.length > 0 && selectedCount === categorySkillIds.length\r\n              const someSelected = selectedCount > 0 && selectedCount < categorySkillIds.length\r\n              \r\n              return (\r\n                <div key={category._id} className=\"mb-4 last:mb-0\">\r\n                  {/* 카테고리 헤더 (전체 선택/해제) */}\r\n                  <div \r\n                    className=\"flex items-center gap-2 mb-2 pb-2 border-b border-gray-300 dark:border-gray-600 cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700 p-2 rounded\"\r\n                    onClick={() => handleSkillCategoryToggle(category)}\r\n                  >\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={allSelected}\r\n                      ref={el => {\r\n                        if (el) {\r\n                          el.indeterminate = someSelected\r\n                        }\r\n                      }}\r\n                      onChange={() => handleSkillCategoryToggle(category)}\r\n                      className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\r\n                      onClick={(e) => e.stopPropagation()}\r\n                    />\r\n                    <label \r\n                      className=\"font-semibold text-gray-900 dark:text-white flex-1 cursor-pointer\"\r\n                      style={{ color: category.color || '#3B82F6' }}\r\n                    >\r\n                      {category.title}\r\n                      {selectedCount > 0 && (\r\n                        <span className=\"ml-2 text-xs font-normal text-gray-500 dark:text-gray-400\">\r\n                          ({selectedCount}/{categorySkillIds.length})\r\n                        </span>\r\n                      )}\r\n                    </label>\r\n                  </div>\r\n                  \r\n                  {/* 스킬 목록 */}\r\n                  <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2 pl-6\">\r\n                    {(category.skills || []).map((skill: Skill) => {\r\n                      const isSelected = (formData.skillIds || []).includes(skill._id!)\r\n                      \r\n                      return (\r\n                        <label\r\n                          key={skill._id}\r\n                          className={`flex items-center gap-2 p-2 rounded cursor-pointer transition-colors ${\r\n                            isSelected \r\n                              ? 'bg-blue-50 dark:bg-blue-900/20 border border-blue-300 dark:border-blue-700' \r\n                              : 'hover:bg-gray-100 dark:hover:bg-gray-700 border border-transparent'\r\n                          }`}\r\n                        >\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={isSelected}\r\n                            onChange={() => handleSkillToggle(skill._id!)}\r\n                            className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\r\n                          />\r\n                          <span className={`text-sm ${isSelected ? 'font-semibold text-blue-700 dark:text-blue-300' : 'text-gray-700 dark:text-gray-300'}`}>\r\n                            {skill.name}\r\n                          </span>\r\n                        </label>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        )}\r\n        \r\n        <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\r\n          💡 체크박스를 클릭하여 경력에서 사용한 스킬을 선택하세요. 카테고리 제목을 클릭하면 전체 선택/해제할 수 있습니다.\r\n        </p>\r\n      </div>\r\n      \r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          기술 (쉼표로 구분) - 선택사항\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={skillsInput}\r\n          onChange={(e) => setSkillsInput(e.target.value)}\r\n          onBlur={() => {\r\n            // 포커스를 잃을 때 배열로 변환하여 formData에 저장\r\n            const skillsArray = skillsInput.split(',').map((s) => s.trim()).filter(s => s.length > 0)\r\n            setFormData({ ...formData, skills: skillsArray })\r\n          }}\r\n          className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          placeholder=\"PLC 프로그래밍, Python, 데이터 분석\"\r\n        />\r\n        <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n          💡 위의 스킬 체크박스를 사용하는 것을 권장합니다. 이 필드는 하위 호환성을 위해 유지됩니다.\r\n        </p>\r\n      </div>\r\n      {/* 🌟 최종 저장 안내 (카테고리 입력 중일 때) */}\r\n      {editingCategoryIndex !== null && (\r\n        <div className=\"bg-yellow-50 dark:bg-yellow-900/20 p-4 rounded-lg border-2 border-yellow-300 dark:border-yellow-700\">\r\n          <p className=\"text-sm text-yellow-800 dark:text-yellow-300 font-medium\">\r\n            ⚠️ 카테고리 입력 중입니다. 위의 \"저장\" 버튼을 먼저 눌러 카테고리를 저장하세요.\r\n          </p>\r\n        </div>\r\n      )}\r\n      \r\n      {/* 🌟 저장된 카테고리 요약 */}\r\n      {formData.details && formData.details.length > 0 && editingCategoryIndex === null && (\r\n        <div className=\"bg-green-50 dark:bg-green-900/20 p-4 rounded-lg border-2 border-green-300 dark:border-green-700\">\r\n          <p className=\"text-sm text-green-800 dark:text-green-300 font-medium mb-2\">\r\n            ✅ {formData.details.length}개의 카테고리가 준비되었습니다\r\n          </p>\r\n          <p className=\"text-xs text-green-700 dark:text-green-400\">\r\n            아래 \"저장\" 버튼을 눌러 경력 데이터를 최종 저장하세요\r\n          </p>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"flex gap-3 pt-4 border-t-2 border-gray-300 dark:border-gray-600\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSaving || !isFormValid || editingCategoryIndex !== null}\r\n          className={`flex-1 flex items-center justify-center gap-2 bg-primary-600 hover:bg-primary-700 text-white font-bold py-3 rounded-lg transition-colors text-lg ${\r\n            isSaving || !isFormValid || editingCategoryIndex !== null ? 'opacity-50 cursor-not-allowed' : 'shadow-lg'\r\n          }`}\r\n          title={editingCategoryIndex !== null ? '카테고리 입력을 먼저 완료하세요' : ''}\r\n        >\r\n          {isSaving ? (\r\n            <>\r\n              <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n              저장 중...\r\n            </>\r\n          ) : (\r\n            <>\r\n              <FaSave className=\"text-xl\" /> 최종 저장\r\n            </>\r\n          )}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={onCancel}\r\n          disabled={isSaving}\r\n          className={`flex-1 bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-900 dark:text-white font-medium py-3 rounded-lg transition-colors ${\r\n            isSaving ? 'opacity-50 cursor-not-allowed' : ''\r\n          }`}\r\n        >\r\n          취소\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ExperienceForm\r\n","import React from 'react'\r\nimport { FaSave, FaPlus, FaTrash, FaVideo, FaTimes } from 'react-icons/fa'\r\nimport { Project, ProjectFormData, Skill, SkillCategory } from '../../types'\r\nimport RichTextEditor from '../RichTextEditor'\r\nimport { useSkills } from '../../hooks/useSkills'\r\nimport { useCategories } from '../../hooks/useCategories'\r\nimport LanguageTabs from '../common/LanguageTabs'\r\nimport { useProjectForm } from '../../hooks/useProjectForm'\r\n\r\n// 폼 컴포넌트의 Props 타입 정의\r\ninterface FormProps {\r\n  data: Project | null\r\n  onSave: (data: ProjectFormData) => Promise<void>\r\n  onCancel: () => void\r\n  isSaving?: boolean\r\n}\r\n\r\nconst ProjectForm: React.FC<FormProps> = ({ data, onSave, onCancel, isSaving = false }) => {\r\n  // Use custom hook for form logic\r\n  const {\r\n    formData,\r\n    videoItems,\r\n    currentLang,\r\n    setCurrentLang,\r\n    setFormData,\r\n    handleVideoUrlChange,\r\n    handleVideoDescriptionChange,\r\n    handleAddVideo,\r\n    handleRemoveVideo,\r\n    prepareDataForSubmit\r\n  } = useProjectForm(data)\r\n  \r\n  // 🌟 모든 스킬 목록을 가져옵니다\r\n  const { skillCategories, loading: skillsLoading } = useSkills()\r\n  \r\n  // 🌟 카테고리 데이터 가져오기\r\n  const { data: categories = [], isLoading: categoriesLoading } = useCategories()\r\n\r\n  // 🌟 카테고리 선택/해제 핸들러 (체크박스용)\r\n  const handleCategoryToggle = (categoryId: string) => {\r\n    const currentCategoryIds = formData.categoryIds || []\r\n    const isSelected = currentCategoryIds.includes(categoryId)\r\n    \r\n    const newCategoryIds = isSelected\r\n      ? currentCategoryIds.filter((id: string) => id !== categoryId)\r\n      : [...currentCategoryIds, categoryId]\r\n    \r\n    setFormData({ \r\n      ...formData, \r\n      categoryIds: newCategoryIds \r\n    })\r\n  }\r\n\r\n  // 🌟 스킬 선택/해제 핸들러 (체크박스용)\r\n  const handleSkillToggle = (skillId: string) => {\r\n    const currentSkillIds = formData.skillIds || []\r\n    const isSelected = currentSkillIds.includes(skillId)\r\n    \r\n    const newSkillIds = isSelected\r\n      ? currentSkillIds.filter((id: string) => id !== skillId) // 선택 해제\r\n      : [...currentSkillIds, skillId] // 선택 추가\r\n    \r\n    console.log('🔧 스킬 변경:', { skillId, isSelected: !isSelected, newSkillIds })\r\n    setFormData({ \r\n      ...formData, \r\n      skillIds: newSkillIds \r\n    })\r\n  }\r\n  \r\n  // 🌟 스킬 카테고리 전체 선택/해제 핸들러\r\n  const handleSkillCategoryToggle = (category: SkillCategory) => {\r\n    const categorySkillIds = (category.skills || []).map(skill => skill._id!).filter(Boolean)\r\n    const currentSkillIds = formData.skillIds || []\r\n    \r\n    // 카테고리의 모든 스킬이 선택되어 있는지 확인\r\n    const allSelected = categorySkillIds.every((id: string) => currentSkillIds.includes(id))\r\n    \r\n    let newSkillIds: string[]\r\n    if (allSelected) {\r\n      // 모두 선택되어 있으면 전체 해제\r\n      newSkillIds = currentSkillIds.filter((id: string) => !categorySkillIds.includes(id))\r\n    } else {\r\n      // 일부만 선택되어 있거나 없으면 전체 선택\r\n      const uniqueIds = new Set([...currentSkillIds, ...categorySkillIds])\r\n      newSkillIds = Array.from(uniqueIds)\r\n    }\r\n    \r\n    console.log('📁 카테고리 전체 변경:', { category: category.title, allSelected: !allSelected, newSkillIds })\r\n    setFormData({ \r\n      ...formData, \r\n      skillIds: newSkillIds \r\n    })\r\n  }\r\n\r\n  const handleSaveClick = () => {\r\n    try {\r\n      console.log('💾 저장 시작 - videoItems:', videoItems)\r\n      console.log('🔗 선택된 스킬 IDs:', formData.skillIds)\r\n      \r\n      // Use hook's prepare function to process all data\r\n      const processedData = prepareDataForSubmit()\r\n      \r\n      console.log('✅ 최종 processedData:', processedData)\r\n      console.log('✅ 최종 skillIds:', processedData.skillIds)\r\n      onSave(processedData)\r\n    } catch (error: any) {\r\n      console.error('❌ 저장 중 오류 발생:', error)\r\n      alert(error.message || '저장 중 오류가 발생했습니다. 콘솔을 확인해주세요.')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">\r\n        {data ? '프로젝트 수정' : '프로젝트 추가'}\r\n      </h3>\r\n      \r\n      {/* Language Tabs */}\r\n      <LanguageTabs activeLanguage={currentLang} onChange={setCurrentLang} />\r\n\r\n      <div className=\"grid md:grid-cols-2 gap-4\">\r\n        {/* Title Field (Multilingual) */}\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            제목 {currentLang === 'ko' && <span className=\"text-red-500\">*</span>}\r\n            <span className=\"text-xs text-gray-500 ml-2\">\r\n              ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n            </span>\r\n          </label>\r\n          {currentLang === 'ko' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.title}\r\n              onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n              className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"프로젝트 제목\"\r\n              required\r\n            />\r\n          )}\r\n          {currentLang === 'en' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.titleEn || ''}\r\n              onChange={(e) => setFormData({ ...formData, titleEn: e.target.value })}\r\n              className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"Project Title\"\r\n            />\r\n          )}\r\n          {currentLang === 'ja' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.titleJa || ''}\r\n              onChange={(e) => setFormData({ ...formData, titleJa: e.target.value })}\r\n              className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"プロジェクトタイトル\"\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n            카테고리 선택 📂 (다중 선택 가능)\r\n          </label>\r\n\r\n          {/* 선택된 카테고리 태그 표시 */}\r\n          {formData.categoryIds && formData.categoryIds.length > 0 && (\r\n            <div className=\"flex flex-wrap gap-2 mb-3 p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\r\n              {formData.categoryIds.map((catId: string) => {\r\n                const category = categories.find(c => c._id === catId)\r\n                return category ? (\r\n                  <span\r\n                    key={catId}\r\n                    className=\"inline-flex items-center gap-1 px-3 py-1 bg-blue-600 text-white rounded-full text-sm\"\r\n                  >\r\n                    {category.name}\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => handleCategoryToggle(catId)}\r\n                      className=\"hover:bg-blue-700 rounded-full p-0.5\"\r\n                    >\r\n                      <FaTimes className=\"text-xs\" />\r\n                    </button>\r\n                  </span>\r\n                ) : null\r\n              })}\r\n            </div>\r\n          )}\r\n\r\n          {/* 카테고리 체크박스 목록 */}\r\n          {categoriesLoading ? (\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">카테고리 로딩 중...</p>\r\n          ) : categories.length > 0 ? (\r\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2\">\r\n              {categories.map((category) => {\r\n                const isSelected = (formData.categoryIds || []).includes(category._id)\r\n                return (\r\n                  <label\r\n                    key={category._id}\r\n                    className={`flex items-center gap-2 p-3 border-2 rounded-lg cursor-pointer transition-all ${\r\n                      isSelected\r\n                        ? 'border-primary-600 bg-primary-50 dark:bg-primary-900/20'\r\n                        : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600'\r\n                    }`}\r\n                  >\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={isSelected}\r\n                      onChange={() => handleCategoryToggle(category._id)}\r\n                      className=\"w-4 h-4\"\r\n                    />\r\n                    <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                      {category.name}\r\n                    </span>\r\n                  </label>\r\n                )\r\n              })}\r\n            </div>\r\n          ) : (\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              등록된 카테고리가 없습니다. 관리자 메뉴의 \"카테고리 관리\"에서 추가하세요.\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            상태\r\n          </label>\r\n          <select\r\n            value={formData.status}\r\n            onChange={(e) => setFormData({ ...formData, status: e.target.value as 'preparing' | 'planning' | 'completed' })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          >\r\n            <option value=\"preparing\">준비 중</option>\r\n            <option value=\"planning\">계획 중</option>\r\n            <option value=\"completed\">완료</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            GitHub URL\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.githubLink || ''}\r\n            onChange={(e) => setFormData({ ...formData, githubLink: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"https://github.com/...\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            Live URL\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.liveLink || ''}\r\n            onChange={(e) => setFormData({ ...formData, liveLink: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"https://...\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            이미지 URL\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.image}\r\n            onChange={(e) => setFormData({ ...formData, image: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"https://...\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            순서\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={formData.order}\r\n            onChange={(e) => setFormData({ ...formData, order: parseInt(e.target.value) })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          />\r\n        </div>\r\n\r\n        {/* 🌟 개선: 사용된 스킬 - 체크박스 UI */}\r\n        <div className=\"md:col-span-2\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n              사용된 스킬 (프로젝트 연동) 🔗\r\n            </label>\r\n            {formData.skillIds && formData.skillIds.length > 0 && (\r\n              <span className=\"text-xs font-semibold text-blue-600 dark:text-blue-400 bg-blue-100 dark:bg-blue-900/30 px-2 py-1 rounded\">\r\n                ✓ {formData.skillIds.length}개 선택됨\r\n              </span>\r\n            )}\r\n          </div>\r\n          \r\n          {skillsLoading ? (\r\n            <div className=\"text-sm text-gray-500 dark:text-gray-400 py-2\">\r\n              스킬 목록을 불러오는 중입니다...\r\n            </div>\r\n          ) : skillCategories.length === 0 ? (\r\n            <div className=\"text-sm text-gray-500 dark:text-gray-400 py-4 text-center border border-gray-300 dark:border-gray-600 rounded-lg\">\r\n              등록된 스킬이 없습니다. 먼저 스킬을 추가해주세요.\r\n            </div>\r\n          ) : (\r\n            <div className=\"border border-gray-300 dark:border-gray-600 rounded-lg p-4 bg-gray-50 dark:bg-gray-800 max-h-[400px] overflow-y-auto\">\r\n              {skillCategories.map((category: SkillCategory) => {\r\n                const categorySkillIds = (category.skills || []).map(skill => skill._id!).filter(Boolean)\r\n                const selectedCount = categorySkillIds.filter(id => (formData.skillIds || []).includes(id)).length\r\n                const allSelected = categorySkillIds.length > 0 && selectedCount === categorySkillIds.length\r\n                const someSelected = selectedCount > 0 && selectedCount < categorySkillIds.length\r\n                \r\n                return (\r\n                  <div key={category._id} className=\"mb-4 last:mb-0\">\r\n                    {/* 카테고리 헤더 (전체 선택/해제) */}\r\n                    <div \r\n                      className=\"flex items-center gap-2 mb-2 pb-2 border-b border-gray-300 dark:border-gray-600 cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700 p-2 rounded\"\r\n                      onClick={() => handleSkillCategoryToggle(category)}\r\n                    >\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={allSelected}\r\n                        ref={el => {\r\n                          if (el) {\r\n                            el.indeterminate = someSelected\r\n                          }\r\n                        }}\r\n                        onChange={() => handleSkillCategoryToggle(category)}\r\n                        className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\r\n                        onClick={(e) => e.stopPropagation()}\r\n                      />\r\n                      <label \r\n                        className=\"font-semibold text-gray-900 dark:text-white flex-1 cursor-pointer\"\r\n                        style={{ color: category.color || '#3B82F6' }}\r\n                      >\r\n                        {category.title}\r\n                        {selectedCount > 0 && (\r\n                          <span className=\"ml-2 text-xs font-normal text-gray-500 dark:text-gray-400\">\r\n                            ({selectedCount}/{categorySkillIds.length})\r\n                          </span>\r\n                        )}\r\n                      </label>\r\n                    </div>\r\n                    \r\n                    {/* 스킬 목록 */}\r\n                    <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2 pl-6\">\r\n                      {(category.skills || []).map((skill: Skill) => {\r\n                        const isSelected = (formData.skillIds || []).includes(skill._id!)\r\n                        \r\n                        return (\r\n                          <label\r\n                            key={skill._id}\r\n                            className={`flex items-center gap-2 p-2 rounded cursor-pointer transition-colors ${\r\n                              isSelected \r\n                                ? 'bg-blue-50 dark:bg-blue-900/20 border border-blue-300 dark:border-blue-700' \r\n                                : 'hover:bg-gray-100 dark:hover:bg-gray-700 border border-transparent'\r\n                            }`}\r\n                          >\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              checked={isSelected}\r\n                              onChange={() => handleSkillToggle(skill._id!)}\r\n                              className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\r\n                            />\r\n                            <span className={`text-sm ${isSelected ? 'font-semibold text-blue-700 dark:text-blue-300' : 'text-gray-700 dark:text-gray-300'}`}>\r\n                              {skill.name}\r\n                            </span>\r\n                          </label>\r\n                        )\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          )}\r\n          \r\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\r\n            💡 체크박스를 클릭하여 프로젝트에서 사용한 스킬을 선택하세요. 카테고리 제목을 클릭하면 전체 선택/해제할 수 있습니다.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      {/* Description Field (Multilingual) */}\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          설명 (리치텍스트 에디터)\r\n          <span className=\"text-xs text-gray-500 ml-2\">\r\n            ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n          </span>\r\n        </label>\r\n        {currentLang === 'ko' && (\r\n          <RichTextEditor\r\n            value={formData.description || ''}\r\n            onChange={(value) => setFormData({ ...formData, description: value })}\r\n            placeholder=\"프로젝트에 대한 간단한 설명을 작성하세요.\"\r\n            rows={4}\r\n            className=\"min-h-[150px]\"\r\n          />\r\n        )}\r\n        {currentLang === 'en' && (\r\n          <RichTextEditor\r\n            value={formData.descriptionEn || ''}\r\n            onChange={(value) => setFormData({ ...formData, descriptionEn: value })}\r\n            placeholder=\"Write a brief description of the project.\"\r\n            rows={4}\r\n            className=\"min-h-[150px]\"\r\n          />\r\n        )}\r\n        {currentLang === 'ja' && (\r\n          <RichTextEditor\r\n            value={formData.descriptionJa || ''}\r\n            onChange={(value) => setFormData({ ...formData, descriptionJa: value })}\r\n            placeholder=\"プロジェクトの簡単な説明を書いてください。\"\r\n            rows={4}\r\n            className=\"min-h-[150px]\"\r\n          />\r\n        )}\r\n      </div>\r\n      {/* Technologies Field (Multilingual) */}\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          기술 스택 (쉼표 또는 줄바꿈으로 구분)\r\n          <span className=\"text-xs text-gray-500 ml-2\">\r\n            ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n          </span>\r\n        </label>\r\n        {currentLang === 'ko' && (\r\n          <textarea\r\n            value={typeof formData.technologies === 'string' ? formData.technologies : (Array.isArray(formData.technologies) ? formData.technologies.join('\\n') : '')}\r\n            onChange={(e) => setFormData({ ...formData, technologies: e.target.value })}\r\n            rows={3}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\r\n            placeholder=\"PLC, Python, Arduino\"\r\n          />\r\n        )}\r\n        {currentLang === 'en' && (\r\n          <textarea\r\n            value={typeof formData.technologiesEn === 'string' ? formData.technologiesEn : (Array.isArray(formData.technologiesEn) ? formData.technologiesEn.join('\\n') : '')}\r\n            onChange={(e) => setFormData({ ...formData, technologiesEn: e.target.value })}\r\n            rows={3}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\r\n            placeholder=\"PLC, Python, Arduino\"\r\n          />\r\n        )}\r\n        {currentLang === 'ja' && (\r\n          <textarea\r\n            value={typeof formData.technologiesJa === 'string' ? formData.technologiesJa : (Array.isArray(formData.technologiesJa) ? formData.technologiesJa.join('\\n') : '')}\r\n            onChange={(e) => setFormData({ ...formData, technologiesJa: e.target.value })}\r\n            rows={3}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\r\n            placeholder=\"PLC, Python, Arduino\"\r\n          />\r\n        )}\r\n      </div>\r\n      \r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          추가 이미지 URLs (줄바꿈으로 구분)\r\n        </label>\r\n        <textarea\r\n          value={typeof formData.images === 'string' ? formData.images : (Array.isArray(formData.images) ? formData.images.join('\\n') : '')}\r\n          onChange={(e) => {\r\n            const value = e.target.value\r\n            setFormData({\r\n              ...formData,\r\n              images: value, // 원본 텍스트를 그대로 저장\r\n            })\r\n          }}\r\n          rows={3}\r\n          className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\r\n          placeholder=\"https://example.com/image1.jpg\r\nhttps://example.com/image2.jpg\"\r\n        />\r\n      </div>\r\n\r\n      {/* 🌟 영상 관리 섹션 (개선된 UI) */}\r\n      <div className=\"border border-gray-300 dark:border-gray-600 rounded-lg p-6 space-y-4 bg-gray-50 dark:bg-gray-800\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <label className=\"block text-lg font-semibold text-gray-900 dark:text-white flex items-center gap-2\">\r\n            <FaVideo className=\"text-blue-600 dark:text-blue-400\" />\r\n            동영상 관리\r\n          </label>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleAddVideo}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors text-sm font-medium\"\r\n          >\r\n            <FaPlus /> 영상 추가\r\n          </button>\r\n        </div>\r\n\r\n        {videoItems.length === 0 ? (\r\n          <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\r\n            <FaVideo className=\"text-4xl mx-auto mb-2 opacity-50\" />\r\n            <p>아직 추가된 영상이 없습니다.</p>\r\n            <p className=\"text-sm mt-1\">위의 \"영상 추가\" 버튼을 클릭하여 영상을 추가하세요.</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"space-y-6\">\r\n            {videoItems.map((item, index) => (\r\n              <div key={index} className=\"border border-gray-200 dark:border-gray-700 rounded-lg p-4 bg-white dark:bg-gray-900 space-y-4\">\r\n                {/* 헤더 */}\r\n                <div className=\"flex items-center justify-between\">\r\n                  <h4 className=\"text-md font-semibold text-gray-900 dark:text-white flex items-center gap-2\">\r\n                    <span className=\"flex items-center justify-center w-8 h-8 bg-blue-100 dark:bg-blue-900 text-blue-600 dark:text-blue-300 rounded-full text-sm font-bold\">\r\n                      {index + 1}\r\n                    </span>\r\n                    영상 {index + 1}\r\n                  </h4>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => handleRemoveVideo(index)}\r\n                    className=\"flex items-center gap-1 px-3 py-1 text-red-600 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-lg transition-colors text-sm\"\r\n                  >\r\n                    <FaTrash /> 삭제\r\n                  </button>\r\n                </div>\r\n\r\n                {/* 영상 URL 입력 */}\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    영상 URL *\r\n                  </label>\r\n                  <input\r\n                    type=\"url\"\r\n                    value={item.url}\r\n                    onChange={(e) => handleVideoUrlChange(index, e.target.value)}\r\n                    placeholder=\"https://youtube.com/watch?v=... 또는 https://youtube.com/shorts/...\"\r\n                    className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                  />\r\n                </div>\r\n\r\n                {/* 영상 설명 (RichTextEditor - 다국어) */}\r\n                <div>\r\n                  <div className=\"flex items-center justify-between mb-2\">\r\n                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                      영상 설명 (리치텍스트)\r\n                      <span className=\"text-xs text-gray-500 ml-2\">\r\n                        ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n                      </span>\r\n                    </label>\r\n                    <span className={`text-xs ${\r\n                      (currentLang === 'ko' ? item.description.length : currentLang === 'en' ? item.descriptionEn.length : item.descriptionJa.length) > 5000 \r\n                        ? 'text-red-600 dark:text-red-400 font-bold' \r\n                        : (currentLang === 'ko' ? item.description.length : currentLang === 'en' ? item.descriptionEn.length : item.descriptionJa.length) > 4000\r\n                        ? 'text-orange-600 dark:text-orange-400'\r\n                        : 'text-gray-500 dark:text-gray-400'\r\n                    }`}>\r\n                      {currentLang === 'ko' ? item.description.length : currentLang === 'en' ? item.descriptionEn.length : item.descriptionJa.length} / 5000자\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  {currentLang === 'ko' && (\r\n                    <RichTextEditor\r\n                      value={item.description}\r\n                      onChange={(value) => handleVideoDescriptionChange(index, value, 'ko')}\r\n                      placeholder=\"이 영상에 대한 상세한 설명을 작성하세요. 굵게, 기울임, 리스트 등 다양한 서식을 사용할 수 있습니다.\"\r\n                      rows={4}\r\n                      className=\"min-h-[150px]\"\r\n                    />\r\n                  )}\r\n                  \r\n                  {currentLang === 'en' && (\r\n                    <RichTextEditor\r\n                      value={item.descriptionEn}\r\n                      onChange={(value) => handleVideoDescriptionChange(index, value, 'en')}\r\n                      placeholder=\"Write a detailed description of this video. You can use bold, italic, lists, and other formatting.\"\r\n                      rows={4}\r\n                      className=\"min-h-[150px]\"\r\n                    />\r\n                  )}\r\n                  \r\n                  {currentLang === 'ja' && (\r\n                    <RichTextEditor\r\n                      value={item.descriptionJa}\r\n                      onChange={(value) => handleVideoDescriptionChange(index, value, 'ja')}\r\n                      placeholder=\"この動画の詳細な説明を書いてください。太字、斜体、リストなどの書式を使用できます。\"\r\n                      rows={4}\r\n                      className=\"min-h-[150px]\"\r\n                    />\r\n                  )}\r\n                  \r\n                  <div className=\"flex items-center justify-between mt-1\">\r\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                      💡 이 설명은 프로젝트 상세 페이지에서 영상 하단에 표시됩니다.\r\n                    </p>\r\n                    {(currentLang === 'ko' ? item.description.length : currentLang === 'en' ? item.descriptionEn.length : item.descriptionJa.length) > 4000 && (\r\n                      <p className=\"text-xs text-orange-600 dark:text-orange-400\">\r\n                        ⚠️ 글자 수가 많습니다. 간결하게 작성해주세요.\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Detailed Description Field (Multilingual) */}\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          상세 설명 (리치텍스트 에디터)\r\n          <span className=\"text-xs text-gray-500 ml-2\">\r\n            ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n          </span>\r\n        </label>\r\n        {currentLang === 'ko' && (\r\n          <RichTextEditor\r\n            value={formData.detailedDescription || ''}\r\n            onChange={(value) => setFormData({ ...formData, detailedDescription: value })}\r\n            placeholder=\"프로젝트의 상세한 설명을 작성해주세요.\"\r\n            rows={6}\r\n            className=\"min-h-[200px]\"\r\n          />\r\n        )}\r\n        {currentLang === 'en' && (\r\n          <RichTextEditor\r\n            value={formData.detailedDescriptionEn || ''}\r\n            onChange={(value) => setFormData({ ...formData, detailedDescriptionEn: value })}\r\n            placeholder=\"Write a detailed description of the project.\"\r\n            rows={6}\r\n            className=\"min-h-[200px]\"\r\n          />\r\n        )}\r\n        {currentLang === 'ja' && (\r\n          <RichTextEditor\r\n            value={formData.detailedDescriptionJa || ''}\r\n            onChange={(value) => setFormData({ ...formData, detailedDescriptionJa: value })}\r\n            placeholder=\"プロジェクトの詳細な説明を書いてください。\"\r\n            rows={6}\r\n            className=\"min-h-[200px]\"\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      {/* Features Field (Multilingual) */}\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          주요 기능 (줄바꿈으로 구분)\r\n          <span className=\"text-xs text-gray-500 ml-2\">\r\n            ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n          </span>\r\n        </label>\r\n        {currentLang === 'ko' && (\r\n          <textarea\r\n            value={typeof formData.features === 'string' ? formData.features : (Array.isArray(formData.features) ? formData.features.join('\\n') : '')}\r\n            onChange={(e) => setFormData({ ...formData, features: e.target.value })}\r\n            rows={4}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\r\n            placeholder=\"실시간 모니터링&#10;데이터 수집 및 분석&#10;알림 시스템\"\r\n          />\r\n        )}\r\n        {currentLang === 'en' && (\r\n          <textarea\r\n            value={typeof formData.featuresEn === 'string' ? formData.featuresEn : (Array.isArray(formData.featuresEn) ? formData.featuresEn.join('\\n') : '')}\r\n            onChange={(e) => setFormData({ ...formData, featuresEn: e.target.value })}\r\n            rows={4}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\r\n            placeholder=\"Real-time monitoring&#10;Data collection and analysis&#10;Alert system\"\r\n          />\r\n        )}\r\n        {currentLang === 'ja' && (\r\n          <textarea\r\n            value={typeof formData.featuresJa === 'string' ? formData.featuresJa : (Array.isArray(formData.featuresJa) ? formData.featuresJa.join('\\n') : '')}\r\n            onChange={(e) => setFormData({ ...formData, featuresJa: e.target.value })}\r\n            rows={4}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\r\n            placeholder=\"リアルタイム監視&#10;データ収集と分析&#10;通知システム\"\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      {/* Learnings Field (Multilingual) */}\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          학습 내용 (줄바꿈으로 구분)\r\n          <span className=\"text-xs text-gray-500 ml-2\">\r\n            ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n          </span>\r\n        </label>\r\n        {currentLang === 'ko' && (\r\n          <textarea\r\n            value={typeof formData.learnings === 'string' ? formData.learnings : (Array.isArray(formData.learnings) ? formData.learnings.join('\\n') : '')}\r\n            onChange={(e) => setFormData({ ...formData, learnings: e.target.value })}\r\n            rows={4}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\r\n            placeholder=\"PLC 프로그래밍 기법&#10;실시간 데이터 처리&#10;웹 기반 대시보드 구축\"\r\n          />\r\n        )}\r\n        {currentLang === 'en' && (\r\n          <textarea\r\n            value={typeof formData.learningsEn === 'string' ? formData.learningsEn : (Array.isArray(formData.learningsEn) ? formData.learningsEn.join('\\n') : '')}\r\n            onChange={(e) => setFormData({ ...formData, learningsEn: e.target.value })}\r\n            rows={4}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\r\n            placeholder=\"PLC programming techniques&#10;Real-time data processing&#10;Web-based dashboard development\"\r\n          />\r\n        )}\r\n        {currentLang === 'ja' && (\r\n          <textarea\r\n            value={typeof formData.learningsJa === 'string' ? formData.learningsJa : (Array.isArray(formData.learningsJa) ? formData.learningsJa.join('\\n') : '')}\r\n            onChange={(e) => setFormData({ ...formData, learningsJa: e.target.value })}\r\n            rows={4}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\r\n            placeholder=\"PLCプログラミング技術&#10;リアルタイムデータ処理&#10;Webベースダッシュボード開発\"\r\n          />\r\n        )}\r\n      </div>\r\n      <div className=\"flex gap-3 pt-4\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleSaveClick}\r\n          disabled={isSaving}\r\n          className={`flex-1 flex items-center justify-center gap-2 bg-primary-600 hover:bg-primary-700 text-white font-medium py-2 rounded-lg transition-colors ${\r\n            isSaving ? 'opacity-50 cursor-not-allowed' : ''\r\n          }`}\r\n        >\r\n          {isSaving ? (\r\n            <>\r\n              <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n              저장 중...\r\n            </>\r\n          ) : (\r\n            <>\r\n              <FaSave /> 저장\r\n            </>\r\n          )}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={onCancel}\r\n          className=\"flex-1 bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-900 dark:text-white font-medium py-2 rounded-lg transition-colors\"\r\n        >\r\n          취소\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport { SkillCategory, SkillCategoryFormData } from '../../types'\r\nimport LanguageTabs, { AdminLanguage } from '../common/LanguageTabs'\r\n\r\ninterface SkillCategoryFormProps {\r\n  initialData?: SkillCategory | null\r\n  onSave: (data: SkillCategoryFormData) => void\r\n  onCancel: () => void\r\n  isSaving?: boolean\r\n}\r\n\r\nconst SkillCategoryForm: React.FC<SkillCategoryFormProps> = ({\r\n  initialData,\r\n  onSave,\r\n  onCancel,\r\n  isSaving = false\r\n}) => {\r\n  const [currentLang, setCurrentLang] = useState<AdminLanguage>('ko')\r\n  const [formData, setFormData] = useState<SkillCategoryFormData>({\r\n    title: '',\r\n    titleEn: '',\r\n    titleJa: '',\r\n    description: '',\r\n    descriptionEn: '',\r\n    descriptionJa: '',\r\n    color: '#3B82F6',\r\n    order: 0\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (initialData) {\r\n      setFormData({\r\n        title: initialData.title,\r\n        titleEn: initialData.titleEn || '',\r\n        titleJa: initialData.titleJa || '',\r\n        description: initialData.description || '',\r\n        descriptionEn: initialData.descriptionEn || '',\r\n        descriptionJa: initialData.descriptionJa || '',\r\n        color: initialData.color,\r\n        order: initialData.order\r\n      })\r\n    }\r\n  }, [initialData])\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    console.log('📋 폼 제출:', formData)\r\n    onSave(formData)\r\n  }\r\n\r\n  const handleChange = (field: keyof SkillCategoryFormData, value: string | number) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }))\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg border border-gray-200 dark:border-gray-700 mb-6\">\r\n      <h3 className=\"text-lg font-semibold mb-4\">\r\n        {initialData ? '카테고리 수정' : '새 카테고리 추가'}\r\n      </h3>\r\n      \r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        {/* Language Tabs */}\r\n        <LanguageTabs activeLanguage={currentLang} onChange={setCurrentLang} />\r\n\r\n        {/* Title Field (Multilingual) */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-2\">\r\n            제목 {currentLang === 'ko' && <span className=\"text-red-500\">*</span>}\r\n            <span className=\"text-xs text-gray-500 ml-2\">\r\n              ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n            </span>\r\n          </label>\r\n          {currentLang === 'ko' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.title}\r\n              onChange={(e) => handleChange('title', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"예: 프로그래밍 언어\"\r\n              required\r\n            />\r\n          )}\r\n          {currentLang === 'en' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.titleEn || ''}\r\n              onChange={(e) => handleChange('titleEn', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"e.g., Programming Languages\"\r\n            />\r\n          )}\r\n          {currentLang === 'ja' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.titleJa || ''}\r\n              onChange={(e) => handleChange('titleJa', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"例: プログラミング言語\"\r\n            />\r\n          )}\r\n        </div>\r\n        \r\n        {/* Description Field (Multilingual) */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-2\">\r\n            설명\r\n            <span className=\"text-xs text-gray-500 ml-2\">\r\n              ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n            </span>\r\n          </label>\r\n          {currentLang === 'ko' && (\r\n            <textarea\r\n              value={formData.description}\r\n              onChange={(e) => handleChange('description', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              rows={3}\r\n              placeholder=\"카테고리에 대한 설명을 입력하세요\"\r\n            />\r\n          )}\r\n          {currentLang === 'en' && (\r\n            <textarea\r\n              value={formData.descriptionEn || ''}\r\n              onChange={(e) => handleChange('descriptionEn', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              rows={3}\r\n              placeholder=\"Enter description for this category\"\r\n            />\r\n          )}\r\n          {currentLang === 'ja' && (\r\n            <textarea\r\n              value={formData.descriptionJa || ''}\r\n              onChange={(e) => handleChange('descriptionJa', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              rows={3}\r\n              placeholder=\"このカテゴリの説明を入力してください\"\r\n            />\r\n          )}\r\n        </div>\r\n        \r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-2\">색상</label>\r\n          <input\r\n            type=\"color\"\r\n            value={formData.color}\r\n            onChange={(e) => handleChange('color', e.target.value)}\r\n            className=\"w-12 h-10 border border-gray-300 dark:border-gray-600 rounded-md\"\r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-2\">순서 (고급 옵션)</label>\r\n          <input\r\n            type=\"number\"\r\n            value={formData.order}\r\n            onChange={(e) => handleChange('order', parseInt(e.target.value) || 0)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            min=\"0\"\r\n          />\r\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n            💡 카테고리 목록에서 드래그하여 순서를 변경할 수 있습니다\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"flex gap-2\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isSaving}\r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50\"\r\n          >\r\n            {isSaving ? '저장 중...' : '저장'}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onCancel}\r\n            className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\r\n          >\r\n            취소\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SkillCategoryForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Skill, SkillFormData } from '../../types'\r\nimport DynamicIcon from '../common/DynamicIcon'\r\nimport LanguageTabs, { AdminLanguage } from '../common/LanguageTabs'\r\n\r\ninterface SkillFormProps {\r\n  initialData?: Skill | null\r\n  categoryId?: string | undefined\r\n  onSave: (data: SkillFormData) => void\r\n  onCancel: () => void\r\n  isSaving?: boolean\r\n}\r\n\r\nconst SkillForm: React.FC<SkillFormProps> = ({\r\n  initialData,\r\n  onSave,\r\n  onCancel,\r\n  isSaving = false\r\n}) => {\r\n  const [currentLang, setCurrentLang] = useState<AdminLanguage>('ko')\r\n  const [formData, setFormData] = useState<SkillFormData>({\r\n    name: '',\r\n    nameEn: '',\r\n    nameJa: '',\r\n    level: 50, // 새 스킬 생성 시 기본 숙련도\r\n    icon: 'FaMicrochip',\r\n    description: '',\r\n    descriptionEn: '',\r\n    descriptionJa: '',\r\n    order: 0\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (initialData) {\r\n      setFormData({\r\n        name: initialData.name,\r\n        nameEn: initialData.nameEn || '',\r\n        nameJa: initialData.nameJa || '',\r\n        level: initialData.level, // 기존 스킬의 숙련도 유지 (목록에서 조절)\r\n        icon: initialData.icon,\r\n        description: initialData.description || '',\r\n        descriptionEn: initialData.descriptionEn || '',\r\n        descriptionJa: initialData.descriptionJa || '',\r\n        order: initialData.order\r\n      })\r\n    }\r\n  }, [initialData])\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    onSave(formData)\r\n  }\r\n\r\n  const handleChange = (field: keyof SkillFormData, value: string | number) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }))\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg border border-gray-200 dark:border-gray-700 mb-6\">\r\n      <h3 className=\"text-lg font-semibold mb-4\">\r\n        {initialData ? '스킬 수정' : '새 스킬 추가'}\r\n      </h3>\r\n      \r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        {/* Language Tabs */}\r\n        <LanguageTabs activeLanguage={currentLang} onChange={setCurrentLang} />\r\n\r\n        {/* Name Field (Multilingual) */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-2\">\r\n            이름 {currentLang === 'ko' && <span className=\"text-red-500\">*</span>}\r\n            <span className=\"text-xs text-gray-500 ml-2\">\r\n              ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n            </span>\r\n          </label>\r\n          {currentLang === 'ko' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.name}\r\n              onChange={(e) => handleChange('name', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"예: Python, React, PLC\"\r\n              required\r\n            />\r\n          )}\r\n          {currentLang === 'en' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.nameEn || ''}\r\n              onChange={(e) => handleChange('nameEn', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"e.g., Python, React, PLC\"\r\n            />\r\n          )}\r\n          {currentLang === 'ja' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.nameJa || ''}\r\n              onChange={(e) => handleChange('nameJa', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"例: Python, React, PLC\"\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        {/* Description Field (Multilingual) */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-2\">\r\n            설명 (선택사항)\r\n            <span className=\"text-xs text-gray-500 ml-2\">\r\n              ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n            </span>\r\n          </label>\r\n          {currentLang === 'ko' && (\r\n            <textarea\r\n              value={formData.description || ''}\r\n              onChange={(e) => handleChange('description', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              rows={3}\r\n              placeholder=\"스킬에 대한 간단한 설명\"\r\n            />\r\n          )}\r\n          {currentLang === 'en' && (\r\n            <textarea\r\n              value={formData.descriptionEn || ''}\r\n              onChange={(e) => handleChange('descriptionEn', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              rows={3}\r\n              placeholder=\"Brief description of this skill\"\r\n            />\r\n          )}\r\n          {currentLang === 'ja' && (\r\n            <textarea\r\n              value={formData.descriptionJa || ''}\r\n              onChange={(e) => handleChange('descriptionJa', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              rows={3}\r\n              placeholder=\"このスキルの簡単な説明\"\r\n            />\r\n          )}\r\n        </div>\r\n        \r\n        {/* 🌟 숙련도는 기술 관리 목록의 인라인 슬라이더로 조절합니다 */}\r\n        \r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-2\">아이콘</label>\r\n          <div className=\"flex items-center gap-3 mb-2\">\r\n            <div className=\"text-lg text-blue-600 dark:text-blue-400\">\r\n              <DynamicIcon iconName={formData.icon} size={20} />\r\n            </div>\r\n            <span className=\"text-sm text-gray-600 dark:text-gray-400\">미리보기</span>\r\n          </div>\r\n          <select\r\n            value={formData.icon}\r\n            onChange={(e) => handleChange('icon', e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          >\r\n            <optgroup label=\"프로그래밍 언어\">\r\n              <option value=\"FaPython\">Python</option>\r\n              <option value=\"SiJavascript\">JavaScript</option>\r\n              <option value=\"SiTypescript\">TypeScript</option>\r\n              <option value=\"SiC\">C</option>\r\n              <option value=\"SiCplusplus\">C++</option>\r\n              <option value=\"SiCsharp\">C#</option>\r\n              <option value=\"SiGo\">Go</option>\r\n              <option value=\"SiRust\">Rust</option>\r\n              <option value=\"SiJava\">Java</option>\r\n              <option value=\"SiPhp\">PHP</option>\r\n              <option value=\"SiRuby\">Ruby</option>\r\n              <option value=\"SiSwift\">Swift</option>\r\n              <option value=\"SiKotlin\">Kotlin</option>\r\n            </optgroup>\r\n            <optgroup label=\"프레임워크 & 라이브러리\">\r\n              <option value=\"SiReact\">React</option>\r\n              <option value=\"SiNodedotjs\">Node.js</option>\r\n              <option value=\"SiVuedotjs\">Vue.js</option>\r\n              <option value=\"SiAngular\">Angular</option>\r\n              <option value=\"SiNextdotjs\">Next.js</option>\r\n              <option value=\"SiExpress\">Express</option>\r\n              <option value=\"SiDjango\">Django</option>\r\n              <option value=\"SiFlask\">Flask</option>\r\n              <option value=\"SiSpring\">Spring</option>\r\n            </optgroup>\r\n            <optgroup label=\"데이터베이스\">\r\n              <option value=\"FaDatabase\">Database</option>\r\n              <option value=\"SiMysql\">MySQL</option>\r\n              <option value=\"SiMongodb\">MongoDB</option>\r\n              <option value=\"SiPostgresql\">PostgreSQL</option>\r\n              <option value=\"SiRedis\">Redis</option>\r\n              <option value=\"SiSqlite\">SQLite</option>\r\n            </optgroup>\r\n            <optgroup label=\"자동화 & 하드웨어\">\r\n              <option value=\"FaMicrochip\">Microchip</option>\r\n              <option value=\"FaRobot\">Robot</option>\r\n              <option value=\"SiArduino\">Arduino</option>\r\n              <option value=\"SiRaspberrypi\">Raspberry Pi</option>\r\n              <option value=\"SiSiemens\">Siemens</option>\r\n              <option value=\"SiMitsubishi\">Mitsubishi</option>\r\n            </optgroup>\r\n            <optgroup label=\"개발 도구\">\r\n              <option value=\"FaCode\">Code</option>\r\n              <option value=\"FaServer\">Server</option>\r\n              <option value=\"SiDocker\">Docker</option>\r\n              <option value=\"SiGit\">Git</option>\r\n              <option value=\"SiLinux\">Linux</option>\r\n              <option value=\"SiGithub\">GitHub</option>\r\n              <option value=\"SiGitlab\">GitLab</option>\r\n              <option value=\"SiVisualstudiocode\">VS Code</option>\r\n            </optgroup>\r\n            <optgroup label=\"언어\">\r\n              <option value=\"FaLanguage\">언어 일반</option>\r\n              <option value=\"FaGlobeAsia\">일본어</option>\r\n              <option value=\"FaGlobeEurope\">독일어</option>\r\n              <option value=\"FaFlag\">러시아어</option>\r\n              <option value=\"FaFlagCheckered\">한국어</option>\r\n              <option value=\"FaGlobe\">에스토니아어</option>\r\n              <option value=\"FaFont\">중국어</option>\r\n              <option value=\"FaComment\">영어</option>\r\n            </optgroup>\r\n            <optgroup label=\"학문 & 전공\">\r\n              <option value=\"FaLaptopCode\">컴퓨터공학</option>\r\n              <option value=\"FaChartBar\">통계학</option>\r\n              <option value=\"FaCalculator\">수학</option>\r\n              <option value=\"FaSquareRootAlt\">수학 (고급)</option>\r\n              <option value=\"FaUniversity\">대학/학술</option>\r\n              <option value=\"FaGraduationCap\">졸업/학위</option>\r\n            </optgroup>\r\n            <optgroup label=\"공학\">\r\n              <option value=\"FaCogs\">공학 일반</option>\r\n              <option value=\"FaTools\">기계공학</option>\r\n              <option value=\"FaWrench\">기계설계</option>\r\n              <option value=\"FaBolt\">전기공학</option>\r\n              <option value=\"FaPlug\">전력공학</option>\r\n              <option value=\"FaMicrochip\">전자공학</option>\r\n              <option value=\"FaHardHat\">토목공학</option>\r\n              <option value=\"FaBuilding\">건축공학</option>\r\n              <option value=\"FaIndustry\">산업공학</option>\r\n              <option value=\"FaChartLine\">경영공학</option>\r\n              <option value=\"FaFlask\">화학공학</option>\r\n              <option value=\"FaCubes\">재료공학</option>\r\n              <option value=\"FaPlane\">항공공학</option>\r\n              <option value=\"FaRocket\">우주공학</option>\r\n              <option value=\"FaLeaf\">환경공학</option>\r\n              <option value=\"FaRecycle\">자원공학</option>\r\n              <option value=\"FaDna\">생명공학</option>\r\n              <option value=\"FaOilCan\">석유공학</option>\r\n              <option value=\"FaFire\">에너지공학</option>\r\n              <option value=\"FaShieldAlt\">안전공학</option>\r\n            </optgroup>\r\n            <optgroup label=\"과학\">\r\n              <option value=\"FaAtom\">원자/물리학</option>\r\n              <option value=\"FaFlask\">화학/실험</option>\r\n              <option value=\"FaMicroscope\">생물학/연구</option>\r\n              <option value=\"FaDna\">DNA/유전학</option>\r\n              <option value=\"FaRocket\">우주/항공</option>\r\n              <option value=\"FaSatellite\">위성/통신</option>\r\n              <option value=\"FaBrain\">뇌과학/심리학</option>\r\n              <option value=\"FaLightbulb\">발명/혁신</option>\r\n              <option value=\"FaWaveSquare\">전자/전기공학</option>\r\n              <option value=\"FaMagnet\">자기학/물리</option>\r\n            </optgroup>\r\n            <optgroup label=\"예술 & 취미\">\r\n              <option value=\"FaPalette\">미술</option>\r\n              <option value=\"FaPaintBrush\">그림</option>\r\n              <option value=\"FaCamera\">사진</option>\r\n              <option value=\"FaCameraRetro\">사진 (레트로)</option>\r\n              <option value=\"FaCoffee\">커피</option>\r\n              <option value=\"FaMugHot\">커피 (머그)</option>\r\n              <option value=\"FaMusic\">음악</option>\r\n              <option value=\"FaGuitar\">악기</option>\r\n              <option value=\"FaFilm\">영화/영상</option>\r\n            </optgroup>\r\n            <optgroup label=\"경력 & 경험\">\r\n              <option value=\"FaUserShield\">군인</option>\r\n              <option value=\"FaShieldAlt\">방어/보안</option>\r\n              <option value=\"FaCar\">운전</option>\r\n              <option value=\"FaTruck\">트럭 운전</option>\r\n              <option value=\"FaShippingFast\">물류</option>\r\n              <option value=\"FaBriefcase\">비즈니스</option>\r\n              <option value=\"FaHandshake\">협업</option>\r\n            </optgroup>\r\n            <optgroup label=\"기타\">\r\n              <option value=\"FaChartLine\">Chart</option>\r\n              <option value=\"FaCubes\">Cubes</option>\r\n              <option value=\"FaCog\">Settings</option>\r\n              <option value=\"FaMobile\">Mobile</option>\r\n              <option value=\"FaDesktop\">Desktop</option>\r\n              <option value=\"FaCloud\">Cloud</option>\r\n              <option value=\"FaNetworkWired\">Network</option>\r\n            </optgroup>\r\n          </select>\r\n        </div>\r\n        \r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-2\">순서 (고급 옵션)</label>\r\n          <input\r\n            type=\"number\"\r\n            value={formData.order}\r\n            onChange={(e) => handleChange('order', parseInt(e.target.value) || 0)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            min=\"0\"\r\n          />\r\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n            💡 스킬 목록에서 드래그하여 순서를 변경할 수 있습니다\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"flex gap-2\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isSaving}\r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50\"\r\n          >\r\n            {isSaving ? '저장 중...' : '저장'}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onCancel}\r\n            className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\r\n          >\r\n            취소\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SkillForm\r\n","import React, { useState } from 'react'\r\nimport { FaSave } from 'react-icons/fa'\r\nimport { Category, CategoryFormData } from '../../types'\r\nimport LanguageTabs, { AdminLanguage } from '../common/LanguageTabs'\r\n\r\ninterface FormProps {\r\n  data?: Category\r\n  onSave: (data: CategoryFormData) => void\r\n  onCancel: () => void\r\n  isSaving?: boolean\r\n}\r\n\r\nconst CategoryForm: React.FC<FormProps> = ({ \r\n  data, \r\n  onSave, \r\n  onCancel, \r\n  isSaving = false \r\n}) => {\r\n  const [currentLang, setCurrentLang] = useState<AdminLanguage>('ko')\r\n  const [formData, setFormData] = useState<CategoryFormData>(\r\n    data\r\n      ? { \r\n          name: data.name,\r\n          nameEn: data.nameEn,\r\n          nameJa: data.nameJa,\r\n          order: data.order || 0,\r\n        } \r\n      : {\r\n          name: '',\r\n          nameEn: '',\r\n          nameJa: '',\r\n          order: 0,\r\n        }\r\n  )\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!formData.name.trim()) {\r\n      alert('카테고리 이름을 입력해주세요')\r\n      return\r\n    }\r\n\r\n    onSave(formData)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n      {/* Language Tabs */}\r\n      <LanguageTabs activeLanguage={currentLang} onChange={setCurrentLang} />\r\n\r\n      {/* Name Field (Multilingual) */}\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          카테고리 이름 {currentLang === 'ko' && <span className=\"text-red-500\">*</span>}\r\n          <span className=\"text-xs text-gray-500 ml-2\">\r\n            ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n          </span>\r\n        </label>\r\n        {currentLang === 'ko' && (\r\n          <input\r\n            type=\"text\"\r\n            value={formData.name}\r\n            onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"예: PLC, 웹개발, AI/ML\"\r\n            required\r\n          />\r\n        )}\r\n        {currentLang === 'en' && (\r\n          <input\r\n            type=\"text\"\r\n            value={formData.nameEn || ''}\r\n            onChange={(e) => setFormData({ ...formData, nameEn: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"e.g., PLC, Web Development, AI/ML\"\r\n          />\r\n        )}\r\n        {currentLang === 'ja' && (\r\n          <input\r\n            type=\"text\"\r\n            value={formData.nameJa || ''}\r\n            onChange={(e) => setFormData({ ...formData, nameJa: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"例: PLC, ウェブ開発, AI/ML\"\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          순서 (고급 옵션)\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          value={formData.order}\r\n          onChange={(e) => setFormData({ ...formData, order: parseInt(e.target.value) || 0 })}\r\n          className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          min=\"0\"\r\n        />\r\n        <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n          💡 카테고리 목록에서 드래그 앤 드롭으로 순서를 변경할 수 있습니다\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"flex gap-3 pt-4\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSaving || !formData.name.trim()}\r\n          className=\"flex-1 flex items-center justify-center gap-2 px-6 py-3 bg-primary-600 text-white rounded-lg hover:bg-primary-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors font-medium\"\r\n        >\r\n          <FaSave />\r\n          {isSaving ? '저장 중...' : '저장'}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={onCancel}\r\n          disabled={isSaving}\r\n          className=\"px-6 py-3 bg-gray-500 text-white rounded-lg hover:bg-gray-600 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors font-medium\"\r\n        >\r\n          취소\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default CategoryForm\r\n"],"names":["extractYouTubeId","url","patterns","pattern","match","getYouTubeThumbnail","videoId","quality","renderHtmlWithTimestamps","markdown","onTimestampClick","html","replace","_match","p1","p2","trim","renderMarkdown","groups","parseInt","BookForm","data","onSave","onCancel","isSaving","availableCategories","skillCategories","loading","skillsLoading","useSkills","categories","isLoading","categoriesLoading","useCategories","initialReadDate","readDate","isNaN","Date","getTime","toISOString","split","initialCategoryIds","categoryIds","map","catIdOrObj","_id","filter","Boolean","initialSkillIds","skillIds","skillIdOrObj","formData","setFormData","useState","title","author","category","coverImage","rating","handleCategoryToggle","categoryId","currentCategoryIds","newCategoryIds","includes","id","handleSkillCategoryToggle","categorySkillIds","skills","skill","currentSkillIds","newSkillIds","every","uniqueIds","Set","Array","from","isFormValid","jsxs","onSubmit","e","preventDefault","alert","className","children","jsx","jsxRuntimeExports","type","value","onChange","target","length","catId","find","c","name","onClick","FaTimes","isSelected","checked","star","FaStar","min","max","step","newRating","parseFloat","Math","placeholder","selectedCount","allSelected","someSelected","ref","el","indeterminate","stopPropagation","style","color","skillId","handleSkillToggle","disabled","Fragment","FaSave","ChapterForm","chapter","maxOrder","setTitle","order","setOrder","setIsSaving","useEffect","async","error","htmlFor","required","LearningForm","learning","topic","setTopic","content","setContent","stripHtml","tmp","document","createElement","innerHTML","textContent","innerText","ReactQuill","theme","modules","toolbar","header","list","indent","background","formats","VideoLearningForm","initialWatchDate","watchDate","videoUrlInput","setVideoUrlInput","videoUrl","purpose","keyTakeaways","application","useMemo","thumbnailUrl","isValidUrl","src","alt","onError","_","i","starValue","rows","categorySkills","s","selectedInCategory","input","VideoPlaylistForm","playlistUrlInput","setPlaylistUrlInput","playlistId","extractYouTubePlaylistId","reactExports","saveData","PlaylistVideoForm","iconOptions","key","icon","FaBriefcase","label","FaCoffee","FaGraduationCap","FaChartLine","FaLaptopCode","FaCode","FaCog","FaRobot","FaCar","FaShieldAlt","SortableCategoryItem","detail","index","editingCategoryIndex","onEdit","onRemove","attributes","listeners","setNodeRef","transform","transition","isDragging","useSortable","CSS","Transform","toString","opacity","zIndex","FaBars","items","FaTrash","slice","item","ExperienceForm","currentLang","setCurrentLang","initialFormData","iconKey","details","skillsEn","skillsJa","period","company","description","skillsInput","setSkillsInput","isArray","join","setEditingCategoryIndex","categoryFormData","setCategoryFormData","categoryEn","categoryJa","contentEn","contentJa","editDetailCategory","_a","itemsEn","_b","itemsJa","removeDetailCategory","confirm","newDetails","splice","skillsArray","orderedDetails","finalFormData","option","React","opt","FaPlus","DndContext","collisionDetection","closestCenter","onDragEnd","event","active","over","oldIndex","findIndex","newIndex","movedItem","reorderedDetails","SortableContext","strategy","verticalListSortingStrategy","LanguageTabs","activeLanguage","RichTextEditor","newDetail","onBlur","ProjectForm","videoItems","handleVideoUrlChange","handleVideoDescriptionChange","handleAddVideo","handleRemoveVideo","prepareDataForSubmit","useProjectForm","titleEn","titleJa","status","githubLink","liveLink","image","descriptionEn","descriptionJa","technologies","technologiesEn","technologiesJa","images","FaVideo","detailedDescription","detailedDescriptionEn","detailedDescriptionJa","features","featuresEn","featuresJa","learnings","learningsEn","learningsJa","processedData","message","SkillCategoryForm","initialData","handleChange","field","prev","SkillForm","nameEn","nameJa","level","DynamicIcon","iconName","size","CategoryForm"],"mappings":"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"}