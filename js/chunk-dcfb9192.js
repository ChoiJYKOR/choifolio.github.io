import{c as e,u as a,b as t}from"./chunk-9a18e39e.js";import{am as r}from"./index-5373f156.js";const s="videoLearnings",n=()=>e({queryKey:[s,"list"],queryFn:async()=>{var e;const a=await r.getAll();return(null==(e=a.data)?void 0:e.data)||a.data||[]},staleTime:3e5}),i=a=>e({queryKey:[s,"detail",a],queryFn:async()=>{if(!a)throw new Error("ID is required");return(await r.getById(a)).data},enabled:!!a,staleTime:3e5}),u=()=>{const e=a();return t({mutationFn:async({id:e,data:a})=>(await r.update(e,a)).data,onSuccess:(a,t)=>{e.invalidateQueries({queryKey:[s,"list"]}),e.invalidateQueries({queryKey:[s,"detail",t.id]})}})},c=()=>{const e=a();return t({mutationFn:async e=>{await r.delete(e)},onSuccess:()=>{e.invalidateQueries({queryKey:[s,"list"]}),e.invalidateQueries({queryKey:["dataCounts"]})}})},d=()=>{const{data:e=[],isLoading:i,isError:d,error:o,refetch:y}=n(),l=(()=>{const e=a();return t({mutationFn:async e=>(await r.create(e)).data,onSuccess:()=>{e.invalidateQueries({queryKey:[s,"list"]}),e.invalidateQueries({queryKey:["dataCounts"]})}})})(),m=u(),q=c();return{videoLearnings:e,isLoading:i,error:d?o:null,createVideoLearning:async e=>{try{return await l.mutateAsync(e),{success:!0}}catch(a){return{success:!1,error:a}}},updateVideoLearning:async(e,a)=>{try{return await m.mutateAsync({id:e,data:a}),{success:!0}}catch(t){return{success:!1,error:t}}},deleteVideoLearning:async e=>{try{return await q.mutateAsync(e),{success:!0}}catch(a){return{success:!1,error:a}}},refetch:y}};export{i as a,c as b,u as c,d,n as u};
//# sourceMappingURL=chunk-dcfb9192.js.map
