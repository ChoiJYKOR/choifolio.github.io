{"version":3,"file":"About-ac68dc9a.js","sources":["../../src/pages/About.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { useInView } from 'react-intersection-observer'\r\nimport { FaCoffee, FaCog, FaChartLine, FaRobot, FaPlus, FaGraduationCap, FaShieldAlt } from 'react-icons/fa'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSiteSettings } from '@/hooks/useSiteSettings'\r\nimport { useAuth } from '@/contexts/AuthContext'\r\nimport { experiencesAPI } from '@/services/api'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { getLocalizedField } from '@/utils/i18nUtils'\r\n\r\n// TypeScript 인터페이스 정의 (API의 Experience 타입과 동일하게)\r\ninterface JourneyStep {\r\n  _id?: string\r\n  icon: React.ComponentType<{ className?: string; size?: number }>\r\n  title: string      // 직책\r\n  company: string    // 회사\r\n  period: string     // 기간\r\n  skills: string[]   // 기술\r\n  description: string\r\n  order?: number\r\n}\r\n\r\n// 아이콘 매핑 (API에서 iconKey를 받을 경우 사용)\r\nconst iconMap: { [key: string]: React.ComponentType<{ className?: string; size?: number }> } = {\r\n  coffee: FaCoffee,\r\n  FaCoffee: FaCoffee,\r\n  cog: FaCog,\r\n  FaCog: FaCog,\r\n  chart: FaChartLine,\r\n  FaChartLine: FaChartLine,\r\n  robot: FaRobot,\r\n  FaRobot: FaRobot,\r\n  graduation: FaGraduationCap,\r\n  FaGraduationCap: FaGraduationCap,\r\n  shield: FaShieldAlt,\r\n  FaShieldAlt: FaShieldAlt,\r\n}\r\n\r\n// 유효한 아이콘 키 목록 (타입 안정성을 위해)\r\nconst validIconKeys = Object.keys(iconMap) as Array<keyof typeof iconMap>\r\n\r\n// 안전한 아이콘 가져오기 함수\r\nconst getSafeIcon = (iconKey: string | undefined): React.ComponentType<{ className?: string; size?: number }> => {\r\n  if (!iconKey || !validIconKeys.includes(iconKey as keyof typeof iconMap)) {\r\n    console.warn(`Invalid icon key: ${iconKey}. Using default icon 'cog'.`)\r\n    return iconMap['cog']!\r\n  }\r\n  return iconMap[iconKey as keyof typeof iconMap]!\r\n}\r\n\r\n// 기본 여정 데이터 (API 로드 실패 시 사용)\r\nconst defaultJourney: JourneyStep[] = [\r\n    {\r\n      icon: FaCoffee,\r\n      company: '스타벅스',\r\n      title: '바리스타',\r\n      period: '2018 - 2023',\r\n      skills: ['고객 서비스', '품질 관리', '효율성 개선'],\r\n      description: '5년간 고객 서비스와 품질 관리 경험',\r\n      order: 1,\r\n    },\r\n    {\r\n      icon: FaCog,\r\n      company: '자기개발',\r\n      title: '공장자동화 학습',\r\n      period: '2024 - 현재',\r\n      skills: ['PLC', 'IoT', '자동화 시스템'],\r\n      description: 'PLC, IoT, 자동화 시스템 학습',\r\n      order: 2,\r\n    },\r\n    {\r\n      icon: FaChartLine,\r\n      company: '자기개발',\r\n      title: '데이터 분석가',\r\n      period: '2024 - 현재',\r\n      skills: ['Python', '통계학', '데이터과학'],\r\n      description: 'Python, 통계학, 데이터과학 전문화',\r\n      order: 3,\r\n    },\r\n    {\r\n      icon: FaRobot,\r\n      company: '미래',\r\n      title: '자동화 전문가',\r\n      period: '2025 -',\r\n      skills: ['스마트 팩토리', 'AI', 'Industry 4.0'],\r\n      description: '스마트 팩토리의 미래 구현',\r\n      order: 4,\r\n    },\r\n]\r\n\r\nconst About: React.FC = () => {\r\n  const { settings: siteSettings, loading: settingsLoading } = useSiteSettings()\r\n  const { isAuthenticated } = useAuth()\r\n  const { i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  const [journey, setJourney] = useState<JourneyStep[]>([])\r\n  const [dataLoading, setDataLoading] = useState(true)\r\n  \r\n  const [ref, inView] = useInView({\r\n    triggerOnce: true,\r\n    threshold: 0.1,\r\n  })\r\n\r\n  // 여정 데이터 로딩 (useCallback으로 메모이제이션)\r\n  const fetchJourneyData = useCallback(async () => {\r\n    try {\r\n      setDataLoading(true)\r\n      const response = await experiencesAPI.getAll()\r\n      \r\n      if (response.data?.data && response.data.data.length > 0) {\r\n        // API 데이터를 JourneyStep 형식으로 변환\r\n        const mappedJourney: JourneyStep[] = response.data.data\r\n          .map((item: any) => ({\r\n            _id: item._id,\r\n            icon: getSafeIcon(item.iconKey), // 안전한 아이콘 가져오기\r\n            company: item.company || '회사명 없음',\r\n            title: item.title,\r\n            period: item.period,\r\n            skills: item.skills || [],\r\n            description: item.description,\r\n            order: item.order || 0,\r\n          }))\r\n          .sort((a: JourneyStep, b: JourneyStep) => (a.order || 0) - (b.order || 0))\r\n        \r\n        setJourney(mappedJourney)\r\n      } else {\r\n        // API 데이터가 없으면 기본 데이터 사용\r\n        setJourney(defaultJourney)\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch journey data:', error)\r\n      // 오류 발생 시 기본 데이터 사용\r\n      setJourney(defaultJourney)\r\n    } finally {\r\n      setDataLoading(false)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    fetchJourneyData()\r\n  }, [fetchJourneyData])\r\n\r\n  const containerVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.2,\r\n      },\r\n    },\r\n  }\r\n\r\n  const itemVariants = {\r\n    hidden: { opacity: 0, y: 30 },\r\n    visible: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        duration: 0.6,\r\n        ease: 'easeOut',\r\n      },\r\n    },\r\n  }\r\n\r\n  // 로딩 상태\r\n  if (settingsLoading || dataLoading) {\r\n    return (\r\n      <section className=\"section-padding bg-white dark:bg-dark-800 min-h-screen\">\r\n        <div className=\"max-w-7xl mx-auto flex justify-center py-12\">\r\n          <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <section className=\"section-padding bg-white dark:bg-dark-800 min-h-screen\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <motion.div\r\n          ref={ref}\r\n          variants={containerVariants}\r\n          initial=\"hidden\"\r\n          animate={inView ? 'visible' : 'hidden'}\r\n        >\r\n          {/* 1. 제목 및 부제목 */}\r\n          <motion.div variants={itemVariants} className=\"text-center mb-16\">\r\n            <h2 className=\"text-4xl md:text-5xl font-bold text-dark-900 dark:text-white mb-6\">\r\n              {getLocalizedField(currentLang, siteSettings?.aboutTitle, siteSettings?.aboutTitleEn, siteSettings?.aboutTitleJa) || '저의 여정'}\r\n            </h2>\r\n            {(siteSettings?.aboutSubtitle || !settingsLoading) && (\r\n              <p className=\"text-xl text-dark-600 dark:text-dark-300 max-w-3xl mx-auto mb-8\">\r\n                {getLocalizedField(currentLang, siteSettings?.aboutSubtitle, siteSettings?.aboutSubtitleEn, siteSettings?.aboutSubtitleJa) || '커피 한 잔에서 시작된 공장자동화 전문가로의 여정'}\r\n              </p>\r\n            )}\r\n          </motion.div>\r\n\r\n          {/* 2. 소개 편집 버튼 (인증된 경우) */}\r\n          {isAuthenticated && (\r\n            <motion.div variants={itemVariants} className=\"mb-8 flex justify-end\">\r\n              <Link\r\n                to=\"/admin\"\r\n                className=\"inline-flex items-center gap-2 bg-accent-500 hover:bg-accent-600 text-white font-medium px-6 py-3 rounded-lg transition-colors duration-600 shadow-medium hover:shadow-glow\"\r\n              >\r\n                <FaPlus /> 소개 편집\r\n              </Link>\r\n            </motion.div>\r\n          )}\r\n\r\n          {/* 3. 소개 내용 */}\r\n          <motion.div variants={itemVariants} className=\"card p-10 mb-12\">\r\n            <h3 className=\"text-2xl font-bold text-dark-900 dark:text-white mb-6\">\r\n              {getLocalizedField(currentLang, siteSettings?.aboutCardTitle, siteSettings?.aboutCardTitleEn, siteSettings?.aboutCardTitleJa) || '바리스타에서 자동화 전문가로'}\r\n            </h3>\r\n            <div className=\"space-y-6 text-dark-600 dark:text-dark-300 leading-relaxed\">\r\n              <p className=\"whitespace-pre-line\">\r\n                {getLocalizedField(currentLang, siteSettings?.aboutDescription1, siteSettings?.aboutDescription1En, siteSettings?.aboutDescription1Ja) || '스타벅스에서 5년간 바리스타로 일하며 고객 서비스, 품질 관리, 효율성 개선에 대한 깊은 이해를 얻었습니다.'}\r\n              </p>\r\n              <p className=\"whitespace-pre-line\">\r\n                {getLocalizedField(currentLang, siteSettings?.aboutDescription2, siteSettings?.aboutDescription2En, siteSettings?.aboutDescription2Ja) || '현재는 PLC 프로그래밍, 통계학, 데이터과학 등 다양한 기술을 학습하며 스마트 팩토리의 미래를 준비하고 있습니다.'}\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"mt-8 flex flex-wrap gap-3\">\r\n              {(siteSettings?.mainSkills || ['PLC 프로그래밍', '데이터 분석', 'Python', '협동로봇', 'IoT']).map((tech) => (\r\n                <span\r\n                  key={tech}\r\n                  className=\"px-4 py-2 bg-primary-100 dark:bg-primary-900 text-primary-700 dark:text-primary-300 rounded-full text-sm font-medium\"\r\n                >\r\n                  {tech}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </motion.div>\r\n\r\n          {/* 4. 성장 여정 */}\r\n          <motion.div variants={itemVariants} className=\"space-y-6\">\r\n            <h3 className=\"text-2xl font-bold text-dark-900 dark:text-white mb-8 text-center\">\r\n              {getLocalizedField(currentLang, siteSettings?.aboutJourneyTitle, siteSettings?.aboutJourneyTitleEn, siteSettings?.aboutJourneyTitleJa) || '성장 여정'}\r\n            </h3>\r\n            <div className=\"grid md:grid-cols-2 gap-6\">\r\n              {journey.map((step, index) => {\r\n                const IconComponent = step.icon\r\n                return (\r\n                  <motion.div\r\n                    key={step._id || index}\r\n                    variants={itemVariants}\r\n                    className=\"card p-6 hover:shadow-xl transition-all duration-300\"\r\n                    whileHover={{ y: -5 }}\r\n                  >\r\n                    <div className=\"flex items-start gap-4\">\r\n                      <div className=\"p-3 bg-primary-100 dark:bg-primary-900 rounded-xl shrink-0\">\r\n                        <IconComponent className=\"text-primary-600 dark:text-primary-400\" size={24} />\r\n                      </div>\r\n                      <div className=\"flex-1\">\r\n                        {/* 🌟 회사명 */}\r\n                        <p className=\"text-xs text-dark-500 dark:text-dark-400 font-medium mb-1\">\r\n                          {step.company}\r\n                        </p>\r\n                        {/* 🌟 직책 */}\r\n                        <h4 className=\"text-lg font-bold text-dark-900 dark:text-white mb-1\">\r\n                          {step.title}\r\n                        </h4>\r\n                        {/* 🌟 기간 */}\r\n                        <p className=\"text-sm text-primary-600 dark:text-primary-400 font-medium mb-3\">\r\n                          {step.period}\r\n                        </p>\r\n                        {/* 🌟 기술 태그 (간략하게) */}\r\n                        {step.skills && step.skills.length > 0 && (\r\n                          <div className=\"flex flex-wrap gap-1.5\">\r\n                            {step.skills.slice(0, 4).map((skill, idx) => (\r\n                              <span\r\n                                key={idx}\r\n                                className=\"px-2 py-0.5 bg-secondary-100 dark:bg-secondary-900/50 text-secondary-700 dark:text-secondary-300 rounded text-xs font-medium\"\r\n                              >\r\n                                {skill}\r\n                              </span>\r\n                            ))}\r\n                            {step.skills.length > 4 && (\r\n                              <span className=\"px-2 py-0.5 text-dark-500 dark:text-dark-400 text-xs\">\r\n                                +{step.skills.length - 4}\r\n                              </span>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </motion.div>\r\n                )\r\n              })}\r\n            </div>\r\n          </motion.div>\r\n        </motion.div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default About\r\n"],"names":["iconMap","coffee","FaCoffee","cog","FaCog","chart","FaChartLine","robot","FaRobot","graduation","FaGraduationCap","shield","FaShieldAlt","validIconKeys","Object","keys","defaultJourney","icon","company","title","period","skills","description","order","About","settings","siteSettings","loading","settingsLoading","useSiteSettings","isAuthenticated","useAuth","i18n","useTranslation","currentLang","language","journey","setJourney","useState","dataLoading","setDataLoading","ref","inView","useInView","triggerOnce","threshold","fetchJourneyData","useCallback","async","response","experiencesAPI","getAll","_a","data","length","mappedJourney","map","item","_id","iconKey","includes","sort","a","b","error","useEffect","itemVariants","hidden","opacity","y","visible","transition","duration","ease","jsx","className","children","jsxRuntimeExports","jsxs","motion","div","variants","staggerChildren","initial","animate","getLocalizedField","aboutTitle","aboutTitleEn","aboutTitleJa","aboutSubtitle","aboutSubtitleEn","aboutSubtitleJa","Link","to","FaPlus","aboutCardTitle","aboutCardTitleEn","aboutCardTitleJa","aboutDescription1","aboutDescription1En","aboutDescription1Ja","aboutDescription2","aboutDescription2En","aboutDescription2Ja","mainSkills","tech","aboutJourneyTitle","aboutJourneyTitleEn","aboutJourneyTitleJa","step","index","IconComponent","whileHover","size","slice","skill","idx"],"mappings":"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"}