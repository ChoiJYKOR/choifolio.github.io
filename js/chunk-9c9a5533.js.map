{"version":3,"file":"chunk-9c9a5533.js","sources":["../../node_modules/i18next/dist/esm/i18next.js"],"sourcesContent":["const isString = obj => typeof obj === 'string';\nconst defer = () => {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n};\nconst makeString = object => {\n  if (object == null) return '';\n  return '' + object;\n};\nconst copy = (a, s, t) => {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n};\nconst lastOfPathSeparatorRegExp = /###/g;\nconst cleanKey = key => key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\nconst canNotTraverseDeeper = object => !object || isString(object);\nconst getLastOfPath = (object, path, Empty) => {\n  const stack = !isString(path) ? path : path.split('.');\n  let stackIndex = 0;\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper(object)) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n  if (canNotTraverseDeeper(object)) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n};\nconst setPath = (object, path, newValue) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if (last?.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[`${last.k}.${e}`] = newValue;\n};\nconst pushPath = (object, path, newValue, concat) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  obj[k].push(newValue);\n};\nconst getPath = (object, path) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  if (!Object.prototype.hasOwnProperty.call(obj, k)) return undefined;\n  return obj[k];\n};\nconst getPathWithDefaults = (data, defaultData, key) => {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n};\nconst deepExtend = (target, source, overwrite) => {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n};\nconst regexEscape = str => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nconst escape = data => {\n  if (isString(data)) {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n};\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\nconst looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n};\nconst deepFind = (obj, path, keySeparator = '.') => {\n  if (!obj) return undefined;\n  if (obj[path]) {\n    if (!Object.prototype.hasOwnProperty.call(obj, path)) return undefined;\n    return obj[path];\n  }\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n};\nconst getCleanedCode = code => code?.replace('_', '-');\n\nconst consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    console?.[type]?.apply?.(console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger, options = {}) {\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger, options = {}) {\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log(...args) {\n    return this.forward(args, 'log', '', true);\n  }\n  warn(...args) {\n    return this.forward(args, 'warn', '', true);\n  }\n  error(...args) {\n    return this.forward(args, 'error', '');\n  }\n  deprecate(...args) {\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (isString(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\n\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event].delete(listener);\n  }\n  emit(event, ...args) {\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\n\nclass ResourceStore extends EventEmitter {\n  constructor(data, options = {\n    ns: ['translation'],\n    defaultNS: 'translation'\n  }) {\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key, options = {}) {\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (isString(key) && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || !isString(key)) return result;\n    return deepFind(this.data?.[lng]?.[ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value, options = {\n    silent: false\n  }) {\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources, options = {\n    silent: false\n  }) {\n    for (const m in resources) {\n      if (isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite, options = {\n    silent: false,\n    skipCopy: false\n  }) {\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = {\n        ...pack,\n        ...resources\n      };\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      value = this.processors[processor]?.process(value, key, options, translator) ?? value;\n    });\n    return value;\n  }\n};\n\nconst PATH_KEY = Symbol('i18next/PATH_KEY');\nfunction createProxy() {\n  const state = [];\n  const handler = Object.create(null);\n  let proxy;\n  handler.get = (target, key) => {\n    proxy?.revoke?.();\n    if (key === PATH_KEY) return state;\n    state.push(key);\n    proxy = Proxy.revocable(target, handler);\n    return proxy.proxy;\n  };\n  return Proxy.revocable(Object.create(null), handler).proxy;\n}\nfunction keysFromSelector(selector, opts) {\n  const {\n    [PATH_KEY]: path\n  } = selector(createProxy());\n  return path.join(opts?.keySeparator ?? '.');\n}\n\nconst checkedLoadedFor = {};\nconst shouldHandleAsObject = res => !isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\nclass Translator extends EventEmitter {\n  constructor(services, options = {}) {\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key, o = {\n    interpolation: {}\n  }) {\n    const opt = {\n      ...o\n    };\n    if (key == null) return false;\n    const resolved = this.resolve(key, opt);\n    if (resolved?.res === undefined) return false;\n    const isObject = shouldHandleAsObject(resolved.res);\n    if (opt.returnObjects === false && isObject) {\n      return false;\n    }\n    return true;\n  }\n  extractFromKey(key, opt) {\n    let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n    let namespaces = opt.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !opt.keySeparator && !this.options.userDefinedNsSeparator && !opt.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces: isString(namespaces) ? [namespaces] : namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    return {\n      key,\n      namespaces: isString(namespaces) ? [namespaces] : namespaces\n    };\n  }\n  translate(keys, o, lastKey) {\n    let opt = typeof o === 'object' ? {\n      ...o\n    } : o;\n    if (typeof opt !== 'object' && this.options.overloadTranslationOptionHandler) {\n      opt = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof opt === 'object') opt = {\n      ...opt\n    };\n    if (!opt) opt = {};\n    if (keys == null) return '';\n    if (typeof keys === 'function') keys = keysFromSelector(keys, {\n      ...this.options,\n      ...opt\n    });\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = opt.returnDetails !== undefined ? opt.returnDetails : this.options.returnDetails;\n    const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], opt);\n    const namespace = namespaces[namespaces.length - 1];\n    let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const lng = opt.lng || this.language;\n    const appendNamespaceToCIMode = opt.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng?.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(opt)\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(opt)\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, opt);\n    let res = resolved?.res;\n    const resUsedKey = resolved?.usedKey || key;\n    const resExactUsedKey = resolved?.exactUsedKey || key;\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = opt.joinArrays !== undefined ? opt.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n    const hasDefaultValue = Translator.hasDefaultValue(opt);\n    const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, opt) : '';\n    const defaultValueSuffixOrdinalFallback = opt.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, {\n      ordinal: false\n    }) : '';\n    const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n    const defaultValue = needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] || opt[`defaultValue${defaultValueSuffix}`] || opt[`defaultValue${defaultValueSuffixOrdinalFallback}`] || opt.defaultValue;\n    let resForObjHndl = res;\n    if (handleAsObjectInI18nFormat && !res && hasDefaultValue) {\n      resForObjHndl = defaultValue;\n    }\n    const handleAsObject = shouldHandleAsObject(resForObjHndl);\n    const resType = Object.prototype.toString.apply(resForObjHndl);\n    if (handleAsObjectInI18nFormat && resForObjHndl && handleAsObject && noObject.indexOf(resType) < 0 && !(isString(joinArrays) && Array.isArray(resForObjHndl))) {\n      if (!opt.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, resForObjHndl, {\n          ...opt,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(opt);\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = Array.isArray(resForObjHndl);\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in resForObjHndl) {\n          if (Object.prototype.hasOwnProperty.call(resForObjHndl, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            if (hasDefaultValue && !res) {\n              copy[m] = this.translate(deepKey, {\n                ...opt,\n                defaultValue: shouldHandleAsObject(defaultValue) ? defaultValue[m] : undefined,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            } else {\n              copy[m] = this.translate(deepKey, {\n                ...opt,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            }\n            if (copy[m] === deepKey) copy[m] = resForObjHndl[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res)) {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, opt, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = opt.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, {\n            ...opt,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, opt.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(opt.lng || this.language);\n        } else {\n          lngs.push(opt.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, opt);\n          } else if (this.backendConnector?.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, opt);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, opt);\n              if (needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, opt[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, opt, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) {\n        res = `${namespace}${nsSeparator}${key}`;\n      }\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}${nsSeparator}${key}` : key, usedDefault ? res : undefined, opt);\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(opt);\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, opt, resolved, lastKey) {\n    if (this.i18nFormat?.parse) {\n      res = this.i18nFormat.parse(res, {\n        ...this.options.interpolation.defaultVariables,\n        ...opt\n      }, opt.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!opt.skipInterpolation) {\n      if (opt.interpolation) this.interpolator.init({\n        ...opt,\n        ...{\n          interpolation: {\n            ...this.options.interpolation,\n            ...opt.interpolation\n          }\n        }\n      });\n      const skipOnVariables = isString(res) && (opt?.interpolation?.skipOnVariables !== undefined ? opt.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = opt.replace && !isString(opt.replace) ? opt.replace : opt;\n      if (this.options.interpolation.defaultVariables) data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, opt.lng || this.language || resolved.usedLng, opt);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) opt.nest = false;\n      }\n      if (!opt.lng && resolved && resolved.res) opt.lng = this.language || resolved.usedLng;\n      if (opt.nest !== false) res = this.interpolator.nest(res, (...args) => {\n        if (lastKey?.[0] === args[0] && !opt.context) {\n          this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n          return null;\n        }\n        return this.translate(...args, key);\n      }, opt);\n      if (opt.interpolation) this.interpolator.reset();\n    }\n    const postProcess = opt.postProcess || this.options.postProcess;\n    const postProcessorNames = isString(postProcess) ? [postProcess] : postProcess;\n    if (res != null && postProcessorNames?.length && opt.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: {\n          ...resolved,\n          usedParams: this.getUsedParamsDetails(opt)\n        },\n        ...opt\n      } : opt, this);\n    }\n    return res;\n  }\n  resolve(keys, opt = {}) {\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (isString(keys)) keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, opt);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n      const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n      const needsContextHandling = opt.context !== undefined && (isString(opt.context) || typeof opt.context === 'number') && opt.context !== '';\n      const codes = opt.lngs ? opt.lngs : this.languageUtils.toResolveHierarchy(opt.lng || this.language, opt.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils?.hasLoadedNamespace && !this.utils?.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if (this.i18nFormat?.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, opt);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, opt.count, opt);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            if (needsPluralHandling) {\n              if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              finalKeys.push(key + pluralSuffix);\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator || '_'}${opt.context}`;\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                finalKeys.push(contextKey + pluralSuffix);\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, opt);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key, options = {}) {\n    if (this.i18nFormat?.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  getUsedParamsDetails(options = {}) {\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && !isString(options.replace);\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n    if (this.options.interpolation.defaultVariables) {\n      data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n    }\n    if (!useOptionsReplaceForData) {\n      data = {\n        ...data\n      };\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n    return data;\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (isString(code) && code.indexOf('-') > -1) {\n      let formattedCode;\n      try {\n        formattedCode = Intl.getCanonicalLocales(code)[0];\n      } catch (e) {}\n      if (formattedCode && this.options.lowerCaseLng) {\n        formattedCode = formattedCode.toLowerCase();\n      }\n      if (formattedCode) return formattedCode;\n      if (this.options.lowerCaseLng) {\n        return code.toLowerCase();\n      }\n      return code;\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngScOnly = this.getScriptPartFromCode(code);\n        if (this.isSupportedCode(lngScOnly)) return found = lngScOnly;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (isString(fallbacks)) fallbacks = [fallbacks];\n    if (Array.isArray(fallbacks)) return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes((fallbackCode === false ? [] : fallbackCode) || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n    if (isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (isString(code)) {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\n\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nconst dummyRule = {\n  select: count => count === 1 ? 'one' : 'other',\n  resolvedOptions: () => ({\n    pluralCategories: ['one', 'other']\n  })\n};\nclass PluralResolver {\n  constructor(languageUtils, options = {}) {\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.pluralRulesCache = {};\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  clearCache() {\n    this.pluralRulesCache = {};\n  }\n  getRule(code, options = {}) {\n    const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n    const type = options.ordinal ? 'ordinal' : 'cardinal';\n    const cacheKey = JSON.stringify({\n      cleanedCode,\n      type\n    });\n    if (cacheKey in this.pluralRulesCache) {\n      return this.pluralRulesCache[cacheKey];\n    }\n    let rule;\n    try {\n      rule = new Intl.PluralRules(cleanedCode, {\n        type\n      });\n    } catch (err) {\n      if (!Intl) {\n        this.logger.error('No Intl support, please use an Intl polyfill!');\n        return dummyRule;\n      }\n      if (!code.match(/-|_/)) return dummyRule;\n      const lngPart = this.languageUtils.getLanguagePartFromCode(code);\n      rule = this.getRule(lngPart, options);\n    }\n    this.pluralRulesCache[cacheKey] = rule;\n    return rule;\n  }\n  needsPlural(code, options = {}) {\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    return rule?.resolvedOptions().pluralCategories.length > 1;\n  }\n  getPluralFormsOfKey(code, key, options = {}) {\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n  getSuffixes(code, options = {}) {\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    if (!rule) return [];\n    return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n  }\n  getSuffix(code, count, options = {}) {\n    const rule = this.getRule(code, options);\n    if (rule) {\n      return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n    }\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return this.getSuffix('dev', count, options);\n  }\n}\n\nconst deepFindWithDefaults = (data, defaultData, key, keySeparator = '.', ignoreJSONStructure = true) => {\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && isString(key)) {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n};\nconst regexSafe = val => val.replace(/\\$/g, '$$$$');\nclass Interpolator {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options?.interpolation?.format || (value => value);\n    this.init(options);\n  }\n  init(options = {}) {\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const {\n      escape: escape$1,\n      escapeValue,\n      useRawValueToEscape,\n      prefix,\n      prefixEscaped,\n      suffix,\n      suffixEscaped,\n      formatSeparator,\n      unescapeSuffix,\n      unescapePrefix,\n      nestingPrefix,\n      nestingPrefixEscaped,\n      nestingSuffix,\n      nestingSuffixEscaped,\n      nestingOptionsSeparator,\n      maxReplaces,\n      alwaysFormat\n    } = options.interpolation;\n    this.escape = escape$1 !== undefined ? escape$1 : escape;\n    this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n    this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n    this.formatSeparator = formatSeparator || ',';\n    this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n    this.maxReplaces = maxReplaces || 1000;\n    this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp?.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}((?:[^()\"']+|\"[^\"]*\"|'[^']*'|\\\\((?:[^()]|\"[^\"]*\"|'[^']*')*\\\\))*?)${this.nestingSuffix}`);\n  }\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, {\n          ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = options?.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = isString(temp) ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (!isString(value) && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc, options = {}) {\n    let match;\n    let value;\n    let clonedOptions;\n    const handleHasOptions = (key, inheritedOptions) => {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if ((matchedSingleQuotes?.length ?? 0) % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = {\n          ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n      return key;\n    };\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = {\n        ...options\n      };\n      clonedOptions = clonedOptions.replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      const keyEndIndex = /{.*}/.test(match[1]) ? match[1].lastIndexOf('}') + 1 : match[1].indexOf(this.formatSeparator);\n      if (keyEndIndex !== -1) {\n        formatters = match[1].slice(keyEndIndex).split(this.formatSeparator).map(elem => elem.trim()).filter(Boolean);\n        match[1] = match[1].slice(0, keyEndIndex);\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && !isString(value)) return value;\n      if (!isString(value)) value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n      if (formatters.length) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n          ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\n\nconst parseFormatStr = formatStr => {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (opt) {\n          const [key, ...rest] = opt.split(':');\n          const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n          const trimmedKey = key.trim();\n          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n          if (val === 'false') formatOptions[trimmedKey] = false;\n          if (val === 'true') formatOptions[trimmedKey] = true;\n          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n        }\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n};\nconst createCachedFormatter = fn => {\n  const cache = {};\n  return (v, l, o) => {\n    let optForCache = o;\n    if (o && o.interpolationkey && o.formatParams && o.formatParams[o.interpolationkey] && o[o.interpolationkey]) {\n      optForCache = {\n        ...optForCache,\n        [o.interpolationkey]: undefined\n      };\n    }\n    const key = l + JSON.stringify(optForCache);\n    let frm = cache[key];\n    if (!frm) {\n      frm = fn(getCleanedCode(l), o);\n      cache[key] = frm;\n    }\n    return frm(v);\n  };\n};\nconst createNonCachedFormatter = fn => (v, l, o) => fn(getCleanedCode(l), o)(v);\nclass Formatter {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.init(options);\n  }\n  init(services, options = {\n    interpolation: {}\n  }) {\n    this.formatSeparator = options.interpolation.formatSeparator || ',';\n    const cf = options.cacheInBuiltFormats ? createCachedFormatter : createNonCachedFormatter;\n    this.formats = {\n      number: cf((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: cf((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: cf((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: cf((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: cf((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng, options = {}) {\n    const formats = format.split(this.formatSeparator);\n    if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find(f => f.indexOf(')') > -1)) {\n      const lastIndex = formats.findIndex(f => f.indexOf(')') > -1);\n      formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n    }\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          const valOptions = options?.formatParams?.[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\n\nconst removePending = (q, name) => {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n};\nclass Connector extends EventEmitter {\n  constructor(backend, store, services, options = {}) {\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    this.backend?.init?.(services, options.backend, options);\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ; else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (!err && data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n        skipCopy: true\n      });\n    }\n    this.state[name] = err ? -1 : 2;\n    if (err && data) this.state[name] = 0;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName, tried = 0, wait = this.retryTimeout, callback) {\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces, options = {}, callback) {\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n    if (isString(namespaces)) namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name, prefix = '') {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate, options = {}, clb = () => {}) {\n    if (this.services?.utils?.hasLoadedNamespace && !this.services?.utils?.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if (this.backend?.create) {\n      const opts = {\n        ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\n\nconst get = () => ({\n  debug: false,\n  initAsync: true,\n  ns: ['translation'],\n  defaultNS: ['translation'],\n  fallbackLng: ['dev'],\n  fallbackNS: false,\n  supportedLngs: false,\n  nonExplicitSupportedLngs: false,\n  load: 'all',\n  preload: false,\n  simplifyPluralSuffix: true,\n  keySeparator: '.',\n  nsSeparator: ':',\n  pluralSeparator: '_',\n  contextSeparator: '_',\n  partialBundledLanguages: false,\n  saveMissing: false,\n  updateMissing: false,\n  saveMissingTo: 'fallback',\n  saveMissingPlurals: true,\n  missingKeyHandler: false,\n  missingInterpolationHandler: false,\n  postProcess: false,\n  postProcessPassResolved: false,\n  returnNull: false,\n  returnEmptyString: true,\n  returnObjects: false,\n  joinArrays: false,\n  returnedObjectHandler: false,\n  parseMissingKeyHandler: false,\n  appendNamespaceToMissingKey: false,\n  appendNamespaceToCIMode: false,\n  overloadTranslationOptionHandler: args => {\n    let ret = {};\n    if (typeof args[1] === 'object') ret = args[1];\n    if (isString(args[1])) ret.defaultValue = args[1];\n    if (isString(args[2])) ret.tDescription = args[2];\n    if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n      const options = args[3] || args[2];\n      Object.keys(options).forEach(key => {\n        ret[key] = options[key];\n      });\n    }\n    return ret;\n  },\n  interpolation: {\n    escapeValue: true,\n    format: value => value,\n    prefix: '{{',\n    suffix: '}}',\n    formatSeparator: ',',\n    unescapePrefix: '-',\n    nestingPrefix: '$t(',\n    nestingSuffix: ')',\n    nestingOptionsSeparator: ',',\n    maxReplaces: 1000,\n    skipOnVariables: true\n  },\n  cacheInBuiltFormats: true\n});\nconst transformOptions = options => {\n  if (isString(options.ns)) options.ns = [options.ns];\n  if (isString(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];\n  if (isString(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs?.indexOf?.('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  if (typeof options.initImmediate === 'boolean') options.initAsync = options.initImmediate;\n  return options;\n};\n\nconst noop = () => {};\nconst bindMemberFunctions = inst => {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n};\nclass I18n extends EventEmitter {\n  constructor(options = {}, callback) {\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initAsync) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init(options = {}, callback) {\n    this.isInitializing = true;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (options.defaultNS == null && options.ns) {\n      if (isString(options.ns)) {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = {\n      ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    this.options.interpolation = {\n      ...defOpts.interpolation,\n      ...this.options.interpolation\n    };\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    const createClassOnDemand = ClassOrObject => {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    };\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      const usingLegacyFormatFunction = this.options.interpolation.format && this.options.interpolation.format !== defOpts.interpolation.format;\n      if (usingLegacyFormatFunction) {\n        this.logger.deprecate(`init: you are still using the legacy format function, please use the new approach: https://www.i18next.com/translation-function/formatting`);\n      }\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        if (s.formatter.init) s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = (...args) => this.store[fcName](...args);\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = (...args) => {\n        this.store[fcName](...args);\n        return this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initAsync) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language, callback = noop) {\n    let usedCallback = callback;\n    const usedLng = isString(language) ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng?.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      this.options.preload?.forEach?.(l => append(l));\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'function') {\n      callback = lngs;\n      lngs = undefined;\n    }\n    if (typeof ns === 'function') {\n      callback = ns;\n      ns = undefined;\n    }\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n    if (!this.resolvedLanguage && this.languages.indexOf(l) < 0 && this.store.hasLanguageSomeTranslations(l)) {\n      this.resolvedLanguage = l;\n      this.languages.unshift(l);\n    }\n  }\n  changeLanguage(lng, callback) {\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        if (this.isLanguageChangingTo === lng) {\n          setLngProps(l);\n          this.translator.changeLanguage(l);\n          this.isLanguageChangingTo = undefined;\n          this.emit('languageChanged', l);\n          this.logger.log('languageChanged', l);\n        }\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve((...args) => this.t(...args));\n      if (callback) callback(err, (...args) => this.t(...args));\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const fl = isString(lngs) ? lngs : lngs && lngs[0];\n      const l = this.store.hasLanguageSomeTranslations(fl) ? fl : this.services.languageUtils.getBestMatchFromCodes(isString(lngs) ? [lngs] : lngs);\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        this.services.languageDetector?.cacheUserLanguage?.(l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    const fixedT = (key, opts, ...rest) => {\n      let o;\n      if (typeof opts !== 'object') {\n        o = this.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        o = {\n          ...opts\n        };\n      }\n      o.lng = o.lng || fixedT.lng;\n      o.lngs = o.lngs || fixedT.lngs;\n      o.ns = o.ns || fixedT.ns;\n      if (o.keyPrefix !== '') o.keyPrefix = o.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = this.options.keySeparator || '.';\n      let resultKey;\n      if (o.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => {\n          if (typeof k === 'function') k = keysFromSelector(k, {\n            ...this.options,\n            ...opts\n          });\n          return `${o.keyPrefix}${keySeparator}${k}`;\n        });\n      } else {\n        if (typeof key === 'function') key = keysFromSelector(key, {\n          ...this.options,\n          ...opts\n        });\n        resultKey = o.keyPrefix ? `${o.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return this.t(resultKey, o);\n    };\n    if (isString(lng)) {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t(...args) {\n    return this.translator?.translate(...args);\n  }\n  exists(...args) {\n    return this.translator?.exists(...args);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns, options = {}) {\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 0 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (isString(ns)) ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (isString(lngs)) lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages?.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    try {\n      const l = new Intl.Locale(lng);\n      if (l && l.getTextInfo) {\n        const ti = l.getTextInfo();\n        if (ti && ti.direction) return ti.direction;\n      }\n    } catch (e) {}\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services?.languageUtils || new LanguageUtil(get());\n    if (lng.toLowerCase().indexOf('-latn') > 1) return 'ltr';\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance(options = {}, callback) {\n    return new I18n(options, callback);\n  }\n  cloneInstance(options = {}, callback = noop) {\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = {\n      ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = {\n      ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      const clonedData = Object.keys(this.store.data).reduce((prev, l) => {\n        prev[l] = {\n          ...this.store.data[l]\n        };\n        prev[l] = Object.keys(prev[l]).reduce((acc, n) => {\n          acc[n] = {\n            ...prev[l][n]\n          };\n          return acc;\n        }, prev[l]);\n        return prev;\n      }, {});\n      clone.store = new ResourceStore(clonedData, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', (event, ...args) => {\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\n\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, keysFromSelector as keyFromSelector, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };\n"],"names":["isString","obj","defer","res","rej","promise","Promise","resolve","reject","makeString","object","lastOfPathSeparatorRegExp","cleanKey","key","indexOf","replace","canNotTraverseDeeper","getLastOfPath","path","Empty","stack","split","stackIndex","length","Object","prototype","hasOwnProperty","call","k","setPath","newValue","e","p","slice","last","getPath","deepExtend","target","source","overwrite","prop","String","regexEscape","str","_entityMap","escape","data","s","chars","looksLikeObjectPathRegExpCache","constructor","capacity","this","regExpMap","Map","regExpQueue","getRegExp","pattern","regExpFromCache","get","regExpNew","RegExp","delete","shift","set","push","deepFind","keySeparator","tokens","current","i","next","nextPath","j","getCleanedCode","code","consoleLogger","type","log","args","output","warn","error","_a","_b","console","apply","Logger","concreteLogger","options","init","prefix","logger","debug","forward","deprecate","lvl","debugOnly","create","moduleName","clone","baseLogger","EventEmitter","observers","on","events","listener","forEach","event","numListeners","off","emit","Array","from","entries","observer","numTimesAdded","ResourceStore","ns","defaultNS","ignoreJSONStructure","addNamespaces","removeNamespaces","index","splice","getResource","lng","isArray","result","join","addResource","value","silent","concat","addResources","resources","m","addResourceBundle","deep","skipCopy","pack","JSON","parse","stringify","removeResourceBundle","hasResourceBundle","getResourceBundle","getDataByLanguage","hasLanguageSomeTranslations","keys","find","v","toJSON","postProcessor","processors","addPostProcessor","module","name","handle","translator","processor","process","PATH_KEY","Symbol","keysFromSelector","selector","opts","state","handler","proxy","revoke","Proxy","revocable","createProxy","checkedLoadedFor","shouldHandleAsObject","Translator","services","t","changeLanguage","language","exists","o","interpolation","opt","resolved","isObject","returnObjects","extractFromKey","nsSeparator","namespaces","wouldCheckForNsInKey","seemsNaturalLanguage","userDefinedKeySeparator","userDefinedNsSeparator","possibleChars","filter","c","r","map","matched","test","ki","substring","looksLikeObjectPath","match","interpolator","nestingRegexp","parts","translate","lastKey","overloadTranslationOptionHandler","arguments","returnDetails","namespace","appendNamespaceToCIMode","toLowerCase","usedKey","exactUsedKey","usedLng","usedNS","usedParams","getUsedParamsDetails","resUsedKey","resExactUsedKey","joinArrays","handleAsObjectInI18nFormat","i18nFormat","handleAsObject","needsPluralHandling","count","hasDefaultValue","defaultValueSuffix","pluralResolver","getSuffix","defaultValueSuffixOrdinalFallback","ordinal","needsZeroSuffixLookup","defaultValue","pluralSeparator","resForObjHndl","resType","toString","extendTranslation","usedDefault","isValidLookup","resForMissing","missingKeyNoValueFallbackToKey","updateMissing","fk","lngs","fallbackLngs","languageUtils","getFallbackCodes","fallbackLng","saveMissingTo","toResolveHierarchy","send","l","specificDefaultValue","defaultForMissing","missingKeyHandler","backendConnector","saveMissing","saveMissingPlurals","suffixes","getSuffixes","suffix","appendNamespaceToMissingKey","parseMissingKeyHandler","returnedObjectHandler","resTypeIsArray","copy","newKeyToUse","deepKey","defaultVariables","skipInterpolation","skipOnVariables","nestBef","nb","interpolate","na","nest","context","reset","postProcess","postProcessorNames","applyPostProcessor","postProcessPassResolved","i18nResolved","found","extracted","fallbackNS","needsContextHandling","codes","utils","hasLoadedNamespace","finalKeys","addLookupKeys","pluralSuffix","zeroSuffix","ordinalPrefix","contextKey","contextSeparator","possibleKey","pop","returnNull","returnEmptyString","resourceStore","optionsKeys","useOptionsReplaceForData","option","LanguageUtil","supportedLngs","getScriptPartFromCode","formatLanguageCode","getLanguagePartFromCode","formattedCode","Intl","getCanonicalLocales","lowerCaseLng","cleanCode","isSupportedCode","load","nonExplicitSupportedLngs","getBestMatchFromCodes","cleanedLng","lngScOnly","lngOnly","supportedLng","fallbacks","default","fallbackCode","fallbackCodes","addCode","fc","suffixesOrder","zero","one","two","few","many","other","dummyRule","select","resolvedOptions","pluralCategories","PluralResolver","pluralRulesCache","addRule","rules","clearCache","getRule","cleanedCode","cacheKey","rule","PluralRules","err","lngPart","needsPlural","getPluralFormsOfKey","sort","pluralCategory1","pluralCategory2","pluralCategory","prepend","deepFindWithDefaults","defaultData","getPathWithDefaults","regexSafe","val","Interpolator","format","escapeValue","escape$1","useRawValueToEscape","prefixEscaped","suffixEscaped","formatSeparator","unescapeSuffix","unescapePrefix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","nestingOptionsSeparator","maxReplaces","alwaysFormat","resetRegExp","getOrResetRegExp","existingRegExp","lastIndex","regexp","regexpUnescape","replaces","handleFormat","interpolationkey","trim","f","missingInterpolationHandler","regex","safeValue","todo","exec","matchedVar","temp","clonedOptions","handleHasOptions","inheritedOptions","sep","optionsString","matchedSingleQuotes","matchedDoubleQuotes","formatters","keyEndIndex","lastIndexOf","elem","Boolean","reduce","createCachedFormatter","fn","cache","optForCache","formatParams","frm","createNonCachedFormatter","Formatter","cf","cacheInBuiltFormats","formats","number","formatter","NumberFormat","currency","style","datetime","DateTimeFormat","relativetime","RelativeTimeFormat","range","list","ListFormat","add","addCached","findIndex","mem","formatName","formatOptions","formatStr","optStr","rest","trimmedKey","isNaN","parseInt","parseFormatStr","formatted","valOptions","locale","Connector","backend","store","waitingReads","maxParallelReads","readingCalls","maxRetries","retryTimeout","queue","queueLoad","languages","callback","toLoad","pending","toLoadLanguages","toLoadNamespaces","hasAllNamespaces","reload","pendingCount","loaded","errors","q","pushPath","removePending","done","loadedKeys","n","read","fcName","tried","wait","resolver","setTimeout","bind","then","catch","prepareLoading","loadOne","fallbackValue","isUpdate","clb","_c","_d","_e","initAsync","preload","simplifyPluralSuffix","partialBundledLanguages","ret","tDescription","transformOptions","initImmediate","noop","I18n","inst","modules","external","getOwnPropertyNames","getPrototypeOf","isInitialized","isClone","isInitializing","defOpts","createClassOnDemand","ClassOrObject","lu","languageDetector","detection","deferred","finish","initializedStoreOnce","loadResources","usedCallback","append","resolvedLanguage","setResolvedLanguage","reloadResources","use","Error","li","lngInLngs","unshift","isLanguageChangingTo","setLngProps","setLng","fl","cacheUserLanguage","async","detect","getFixedT","keyPrefix","fixedT","resultKey","setDefaultNamespace","lastLng","loadNotPending","loadState","precheck","preResult","loadNamespaces","loadLanguages","preloaded","newLngs","dir","Locale","getTextInfo","ti","direction","createInstance","cloneInstance","forkResourceStore","mergedOptions","clonedData","prev","acc","instance"],"mappings":"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","x_google_ignoreList":[0]}