{"version":3,"file":"chunk-3ef02b78.js","sources":["../../src/components/ProtectedRoute.tsx","../../src/components/LoadScene.tsx","../../src/components/common/DynamicIcon.tsx","../../src/components/LanguageSwitcher.tsx","../../src/utils/i18nUtils.ts","../../src/components/Sidebar.tsx","../../src/components/LoginModal.tsx","../../src/components/AppLayout.tsx","../../src/components/Hero.tsx","../../src/components/BookCoverImage.tsx","../../src/components/common/ScrollToTopButton.tsx","../../src/utils/textUtils.ts","../../src/components/RichTextEditor.tsx","../../src/components/common/LearningItem.tsx","../../src/components/BookDetail.tsx","../../src/components/StickyVideoPlayer.tsx","../../src/components/VideoLearningDetail.tsx","../../src/components/VideoPlaylistDetail.tsx","../../src/components/ProjectCard.tsx","../../src/components/ProjectDetail.tsx","../../src/components/ExperienceItem.tsx","../../src/components/forms/BookForm.tsx","../../src/components/forms/ChapterForm.tsx","../../src/components/forms/LearningForm.tsx","../../src/components/common/ChapterLearningList.tsx","../../src/components/common/Toast.tsx","../../src/components/forms/VideoLearningForm.tsx","../../src/components/forms/VideoPlaylistForm.tsx","../../src/components/forms/PlaylistVideoForm.tsx","../../src/components/common/LanguageTabs.tsx","../../src/components/forms/ExperienceForm.tsx","../../src/components/forms/ProjectForm.tsx","../../src/components/forms/SkillCategoryForm.tsx","../../src/components/forms/SkillForm.tsx","../../src/components/forms/CategoryForm.tsx","../../src/components/common/NotificationDropdown.tsx","../../src/components/common/BookFilterMenu.tsx","../../src/components/common/ExperienceFilterMenu.tsx","../../src/components/common/ProjectFilterMenu.tsx","../../src/components/common/SettingsMenu.tsx","../../src/components/common/RightSidebar.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\ninterface ProtectedRouteProps {\r\n  element: React.ComponentType\r\n}\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ element: Component }) => {\r\n  const { isAuthenticated, isLoading } = useAuth()\r\n\r\n  // 로딩 중일 때는 로딩 스피너 표시\r\n  if (isLoading) {\r\n    return (\r\n      <div style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100vh',\r\n        backgroundColor: '#f8fafc'\r\n      }}>\r\n        <div style={{\r\n          width: '32px',\r\n          height: '32px',\r\n          border: '4px solid #3b82f6',\r\n          borderTop: '4px solid transparent',\r\n          borderRadius: '50%',\r\n          animation: 'spin 1s linear infinite'\r\n        }}></div>\r\n        <span style={{\r\n          marginLeft: '12px',\r\n          color: '#6b7280',\r\n          fontSize: '16px'\r\n        }}>인증 확인 중...</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // 인증되지 않은 경우 로그인 페이지로 리디렉션\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/\" replace />\r\n  }\r\n\r\n  // 인증된 경우 해당 컴포넌트 렌더링\r\n  return <Component />\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport * as THREE from 'three'\r\nimport { gsap } from 'gsap'\r\n\r\ninterface LoadSceneProps {\r\n  onFirstVisitComplete?: () => void\r\n}\r\n\r\nconst LoadScene: React.FC<LoadSceneProps> = ({ onFirstVisitComplete }) => {\r\n  const [progress, setProgress] = useState(0)\r\n  const navigate = useNavigate()\r\n\r\n  // 해시 URL이 있는 경우 바로 홈으로 리다이렉트 (로딩 애니메이션 없음)\r\n  useEffect(() => {\r\n    const hash = window.location.hash\r\n    if (hash) {\r\n      navigate('/home', { replace: true })\r\n    }\r\n  }, [navigate])\r\n  const sceneRef = useRef<HTMLDivElement>(null)\r\n  const animationRef = useRef<number>()\r\n  const tlRef = useRef<gsap.core.Timeline>()\r\n  const textMeshesRef = useRef<THREE.Mesh[]>([])\r\n  const sceneInstanceRef = useRef<THREE.Scene>()\r\n  const cameraRef = useRef<THREE.PerspectiveCamera>()\r\n  const rendererRef = useRef<THREE.WebGLRenderer>()\r\n\r\n  useEffect(() => {\r\n    // 3D 씬 초기화\r\n    initThreeScene()\r\n    \r\n    // 애니메이션 타임라인 설정\r\n    setupAnimation()\r\n    \r\n    return () => {\r\n      cleanup()\r\n    }\r\n  }, [])\r\n\r\n  // Loading 완료 후 자동으로 홈 화면으로 이동\r\n  useEffect(() => {\r\n    const autoNavigateTimer = setTimeout(() => {\r\n      // 첫 방문 완료 플래그 설정\r\n      localStorage.setItem('hasVisited', 'true')\r\n      onFirstVisitComplete?.()\r\n      navigate('/home')\r\n    }, 6000) // 총 6초 후 자동 이동 (Loading 3초 + 추가 3초)\r\n\r\n    return () => clearTimeout(autoNavigateTimer)\r\n  }, [navigate, onFirstVisitComplete])\r\n\r\n  const cleanup = () => {\r\n    if (animationRef.current) {\r\n      cancelAnimationFrame(animationRef.current)\r\n    }\r\n    if (tlRef.current) {\r\n      tlRef.current.kill()\r\n    }\r\n    if (rendererRef.current && sceneRef.current) {\r\n      const canvas = rendererRef.current.domElement\r\n      if (sceneRef.current.contains(canvas)) {\r\n        sceneRef.current.removeChild(canvas)\r\n      }\r\n      rendererRef.current.dispose()\r\n    }\r\n    textMeshesRef.current = []\r\n  }\r\n\r\n  const initThreeScene = () => {\r\n    if (!sceneRef.current) return\r\n\r\n    // Three.js 씬 설정\r\n    const scene = new THREE.Scene()\r\n    scene.background = new THREE.Color(0x0a0a0a) // 매우 어두운 배경 (Eric 스타일)\r\n    \r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\r\n    const renderer = new THREE.WebGLRenderer({ alpha: false, antialias: true })\r\n    \r\n    renderer.setSize(window.innerWidth, window.innerHeight)\r\n    renderer.setClearColor(0x0a0a0a, 1)\r\n    renderer.shadowMap.enabled = true\r\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap\r\n    \r\n    sceneRef.current.appendChild(renderer.domElement)\r\n\r\n    // 조명 설정\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.3)\r\n    scene.add(ambientLight)\r\n    \r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8)\r\n    directionalLight.position.set(10, 10, 5)\r\n    directionalLight.castShadow = true\r\n    directionalLight.shadow.mapSize.width = 2048\r\n    directionalLight.shadow.mapSize.height = 2048\r\n    scene.add(directionalLight)\r\n    \r\n    // 포인트 라이트 추가 (텍스트에 더 나은 조명)\r\n    const pointLight = new THREE.PointLight(0x00ffff, 0.5, 100)\r\n    pointLight.position.set(-10, 0, 10)\r\n    scene.add(pointLight)\r\n    \r\n    const pointLight2 = new THREE.PointLight(0xff00ff, 0.5, 100)\r\n    pointLight2.position.set(10, 0, 10)\r\n    scene.add(pointLight2)\r\n\r\n    // 3D 텍스트 생성\r\n    create3DText(scene)\r\n    \r\n    // 카메라 위치\r\n    camera.position.z = 20\r\n    camera.lookAt(0, 0, 0)\r\n    \r\n    // 참조 저장\r\n    sceneInstanceRef.current = scene\r\n    cameraRef.current = camera\r\n    rendererRef.current = renderer\r\n    \r\n    // 렌더링 루프\r\n    const animate = () => {\r\n      animationRef.current = requestAnimationFrame(animate)\r\n      \r\n      // 텍스트 회전 애니메이션\r\n      textMeshesRef.current.forEach((mesh, index) => {\r\n        if (mesh) {\r\n          mesh.rotation.y += 0.008 + (index * 0.002)\r\n          mesh.rotation.x = Math.sin(Date.now() * 0.001 + index) * 0.1\r\n          mesh.position.y = Math.sin(Date.now() * 0.002 + index) * 0.5\r\n        }\r\n      })\r\n      \r\n      // 카메라 약간의 움직임 (Eric 스타일)\r\n      if (cameraRef.current) {\r\n        cameraRef.current.position.x = Math.sin(Date.now() * 0.0005) * 2\r\n        cameraRef.current.position.y = Math.cos(Date.now() * 0.0003) * 1\r\n        cameraRef.current.lookAt(0, 0, 0)\r\n      }\r\n      \r\n      renderer.render(scene, camera)\r\n    }\r\n    animate()\r\n\r\n    // 윈도우 리사이즈 처리\r\n    const handleResize = () => {\r\n      if (cameraRef.current && rendererRef.current) {\r\n        cameraRef.current.aspect = window.innerWidth / window.innerHeight\r\n        cameraRef.current.updateProjectionMatrix()\r\n        rendererRef.current.setSize(window.innerWidth, window.innerHeight)\r\n      }\r\n    }\r\n    window.addEventListener('resize', handleResize)\r\n    \r\n    return () => {\r\n      window.removeEventListener('resize', handleResize)\r\n    }\r\n  }\r\n\r\n  const create3DText = (scene: THREE.Scene) => {\r\n    // \"LOADING\" 텍스트를 기본 지오메트리로 생성\r\n    const loadingLetters = ['L', 'O', 'A', 'D', 'I', 'N', 'G']\r\n    \r\n    loadingLetters.forEach((letter, index) => {\r\n      // 각 글자를 위한 지오메트리 생성\r\n      let geometry: THREE.BufferGeometry\r\n      \r\n      // 글자별로 다른 지오메트리 사용\r\n      switch(letter) {\r\n        case 'L':\r\n          geometry = createLGeometry()\r\n          break\r\n        case 'O':\r\n          geometry = new THREE.TorusGeometry(1.2, 0.4, 16, 32)\r\n          break\r\n        case 'A':\r\n          geometry = new THREE.ConeGeometry(1.8, 4, 3)\r\n          break\r\n        case 'D':\r\n          geometry = createDGeometry()\r\n          break\r\n        case 'I':\r\n          geometry = new THREE.BoxGeometry(0.4, 4, 0.4)\r\n          break\r\n        case 'N':\r\n          geometry = createNGeometry()\r\n          break\r\n        case 'G':\r\n          geometry = createGGeometry()\r\n          break\r\n        default:\r\n          geometry = new THREE.BoxGeometry(1, 4, 0.5)\r\n      }\r\n      \r\n      // 재질 생성 (그라데이션 효과를 위한 색상)\r\n      const hue = (index / loadingLetters.length) * 360\r\n      const material = new THREE.MeshPhongMaterial({ \r\n        color: new THREE.Color().setHSL(hue / 360, 0.8, 0.6),\r\n        shininess: 100,\r\n        specular: 0x333333,\r\n        emissive: new THREE.Color().setHSL(hue / 360, 0.3, 0.1)\r\n      })\r\n      \r\n      const mesh = new THREE.Mesh(geometry, material)\r\n      mesh.castShadow = true\r\n      mesh.receiveShadow = true\r\n      \r\n      // 위치 설정\r\n      const spacing = 3.5\r\n      const startX = -(loadingLetters.length - 1) * spacing / 2\r\n      mesh.position.set(startX + index * spacing, 0, 0)\r\n      \r\n      // 초기 애니메이션 상태\r\n      mesh.scale.set(0.01, 0.01, 0.01)\r\n      mesh.rotation.x = Math.PI\r\n      mesh.rotation.z = Math.PI\r\n      \r\n      scene.add(mesh)\r\n      textMeshesRef.current.push(mesh)\r\n      \r\n      // GSAP으로 나타나는 애니메이션\r\n      gsap.to(mesh.scale, {\r\n        x: 1,\r\n        y: 1,\r\n        z: 1,\r\n        duration: 1.2,\r\n        delay: index * 0.15,\r\n        ease: \"back.out(2)\"\r\n      })\r\n      \r\n      gsap.to(mesh.rotation, {\r\n        x: 0,\r\n        z: 0,\r\n        duration: 1.2,\r\n        delay: index * 0.15,\r\n        ease: \"power2.out\"\r\n      })\r\n    })\r\n  }\r\n\r\n  // 커스텀 지오메트리 생성 함수들\r\n  const createLGeometry = () => {\r\n    const geometry = new THREE.BufferGeometry()\r\n    const vertices = []\r\n    \r\n    // L 모양 생성\r\n    vertices.push(-1, -2, 0, -1, 2, 0, -0.3, 2, 0) // 왼쪽 세로선\r\n    vertices.push(-1, -2, 0, -0.3, 2, 0, -0.3, -2, 0)\r\n    vertices.push(-0.3, -1.5, 0, 1, -1.5, 0, 1, -2, 0) // 아래 가로선\r\n    vertices.push(-0.3, -1.5, 0, 1, -2, 0, -0.3, -2, 0)\r\n    \r\n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3))\r\n    geometry.computeVertexNormals()\r\n    return geometry\r\n  }\r\n\r\n  const createDGeometry = () => {\r\n    const geometry = new THREE.BufferGeometry()\r\n    const vertices = []\r\n    \r\n    // D 모양 생성 (반원 + 직선)\r\n    for (let i = 0; i <= 16; i++) {\r\n      const angle = (i / 16) * Math.PI\r\n      const x = Math.cos(angle) * 1.5\r\n      const y = Math.sin(angle) * 2\r\n      vertices.push(x, y, 0, x, y, 0.5)\r\n    }\r\n    \r\n    // 왼쪽 직선 추가\r\n    vertices.push(-1.5, -2, 0, -1.5, 2, 0, -1.5, 2, 0.5)\r\n    vertices.push(-1.5, -2, 0, -1.5, 2, 0.5, -1.5, -2, 0.5)\r\n    \r\n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3))\r\n    geometry.computeVertexNormals()\r\n    return geometry\r\n  }\r\n\r\n  const createNGeometry = () => {\r\n    const geometry = new THREE.BufferGeometry()\r\n    const vertices = []\r\n    \r\n    // N 모양 생성\r\n    vertices.push(-1, -2, 0, -1, 2, 0, -0.3, 2, 0) // 왼쪽 세로선\r\n    vertices.push(-1, -2, 0, -0.3, 2, 0, -0.3, -2, 0)\r\n    vertices.push(-0.3, 1.5, 0, 1, -2, 0, 1, -1.5, 0) // 대각선\r\n    vertices.push(-0.3, 1.5, 0, 1, -1.5, 0, -0.3, -2, 0)\r\n    vertices.push(0.7, -2, 0, 0.7, 2, 0, 1, 2, 0) // 오른쪽 세로선\r\n    vertices.push(0.7, -2, 0, 1, 2, 0, 1, -2, 0)\r\n    \r\n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3))\r\n    geometry.computeVertexNormals()\r\n    return geometry\r\n  }\r\n\r\n  const createGGeometry = () => {\r\n    const geometry = new THREE.BufferGeometry()\r\n    const vertices = []\r\n    \r\n    // G 모양 생성 (불완전한 원 + 직선)\r\n    for (let i = 0; i <= 20; i++) {\r\n      const angle = (i / 20) * Math.PI * 1.8 // 거의 완전한 원\r\n      const x = Math.cos(angle) * 1.5\r\n      const y = Math.sin(angle) * 2\r\n      vertices.push(x, y, 0, x, y, 0.5)\r\n    }\r\n    \r\n    // 가로선 추가\r\n    vertices.push(-1.5, -2, 0, 0, -2, 0, 0, -1.5, 0)\r\n    vertices.push(-1.5, -2, 0, 0, -1.5, 0, -1.5, -1.5, 0)\r\n    \r\n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3))\r\n    geometry.computeVertexNormals()\r\n    return geometry\r\n  }\r\n\r\n\r\n  const setupAnimation = () => {\r\n    const tl = gsap.timeline()\r\n    tlRef.current = tl\r\n    \r\n    // 3초간 Loading 애니메이션\r\n    tl.to({}, {\r\n      duration: 3,\r\n      onUpdate: function() {\r\n        setProgress((this['progress']() * 100))\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 bg-black overflow-hidden\">\r\n      {/* 3D 씬 컨테이너 */}\r\n      <div ref={sceneRef} className=\"absolute inset-0\" />\r\n      \r\n      {/* UI 오버레이 */}\r\n      <div className=\"absolute inset-0 flex flex-col items-center justify-center pointer-events-none\">\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"text-center\"\r\n        >\r\n          <h2 className=\"text-5xl font-bold text-white mb-12 tracking-wider\">\r\n            Loading...\r\n          </h2>\r\n          \r\n          {/* 로딩 바 */}\r\n          <div className=\"w-96 h-3 bg-gray-800 rounded-full overflow-hidden\">\r\n            <motion.div\r\n              className=\"h-full bg-gradient-to-r from-cyan-500 via-blue-500 to-purple-600 rounded-full\"\r\n              style={{ width: `${progress}%` }}\r\n              transition={{ duration: 0.1 }}\r\n            />\r\n          </div>\r\n          <p className=\"text-lg text-gray-400 mt-6 font-mono\">\r\n            {Math.round(progress)}%\r\n          </p>\r\n        </motion.div>\r\n      </div>\r\n      \r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadScene","import React from 'react'\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport * as SiIcons from 'react-icons/si'\r\n\r\n// 모든 아이콘을 하나의 객체로 매핑\r\nconst IconMap: { [key: string]: React.ElementType } = {\r\n  ...FaIcons,\r\n  ...SiIcons,\r\n}\r\n\r\ninterface DynamicIconProps {\r\n  iconName: string\r\n  size?: number\r\n  className?: string\r\n}\r\n\r\nconst DynamicIcon: React.FC<DynamicIconProps> = ({ \r\n  iconName, \r\n  size = 16, \r\n  className = '' \r\n}) => {\r\n  const IconComponent = IconMap[iconName]\r\n\r\n  if (!IconComponent) {\r\n    // 유효하지 않은 아이콘 이름일 경우 기본 아이콘 표시\r\n    return <FaIcons.FaMicrochip size={size} className={className} />\r\n  }\r\n\r\n  return React.createElement(IconComponent, { size, className })\r\n}\r\n\r\nexport default DynamicIcon\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { FaGlobe } from 'react-icons/fa'\r\n\r\ninterface LanguageSwitcherProps {\r\n  variant?: 'default' | 'compact'\r\n}\r\n\r\ntype Language = 'ko' | 'en' | 'ja'\r\n\r\nconst LanguageSwitcher: React.FC<LanguageSwitcherProps> = ({ variant = 'default' }) => {\r\n  const { i18n } = useTranslation()\r\n\r\n  const changeLanguage = (lang: Language) => {\r\n    i18n.changeLanguage(lang)\r\n    localStorage.setItem('language', lang)\r\n  }\r\n\r\n  const languages = [\r\n    { code: 'ko' as Language, short: 'KOR', full: '한국어' },\r\n    { code: 'en' as Language, short: 'ENG', full: 'English' },\r\n    { code: 'ja' as Language, short: 'JPN', full: '日本語' }\r\n  ]\r\n\r\n  if (variant === 'compact') {\r\n    return (\r\n      <div className=\"flex flex-col gap-2\">\r\n        <div className=\"flex items-center gap-2 mb-1\">\r\n          <FaGlobe className=\"text-base text-gray-600 dark:text-gray-400\" />\r\n          <span className=\"text-xs text-gray-600 dark:text-gray-400 font-medium\">Language</span>\r\n        </div>\r\n        <div className=\"flex items-center gap-2\">\r\n          {languages.map((lang) => {\r\n            const isActive = i18n.language === lang.code\r\n            return (\r\n              <button\r\n                key={lang.code}\r\n                onClick={() => changeLanguage(lang.code)}\r\n                className={`px-3 py-2 rounded-lg text-xs font-semibold transition-all duration-200 ${\r\n                  isActive\r\n                    ? 'bg-blue-600 text-white shadow-md'\r\n                    : 'bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700'\r\n                }`}\r\n                aria-label={`${lang.full}로 변경`}\r\n                aria-current={isActive ? 'true' : 'false'}\r\n              >\r\n                {lang.short}\r\n              </button>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-3\">\r\n      <div className=\"flex items-center gap-2\">\r\n        <FaGlobe className=\"text-primary-600 dark:text-primary-400\" />\r\n        <span className=\"text-sm text-gray-700 dark:text-gray-300 font-medium\">언어 선택</span>\r\n      </div>\r\n      <div className=\"flex flex-wrap gap-2\">\r\n        {languages.map((lang) => {\r\n          const isActive = i18n.language === lang.code\r\n          return (\r\n            <button\r\n              key={lang.code}\r\n              onClick={() => changeLanguage(lang.code)}\r\n              className={`px-4 py-2 rounded-lg text-sm font-semibold transition-all duration-200 ${\r\n                isActive\r\n                  ? 'bg-primary-600 text-white shadow-lg'\r\n                  : 'bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-primary-100 dark:hover:bg-primary-900 hover:text-primary-700 dark:hover:text-primary-300'\r\n              }`}\r\n              aria-label={`${lang.full}로 변경`}\r\n              aria-current={isActive ? 'true' : 'false'}\r\n            >\r\n              {lang.full}\r\n            </button>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LanguageSwitcher\r\n\r\n","/**\r\n * 다국어 필드 선택 유틸리티\r\n * 현재 언어에 맞는 값을 반환하고, 없으면 한국어로 폴백\r\n */\r\n\r\nexport type Language = 'ko' | 'en' | 'ja'\r\n\r\n/**\r\n * 단일 필드에서 현재 언어에 맞는 값 추출\r\n */\r\nexport const getLocalizedField = (\r\n  currentLang: Language,\r\n  koValue: string | undefined,\r\n  enValue?: string,\r\n  jaValue?: string\r\n): string => {\r\n  if (currentLang === 'en' && enValue) return enValue\r\n  if (currentLang === 'ja' && jaValue) return jaValue\r\n  return koValue || ''\r\n}\r\n\r\n/**\r\n * 배열 필드에서 현재 언어에 맞는 값 추출\r\n */\r\nexport const getLocalizedArrayField = (\r\n  currentLang: Language,\r\n  koArray: string[] | undefined,\r\n  enArray?: string[],\r\n  jaArray?: string[]\r\n): string[] => {\r\n  if (currentLang === 'en' && enArray && enArray.length > 0) return enArray\r\n  if (currentLang === 'ja' && jaArray && jaArray.length > 0) return jaArray\r\n  return koArray || []\r\n}\r\n\r\n/**\r\n * 객체의 다국어 필드들을 현재 언어에 맞게 변환\r\n * 예: { title, titleEn, titleJa } -> 현재 언어에 맞는 title 반환\r\n */\r\nexport const getLocalizedObject = <T extends Record<string, any>>(\r\n  obj: T,\r\n  currentLang: Language,\r\n  fields: string[]\r\n): Partial<T> => {\r\n  const result: any = { ...obj }\r\n  \r\n  fields.forEach(field => {\r\n    const koValue = obj[field]\r\n    const enValue = obj[`${field}En`]\r\n    const jaValue = obj[`${field}Ja`]\r\n    \r\n    result[field] = getLocalizedField(currentLang, koValue, enValue, jaValue)\r\n  })\r\n  \r\n  return result\r\n}\r\n\r\n// =================================================================\r\n// Resource-Specific Localization Helpers\r\n// =================================================================\r\n\r\n/**\r\n * Get localized skill name\r\n * @param currentLang - Current language ('ko', 'en', 'ja')\r\n * @param skill - Skill object\r\n * @returns Localized skill name\r\n */\r\nexport const getLocalizedSkillName = (\r\n  currentLang: Language,\r\n  skill: { name: string; nameEn?: string; nameJa?: string }\r\n): string => {\r\n  return getLocalizedField(currentLang, skill.name, skill.nameEn, skill.nameJa)\r\n}\r\n\r\n/**\r\n * Get localized skill description\r\n * @param currentLang - Current language ('ko', 'en', 'ja')\r\n * @param skill - Skill object\r\n * @returns Localized skill description or empty string\r\n */\r\nexport const getLocalizedSkillDescription = (\r\n  currentLang: Language,\r\n  skill: { description?: string; descriptionEn?: string; descriptionJa?: string }\r\n): string => {\r\n  return getLocalizedField(currentLang, skill.description, skill.descriptionEn, skill.descriptionJa)\r\n}\r\n\r\n/**\r\n * Get localized category name\r\n * @param currentLang - Current language ('ko', 'en', 'ja')\r\n * @param category - Category object\r\n * @returns Localized category name\r\n */\r\nexport const getLocalizedCategoryName = (\r\n  currentLang: Language,\r\n  category: { name: string; nameEn?: string; nameJa?: string }\r\n): string => {\r\n  return getLocalizedField(currentLang, category.name, category.nameEn, category.nameJa)\r\n}\r\n\r\n/**\r\n * Get localized skill category title\r\n * @param currentLang - Current language ('ko', 'en', 'ja')\r\n * @param skillCategory - SkillCategory object\r\n * @returns Localized skill category title\r\n */\r\nexport const getLocalizedSkillCategoryTitle = (\r\n  currentLang: Language,\r\n  skillCategory: { title: string; titleEn?: string; titleJa?: string }\r\n): string => {\r\n  return getLocalizedField(currentLang, skillCategory.title, skillCategory.titleEn, skillCategory.titleJa)\r\n}\r\n\r\n","import React, { useState, useMemo, useCallback } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport { FaSun, FaMoon, FaBars, FaTimes, FaGithub, FaLinkedin, FaEnvelope, FaCode, FaBook, FaVideo, FaSignInAlt, FaUserShield, FaHome, FaUser, FaBriefcase, FaLaptopCode, FaWrench, FaCommentDots } from 'react-icons/fa'\r\nimport { IconType } from 'react-icons'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { useScrollSpy, scrollToSection, SectionId } from '../hooks/useScrollSpy'\r\nimport { useSidebarSkills } from '../hooks/useSidebarSkills'\r\nimport DynamicIcon from './common/DynamicIcon'\r\nimport LanguageSwitcher from './LanguageSwitcher'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { useSiteSettings } from '../hooks/useSiteSettings'\r\nimport { getLocalizedField, getLocalizedSkillName } from '../utils/i18nUtils'\r\n\r\n// AuthContext 타입 정의 (실제 AuthContext와 일치해야 함)\r\n// interface AuthContextType {\r\n//   isAuthenticated: boolean\r\n//   logout: () => void\r\n//   // 기타 인증 관련 상태/함수들...\r\n// }\r\n\r\n// 타입 정의\r\ninterface NavItem {\r\n  name: string\r\n  href: string\r\n  path: string\r\n  icon: IconType\r\n}\r\n\r\ninterface SidebarProps {\r\n  darkMode: boolean\r\n  toggleDarkMode: () => void\r\n  onLoginClick: () => void\r\n}\r\n\r\n// 네비게이션 항목 컴포넌트 분리\r\ninterface SidebarNavItemProps {\r\n  item: NavItem\r\n  location: ReturnType<typeof useLocation>\r\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>\r\n  activeSection: SectionId\r\n}\r\n\r\nconst SidebarNavItem: React.FC<SidebarNavItemProps> = ({ item, location, setIsOpen, activeSection }) => {\r\n  const navigate = useNavigate()\r\n  \r\n  // 간소화된 활성화 상태 로직\r\n  const isActive = useMemo(() => {\r\n    // 별도 라우트인 경우: 경로 일치 (상세 페이지도 활성화하기 위해 startsWith 사용)\r\n    return location.pathname.startsWith(item.path)\r\n  }, [location.pathname, item.path])\r\n\r\n  const IconComponent = item.icon\r\n  \r\n  const baseClasses = `flex items-center gap-2 px-4 py-3 rounded-xl transition-colors duration-200 font-medium`\r\n  const activeClasses = 'bg-coffee-100 dark:bg-dark-700 text-coffee-600 dark:text-coffee-400'\r\n  const inactiveClasses = 'text-dark-700 dark:text-dark-300 hover:bg-coffee-100 dark:hover:bg-dark-700 hover:text-coffee-600 dark:hover:text-coffee-400'\r\n\r\n  const classes = `${baseClasses} ${isActive ? activeClasses : inactiveClasses}`\r\n\r\n  // 개선된 네비게이션 핸들러\r\n  const handleNavigation = useCallback(() => {\r\n    // 모든 경로는 navigate를 사용하여 SPA 방식으로 이동\r\n    navigate(item.href)\r\n    setIsOpen(false)\r\n  }, [item.href, navigate, setIsOpen])\r\n\r\n  // 모든 네비게이션 아이템은 동일한 방식으로 처리\r\n  return (\r\n    <button\r\n      onClick={handleNavigation}\r\n      className={classes}\r\n      aria-current={isActive ? 'page' : undefined}\r\n    >\r\n      <IconComponent size={18} />\r\n      {item.name}\r\n    </button>\r\n  )\r\n}\r\n\r\nconst Sidebar: React.FC<SidebarProps> = ({ darkMode, toggleDarkMode, onLoginClick }) => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const location = useLocation()\r\n  const { isAuthenticated, logout } = useAuth()\r\n  const { t, i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  const { settings: siteSettings } = useSiteSettings()\r\n  // 스크롤 스파이 훅 사용 (기본 옵션 적용)\r\n  const activeSection = useScrollSpy()\r\n  \r\n  // =================================================================\r\n  // 🔄 페이지 변경 감지 및 네비게이션 활성화\r\n  // =================================================================\r\n  \r\n  const navItems: NavItem[] = [\r\n    // 💡 메인 페이지 홈 링크만 남기고 나머지는 모두 별도 라우트로 분리\r\n    { name: t('nav.home'), href: '/home', path: '/home', icon: FaHome },\r\n    \r\n    // 💡 별도 라우트 링크: path와 href가 동일\r\n    { name: t('nav.about'), href: '/about', path: '/about', icon: FaUser },\r\n    { name: t('nav.experience'), href: '/experience', path: '/experience', icon: FaBriefcase },\r\n    { name: t('nav.skills'), href: '/skills', path: '/skills', icon: FaWrench },\r\n    { name: t('nav.projects'), href: '/projects', path: '/projects', icon: FaLaptopCode },\r\n    { name: t('nav.books'), href: '/books', path: '/books', icon: FaBook },\r\n    { name: t('nav.videoLearnings'), href: '/video-learnings', path: '/video-learnings', icon: FaVideo },\r\n    { name: t('nav.contact'), href: '/contact', path: '/contact', icon: FaCommentDots },\r\n  ]\r\n\r\n  // 커스텀 훅을 사용하여 스킬 데이터 가져오기\r\n  const { coreSkills, languageSkills, isLoadingSkills } = useSidebarSkills()\r\n\r\n  const socialLinks = [\r\n    { icon: FaGithub, href: '#', label: 'GitHub' },\r\n    { icon: FaLinkedin, href: '#', label: 'LinkedIn' },\r\n    { icon: FaEnvelope, href: 'mailto:juyeong_choi@naver.com', label: 'Email' },\r\n  ]\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* Mobile Menu Button */}\r\n      <button\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        className=\"lg:hidden fixed top-4 left-4 z-50 p-3 bg-coffee-600 text-white rounded-xl shadow-lg hover:bg-coffee-700 transition-colors\"\r\n        aria-label={isOpen ? \"사이드바 닫기\" : \"사이드바 열기\"}\r\n      >\r\n        {isOpen ? <FaTimes size={20} /> : <FaBars size={20} />}\r\n      </button>\r\n\r\n      {/* Overlay for mobile */}\r\n      {isOpen && (\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n          className=\"lg:hidden fixed inset-0 bg-black bg-opacity-50 z-40\"\r\n          onClick={() => setIsOpen(false)}\r\n          aria-label=\"사이드바 닫기\"\r\n        />\r\n      )}\r\n\r\n      {/* Sidebar */}\r\n      <aside\r\n        className={`fixed top-0 left-0 h-screen w-80 bg-white dark:bg-dark-800 border-r border-cream-200 dark:border-dark-700 z-40 transition-transform duration-300 lg:translate-x-0 ${\r\n          isOpen ? 'translate-x-0' : '-translate-x-full'\r\n        } overflow-y-auto custom-scrollbar`}\r\n        aria-label=\"주요 네비게이션\"\r\n      >\r\n        <div className=\"p-8 space-y-8\">\r\n          {/* Profile Section */}\r\n          <div className=\"text-center\">\r\n            <div className=\"relative w-32 h-32 mx-auto mb-6\">\r\n              <div className=\"w-full h-full rounded-full bg-coffee-600 flex items-center justify-center text-white text-4xl font-bold shadow-xl\">\r\n                {getLocalizedField(currentLang, siteSettings?.firstName, siteSettings?.firstNameEn, siteSettings?.firstNameJa) || '주영'}\r\n              </div>\r\n              <div \r\n                className=\"absolute bottom-0 right-0 w-10 h-10 bg-caramel-500 rounded-full flex items-center justify-center border-4 border-white dark:border-dark-800\"\r\n                aria-label=\"프로필 이미지\"\r\n              >\r\n                <FaCode className=\"text-white\" size={18} />\r\n              </div>\r\n            </div>\r\n            <h1 className=\"text-2xl font-bold text-dark-900 dark:text-cream-100 mb-2\">\r\n              {getLocalizedField(currentLang, siteSettings?.fullName, siteSettings?.fullNameEn, siteSettings?.fullNameJa) || '최주영'}\r\n            </h1>\r\n            <p className=\"text-coffee-600 dark:text-coffee-400 font-medium mb-1\">\r\n              {getLocalizedField(currentLang, siteSettings?.role, siteSettings?.roleEn, siteSettings?.roleJa) || '공장자동화 전문가'}\r\n            </p>\r\n            <p className=\"text-sm text-dark-600 dark:text-dark-400\">\r\n              {getLocalizedField(currentLang, siteSettings?.subtitle, siteSettings?.subtitleEn, siteSettings?.subtitleJa) || '바리스타 → 자동화 엔지니어'}\r\n            </p>\r\n          </div>\r\n\r\n          {/* Info Cards */}\r\n          <div className=\"space-y-4\">\r\n            <div className=\"bg-cream-100 dark:bg-dark-700 rounded-xl p-4\">\r\n              <div className=\"flex justify-between items-center mb-2\">\r\n                <span className=\"text-dark-700 dark:text-dark-300 text-sm\">{t('about.location')}</span>\r\n                <span className=\"text-dark-900 dark:text-cream-100 font-medium\">\r\n                  {getLocalizedField(currentLang, siteSettings?.location, siteSettings?.locationEn, siteSettings?.locationJa) || '부산'}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center mb-2\">\r\n                <span className=\"text-dark-700 dark:text-dark-300 text-sm\">{t('about.education')}</span>\r\n                <span className=\"text-dark-900 dark:text-cream-100 font-medium text-right text-xs\">\r\n                  {getLocalizedField(currentLang, siteSettings?.education, siteSettings?.educationEn, siteSettings?.educationJa) || '부산인력개발원'}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-dark-700 dark:text-dark-300 text-sm\">{t('about.yearsOfExperience')}</span>\r\n                <span className=\"text-dark-900 dark:text-cream-100 font-medium\">\r\n                  {getLocalizedField(currentLang, siteSettings?.yearsOfExperience, siteSettings?.yearsOfExperienceEn, siteSettings?.yearsOfExperienceJa) || '5년'}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Language Skills - Circular Progress */}\r\n          {languageSkills.length > 0 && (\r\n            <div>\r\n              <div className=\"flex justify-around items-center gap-2\">\r\n                {isLoadingSkills ? (\r\n                  [1, 2, 3].map((i) => (\r\n                    <div key={i} className=\"flex flex-col items-center\">\r\n                      <div className=\"w-16 h-16 rounded-full bg-gray-200 dark:bg-gray-700 animate-pulse\"></div>\r\n                      <div className=\"h-3 bg-gray-200 dark:bg-gray-700 rounded animate-pulse w-12 mt-2\"></div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  languageSkills.map((skill) => {\r\n                    // 🌟 한국어이고 100%면 \"모국어\"로 표시\r\n                    const skillName = getLocalizedSkillName(currentLang, skill)\r\n                    const isNative = skillName.includes('한국어') && skill.level === 100\r\n                    \r\n                    return (\r\n                      <div key={skill._id} className=\"flex flex-col items-center\">\r\n                        <div className=\"relative w-16 h-16\">\r\n                          {/* Background Circle */}\r\n                          <svg className=\"w-16 h-16 transform -rotate-90\">\r\n                            <circle\r\n                              cx=\"32\"\r\n                              cy=\"32\"\r\n                              r=\"28\"\r\n                              stroke=\"currentColor\"\r\n                              strokeWidth=\"4\"\r\n                              fill=\"none\"\r\n                              className=\"text-cream-200 dark:text-dark-700\"\r\n                            />\r\n                            {/* Progress Circle */}\r\n                            <circle\r\n                              cx=\"32\"\r\n                              cy=\"32\"\r\n                              r=\"28\"\r\n                              stroke={skill.color || '#8B4513'}\r\n                              strokeWidth=\"4\"\r\n                              fill=\"none\"\r\n                              strokeDasharray={`${(skill.level / 100) * 176} 176`}\r\n                              className=\"transition-all duration-1000 ease-out\"\r\n                              strokeLinecap=\"round\"\r\n                            />\r\n                          </svg>\r\n                          {/* Icon in Center */}\r\n                          <div className=\"absolute inset-0 flex items-center justify-center\">\r\n                            <DynamicIcon \r\n                              iconName={skill.icon} \r\n                              size={20} \r\n                              className=\"text-coffee-600 dark:text-coffee-400\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <span className=\"text-xs font-medium text-dark-700 dark:text-dark-300 mt-1 text-center\">\r\n                          {skillName}\r\n                        </span>\r\n                        <span className=\"text-xs font-bold text-coffee-600 dark:text-coffee-400\">\r\n                          {isNative ? t('sidebar.nativeLanguage') : `${skill.level}%`}\r\n                        </span>\r\n                      </div>\r\n                    )\r\n                  })\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Core Skills Progress */}\r\n          <div>\r\n            <h3 className=\"text-lg font-bold text-dark-900 dark:text-cream-100 mb-4\">\r\n              {t('sidebar.coreSkills')}\r\n            </h3>\r\n            <div className=\"space-y-4\">\r\n              {isLoadingSkills ? (\r\n                // 로딩 상태\r\n                <div className=\"space-y-4\">\r\n                  {[1, 2, 3, 4].map((i) => (\r\n                    <div key={i}>\r\n                      <div className=\"flex justify-between mb-2\">\r\n                        <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded animate-pulse w-16\"></div>\r\n                        <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded animate-pulse w-8\"></div>\r\n                      </div>\r\n                      <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 animate-pulse\"></div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : coreSkills.length > 0 ? (\r\n                // 스킬 데이터 표시\r\n                coreSkills.map((skill) => (\r\n                  <div key={skill._id}>\r\n                    <div className=\"flex justify-between mb-2\">\r\n                      <span className=\"text-sm font-medium text-dark-700 dark:text-dark-300\">\r\n                        {getLocalizedSkillName(currentLang, skill)}\r\n                      </span>\r\n                      <span className=\"text-sm font-bold text-coffee-600 dark:text-coffee-400\">\r\n                        {skill.level}%\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"w-full bg-cream-200 dark:bg-dark-700 rounded-full h-2\">\r\n                      <motion.div\r\n                        initial={{ width: 0 }}\r\n                        animate={{ width: `${skill.level}%` }}\r\n                        transition={{ duration: 1, delay: 0.2 }}\r\n                        className=\"bg-coffee-600 h-2 rounded-full\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                // 데이터가 없을 때\r\n                <div className=\"text-center py-8\">\r\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                    {t('sidebar.noSkillData')}\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Navigation */}\r\n          <nav>\r\n            <h3 className=\"text-lg font-bold text-dark-900 dark:text-cream-100 mb-4\">\r\n              {t('sidebar.menu')}\r\n            </h3>\r\n            <ul className=\"space-y-2\">\r\n              {navItems.map((item) => (\r\n                <li key={item.name}>\r\n                  <SidebarNavItem \r\n                    item={item} \r\n                    location={location} \r\n                    setIsOpen={setIsOpen}\r\n                    activeSection={activeSection}\r\n                  />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </nav>\r\n\r\n          {/* Admin Section */}\r\n          {isAuthenticated && (\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 10 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ duration: 0.3 }}\r\n            >\r\n              <Link\r\n                to=\"/admin\"\r\n                className=\"block px-4 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-xl transition-colors duration-200 font-medium text-center flex items-center justify-center gap-2\"\r\n                onClick={() => setIsOpen(false)}\r\n              >\r\n                <FaUserShield size={18} /> {t('sidebar.adminDashboard')}\r\n              </Link>\r\n            </motion.div>\r\n          )}\r\n\r\n          {/* Social Links */}\r\n          <div>\r\n            <h3 className=\"text-lg font-bold text-dark-900 dark:text-cream-100 mb-4\">\r\n              {t('sidebar.social')}\r\n            </h3>\r\n            <div className=\"flex space-x-3\">\r\n              {socialLinks.map(({ icon: Icon, href, label }) => (\r\n                <a\r\n                  key={label}\r\n                  href={href}\r\n                  className=\"p-3 bg-cream-100 dark:bg-dark-700 rounded-xl hover:bg-coffee-100 dark:hover:bg-dark-600 text-dark-700 dark:text-dark-300 hover:text-coffee-600 dark:hover:text-coffee-400 transition-all duration-200\"\r\n                  aria-label={label}\r\n                >\r\n                  <Icon size={20} />\r\n                </a>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Language Switcher */}\r\n          <div className=\"mb-4\">\r\n            <LanguageSwitcher variant=\"compact\" />\r\n          </div>\r\n\r\n          {/* Dark Mode Toggle & Auth */}\r\n          <div className=\"space-y-2\">\r\n            <button\r\n              onClick={toggleDarkMode}\r\n              className=\"w-full py-3 px-4 bg-coffee-600 hover:bg-coffee-700 text-white rounded-xl transition-colors duration-200 flex items-center justify-center space-x-2 font-medium\"\r\n              aria-label={darkMode ? t('sidebar.lightMode') : t('sidebar.darkMode')}\r\n            >\r\n              {darkMode ? (\r\n                <>\r\n                  <FaSun size={18} />\r\n                  <span>{t('sidebar.lightMode')}</span>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <FaMoon size={18} />\r\n                  <span>{t('sidebar.darkMode')}</span>\r\n                </>\r\n              )}\r\n            </button>\r\n\r\n            {isAuthenticated ? (\r\n              <button\r\n                onClick={() => {\r\n                  logout()\r\n                  setIsOpen(false)\r\n                }}\r\n                className=\"w-full py-3 px-4 bg-red-600 hover:bg-red-700 text-white rounded-xl transition-colors duration-200 flex items-center justify-center space-x-2 font-medium\"\r\n                aria-label={t('sidebar.logout')}\r\n              >\r\n                <FaSignInAlt size={18} />\r\n                <span>{t('sidebar.logout')}</span>\r\n              </button>\r\n            ) : (\r\n              <button\r\n                onClick={() => {\r\n                  onLoginClick()\r\n                  setIsOpen(false)\r\n                }}\r\n                className=\"w-full py-3 px-4 bg-green-600 hover:bg-green-700 text-white rounded-xl transition-colors duration-200 flex items-center justify-center space-x-2 font-medium\"\r\n                aria-label={t('sidebar.adminLogin')}\r\n              >\r\n                <FaSignInAlt size={18} />\r\n                <span>{t('sidebar.adminLogin')}</span>\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n        </div>\r\n      </aside>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useState } from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport { FaTimes, FaUser, FaLock, FaCircleNotch } from 'react-icons/fa'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\ninterface LoginModalProps {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n}\r\n\r\nconst LoginModal: React.FC<LoginModalProps> = ({ isOpen, onClose }) => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [error, setError] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { login } = useAuth()\r\n  const navigate = useNavigate()\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    setError('')\r\n    setIsLoading(true)\r\n\r\n    try {\r\n      await login(username, password)\r\n      onClose()\r\n      navigate('/admin')\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (err: any) {\r\n      // 에러 메시지가 객체라면 문자열로 변환\r\n      const errorMessage = err.message || '로그인 중 알 수 없는 오류가 발생했습니다.'\r\n      setError(errorMessage)\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setUsername('')\r\n    setPassword('')\r\n    setError('')\r\n    onClose()\r\n  }\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {isOpen && (\r\n        <>\r\n          {/* Backdrop */}\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            onClick={handleClose}\r\n            className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50\"\r\n          />\r\n\r\n          {/* Modal */}\r\n          <div className=\"fixed inset-0 flex items-center justify-center z-50 p-4\">\r\n            <motion.div\r\n              initial={{ opacity: 0, scale: 0.9, y: 20 }}\r\n              animate={{ opacity: 1, scale: 1, y: 0 }}\r\n              exit={{ opacity: 0, scale: 0.9, y: 20 }}\r\n              role=\"dialog\"\r\n              aria-modal=\"true\"\r\n              aria-labelledby=\"login-title\"\r\n              className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-2xl w-full max-w-md p-8 relative\"\r\n            >\r\n              {/* Close button */}\r\n              <button\r\n                onClick={handleClose}\r\n                className=\"absolute top-4 right-4 p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\r\n                aria-label=\"닫기\"\r\n              >\r\n                <FaTimes className=\"text-gray-600 dark:text-gray-300\" />\r\n              </button>\r\n\r\n              {/* Header */}\r\n              <div className=\"text-center mb-8\">\r\n                <div className=\"w-16 h-16 bg-gradient-to-r from-blue-500 to-blue-600 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                  <FaUser className=\"text-white text-2xl\" />\r\n                </div>\r\n                <h2 id=\"login-title\" className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\r\n                  관리자 로그인\r\n                </h2>\r\n                <p className=\"text-gray-600 dark:text-gray-400\">\r\n                  포트폴리오 관리를 위해 로그인하세요\r\n                </p>\r\n              </div>\r\n\r\n              {/* Form */}\r\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n                {error && (\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: -10 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    className=\"bg-red-100 dark:bg-red-900/30 border border-red-400 dark:border-red-700 text-red-700 dark:text-red-300 px-4 py-3 rounded-lg text-sm\"\r\n                    role=\"alert\"\r\n                  >\r\n                    {error}\r\n                  </motion.div>\r\n                )}\r\n\r\n                <div>\r\n                  <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    아이디\r\n                  </label>\r\n                  <div className=\"relative\">\r\n                    <FaUser className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-400\" />\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"username\"\r\n                      value={username}\r\n                      onChange={(e) => setUsername(e.target.value)}\r\n                      className=\"w-full pl-10 pr-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                      placeholder=\"아이디를 입력하세요\"\r\n                      required\r\n                      autoComplete=\"username\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    비밀번호\r\n                  </label>\r\n                  <div className=\"relative\">\r\n                    <FaLock className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-400\" />\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                      className=\"w-full pl-10 pr-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                      placeholder=\"비밀번호를 입력하세요\"\r\n                      required\r\n                      autoComplete=\"current-password\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <motion.button\r\n                  type=\"submit\"\r\n                  disabled={isLoading}\r\n                  className=\"w-full bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white font-semibold py-3 rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2\"\r\n                  whileHover={{ scale: 1.02 }}\r\n                  whileTap={{ scale: 0.98 }}\r\n                >\r\n                  {isLoading ? (\r\n                    <>\r\n                      <FaCircleNotch className=\"animate-spin\" />\r\n                      로그인 중...\r\n                    </>\r\n                  ) : (\r\n                    '로그인'\r\n                  )}\r\n                </motion.button>\r\n              </form>\r\n            </motion.div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </AnimatePresence>\r\n  )\r\n}\r\n\r\nexport default LoginModal\r\n\r\n\r\n","import React, { Suspense } from 'react'\r\nimport { Outlet } from 'react-router-dom'\r\nimport Sidebar from './Sidebar'\r\nimport LoginModal from './LoginModal'\r\nimport LoadScene from './LoadScene'\r\n\r\ninterface AppLayoutProps {\r\n  darkMode: boolean\r\n  toggleDarkMode: () => void\r\n  showLoginModal: boolean\r\n  setShowLoginModal: (show: boolean) => void\r\n  isFirstVisit: boolean\r\n}\r\n\r\nconst AppLayout: React.FC<AppLayoutProps> = ({\r\n  darkMode,\r\n  toggleDarkMode,\r\n  showLoginModal,\r\n  setShowLoginModal,\r\n  isFirstVisit\r\n}) => {\r\n\r\n  // 간단한 로딩 스피너 컴포넌트\r\n  const SimpleLoadingSpinner = () => (\r\n    <div className=\"flex items-center justify-center h-64\">\r\n      <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen bg-cream-50 dark:bg-dark-900 transition-colors duration-300\">\r\n      {/* 고정된 왼쪽 사이드바 */}\r\n      <Sidebar \r\n        darkMode={darkMode} \r\n        toggleDarkMode={toggleDarkMode}\r\n        onLoginClick={() => setShowLoginModal(true)}\r\n      />\r\n      \r\n      {/* 오른쪽 스크롤 가능한 콘텐츠 */}\r\n      <main className=\"flex-1 ml-0 lg:ml-80 overflow-y-auto\">\r\n        <Suspense fallback={isFirstVisit ? <LoadScene /> : <SimpleLoadingSpinner />}>\r\n          <Outlet />\r\n        </Suspense>\r\n      </main>\r\n      \r\n      {/* 로그인 모달 */}\r\n      <LoginModal \r\n        isOpen={showLoginModal} \r\n        onClose={() => setShowLoginModal(false)} \r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppLayout\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { motion, useScroll, useTransform } from 'framer-motion'\r\nimport { FaDownload, FaArrowRight, FaCoffee, FaCog, FaCode } from 'react-icons/fa'\r\nimport { useSiteSettings } from '../hooks/useSiteSettings'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { getLocalizedField } from '../utils/i18nUtils'\r\n\r\nconst Hero: React.FC = () => {\r\n  const { settings, loading } = useSiteSettings()\r\n  const { t, i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n\r\n  // 패럴랙스 효과를 위한 스크롤 훅\r\n  const { scrollYProgress } = useScroll()\r\n  \r\n  // 스크롤 위치에 따라 요소의 Y축 위치를 변환\r\n  const yTop = useTransform(scrollYProgress, [0, 1], [0, 100])\r\n  const yBottom = useTransform(scrollYProgress, [0, 1], [0, -100])\r\n\r\n  const containerVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.3,\r\n      },\r\n    },\r\n  }\r\n\r\n  const itemVariants = {\r\n    hidden: { opacity: 0, y: 30 },\r\n    visible: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        duration: 0.8,\r\n        ease: 'easeOut',\r\n      },\r\n    },\r\n  }\r\n\r\n  // 로딩 중일 때\r\n  if (loading) {\r\n    return (\r\n      <section id=\"home\" className=\"min-h-screen flex items-center justify-center bg-cream-50 dark:bg-dark-900\">\r\n        <div className=\"w-12 h-12 border-4 border-coffee-600 border-t-transparent rounded-full animate-spin\"></div>\r\n      </section>\r\n    )\r\n  }\r\n\r\n  const stats = [\r\n    { \r\n      number: settings?.stat1Number || '5+', \r\n      label: getLocalizedField(currentLang, settings?.stat1Label, settings?.stat1LabelEn, settings?.stat1LabelJa) || '년 경력', \r\n      icon: FaCoffee \r\n    },\r\n    { \r\n      number: settings?.stat2Number || '3+', \r\n      label: getLocalizedField(currentLang, settings?.stat2Label, settings?.stat2LabelEn, settings?.stat2LabelJa) || '완료 프로젝트', \r\n      icon: FaCode \r\n    },\r\n    { \r\n      number: settings?.stat3Number || '10+', \r\n      label: getLocalizedField(currentLang, settings?.stat3Label, settings?.stat3LabelEn, settings?.stat3LabelJa) || '기술 스택', \r\n      icon: FaCog \r\n    },\r\n  ]\r\n\r\n  return (\r\n    <section id=\"home\" className=\"min-h-screen flex items-center justify-center bg-cream-50 dark:bg-dark-900 relative overflow-hidden\">\r\n      {/* Background decoration (패럴랙스 적용) */}\r\n      <div className=\"absolute inset-0 overflow-hidden\">\r\n        {/* 윗부분 장식: 스크롤 시 아래로 이동 */}\r\n        <motion.div \r\n          style={{ y: yTop }}\r\n          className=\"absolute -top-40 -right-40 w-80 h-80 bg-coffee-200 dark:bg-coffee-900 rounded-full opacity-20 blur-3xl\"\r\n        ></motion.div>\r\n        {/* 아랫부분 장식: 스크롤 시 위로 이동 */}\r\n        <motion.div \r\n          style={{ y: yBottom }}\r\n          className=\"absolute -bottom-40 -left-40 w-80 h-80 bg-caramel-200 dark:bg-caramel-900 rounded-full opacity-20 blur-3xl\"\r\n        ></motion.div>\r\n      </div>\r\n\r\n      <div className=\"section-padding w-full relative z-10\">\r\n        <motion.div\r\n          variants={containerVariants}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          className=\"max-w-4xl mx-auto\"\r\n        >\r\n          <motion.div\r\n            variants={itemVariants}\r\n            className=\"mb-8\"\r\n          >\r\n            <span className=\"inline-block px-4 py-2 bg-coffee-100 dark:bg-coffee-900 text-coffee-700 dark:text-coffee-300 rounded-full text-sm font-medium mb-6\">\r\n              {getLocalizedField(currentLang, settings?.heroTag, settings?.heroTagEn, settings?.heroTagJa) || '🎯 취업 준비 중'}\r\n            </span>\r\n          </motion.div>\r\n\r\n          <motion.h1\r\n            variants={itemVariants}\r\n            className=\"text-5xl md:text-7xl font-bold text-dark-900 dark:text-cream-100 mb-8 leading-tight\"\r\n          >\r\n            {getLocalizedField(currentLang, settings?.heroTitle, settings?.heroTitleEn, settings?.heroTitleJa) || '공장자동화 전문가'}\r\n          </motion.h1>\r\n\r\n          <motion.p\r\n            variants={itemVariants}\r\n            className=\"text-xl md:text-2xl text-dark-600 dark:text-dark-300 mb-12 leading-relaxed max-w-3xl whitespace-pre-line\"\r\n          >\r\n            {getLocalizedField(currentLang, settings?.heroSubtitle, settings?.heroSubtitleEn, settings?.heroSubtitleJa) || 'PLC 프로그래밍부터 데이터 분석까지, 스마트 팩토리의 미래를 만들어갑니다.'}\r\n          </motion.p>\r\n\r\n          <motion.div\r\n            variants={itemVariants}\r\n            className=\"flex flex-col sm:flex-row gap-4 mb-16\"\r\n          >\r\n            <Link to=\"/projects\">\r\n              <motion.button\r\n                aria-label={t('hero.viewProjects')}\r\n                variants={itemVariants}\r\n                className=\"btn-primary text-lg px-8 py-4 flex items-center justify-center gap-2 group w-full\"\r\n              >\r\n                {t('hero.viewProjects')}\r\n                <FaArrowRight className=\"group-hover:translate-x-1 transition-transform\" />\r\n              </motion.button>\r\n            </Link>\r\n            <motion.button\r\n              onClick={() => alert(t('hero.resumeComingSoon'))}\r\n              aria-label={t('hero.downloadResume')}\r\n              variants={itemVariants}\r\n              className=\"btn-secondary text-lg px-8 py-4 flex items-center justify-center gap-2\"\r\n            >\r\n              <FaDownload />\r\n              {t('hero.downloadResume')}\r\n            </motion.button>\r\n          </motion.div>\r\n\r\n          {/* Stats */}\r\n          <motion.div\r\n            variants={itemVariants}\r\n            className=\"grid grid-cols-1 sm:grid-cols-3 gap-6\"\r\n          >\r\n            {stats.map((stat) => (\r\n              <motion.div\r\n                key={stat.label}\r\n                className=\"bg-white dark:bg-dark-800 rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 border border-cream-200 dark:border-dark-700\"\r\n                whileHover={{ y: -5 }}\r\n                role=\"status\"\r\n                aria-label={`${stat.label} 통계: ${stat.number}`}\r\n              >\r\n                <div className=\"flex items-center gap-4\">\r\n                  <div className=\"p-3 bg-coffee-100 dark:bg-coffee-900 rounded-xl\">\r\n                    <stat.icon className=\"text-coffee-600 dark:text-coffee-400\" size={24} />\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"text-3xl font-bold text-coffee-600 dark:text-coffee-400\">\r\n                      {stat.number}\r\n                    </div>\r\n                    <div className=\"text-sm text-dark-600 dark:text-dark-400\">\r\n                      {stat.label}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            ))}\r\n          </motion.div>\r\n        </motion.div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Hero","import React, { useState } from 'react'\r\nimport { FaBook, FaImage } from 'react-icons/fa'\r\n\r\ninterface BookCoverImageProps {\r\n  src?: string\r\n  alt: string\r\n  className?: string\r\n  fallbackIcon?: React.ReactNode\r\n}\r\n\r\n/**\r\n * 책 커버 이미지 컴포넌트\r\n * - 지연 로딩 지원\r\n * - 로딩 상태 표시\r\n * - 오류 시 대체 아이콘 표시\r\n */\r\nconst BookCoverImage: React.FC<BookCoverImageProps> = ({\r\n  src,\r\n  alt,\r\n  className = \"w-full h-64 object-cover group-hover:scale-105 transition-transform duration-300\",\r\n  fallbackIcon\r\n}) => {\r\n  const [imageState, setImageState] = useState<'loading' | 'loaded' | 'error'>('loading')\r\n  const [imageSrc, setImageSrc] = useState(src)\r\n\r\n  const handleImageLoad = () => {\r\n    setImageState('loaded')\r\n  }\r\n\r\n  const handleImageError = () => {\r\n    setImageState('error')\r\n    setImageSrc(undefined)\r\n  }\r\n\r\n  // 이미지가 없거나 오류가 발생한 경우 대체 아이콘 표시\r\n  if (!imageSrc || imageState === 'error') {\r\n    return (\r\n      <div className=\"w-full h-64 bg-gradient-to-br from-primary-400 to-primary-600 flex items-center justify-center\">\r\n        {fallbackIcon || <FaBook className=\"text-white text-6xl\" />}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative overflow-hidden\">\r\n      {/* 로딩 상태 스켈레톤 */}\r\n      {imageState === 'loading' && (\r\n        <div className=\"absolute inset-0 bg-gray-200 dark:bg-gray-700 animate-pulse flex items-center justify-center\">\r\n          <FaImage className=\"text-gray-400 text-4xl\" />\r\n        </div>\r\n      )}\r\n      \r\n      {/* 실제 이미지 */}\r\n      <img\r\n        src={imageSrc}\r\n        alt={alt}\r\n        className={`${className} ${imageState === 'loading' ? 'opacity-0' : 'opacity-100'} transition-opacity duration-300`}\r\n        loading=\"lazy\"\r\n        decoding=\"async\"\r\n        width=\"400\"\r\n        height=\"256\"\r\n        onLoad={handleImageLoad}\r\n        onError={handleImageError}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BookCoverImage\r\n","import React, { useState, useEffect } from 'react'\r\nimport { FaArrowUp } from 'react-icons/fa'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\n\r\nconst ScrollToTopButton: React.FC = () => {\r\n  const [isVisible, setIsVisible] = useState(false)\r\n\r\n  // 스크롤 위치에 따라 버튼 표시/숨김\r\n  useEffect(() => {\r\n    const toggleVisibility = () => {\r\n      // 300px 이상 스크롤하면 버튼 표시\r\n      if (window.scrollY > 300) {\r\n        setIsVisible(true)\r\n      } else {\r\n        setIsVisible(false)\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', toggleVisibility)\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', toggleVisibility)\r\n    }\r\n  }, [])\r\n\r\n  // 최상단으로 스크롤\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth'\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {isVisible && (\r\n        <motion.button\r\n          initial={{ opacity: 0, scale: 0.8 }}\r\n          animate={{ opacity: 1, scale: 1 }}\r\n          exit={{ opacity: 0, scale: 0.8 }}\r\n          transition={{ duration: 0.2 }}\r\n          onClick={scrollToTop}\r\n          className=\"fixed bottom-8 right-8 z-50 p-4 bg-primary-600 hover:bg-primary-700 text-white rounded-full shadow-lg hover:shadow-xl transition-all duration-300 group\"\r\n          aria-label=\"맨 위로 스크롤\"\r\n          title=\"맨 위로\"\r\n        >\r\n          <FaArrowUp className=\"text-xl group-hover:transform group-hover:-translate-y-1 transition-transform\" />\r\n        </motion.button>\r\n      )}\r\n    </AnimatePresence>\r\n  )\r\n}\r\n\r\nexport default ScrollToTopButton\r\n\r\n","/**\r\n * 텍스트 포맷팅 및 마크다운 관련 유틸리티 함수들\r\n */\r\nimport React from 'react'\r\n\r\n/**\r\n * 마크다운 스타일 텍스트를 HTML로 변환 (정밀한 버전)\r\n * @param text - 마크다운 스타일의 텍스트\r\n * @returns HTML 문자열\r\n */\r\nexport const parseMarkdown = (text: string): string => {\r\n  if (!text) return ''\r\n  \r\n  return text\r\n    // 코드 블록: ```code``` (먼저 처리하여 다른 마크다운과 충돌 방지)\r\n    .replace(/```([\\s\\S]*?)```/g, '<pre class=\"bg-gray-100 dark:bg-gray-800 p-4 rounded-lg overflow-x-auto my-4\"><code class=\"text-sm font-mono\">$1</code></pre>')\r\n    \r\n    // 인라인 코드: `code` (코드 블록 처리 후)\r\n    .replace(/`([^`]+)`/g, '<code class=\"bg-gray-100 dark:bg-gray-800 px-1 py-0.5 rounded text-sm font-mono\">$1</code>')\r\n    \r\n    // 볼드체: **text** 또는 __text__ (이탤릭체보다 먼저 처리)\r\n    .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n    .replace(/__(.*?)__/g, '<strong>$1</strong>')\r\n    \r\n    // 이탤릭체: *text* 또는 _text_ (볼드체 처리 후, 경계 명확화)\r\n    .replace(/(^|[^*])\\*([^*\\s][^*]*[^*\\s]|[^*\\s])\\*([^*]|$)/g, '$1<em>$2</em>$3')\r\n    .replace(/(^|[^_])\\_([^_\\s][^_]*[^_\\s]|[^_\\s])\\_([^_]|$)/g, '$1<em>$2</em>$3')\r\n    \r\n    // 링크: [text](url)\r\n    .replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<a href=\"$2\" class=\"text-primary-600 hover:text-primary-700 underline\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>')\r\n    \r\n    // 헤더: # ## ###\r\n    .replace(/^### (.*$)/gm, '<h3 class=\"text-lg font-semibold text-gray-900 dark:text-white mt-4 mb-2\">$1</h3>')\r\n    .replace(/^## (.*$)/gm, '<h2 class=\"text-xl font-semibold text-gray-900 dark:text-white mt-4 mb-2\">$1</h2>')\r\n    .replace(/^# (.*$)/gm, '<h1 class=\"text-2xl font-bold text-gray-900 dark:text-white mt-4 mb-2\">$1</h1>')\r\n    \r\n    // 목록: - item 또는 * item\r\n    .replace(/^[\\s]*[-*] (.*$)/gm, '<li class=\"ml-4\">$1</li>')\r\n    .replace(/(<li class=\"ml-4\">.*<\\/li>)/s, '<ul class=\"list-disc list-inside my-2\">$1</ul>')\r\n    \r\n    // 블록 인용: > quote\r\n    .replace(/^> (.*$)/gm, '<blockquote class=\"border-l-4 border-primary-500 pl-4 italic text-gray-600 dark:text-gray-400 my-2\">$1</blockquote>')\r\n    \r\n    // 수평선: ---\r\n    .replace(/^---$/gm, '<hr class=\"border-gray-300 dark:border-gray-600 my-4\">')\r\n    \r\n    // 줄바꿈을 <br>로 변환 (마지막에 처리)\r\n    .replace(/\\n/g, '<br>')\r\n}\r\n\r\n/**\r\n * 텍스트를 안전하게 HTML로 렌더링하기 위한 함수\r\n * @param text - 변환할 텍스트\r\n * @returns JSX 요소\r\n */\r\nexport const renderFormattedText = (text: string): React.ReactElement => {\r\n  const htmlContent = parseMarkdown(text)\r\n  \r\n  return React.createElement('div', {\r\n    className: \"text-gray-600 dark:text-gray-300 leading-relaxed\",\r\n    dangerouslySetInnerHTML: { __html: htmlContent }\r\n  })\r\n}\r\n\r\n/**\r\n * 텍스트 길이에 따라 요약본 생성\r\n * @param text - 원본 텍스트\r\n * @param maxLength - 최대 길이\r\n * @returns 요약된 텍스트\r\n */\r\nexport const truncateText = (text: string, maxLength: number = 100): string => {\r\n  if (!text) return ''\r\n  if (text.length <= maxLength) return text\r\n  \r\n  return text.substring(0, maxLength).trim() + '...'\r\n}\r\n\r\n/**\r\n * 텍스트에서 해시태그 추출\r\n * @param text - 검색할 텍스트\r\n * @returns 해시태그 배열\r\n */\r\nexport const extractHashtags = (text: string): string[] => {\r\n  if (!text) return []\r\n  \r\n  const hashtagRegex = /#[\\w가-힣]+/g\r\n  const matches = text.match(hashtagRegex)\r\n  \r\n  return matches ? matches.map(tag => tag.substring(1)) : []\r\n}\r\n\r\n/**\r\n * 텍스트에서 멘션(@username) 추출\r\n * @param text - 검색할 텍스트\r\n * @returns 멘션 배열\r\n */\r\nexport const extractMentions = (text: string): string[] => {\r\n  if (!text) return []\r\n  \r\n  const mentionRegex = /@[\\w가-힣]+/g\r\n  const matches = text.match(mentionRegex)\r\n  \r\n  return matches ? matches.map(mention => mention.substring(1)) : []\r\n}\r\n\r\n/**\r\n * 텍스트를 읽기 시간으로 변환 (분 단위)\r\n * @param text - 텍스트\r\n * @param wordsPerMinute - 분당 읽는 단어 수 (기본값: 200)\r\n * @returns 읽기 시간 (분)\r\n */\r\nexport const calculateReadingTime = (text: string, wordsPerMinute: number = 200): number => {\r\n  if (!text) return 0\r\n  \r\n  const words = text.trim().split(/\\s+/).length\r\n  const minutes = Math.ceil(words / wordsPerMinute)\r\n  \r\n  return Math.max(1, minutes) // 최소 1분\r\n}\r\n\r\n/**\r\n * 읽기 시간을 포맷팅하여 표시 문자열로 변환\r\n * @param minutes - 읽기 시간 (분)\r\n * @returns 표시 문자열 (예: \"5분 읽기\")\r\n */\r\nexport const formatReadingTime = (minutes: number): string => {\r\n  if (minutes === 0) return '읽기 시간 없음'\r\n  if (minutes === 1) return '1분 읽기'\r\n  return `${minutes}분 읽기`\r\n}\r\n\r\n/**\r\n * 텍스트에서 읽기 시간을 계산하고 포맷팅\r\n * @param text - 텍스트\r\n * @param wordsPerMinute - 분당 읽는 단어 수 (기본값: 200)\r\n * @returns 포맷팅된 읽기 시간 문자열\r\n */\r\nexport const getFormattedReadingTime = (text: string, wordsPerMinute: number = 200): string => {\r\n  const minutes = calculateReadingTime(text, wordsPerMinute)\r\n  return formatReadingTime(minutes)\r\n}\r\n\r\n/**\r\n * 텍스트에서 단어 수를 계산\r\n * @param text - 텍스트\r\n * @returns 단어 수\r\n */\r\nexport const getWordCount = (text: string): number => {\r\n  if (!text) return 0\r\n  return text.trim().split(/\\s+/).length\r\n}\r\n\r\n/**\r\n * 텍스트에서 문자 수를 계산 (공백 포함/제외)\r\n * @param text - 텍스트\r\n * @param includeSpaces - 공백 포함 여부 (기본값: true)\r\n * @returns 문자 수\r\n */\r\nexport const getCharacterCount = (text: string, includeSpaces: boolean = true): number => {\r\n  if (!text) return 0\r\n  return includeSpaces ? text.length : text.replace(/\\s/g, '').length\r\n}\r\n\r\n/**\r\n * 텍스트에서 문장 수를 계산\r\n * @param text - 텍스트\r\n * @returns 문장 수\r\n */\r\nexport const getSentenceCount = (text: string): number => {\r\n  if (!text) return 0\r\n  const sentences = text.split(/[.!?]+/).filter(sentence => sentence.trim().length > 0)\r\n  return sentences.length\r\n}\r\n\r\n/**\r\n * 텍스트의 가독성 점수를 계산 (간단한 버전)\r\n * @param text - 텍스트\r\n * @returns 가독성 점수 (0-100, 높을수록 읽기 쉬움)\r\n */\r\nexport const calculateReadabilityScore = (text: string): number => {\r\n  if (!text) return 0\r\n  \r\n  const words = getWordCount(text)\r\n  const sentences = getSentenceCount(text)\r\n  const characters = getCharacterCount(text, false)\r\n  \r\n  if (words === 0 || sentences === 0) return 0\r\n  \r\n  // 간단한 가독성 공식 (Flesch Reading Ease 기반)\r\n  const avgWordsPerSentence = words / sentences\r\n  const avgSyllablesPerWord = characters / words * 0.5 // 근사치\r\n  \r\n  const score = 206.835 - (1.015 * avgWordsPerSentence) - (84.6 * avgSyllablesPerWord)\r\n  \r\n  return Math.max(0, Math.min(100, Math.round(score)))\r\n}\r\n\r\n/**\r\n * 텍스트를 안전하게 HTML 이스케이프 처리\r\n * @param text - 이스케이프할 텍스트\r\n * @returns 이스케이프된 HTML 문자열\r\n */\r\nexport const escapeHtml = (text: string): string => {\r\n  if (!text) return ''\r\n  \r\n  return text\r\n    .replace(/&/g, '&amp;')\r\n    .replace(/</g, '&lt;')\r\n    .replace(/>/g, '&gt;')\r\n    .replace(/\"/g, '&quot;')\r\n    .replace(/'/g, '&#39;')\r\n}\r\n\r\n/**\r\n * 텍스트에서 URL을 자동으로 링크로 변환\r\n * @param text - 텍스트\r\n * @returns URL이 링크로 변환된 텍스트\r\n */\r\nexport const autoLinkUrls = (text: string): string => {\r\n  if (!text) return ''\r\n  \r\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g\r\n  return text.replace(urlRegex, '<a href=\"$1\" class=\"text-primary-600 hover:text-primary-700 underline\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>')\r\n}\r\n\r\n/**\r\n * 텍스트에서 이메일 주소를 자동으로 링크로 변환\r\n * @param text - 텍스트\r\n * @returns 이메일이 링크로 변환된 텍스트\r\n */\r\nexport const autoLinkEmails = (text: string): string => {\r\n  if (!text) return ''\r\n  \r\n  const emailRegex = /([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,})/g\r\n  return text.replace(emailRegex, '<a href=\"mailto:$1\" class=\"text-primary-600 hover:text-primary-700 underline\">$1</a>')\r\n}\r\n\r\n/**\r\n * 텍스트를 완전히 포맷팅 (마크다운 + 자동 링크)\r\n * @param text - 포맷팅할 텍스트\r\n * @returns 완전히 포맷팅된 HTML 문자열\r\n */\r\nexport const formatTextCompletely = (text: string): string => {\r\n  if (!text) return ''\r\n  \r\n  // 마크다운 파싱\r\n  let formatted = parseMarkdown(text)\r\n  // 자동 URL 링크\r\n  formatted = autoLinkUrls(formatted)\r\n  // 자동 이메일 링크\r\n  formatted = autoLinkEmails(formatted)\r\n  \r\n  return formatted\r\n}\r\n","import React, { useState, useRef } from 'react'\r\nimport { FaBold, FaItalic, FaUnderline, FaListUl, FaListOl, FaIndent, FaOutdent, FaChevronDown } from 'react-icons/fa'\r\nimport { MdCode } from 'react-icons/md' // 코드 블록 아이콘 추가\r\n\r\ninterface RichTextEditorProps {\r\n  value: string\r\n  onChange: (value: string) => void\r\n  placeholder?: string\r\n  rows?: number\r\n  className?: string\r\n}\r\n\r\nconst RichTextEditor: React.FC<RichTextEditorProps> = ({\r\n  value,\r\n  onChange,\r\n  placeholder = \"내용을 입력하세요\",\r\n  rows = 8,\r\n  className = \"\"\r\n}) => {\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null)\r\n  const [cursorPosition, setCursorPosition] = useState(0)\r\n\r\n  // 커서 위치 업데이트\r\n  const updateCursorPosition = () => {\r\n    if (textareaRef.current) {\r\n      setCursorPosition(textareaRef.current.selectionStart)\r\n    }\r\n  }\r\n\r\n  // 현재 줄의 텍스트와 시작 위치 가져오기 (커서 조정 오류 수정)\r\n  const getCurrentLine = () => {\r\n    const lines = value.split('\\n')\r\n    let currentLineIndex = 0\r\n    let lineStart = 0 // 현재 줄의 시작 위치\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const lineLengthWithNewline = (lines[i]?.length || 0) + 1 // 줄 길이 + \\n (마지막 줄은 \\n이 없으므로 주의)\r\n      \r\n      // 커서 위치가 현재 줄 범위 내에 있거나, 마지막 줄인 경우\r\n      if (cursorPosition >= lineStart && (cursorPosition < lineStart + lineLengthWithNewline || i === lines.length - 1)) {\r\n        currentLineIndex = i\r\n        break\r\n      }\r\n      \r\n      lineStart += lineLengthWithNewline\r\n    }\r\n    \r\n    return {\r\n      lineIndex: currentLineIndex,\r\n      line: lines[currentLineIndex] || '',\r\n      lines: lines,\r\n      lineStart: lineStart, // 현재 줄의 절대 시작 위치\r\n    }\r\n  }\r\n\r\n  // 텍스트 삽입 함수 제거됨 - applyTextStyle 사용\r\n\r\n  // 줄 바꿈과 함께 텍스트 삽입 함수 제거됨 - 사용하지 않음\r\n\r\n  // 제목 스타일 적용\r\n  const applyHeading = (level: number) => {\r\n    const { lineIndex, line, lines } = getCurrentLine()\r\n    const prefix = '#'.repeat(level) + ' '\r\n    \r\n    // 이미 제목인 경우 제목 레벨 변경\r\n    if (line.match(/^#+\\s/)) {\r\n      lines[lineIndex] = prefix + line.replace(/^#+\\s/, '')\r\n    } else {\r\n      lines[lineIndex] = prefix + line\r\n    }\r\n    \r\n    onChange(lines.join('\\n'))\r\n  }\r\n\r\n  // 리스트 스타일 적용\r\n  const applyListStyle = (type: 'bullet' | 'number') => {\r\n    const { lineIndex, line, lines } = getCurrentLine()\r\n    \r\n    // 이미 리스트인 경우 리스트 해제\r\n    if (line?.match(/^[\\s]*[-*+]\\s/) || line?.match(/^[\\s]*\\d+\\.\\s/)) {\r\n      lines[lineIndex] = line?.replace(/^[\\s]*[-*+\\d\\.]\\s/, '').trim() || ''\r\n    } else {\r\n      // 새로운 리스트 항목 추가\r\n      const indent = line?.match(/^[\\s]*/)?.[0] || ''\r\n      const prefix = type === 'bullet' ? '- ' : '1. '\r\n      lines[lineIndex] = indent + prefix + (line?.trim() || '')\r\n    }\r\n    \r\n    onChange(lines.join('\\n'))\r\n  }\r\n\r\n  // 들여쓰기/내어쓰기\r\n  const adjustIndent = (direction: 'in' | 'out') => {\r\n    const { lineIndex, lines } = getCurrentLine()\r\n    const line = lines[lineIndex] || ''\r\n    \r\n    if (direction === 'in') {\r\n      lines[lineIndex] = '  ' + line\r\n    } else {\r\n      lines[lineIndex] = line.replace(/^[\\s]{0,2}/, '')\r\n    }\r\n    \r\n    onChange(lines.join('\\n'))\r\n  }\r\n\r\n  // 토글 블록 생성\r\n  const insertToggle = () => {\r\n    const { lineIndex, lines, lineStart } = getCurrentLine()\r\n    const newLine = '▶ 토글 제목'\r\n    lines.splice(lineIndex + 1, 0, newLine, '  토글 내용을 입력하세요') // 공백 2개 들여쓰기\r\n    onChange(lines.join('\\n'))\r\n    \r\n    // 커서를 토글 내용 (두 번째 삽입된 줄)으로 이동\r\n    setTimeout(() => {\r\n      if (textareaRef.current) {\r\n        // 커서 위치: 현재 줄 시작 위치 + 현재 줄 길이 + \\n + 첫 번째 삽입된 줄 길이 + \\n + 2 (들여쓰기)\r\n        const newPosition = lineStart + (lines[lineIndex]?.length || 0) + 1 + newLine.length + 1 + 2\r\n        textareaRef.current.setSelectionRange(newPosition, newPosition)\r\n        textareaRef.current.focus()\r\n      }\r\n    }, 0)\r\n  }\r\n\r\n  // === 새로 추가된 코드 블록 삽입 함수 ===\r\n  const insertCodeBlock = () => {\r\n    const { lineIndex, lines, lineStart } = getCurrentLine()\r\n    \r\n    const codeBlockLines = [\r\n      '```javascript', // 기본 언어\r\n      '// 여기에 코드를 작성하세요',\r\n      '```',\r\n    ]\r\n\r\n    // 현재 줄의 바로 아래에 세 줄을 삽입\r\n    lines.splice(lineIndex + 1, 0, ...codeBlockLines)\r\n    const newValue = lines.join('\\n')\r\n    onChange(newValue)\r\n    \r\n    // 커서를 코드 블록의 내용 줄로 이동\r\n    setTimeout(() => {\r\n      if (textareaRef.current) {\r\n        // 커서 위치: (현재 줄의 끝) + (첫 번째 백틱 줄 길이 + \\n) + (내용 줄 시작)\r\n        const positionToMove = \r\n          lineStart + (lines[lineIndex]?.length || 0) + 1  // 현재 줄 끝 + \\n\r\n          + (codeBlockLines[0]?.length || 0) + 1          // 첫 번째 백틱 줄 + \\n\r\n          + 2                                     // '//' 위치까지 이동\r\n        \r\n        textareaRef.current.setSelectionRange(positionToMove, positionToMove)\r\n        textareaRef.current.focus()\r\n      }\r\n    }, 0)\r\n  }\r\n  // ===================================\r\n\r\n  // 텍스트 스타일 적용 (간단한 마크다운)\r\n  const applyTextStyle = (style: 'bold' | 'italic' | 'underline') => {\r\n    const textarea = textareaRef.current\r\n    if (!textarea) return\r\n    \r\n    const start = textarea.selectionStart\r\n    const end = textarea.selectionEnd\r\n    const selectedText = value.substring(start, end)\r\n    \r\n    let wrap = ''\r\n    switch (style) {\r\n      case 'bold': wrap = '**'; break\r\n      case 'italic': wrap = '*'; break\r\n      case 'underline': wrap = '__'; break\r\n    }\r\n    \r\n    const wrappedText = `${wrap}${selectedText}${wrap}`\r\n    \r\n    const newValue = value.substring(0, start) + wrappedText + value.substring(end)\r\n    onChange(newValue)\r\n    \r\n    // 커서 위치 조정\r\n    setTimeout(() => {\r\n      // 선택된 텍스트가 없으면, 랩퍼 안에 커서를 위치시킵니다.\r\n      if (start === end) {\r\n        textarea.setSelectionRange(start + wrap.length, end + wrap.length)\r\n      } \r\n      // 선택된 텍스트가 있으면, 전체 랩퍼 뒤에 커서를 위치시킵니다.\r\n      else {\r\n        textarea.setSelectionRange(end + 2 * wrap.length, end + 2 * wrap.length)\r\n      }\r\n      textarea.focus()\r\n    }, 0)\r\n  }\r\n\r\n  // 렌더링된 텍스트 (마크다운 → HTML)\r\n  const renderMarkdown = (text: string) => {\r\n    return text\r\n      // 제목\r\n      .replace(/^### (.*$)/gim, '<h3 class=\"text-lg font-semibold mt-4 mb-2 text-gray-900 dark:text-white\">$1</h3>')\r\n      .replace(/^## (.*$)/gim, '<h2 class=\"text-xl font-semibold mt-4 mb-2 text-gray-900 dark:text-white\">$1</h2>')\r\n      .replace(/^# (.*$)/gim, '<h1 class=\"text-2xl font-bold mt-4 mb-2 text-gray-900 dark:text-white\">$1</h1>')\r\n      // 볼드\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong class=\"font-bold\">$1</strong>')\r\n      // 이탤릭\r\n      .replace(/\\*(.*?)\\*/g, '<em class=\"italic\">$1</em>')\r\n      // 밑줄\r\n      .replace(/__(.*?)__/g, '<u class=\"underline\">$1</u>')\r\n      // 인라인 코드 추가\r\n      .replace(/`(.*?)`/g, '<code class=\"bg-gray-200 dark:bg-gray-600 text-red-600 dark:text-red-400 px-1 rounded text-sm\">$1</code>')\r\n      // 토글\r\n      .replace(/^▶ (.*$)/gim, '<div class=\"flex items-center mt-2 mb-1\"><span class=\"mr-2\">▶</span><span class=\"font-medium text-gray-900 dark:text-white\">$1</span></div>')\r\n      // 불릿 리스트\r\n      .replace(/^[\\s]*[-*+]\\s(.*$)/gim, '<div class=\"ml-4 mb-1\"><span class=\"mr-2\">•</span>$1</div>')\r\n      // 숫자 리스트\r\n      .replace(/^[\\s]*\\d+\\.\\s(.*$)/gim, '<div class=\"ml-4 mb-1\"><span class=\"mr-2\">1.</span>$1</div>')\r\n      // 코드 블록\r\n      .replace(/```(.*?)\\n([\\s\\S]*?)\\n```/gim, (_match, p1, p2) => {\r\n        const lang = p1 ? `language-${p1.trim()}` : ''\r\n        return `<pre class=\"bg-gray-800 p-3 rounded-lg overflow-x-auto my-3\"><code class=\"${lang} text-sm text-gray-100\">${p2.trim()}</code></pre>`\r\n      })\r\n      // 줄바꿈\r\n      .replace(/\\n/g, '<br>')\r\n  }\r\n\r\n  return (\r\n    <div className={`border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 ${className}`}>\r\n      {/* 툴바 */}\r\n      <div className=\"flex items-center gap-1 p-2 border-b border-gray-200 dark:border-gray-600 bg-gray-50 dark:bg-gray-800 rounded-t-lg\">\r\n        {/* 제목 버튼들 */}\r\n        <div className=\"flex items-center gap-1 mr-2\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => applyHeading(1)}\r\n            className=\"px-2 py-1 text-xs font-bold text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\r\n            title=\"제목 1\"\r\n          >\r\n            H1\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => applyHeading(2)}\r\n            className=\"px-2 py-1 text-xs font-semibold text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\r\n            title=\"제목 2\"\r\n          >\r\n            H2\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => applyHeading(3)}\r\n            className=\"px-2 py-1 text-xs font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\r\n            title=\"제목 3\"\r\n          >\r\n            H3\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"w-px h-4 bg-gray-300 dark:bg-gray-600\"></div>\r\n\r\n        {/* 텍스트 스타일 */}\r\n        <div className=\"flex items-center gap-1 mx-2\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => applyTextStyle('bold')}\r\n            className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\r\n            title=\"굵게\"\r\n          >\r\n            <FaBold className=\"text-xs\" />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => applyTextStyle('italic')}\r\n            className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\r\n            title=\"기울임\"\r\n          >\r\n            <FaItalic className=\"text-xs\" />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => applyTextStyle('underline')}\r\n            className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\r\n            title=\"밑줄\"\r\n          >\r\n            <FaUnderline className=\"text-xs\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"w-px h-4 bg-gray-300 dark:bg-gray-600\"></div>\r\n\r\n        {/* 리스트 */}\r\n        <div className=\"flex items-center gap-1 mx-2\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => applyListStyle('bullet')}\r\n            className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\r\n            title=\"불릿 리스트\"\r\n          >\r\n            <FaListUl className=\"text-xs\" />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => applyListStyle('number')}\r\n            className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\r\n            title=\"번호 리스트\"\r\n          >\r\n            <FaListOl className=\"text-xs\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"w-px h-4 bg-gray-300 dark:bg-gray-600\"></div>\r\n\r\n        {/* 들여쓰기 */}\r\n        <div className=\"flex items-center gap-1 mx-2\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => adjustIndent('out')}\r\n            className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\r\n            title=\"내어쓰기\"\r\n          >\r\n            <FaOutdent className=\"text-xs\" />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => adjustIndent('in')}\r\n            className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\r\n            title=\"들여쓰기\"\r\n          >\r\n            <FaIndent className=\"text-xs\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"w-px h-4 bg-gray-300 dark:bg-gray-600\"></div>\r\n\r\n        {/* 토글 및 코드 블록 */}\r\n        <button\r\n          type=\"button\"\r\n          onClick={insertToggle}\r\n          className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors mx-2\"\r\n          title=\"토글 블록\"\r\n        >\r\n          <FaChevronDown className=\"text-xs\" />\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          onClick={insertCodeBlock}\r\n          className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\r\n          title=\"코드 블록\"\r\n        >\r\n          <MdCode className=\"text-sm\" />\r\n        </button>\r\n      </div>\r\n\r\n      {/* 편집 영역 */}\r\n      <div className=\"relative\">\r\n        <textarea\r\n          ref={textareaRef}\r\n          value={value}\r\n          onChange={(e) => onChange(e.target.value)}\r\n          onSelect={updateCursorPosition}\r\n          onKeyUp={updateCursorPosition}\r\n          onMouseUp={updateCursorPosition}\r\n          placeholder={placeholder}\r\n          rows={rows}\r\n          className=\"w-full p-3 bg-transparent text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none resize-y\"\r\n        />\r\n        \r\n        {/* 미리보기 영역 (선택사항) */}\r\n        {value && (\r\n          <div className=\"absolute inset-0 pointer-events-none opacity-0\">\r\n            <div \r\n              className=\"p-3 text-gray-900 dark:text-white whitespace-pre-wrap\"\r\n              dangerouslySetInnerHTML={{ __html: renderMarkdown(value) }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RichTextEditor\r\n","import React, { useMemo } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { FaEdit, FaTrash, FaTag } from 'react-icons/fa'\r\nimport { Link } from 'react-router-dom'\r\nimport { Learning, Skill } from '../../types'\r\nimport { formatDate, formatRelativeDate } from '../../utils/dateUtils'\r\nimport { parseMarkdown, getFormattedReadingTime } from '../../utils/textUtils'\r\nimport RichTextEditor from '../RichTextEditor'\r\n\r\n// 🌟 BookDetail.tsx에서 전달받는 Skill Map의 값 타입\r\ninterface SkillWithLevel extends Skill {\r\n  levelText: string\r\n}\r\n\r\ninterface LearningItemProps {\r\n  learning: Learning\r\n  index: number\r\n  isAuthenticated: boolean\r\n  isEditing: boolean\r\n  currentFormData: { topic: string; content: string }\r\n  setCurrentFormData: React.Dispatch<React.SetStateAction<{ topic: string; content: string }>>\r\n  onStartEdit: (learning: Learning, chapterId?: string) => void\r\n  onSaveEdit: () => void\r\n  onCancelEdit: () => void\r\n  onDelete: (learningId: string, chapterId?: string) => void\r\n  isSaving?: boolean\r\n  // 🌟 NEW PROP 1: 전체 스킬 목록 맵 (ID로 스킬 정보를 찾는 용도)\r\n  allSkillsMap?: Map<string, SkillWithLevel>\r\n  // 🌟 NEW PROP 2: 스킬 연결/해제 핸들러 (useLearningManager에 구현 필요)\r\n  onSkillLinkChange?: (learningId: string, skillId: string, isLinked: boolean) => void\r\n  // 🌟 NEW PROP 3: 목차 ID (목차 기반 학습 내용인 경우)\r\n  chapterId?: string\r\n}\r\n\r\n/**\r\n * 개별 학습 내용 아이템 컴포넌트\r\n * 학습 내용의 표시, 수정, 삭제 기능을 제공합니다.\r\n */\r\nconst LearningItem: React.FC<LearningItemProps> = ({\r\n  learning,\r\n  index,\r\n  isAuthenticated,\r\n  isEditing,\r\n  currentFormData,\r\n  setCurrentFormData,\r\n  onStartEdit,\r\n  onSaveEdit,\r\n  onCancelEdit,\r\n  onDelete,\r\n  isSaving = false,\r\n  allSkillsMap,\r\n  onSkillLinkChange,\r\n  chapterId,\r\n}) => {\r\n  \r\n  // 🌟 1. 현재 학습 내용에 연결된 스킬 목록 추출 (기본 보기용)\r\n  const linkedSkills = useMemo(() => {\r\n    if (!allSkillsMap) return []\r\n    return (learning.skillIds || [])\r\n      .map(skillId => allSkillsMap.get(skillId))\r\n      .filter((skill): skill is SkillWithLevel => !!skill)\r\n  }, [learning.skillIds, allSkillsMap])\r\n  \r\n  // 🌟 2. 관리자 수정 모드에서 스킬 연결/해제 토글 핸들러\r\n  const handleSkillToggle = (skillId: string) => {\r\n    if (!onSkillLinkChange) return\r\n    const isLinked = learning.skillIds?.includes(skillId) || false\r\n    // 부모 컴포넌트(BookDetail)의 핸들러를 호출하여 LearningManager를 통해 상태 업데이트\r\n    onSkillLinkChange(learning._id, skillId, !isLinked)\r\n  }\r\n\r\n  // 🌟 3. 편집 모드에서 사용할 수 있는 전체 스킬 목록 (Map의 값을 배열로 변환)\r\n  const availableSkills = useMemo(() => {\r\n    if (!allSkillsMap) return []\r\n    return Array.from(allSkillsMap.values())\r\n  }, [allSkillsMap])\r\n\r\n  // 🌟 4. 색상을 동적으로 적용하는 스타일 생성 함수 (배지용)\r\n  const getBadgeStyle = (colorCode: string) => {\r\n    // 배경색에 10%의 투명도를 적용하여 은은하게 표시\r\n    const bgColor = `${colorCode}1A`\r\n    const textColor = colorCode\r\n    \r\n    return {\r\n      backgroundColor: bgColor,\r\n      color: textColor,\r\n    } as React.CSSProperties\r\n  }\r\n  \r\n  // 🌟 5. 색상을 동적으로 적용하는 스타일 생성 함수 (버튼용)\r\n  const getButtonStyle = (colorCode: string) => {\r\n    return {\r\n      backgroundColor: colorCode,\r\n      color: '#FFFFFF',\r\n    } as React.CSSProperties\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ delay: 0.1 * index }}\r\n      className={`card p-6 ${isEditing ? 'border-2 border-primary-500 shadow-xl' : ''}`}\r\n    >\r\n      {isEditing ? (\r\n        // 🌟 [수정 폼 렌더링]\r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <label htmlFor=\"topic\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              학습 주제\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"topic\"\r\n              value={currentFormData.topic}\r\n              onChange={(e) => setCurrentFormData(prev => ({ ...prev, topic: e.target.value }))}\r\n              placeholder=\"학습 주제를 입력하세요\"\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"content\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              학습 내용\r\n            </label>\r\n            <RichTextEditor\r\n              value={currentFormData.content}\r\n              onChange={(value) => setCurrentFormData(prev => ({ ...prev, content: value }))}\r\n              placeholder=\"학습 내용을 입력하세요. 리치텍스트 에디터를 사용하여 다양한 서식을 적용할 수 있습니다.\"\r\n              rows={8}\r\n              className=\"min-h-[200px]\"\r\n            />\r\n          </div>\r\n\r\n          {/* 🌟 [추가] 스킬 연결 섹션 (관리자용) */}\r\n          {isAuthenticated && allSkillsMap && availableSkills.length > 0 && (\r\n            <div className=\"pt-4 border-t border-gray-200 dark:border-gray-700\">\r\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3 flex items-center gap-2\">\r\n                <FaTag size={14} className=\"text-primary-600\" /> 관련 스킬 연결 ({learning.skillIds?.length || 0}개 연결됨)\r\n              </label>\r\n              {/* 스킬 선택 버튼 목록 */}\r\n              <div className=\"flex flex-wrap gap-2 max-h-40 overflow-y-auto p-2 rounded-lg bg-gray-50 dark:bg-gray-700/50\">\r\n                {availableSkills.map(skill => {\r\n                  const isLinked = learning.skillIds?.includes(skill._id!)\r\n                  // 🌟 동적 스타일 적용\r\n                  const dynamicStyle = skill.color && isLinked ? getButtonStyle(skill.color) : undefined\r\n\r\n                  return (\r\n                    <button\r\n                      key={skill._id}\r\n                      onClick={() => handleSkillToggle(skill._id!)}\r\n                      type=\"button\"\r\n                      className={`px-3 py-1 text-xs font-medium rounded-full transition-all ${\r\n                        isLinked\r\n                          ? 'text-white hover:opacity-80'\r\n                          : 'bg-gray-200 text-gray-700 dark:bg-gray-600 dark:text-gray-200 hover:bg-gray-300 dark:hover:bg-gray-500'\r\n                      }`}\r\n                      style={dynamicStyle}\r\n                    >\r\n                      {isLinked ? '✔️' : '➕'} {skill.name}\r\n                    </button>\r\n                  )\r\n                })}\r\n              </div>\r\n            </div>\r\n          )}\r\n          {/* 🌟 스킬 연결 섹션 끝 */}\r\n\r\n          <div className=\"flex gap-3 pt-4\">\r\n            <button\r\n              onClick={() => onSaveEdit()}\r\n              disabled={isSaving || !currentFormData.topic.trim() || !currentFormData.content.trim()}\r\n              className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors flex items-center justify-center gap-2\"\r\n            >\r\n              {isSaving ? '저장 중...' : '수정'}\r\n            </button>\r\n            <button\r\n              onClick={onCancelEdit}\r\n              className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\r\n            >\r\n              취소\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        // 🌟 [기본 보기 렌더링]\r\n        <>\r\n          <div className=\"flex items-start justify-between mb-3\">\r\n            <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n              {learning.topic}\r\n            </h3>\r\n            {isAuthenticated && (\r\n              <div className=\"flex gap-1\">\r\n                <button\r\n                  onClick={() => onStartEdit(learning, chapterId)}\r\n                  className=\"p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 text-blue-600 dark:text-blue-400\"\r\n                  aria-label=\"수정\"\r\n                >\r\n                  <FaEdit size={16} />\r\n                </button>\r\n                <button\r\n                  onClick={() => onDelete(learning._id, chapterId)}\r\n                  className=\"p-2 rounded-lg hover:bg-red-100 dark:hover:bg-red-900/30 text-red-600 dark:text-red-400\"\r\n                  aria-label=\"삭제\"\r\n                >\r\n                  <FaTrash size={16} />\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          {/* 🌟 [추가] 연결된 스킬 배지 목록 (기본 보기) */}\r\n          {linkedSkills.length > 0 && (\r\n            <div className=\"flex flex-wrap items-start gap-2 mb-4\">\r\n              <FaTag size={16} className=\"text-gray-500 dark:text-gray-400 mt-1 shrink-0\" title=\"관련 스킬\" />\r\n              {linkedSkills.map(skill => {\r\n                // 🌟 동적 스타일 적용\r\n                const badgeStyle = skill.color ? getBadgeStyle(skill.color) : undefined\r\n\r\n                return (\r\n                  <Link\r\n                    key={skill._id}\r\n                    to={`/projects?skillId=${skill._id}`}\r\n                    title={`${skill.name} 스킬이 사용된 프로젝트 보기`}\r\n                    className=\"inline-flex items-center px-3 py-1 rounded-full text-xs font-medium transition-all hover:opacity-80 hover:ring-2\"\r\n                    style={{\r\n                      ...badgeStyle,\r\n                      '--tw-ring-color': skill.color || '#3B82F6',\r\n                    } as React.CSSProperties}\r\n                  >\r\n                    {skill.name}\r\n                  </Link>\r\n                )\r\n              })}\r\n            </div>\r\n          )}\r\n          {/* 🌟 연결된 스킬 배지 목록 끝 */}\r\n\r\n          <div \r\n            className=\"text-gray-600 dark:text-gray-300 leading-relaxed prose prose-sm max-w-none dark:prose-invert\"\r\n            dangerouslySetInnerHTML={{ __html: parseMarkdown(learning.content) }}\r\n          />\r\n          <div className=\"mt-4 text-sm text-gray-500 dark:text-gray-500\">\r\n            작성일: {formatDate(learning.createdAt)} ({formatRelativeDate(learning.createdAt)}) • {getFormattedReadingTime(learning.content)}\r\n          </div>\r\n        </>\r\n      )}\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default LearningItem\r\n","import React, { useMemo, useState } from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport { useParams, Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport { FaArrowLeft, FaBook, FaStar, FaCalendar, FaEdit, FaTrash, FaPlus, FaChevronRight, FaCubes } from 'react-icons/fa'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { formatDate } from '../utils/dateUtils'\r\nimport { Chapter, Skill } from '../types'\r\nimport { useBook, useDeleteBook } from '../hooks/useBooks'\r\nimport { useLearningManager } from '../hooks/useLearningManager'\r\n// 목차 관리 관련 import 제거됨 - 중복 출력 문제 해결\r\nimport LearningItem from './common/LearningItem'\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { chaptersAPI } from '../services/api'\r\nimport { useSkills } from '../hooks/useSkills'\r\nimport RichTextEditor from './RichTextEditor'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { getLocalizedField } from '@/utils/i18nUtils'\r\n\r\nconst BookDetail: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  const { isAuthenticated } = useAuth()\r\n  const { i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  \r\n  // 🌟 React Query로 서적 데이터 조회\r\n  const { data: book, isLoading: loading, isError, error } = useBook(id)\r\n  \r\n  // 🌟 React Query로 목차 데이터 조회\r\n  const { data: bookChapters = [] } = useQuery<Chapter[], Error>({\r\n    queryKey: ['chapters', id],\r\n    queryFn: async () => {\r\n      if (!id) return []\r\n      const response = await chaptersAPI.getByBook(id)\r\n      return response.data?.data || response.data || []\r\n    },\r\n    enabled: !!id,\r\n    staleTime: 5 * 60 * 1000,\r\n  })\r\n  \r\n  // 🌟 스킬 목록 가져오기\r\n  const { skillCategories } = useSkills()\r\n  \r\n  // 🌟 React Query로 서적 삭제\r\n  const deleteMutation = useDeleteBook()\r\n  \r\n  const bookApiError = isError ? (error?.message || '서적 정보를 불러오는 데 실패했습니다.') : null\r\n\r\n  // 목차 관리 관련 상태 제거됨 - 중복 출력 문제 해결\r\n\r\n  // 💡 커스텀 훅 사용: 학습 내용 상태와 핸들러를 가져옵니다.\r\n  const {\r\n    editingLearningId,\r\n    currentFormData,\r\n    setCurrentFormData,\r\n    showAddForm,\r\n    isSaving,\r\n    learningApiError,\r\n    handleToggleAddForm,\r\n    handleAddLearning,\r\n    handleDeleteLearning,\r\n    handleStartEdit,\r\n    handleSaveEdit,\r\n    handleCancelEdit,\r\n    handleSkillLinkChange,  // 🌟 스킬 연결 핸들러 추가\r\n  } = useLearningManager(id!)\r\n  \r\n  // 🌟 확장 상태 관리 (아코디언 UI)\r\n  const [expandedChapterId, setExpandedChapterId] = useState<string | null>(null)\r\n  \r\n  // 챕터 확장/축소 토글 함수\r\n  const toggleChapter = (chapterId: string) => {\r\n    setExpandedChapterId(prevId => (prevId === chapterId ? null : chapterId))\r\n  }\r\n\r\n  // =================================================================\r\n  // 📚 스킬 데이터 처리 로직 (useMemo로 최적화)\r\n  // =================================================================\r\n\r\n  // 🌟 전체 책에 연결된 스킬 목록 필터링 및 가공\r\n  const linkedBookSkills = useMemo<Array<Skill & { levelText: string }>>(() => {\r\n    if (!bookChapters || !skillCategories) return []\r\n\r\n    const allSkills = skillCategories.flatMap(category => category.skills || [])\r\n    \r\n    // 1. 모든 챕터의 모든 학습 내용에서 고유한 skillIds를 추출\r\n    const uniqueSkillIds = new Set<string>()\r\n    bookChapters.forEach(chapter => {\r\n      (chapter.learnings || []).forEach(learning => {\r\n        // 학습 내용에 skillIds 필드가 있다고 가정\r\n        (learning.skillIds || []).forEach((skillId: string) => {\r\n          uniqueSkillIds.add(skillId)\r\n        })\r\n      })\r\n    })\r\n    \r\n    if (uniqueSkillIds.size === 0) return []\r\n\r\n    // 2. Skills.tsx의 레벨 텍스트 로직 재사용\r\n    const getLevelText = (level: number) => {\r\n      if (level >= 90) return 'Expert'\r\n      if (level >= 70) return 'Proficient'\r\n      if (level >= 50) return 'Competent'\r\n      return 'Basic'\r\n    }\r\n\r\n    // 3. 필터링 및 가공\r\n    return allSkills\r\n      .filter(skill => skill._id && uniqueSkillIds.has(skill._id))\r\n      .map(skill => ({\r\n        ...skill,\r\n        levelText: getLevelText(skill.level || 0),\r\n      }))\r\n  }, [bookChapters, skillCategories])\r\n\r\n  // 🌟 개별 학습 내용에서 스킬 ID를 객체로 변환하기 위한 Map\r\n  const allSkillsMap = useMemo(() => {\r\n    const map = new Map<string, Skill & { levelText: string }>()\r\n    linkedBookSkills.forEach(skill => skill._id && map.set(skill._id, skill))\r\n    return map\r\n  }, [linkedBookSkills])\r\n\r\n  // 🌟 색상을 동적으로 적용하는 스타일 생성 함수 (배지용)\r\n  const getBadgeStyle = (colorCode: string) => {\r\n    // 배경색에 15%의 투명도를 적용하여 은은하게 표시\r\n    const bgColor = `${colorCode}26`\r\n    const textColor = colorCode\r\n    \r\n    return {\r\n      backgroundColor: bgColor,\r\n      color: textColor,\r\n    } as React.CSSProperties\r\n  }\r\n\r\n  // =================================================================\r\n  // 📚 서적 삭제 핸들러\r\n  // =================================================================\r\n\r\n  // 🌟 React Query Mutation을 사용한 서적 삭제\r\n  const handleDeleteBook = async () => {\r\n    if (!confirm('이 서적을 삭제하시겠습니까? 관련 학습 내용도 모두 사라집니다.')) return\r\n\r\n    try {\r\n      await deleteMutation.mutateAsync(id!)\r\n      navigate('/books')\r\n    } catch (error) {\r\n      console.error('Failed to delete book:', error)\r\n    }\r\n  }\r\n  \r\n  const isDeleting = deleteMutation.isPending\r\n\r\n  // 목차 관리 핸들러들 제거됨 - 중복 출력 문제 해결\r\n\r\n  // 💡 기존의 학습 내용 핸들러들은 useLearningManager 훅으로 이동하여 삭제됨\r\n\r\n  // 학습 내용 정렬 (useMemo 사용으로 성능 최적화)\r\n  const sortedLearnings = useMemo(() => {\r\n    if (!book?.learnings) return []\r\n    \r\n    return [...book.learnings].sort((a, b) => {\r\n      // 최신순(내림차순) 정렬\r\n      return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\r\n    })\r\n  }, [book?.learnings])\r\n\r\n  // =================================================================\r\n  // ⚙️ 렌더링 및 로딩/에러 처리\r\n  // =================================================================\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (!book) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <FaBook className=\"text-6xl text-gray-400 mx-auto mb-4\" />\r\n          <p className=\"text-xl text-gray-600 dark:text-gray-400\">서적을 찾을 수 없습니다</p>\r\n          <Link \r\n            to=\"/books\" \r\n            state={location.state}\r\n            className=\"text-primary-600 hover:text-primary-700 mt-4 inline-block\"\r\n          >\r\n            목록으로 돌아가기\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // 별점 렌더링 함수\r\n  const renderRatingStars = (rating: number) => {\r\n    return Array.from({ length: 5 }, (_, i) => (\r\n      <FaStar \r\n        key={i} \r\n        className={i < rating ? 'text-yellow-500' : 'text-gray-300 dark:text-gray-600'} \r\n      />\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <section className=\"section-padding bg-white dark:bg-dark-900 min-h-screen\">\r\n      <div className=\"max-w-5xl mx-auto\">\r\n        {/* 에러 메시지: bookApiError와 learningApiError를 모두 표시 */}\r\n        {(bookApiError || learningApiError) && (\r\n          <motion.div \r\n            initial={{ opacity: 0, y: -20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            className=\"p-4 mb-4 text-sm text-red-800 rounded-lg bg-red-50 dark:bg-dark-800 dark:text-red-400\" \r\n            role=\"alert\"\r\n          >\r\n            {bookApiError || learningApiError}\r\n          </motion.div>\r\n        )}\r\n\r\n        {/* Header */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"mb-8\"\r\n        >\r\n          <Link\r\n            to=\"/books\"\r\n            state={location.state}\r\n            className=\"inline-flex items-center gap-2 text-primary-600 hover:text-primary-700 mb-6\"\r\n          >\r\n            <FaArrowLeft /> 목록으로 돌아가기\r\n          </Link>\r\n        </motion.div>\r\n\r\n        {/* Book Info */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"card p-8 mb-8\"\r\n        >\r\n          <div className=\"grid md:grid-cols-3 gap-8\">\r\n            <div>\r\n              {book.coverImage ? (\r\n                <img\r\n                  src={book.coverImage}\r\n                  alt={book.title}\r\n                  className=\"w-full h-auto object-cover rounded-lg shadow-lg\"\r\n                  loading=\"eager\"\r\n                  decoding=\"async\"\r\n                  width=\"400\"\r\n                  height=\"533\"\r\n                />\r\n              ) : (\r\n                <div className=\"w-full aspect-[3/4] bg-gradient-to-br from-primary-400 to-blue-500 rounded-lg flex items-center justify-center\">\r\n                  <FaBook className=\"text-white text-6xl\" />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"md:col-span-2\">\r\n              <div className=\"flex items-start justify-between mb-4\">\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {/* 카테고리 배지 (복수 표시) */}\r\n                  {book.categoryIds && book.categoryIds.length > 0 ? (\r\n                    (book.categoryIds as any[]).map((catIdOrObj: any) => {\r\n                      const catName = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?.name\r\n                      return catName ? (\r\n                        <span \r\n                          key={typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id}\r\n                          className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\"\r\n                        >\r\n                          {catName}\r\n                        </span>\r\n                      ) : null\r\n                    })\r\n                  ) : (\r\n                    // 호환성: categoryIds가 없으면 기존 category 표시\r\n                    book.category && (\r\n                      <span className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\">\r\n                        {book.category}\r\n                      </span>\r\n                    )\r\n                  )}\r\n                </div>\r\n                {isAuthenticated && (\r\n                  <div className=\"flex gap-2\">\r\n                    <Link\r\n                      to={`/admin`}\r\n                      state={{ tab: 'books', editId: book._id }}\r\n                      className=\"p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 text-blue-600 dark:text-blue-400\"\r\n                      aria-label=\"서적 수정\"\r\n                    >\r\n                      <FaEdit />\r\n                    </Link>\r\n                    <button\r\n                      onClick={handleDeleteBook}\r\n                      disabled={isDeleting}\r\n                      className={`p-2 rounded-lg text-red-600 dark:text-red-400 transition-colors ${\r\n                        isDeleting \r\n                          ? 'opacity-50 cursor-not-allowed' \r\n                          : 'hover:bg-gray-100 dark:hover:bg-gray-700'\r\n                      }`}\r\n                      aria-label=\"서적 삭제\"\r\n                    >\r\n                      {isDeleting ? (\r\n                        <div className=\"w-4 h-4 border-2 border-red-600 border-t-transparent rounded-full animate-spin\" />\r\n                      ) : (\r\n                        <FaTrash />\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-2\">\r\n                {getLocalizedField(currentLang, book.title, book.titleEn, book.titleJa)}\r\n              </h1>\r\n              <p className=\"text-xl text-gray-600 dark:text-gray-400 mb-6\">\r\n                {getLocalizedField(currentLang, book.author, book.authorEn, book.authorJa)}\r\n              </p>\r\n              <div className=\"flex flex-wrap gap-6 text-gray-600 dark:text-gray-400\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  {renderRatingStars(book.rating)}\r\n                  <span className=\"font-medium ml-1\">{book.rating}/5</span>\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <FaCalendar />\r\n                  <span>읽은 날짜: {formatDate(book.readDate)}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n\r\n        {/* 🌟 이 책을 통해 학습한 핵심 스킬 섹션 */}\r\n        {linkedBookSkills.length > 0 && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ delay: 0.1 }}\r\n            className=\"card p-6 mb-8\"\r\n          >\r\n            <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4 flex items-center gap-2\">\r\n              <FaCubes className=\"text-primary-600\" /> 이 책을 통해 학습한 핵심 스킬\r\n            </h3>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {linkedBookSkills.map(skill => {\r\n                // 🌟 동적 스타일 적용\r\n                const badgeStyle = skill.color ? getBadgeStyle(skill.color) : undefined\r\n\r\n                return (\r\n                  <Link\r\n                    key={skill._id}\r\n                    to={`/projects?skillId=${skill._id}`}\r\n                    title={`${skill.name} 스킬이 사용된 모든 프로젝트 보기`}\r\n                    className=\"inline-flex items-center px-3 py-1 rounded-lg text-sm font-medium hover:ring-2 transition-all hover:opacity-80\"\r\n                    style={{\r\n                      ...badgeStyle,\r\n                      '--tw-ring-color': skill.color || '#3B82F6',\r\n                    } as React.CSSProperties}\r\n                  >\r\n                    {skill.name}\r\n                    <span \r\n                      className=\"ml-1 text-xs font-semibold\"\r\n                      style={{ color: skill.color || '#3B82F6' }}\r\n                    >\r\n                      [{skill.levelText}]\r\n                    </span>\r\n                  </Link>\r\n                )\r\n              })}\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n\r\n        {/* Learnings Section */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.2 }}\r\n        >\r\n          <div className=\"flex items-center justify-between mb-6\">\r\n            <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n              학습 내용\r\n            </h2>\r\n            {isAuthenticated && (!bookChapters || bookChapters.length === 0) && (\r\n              <button\r\n                onClick={handleToggleAddForm}\r\n                className=\"flex items-center gap-2 bg-primary-600 hover:bg-primary-700 text-white font-medium px-4 py-2 rounded-lg transition-colors\"\r\n              >\r\n                <FaPlus /> {showAddForm ? '추가 취소' : '새 내용 추가'}\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          {/* Add Learning Form */}\r\n          <AnimatePresence>\r\n            {showAddForm && (\r\n              <motion.div\r\n                initial={{ opacity: 0, height: 0 }}\r\n                animate={{ opacity: 1, height: 'auto' }}\r\n                exit={{ opacity: 0, height: 0 }}\r\n                className=\"card p-6 mb-6 overflow-hidden\"\r\n              >\r\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n                  새 학습 내용 추가\r\n                </h3>\r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <label htmlFor=\"topic\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                      학습 주제\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"topic\"\r\n                      value={currentFormData.topic}\r\n                      onChange={(e) => setCurrentFormData(prev => ({ ...prev, topic: e.target.value }))}\r\n                      placeholder=\"학습 주제를 입력하세요\"\r\n                      className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor=\"content\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                      학습 내용\r\n                    </label>\r\n                    <RichTextEditor\r\n                      value={currentFormData.content}\r\n                      onChange={(value) => setCurrentFormData(prev => ({ ...prev, content: value }))}\r\n                      placeholder=\"학습 내용을 입력하세요. 리치텍스트 에디터를 사용하여 다양한 서식을 적용할 수 있습니다.\"\r\n                      rows={8}\r\n                      className=\"min-h-[200px]\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"flex gap-3 pt-4\">\r\n                    <button\r\n                      onClick={handleAddLearning}\r\n                      disabled={isSaving || !currentFormData.topic.trim() || !currentFormData.content.trim()}\r\n                      className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors flex items-center justify-center gap-2\"\r\n                    >\r\n                      {isSaving ? '저장 중...' : '추가'}\r\n                    </button>\r\n                    <button\r\n                      onClick={handleToggleAddForm}\r\n                      className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\r\n                    >\r\n                      취소\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            )}\r\n          </AnimatePresence>\r\n\r\n          {/* 학습 내용 리스트 - 아코디언 버전 */}\r\n          {(() => {\r\n            // 목차 기반 학습 내용이 있는 경우\r\n            if (bookChapters && bookChapters.length > 0) {\r\n              return (\r\n                <div className=\"space-y-4\">\r\n                  {bookChapters.map((chapter) => {\r\n                    // 🌟 현재 챕터가 확장되었는지 확인\r\n                    const isExpanded = expandedChapterId === chapter._id\r\n                    \r\n                    return (\r\n                      <div key={chapter._id} className=\"card p-6 border border-gray-200 dark:border-gray-700\">\r\n                        \r\n                        {/* 🌟 챕터 제목 (클릭 가능한 아코디언 헤더) */}\r\n                        <div \r\n                          className=\"flex items-center justify-between cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-800 -m-6 p-6 rounded-lg transition-colors\"\r\n                          onClick={() => toggleChapter(chapter._id!)}\r\n                        >\r\n                          <h3 className=\"text-xl font-bold text-gray-900 dark:text-white flex-1\">\r\n                            {chapter.title}\r\n                            <span className=\"ml-3 text-sm font-normal text-gray-500 dark:text-gray-400\">\r\n                              ({(chapter.learnings || []).length}개의 학습 내용)\r\n                            </span>\r\n                          </h3>\r\n                          {/* 🌟 확장/축소 아이콘 */}\r\n                          <motion.span\r\n                            animate={{ rotate: isExpanded ? 90 : 0 }}\r\n                            transition={{ duration: 0.3 }}\r\n                            className=\"text-primary-600 dark:text-primary-400 text-xl ml-4\"\r\n                          >\r\n                            <FaChevronRight />\r\n                          </motion.span>\r\n                        </div>\r\n\r\n                        {/* 🌟 학습 내용 (아코디언 바디) */}\r\n                        <AnimatePresence>\r\n                          {isExpanded && (\r\n                            <motion.div\r\n                              initial={{ opacity: 0, height: 0 }}\r\n                              animate={{ opacity: 1, height: 'auto' }}\r\n                              exit={{ opacity: 0, height: 0 }}\r\n                              transition={{ duration: 0.3, ease: \"easeInOut\" }}\r\n                              className=\"overflow-hidden\"\r\n                            >\r\n                              <div className=\"space-y-6 pt-6 mt-6 border-t border-gray-200 dark:border-gray-700\">\r\n                                {(chapter.learnings || []).map((learning, index: number) => (\r\n                                  <LearningItem \r\n                                    key={learning._id}\r\n                                    learning={learning}\r\n                                    index={index}\r\n                                    isAuthenticated={isAuthenticated}\r\n                                    isEditing={editingLearningId === learning._id}\r\n                                    currentFormData={currentFormData}\r\n                                    setCurrentFormData={setCurrentFormData}\r\n                                    onStartEdit={handleStartEdit}\r\n                                    onSaveEdit={handleSaveEdit}\r\n                                    onCancelEdit={handleCancelEdit}\r\n                                    onDelete={handleDeleteLearning}\r\n                                    isSaving={isSaving}\r\n                                    allSkillsMap={allSkillsMap}  // 🌟 스킬 맵 전달\r\n                                    onSkillLinkChange={handleSkillLinkChange}  // 🌟 스킬 연결 핸들러 전달\r\n                                    chapterId={chapter._id}  // 🌟 목차 ID 전달\r\n                                  />\r\n                                ))}\r\n                                {(!chapter.learnings || chapter.learnings.length === 0) && (\r\n                                  <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\r\n                                    이 목차에는 아직 학습 내용이 없습니다.\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            </motion.div>\r\n                          )}\r\n                        </AnimatePresence>\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n              )\r\n            }\r\n            // 기존 학습 내용이 있는 경우\r\n            else if (sortedLearnings.length > 0) {\r\n              return (\r\n                <div className=\"space-y-6\">\r\n                  {sortedLearnings.map((learning, index) => (\r\n                    <LearningItem \r\n                      key={learning._id}\r\n                      learning={learning}\r\n                      index={index}\r\n                      isAuthenticated={isAuthenticated}\r\n                      isEditing={editingLearningId === learning._id}\r\n                      currentFormData={currentFormData}\r\n                      setCurrentFormData={setCurrentFormData}\r\n                      onStartEdit={handleStartEdit}\r\n                      onSaveEdit={handleSaveEdit}\r\n                      onCancelEdit={handleCancelEdit}\r\n                      onDelete={handleDeleteLearning}\r\n                      isSaving={isSaving}\r\n                      allSkillsMap={allSkillsMap}  // 🌟 스킬 맵 전달\r\n                      onSkillLinkChange={handleSkillLinkChange}  // 🌟 스킬 연결 핸들러 전달\r\n                    />\r\n                  ))}\r\n                </div>\r\n              )\r\n            }\r\n            // 학습 내용이 없는 경우\r\n            else {\r\n              return (\r\n                <div className=\"card p-12 text-center\">\r\n                  <FaBook className=\"text-6xl text-gray-400 mx-auto mb-4\" />\r\n                  <p className=\"text-xl text-gray-600 dark:text-gray-400\">\r\n                    아직 작성된 학습 내용이 없습니다\r\n                  </p>\r\n                </div>\r\n              )\r\n            }\r\n          })()}\r\n        </motion.div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default BookDetail\r\n\r\n// 💡 LearningForm과 LearningItem 컴포넌트는 별도 파일로 분리됨\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport { FaTimes } from 'react-icons/fa'\r\n\r\ninterface StickyVideoPlayerProps {\r\n  videoId: string\r\n  playerRef?: React.MutableRefObject<any>\r\n  onPlayerReady?: () => void\r\n}\r\n\r\nconst StickyVideoPlayer: React.FC<StickyVideoPlayerProps> = ({ \r\n  videoId, \r\n  playerRef: externalPlayerRef,\r\n  onPlayerReady \r\n}) => {\r\n  const containerRef = useRef<HTMLDivElement>(null)\r\n  const [isSticky, setIsSticky] = useState(false)\r\n  const [isClosed, setIsClosed] = useState(false)\r\n  const [containerTop, setContainerTop] = useState(0)\r\n\r\n  useEffect(() => {\r\n    if (isClosed) return\r\n\r\n    // 초기 위치 저장\r\n    if (containerRef.current && containerTop === 0) {\r\n      const rect = containerRef.current.getBoundingClientRect()\r\n      setContainerTop(rect.top + window.scrollY)\r\n    }\r\n\r\n    const handleScroll = () => {\r\n      if (!containerRef.current) return\r\n\r\n      const scrollY = window.scrollY\r\n      const threshold = 150 // 플레이어가 화면 밖으로 나가는 임계값\r\n\r\n      // 스크롤이 플레이어 원래 위치를 넘어가면 sticky 활성화\r\n      if (scrollY > containerTop + threshold && !isSticky) {\r\n        setIsSticky(true)\r\n      }\r\n\r\n      // 다시 원래 위치로 돌아오면 sticky 해제\r\n      if (scrollY <= containerTop + threshold && isSticky) {\r\n        setIsSticky(false)\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', handleScroll, { passive: true })\r\n    handleScroll() // 초기 체크\r\n\r\n    return () => window.removeEventListener('scroll', handleScroll)\r\n  }, [isSticky, containerTop, isClosed])\r\n\r\n  // Sticky 모드 닫기\r\n  const handleClose = () => {\r\n    setIsClosed(true)\r\n    setIsSticky(false)\r\n  }\r\n\r\n  // 반응형 위치 계산\r\n  const getStickyPosition = () => {\r\n    const isMobile = window.innerWidth < 640\r\n    if (isMobile) {\r\n      return {\r\n        top: '80px',\r\n        left: '50%',\r\n        transform: 'translateX(-50%)',\r\n        width: 'calc(100% - 40px)',\r\n        maxWidth: '90vw',\r\n      }\r\n    } else {\r\n      return {\r\n        top: '80px',\r\n        left: '280px', // 사이드바 우측\r\n        width: '400px',\r\n        maxWidth: 'calc(100vw - 320px)', // 사이드바 + 여백\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* 원래 플레이어 영역 */}\r\n      <div ref={containerRef} className={`relative ${isSticky ? 'invisible' : 'visible'}`}>\r\n        {/* Sticky 모드일 때 원래 자리 공간 유지 */}\r\n        {isSticky && (\r\n          <div className=\"aspect-video bg-gray-100 dark:bg-gray-800 rounded-xl flex items-center justify-center\">\r\n            <p className=\"text-gray-500 dark:text-gray-400 text-sm\">\r\n              영상이 상단에서 재생 중입니다\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {/* 원래 크기 플레이어 */}\r\n        {!isSticky && (\r\n          <div className=\"aspect-video rounded-xl overflow-hidden shadow-2xl bg-black relative\">\r\n            <div \r\n              ref={externalPlayerRef}\r\n              className=\"w-full h-full\"\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Sticky 플레이어 (화면 고정) */}\r\n      <AnimatePresence>\r\n        {isSticky && !isClosed && (\r\n          <motion.div\r\n            initial={{ opacity: 0, scale: 0.9, y: -20 }}\r\n            animate={{ opacity: 1, scale: 1, y: 0 }}\r\n            exit={{ opacity: 0, scale: 0.9, y: -20 }}\r\n            transition={{ type: 'spring', damping: 20, stiffness: 300 }}\r\n            className=\"fixed z-50\"\r\n            style={getStickyPosition()}\r\n          >\r\n            <div className=\"bg-black rounded-lg shadow-2xl overflow-hidden border-2 border-blue-500\">\r\n              {/* 헤더 */}\r\n              <div className=\"bg-gray-900 px-3 py-2 flex items-center justify-between\">\r\n                <span className=\"text-white text-xs font-medium flex items-center gap-2\">\r\n                  <div className=\"w-2 h-2 rounded-full bg-red-500 animate-pulse\"></div>\r\n                  재생 중\r\n                </span>\r\n                <button\r\n                  onClick={handleClose}\r\n                  className=\"p-1.5 hover:bg-red-600 rounded text-white transition-colors\"\r\n                  title=\"닫기\"\r\n                >\r\n                  <FaTimes size={14} />\r\n                </button>\r\n              </div>\r\n\r\n              {/* 플레이어 - iframe은 여기서 직접 생성하지 않고 YouTube IFrame API 사용 */}\r\n              <div className=\"aspect-video bg-black\">\r\n                <iframe\r\n                  src={`https://www.youtube.com/embed/${videoId}?enablejsapi=1&rel=0&modestbranding=1`}\r\n                  title=\"YouTube Sticky Player\"\r\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                  allowFullScreen\r\n                  className=\"w-full h-full\"\r\n                  style={{ border: 'none' }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default StickyVideoPlayer\r\n\r\n","import React, { useState, useMemo, useRef, useEffect } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { useParams, Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport { FaArrowLeft, FaVideo, FaStar, FaCalendar, FaEdit, FaTrash, FaCubes, FaBullseye, FaLightbulb, FaRocket, FaSave, FaTimes } from 'react-icons/fa'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { formatDate } from '../utils/dateUtils'\r\nimport { useVideoLearning, useDeleteVideoLearning, useUpdateVideoLearning } from '../hooks/useVideoLearnings'\r\nimport { useSkills } from '../hooks/useSkills'\r\nimport { extractYouTubeId, parseTimestamps, renderHtmlWithTimestamps } from '../utils/videoUtils'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport RichTextEditor from './RichTextEditor'\r\nimport { useToastHelpers } from '../hooks/useToast'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { getLocalizedField } from '@/utils/i18nUtils'\r\nimport StickyVideoPlayer from './StickyVideoPlayer'\r\n\r\n// 🌟 유튜브 IFrame Player API 타입 정의\r\ndeclare global {\r\n  interface Window {\r\n    YT: any\r\n    onYouTubeIframeAPIReady: () => void\r\n  }\r\n}\r\n\r\nconst VideoLearningDetail: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  const { isAuthenticated } = useAuth()\r\n  const { i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  \r\n  const { data: video, isLoading: loading, isError, error } = useVideoLearning(id)\r\n  const deleteMutation = useDeleteVideoLearning()\r\n  const updateMutation = useUpdateVideoLearning()\r\n  const { skillCategories } = useSkills()\r\n  const { success, error: toastError } = useToastHelpers()\r\n\r\n  // 🌟 유튜브 플레이어 ref 및 상태\r\n  const playerRef = useRef<any>(null)\r\n  const playerContainerRef = useRef<HTMLDivElement>(null)\r\n  const [isPlayerReady, setIsPlayerReady] = useState(false)\r\n  \r\n  // 🌟 핵심 배움 편집 상태\r\n  const [isEditingKeyTakeaways, setIsEditingKeyTakeaways] = useState(false)\r\n  const [editingContent, setEditingContent] = useState('')\r\n  \r\n  const videoId = useMemo(() => {\r\n    if (video?.videoId) return video.videoId\r\n    // 호환성: videoUrl이 있으면 ID 추출\r\n    if ((video as any)?.videoUrl) return extractYouTubeId((video as any).videoUrl)\r\n    return null\r\n  }, [video])\r\n  \r\n  // 🌟 유튜브 IFrame API 스크립트 로드 및 플레이어 초기화\r\n  useEffect(() => {\r\n    if (!videoId) return\r\n    \r\n    // YouTube IFrame API 스크립트 로드\r\n    if (!window.YT) {\r\n      const tag = document.createElement('script')\r\n      tag.src = 'https://www.youtube.com/iframe_api'\r\n      const firstScriptTag = document.getElementsByTagName('script')[0]\r\n      if (firstScriptTag?.parentNode) {\r\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag)\r\n      }\r\n    }\r\n    \r\n    // API 준비 완료 후 플레이어 초기화\r\n    const initializePlayer = () => {\r\n      if (window.YT && window.YT.Player && playerContainerRef.current) {\r\n        playerRef.current = new window.YT.Player(playerContainerRef.current, {\r\n          videoId: videoId,\r\n          playerVars: {\r\n            enablejsapi: 1,\r\n            origin: window.location.origin,\r\n            rel: 0,  // 🌟 관련 영상 추천 비활성화 (전문성 유지)\r\n            modestbranding: 1,  // 🌟 유튜브 로고 최소화 & '동영상 더보기' 툴팁 제거\r\n            fs: 1,  // 전체 화면 버튼 표시\r\n            cc_load_policy: 0,  // 자막 자동 로드 비활성화\r\n            iv_load_policy: 3,  // 🌟 영상 주석(annotations) 비활성화\r\n            showinfo: 0,  // 🌟 영상 정보 표시 최소화 (구버전 지원)\r\n            controls: 1,  // 컨트롤러 표시\r\n          },\r\n          events: {\r\n            onReady: () => {\r\n              console.log('✅ 유튜브 플레이어 준비 완료')\r\n              setIsPlayerReady(true)\r\n            },\r\n          },\r\n        })\r\n      }\r\n    }\r\n    \r\n    if (window.YT && window.YT.Player) {\r\n      initializePlayer()\r\n    } else {\r\n      window.onYouTubeIframeAPIReady = initializePlayer\r\n    }\r\n    \r\n    // cleanup\r\n    return () => {\r\n      if (playerRef.current && typeof playerRef.current.destroy === 'function') {\r\n        playerRef.current.destroy()\r\n      }\r\n    }\r\n  }, [videoId])\r\n\r\n  // 🌟 연결된 스킬 필터링\r\n  const linkedSkills = useMemo(() => {\r\n    if (!video?.skillIds || !skillCategories) return []\r\n    const allSkills = skillCategories.flatMap(cat => cat.skills || [])\r\n    return allSkills.filter(skill => skill._id && video.skillIds?.includes(skill._id))\r\n  }, [video, skillCategories])\r\n\r\n  // 🌟 타임스탬프 클릭 핸들러 (유튜브 API 사용)\r\n  const handleTimestampClick = (seconds: number) => {\r\n    console.log(`⏰ 타임스탬프 클릭: ${seconds}초로 이동 + 자동 재생`)\r\n    \r\n    if (!playerRef.current || !isPlayerReady) {\r\n      console.warn('⚠️ 플레이어가 아직 준비되지 않았습니다')\r\n      return\r\n    }\r\n    \r\n    try {\r\n      // 1. 해당 시간으로 이동 (allowSeekAhead: true)\r\n      playerRef.current.seekTo(seconds, true)\r\n      \r\n      // 2. 즉시 재생 시작\r\n      playerRef.current.playVideo()\r\n      \r\n      console.log(`✅ ${seconds}초로 이동 후 재생 시작`)\r\n    } catch (error) {\r\n      console.error('플레이어 제어 오류:', error)\r\n    }\r\n  }\r\n\r\n  // 🌟 타임스탬프가 포함된 텍스트 렌더링\r\n  const renderTextWithTimestamps = (text: string) => {\r\n    if (!text) return null\r\n    \r\n    const timestamps = parseTimestamps(text)\r\n    if (timestamps.length === 0) {\r\n      return <ReactMarkdown>{text}</ReactMarkdown>\r\n    }\r\n\r\n    const result: (string | JSX.Element)[] = []\r\n    let lastIndex = 0\r\n\r\n    timestamps.forEach((ts, idx) => {\r\n      // 타임스탬프 이전 텍스트\r\n      if (ts.position > lastIndex) {\r\n        const beforeText = text.substring(lastIndex, ts.position)\r\n        result.push(\r\n          <span key={`text-${idx}`}>\r\n            <ReactMarkdown>{beforeText}</ReactMarkdown>\r\n          </span>\r\n        )\r\n      }\r\n\r\n      // 타임스탬프 버튼\r\n      result.push(\r\n        <button\r\n          key={`ts-${idx}`}\r\n          onClick={() => handleTimestampClick(ts.seconds)}\r\n          className=\"inline-flex items-center px-2 py-1 bg-blue-600 hover:bg-blue-700 text-white rounded font-mono text-xs font-bold transition-colors mx-1\"\r\n          title={`영상 ${ts.text} 위치로 이동`}\r\n        >\r\n          {ts.text}\r\n        </button>\r\n      )\r\n\r\n      lastIndex = ts.position + ts.text.length\r\n    })\r\n\r\n    // 마지막 텍스트\r\n    if (lastIndex < text.length) {\r\n      const afterText = text.substring(lastIndex)\r\n      result.push(\r\n        <span key=\"text-last\">\r\n          <ReactMarkdown>{afterText}</ReactMarkdown>\r\n        </span>\r\n      )\r\n    }\r\n\r\n    return <div className=\"space-y-2\">{result}</div>\r\n  }\r\n\r\n  // 삭제 핸들러\r\n  const handleDeleteVideo = async () => {\r\n    if (!confirm('이 영상 학습 기록을 삭제하시겠습니까?')) return\r\n\r\n    try {\r\n      await deleteMutation.mutateAsync(id!)\r\n      navigate('/video-learnings')\r\n    } catch (error) {\r\n      console.error('Failed to delete video learning:', error)\r\n    }\r\n  }\r\n\r\n  // 🌟 핵심 배움 편집 시작\r\n  const handleStartEdit = () => {\r\n    setIsEditingKeyTakeaways(true)\r\n    setEditingContent(video?.keyTakeaways || '')\r\n  }\r\n\r\n  // 🌟 핵심 배움 편집 취소\r\n  const handleCancelEdit = () => {\r\n    setIsEditingKeyTakeaways(false)\r\n    setEditingContent('')\r\n  }\r\n\r\n  // 🌟 핵심 배움 저장\r\n  const handleSaveEdit = async () => {\r\n    if (!video || !id) return\r\n\r\n    try {\r\n      // 🌟 skillIds와 categoryIds를 문자열 배열로 확실하게 변환\r\n      const skillIds = (video.skillIds || []).map((skillIdOrObj: any) => \r\n        typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj?._id\r\n      ).filter(Boolean)\r\n      \r\n      const categoryIds = (video.categoryIds || []).map((catIdOrObj: any) => \r\n        typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\r\n      ).filter(Boolean)\r\n\r\n      // VideoLearningFormData 타입에 맞게 필요한 필드만 전달\r\n      const updateData = {\r\n        title: video.title,\r\n        videoId: video.videoId,\r\n        category: video.category,\r\n        categoryIds: categoryIds,\r\n        watchDate: video.watchDate,\r\n        purpose: video.purpose,\r\n        keyTakeaways: editingContent,\r\n        application: video.application,\r\n        skillIds: skillIds,\r\n        rating: video.rating,\r\n        order: video.order,\r\n      }\r\n      \r\n      console.log('📤 전송 데이터:', updateData)\r\n      \r\n      await updateMutation.mutateAsync({\r\n        id,\r\n        data: updateData\r\n      })\r\n      success('저장 완료', '핵심 배움이 저장되었습니다.')\r\n      setIsEditingKeyTakeaways(false)\r\n      setEditingContent('')\r\n    } catch (err: any) {\r\n      console.error('핵심 배움 저장 실패:', err)\r\n      console.error('📋 서버 응답 상세:', err.response?.data)\r\n      toastError('저장 실패', err.response?.data?.message || '핵심 배움 저장 중 오류가 발생했습니다.')\r\n    }\r\n  }\r\n  \r\n  const isDeleting = deleteMutation.isPending\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (!video) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <FaVideo className=\"text-6xl text-gray-400 mx-auto mb-4\" />\r\n          <p className=\"text-xl text-gray-600 dark:text-gray-400\">영상 학습 기록을 찾을 수 없습니다</p>\r\n          <Link \r\n            to=\"/video-learnings\" \r\n            state={location.state}\r\n            className=\"text-primary-600 hover:text-primary-700 mt-4 inline-block\"\r\n          >\r\n            목록으로 돌아가기\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <section className=\"min-h-screen bg-white dark:bg-dark-900\">\r\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\r\n        {/* 뒤로가기 버튼 */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"mb-6\"\r\n        >\r\n          <Link\r\n            to=\"/video-learnings\"\r\n            state={location.state}\r\n            className=\"inline-flex items-center gap-2 text-primary-600 hover:text-primary-700\"\r\n          >\r\n            <FaArrowLeft /> 목록으로 돌아가기\r\n          </Link>\r\n        </motion.div>\r\n\r\n        {/* 2단 레이아웃 컨테이너 */}\r\n        <div className=\"flex flex-col lg:flex-row gap-6\">\r\n          \r\n          {/* ========== 왼쪽 영역: 플레이어 + 기본 정보 ========== */}\r\n          <div className=\"w-full lg:w-7/12 lg:sticky lg:top-8 self-start\">\r\n            \r\n            {/* 유튜브 플레이어 */}\r\n            {videoId && (\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                className=\"mb-6\"\r\n              >\r\n                <StickyVideoPlayer \r\n                  videoId={videoId}\r\n                  playerRef={playerContainerRef}\r\n                  onPlayerReady={() => setIsPlayerReady(true)}\r\n                />\r\n                {!isPlayerReady && (\r\n                  <div className=\"absolute inset-0 flex items-center justify-center bg-gray-900 bg-opacity-75 rounded-xl pointer-events-none\">\r\n                    <div className=\"w-12 h-12 border-4 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n                  </div>\r\n                )}\r\n              </motion.div>\r\n            )}\r\n\r\n            {/* 기본 정보 카드 */}\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ delay: 0.1 }}\r\n              className=\"card p-6 mb-6\"\r\n            >\r\n              <div className=\"flex items-start justify-between mb-4\">\r\n                {/* 카테고리 배지 (복수 표시) */}\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {video.categoryIds && video.categoryIds.length > 0 ? (\r\n                    (video.categoryIds as any[]).map((catIdOrObj: any) => {\r\n                      const catName = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?.name\r\n                      return catName ? (\r\n                        <span \r\n                          key={typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id}\r\n                          className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\"\r\n                        >\r\n                          {catName}\r\n                        </span>\r\n                      ) : null\r\n                    })\r\n                  ) : (\r\n                    // 호환성: categoryIds가 없으면 기존 category 표시\r\n                    video.category && (\r\n                      <span className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\">\r\n                        {video.category}\r\n                      </span>\r\n                    )\r\n                  )}\r\n                </div>\r\n                {isAuthenticated && (\r\n                  <div className=\"flex gap-2\">\r\n                    <Link\r\n                      to={`/admin`}\r\n                      state={{ tab: 'videoLearnings', editId: video._id }}\r\n                      className=\"p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 text-blue-600 dark:text-blue-400\"\r\n                      aria-label=\"영상 수정\"\r\n                    >\r\n                      <FaEdit />\r\n                    </Link>\r\n                    <button\r\n                      onClick={handleDeleteVideo}\r\n                      disabled={isDeleting}\r\n                      className={`p-2 rounded-lg text-red-600 dark:text-red-400 transition-colors ${\r\n                        isDeleting \r\n                          ? 'opacity-50 cursor-not-allowed' \r\n                          : 'hover:bg-gray-100 dark:hover:bg-gray-700'\r\n                      }`}\r\n                      aria-label=\"영상 삭제\"\r\n                    >\r\n                      {isDeleting ? (\r\n                        <div className=\"w-4 h-4 border-2 border-red-600 border-t-transparent rounded-full animate-spin\" />\r\n                      ) : (\r\n                        <FaTrash />\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">\r\n                {video.title}\r\n              </h1>\r\n\r\n              <div className=\"flex flex-wrap gap-4 text-sm text-gray-600 dark:text-gray-400\">\r\n                {video.rating && (\r\n                  <div className=\"flex items-center gap-2\">\r\n                    {Array.from({ length: 5 }, (_, i) => (\r\n                      <FaStar \r\n                        key={i} \r\n                        className={`text-sm ${i < video.rating! ? 'text-yellow-500' : 'text-gray-300 dark:text-gray-600'}`} \r\n                      />\r\n                    ))}\r\n                    <span className=\"font-medium\">{video.rating}/5</span>\r\n                  </div>\r\n                )}\r\n                <div className=\"flex items-center gap-2\">\r\n                  <FaCalendar />\r\n                  <span>{formatDate(video.watchDate)}</span>\r\n                </div>\r\n              </div>\r\n            </motion.div>\r\n\r\n            {/* 시청 목적 */}\r\n            {video.purpose && (\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.2 }}\r\n                className=\"card p-6 mb-6\"\r\n              >\r\n                <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-3 flex items-center gap-2\">\r\n                  <FaBullseye className=\"text-blue-600\" /> 시청 목적\r\n                </h3>\r\n                <div className=\"prose dark:prose-invert max-w-none text-gray-700 dark:text-gray-300 text-sm\">\r\n                  <ReactMarkdown>{video.purpose}</ReactMarkdown>\r\n                </div>\r\n              </motion.div>\r\n            )}\r\n\r\n            {/* 통합 적용 계획 */}\r\n            {video.application && (\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.3 }}\r\n                className=\"card p-6 bg-gradient-to-br from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20 border-l-4 border-purple-600\"\r\n              >\r\n                <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-3 flex items-center gap-2\">\r\n                  <FaRocket className=\"text-purple-600\" /> 적용 계획\r\n                </h3>\r\n                <div className=\"prose dark:prose-invert max-w-none text-gray-700 dark:text-gray-300 text-sm\">\r\n                  <ReactMarkdown>{video.application}</ReactMarkdown>\r\n                </div>\r\n              </motion.div>\r\n            )}\r\n          </div>\r\n\r\n          {/* ========== 오른쪽 영역: 학습 기록 ========== */}\r\n          <div className=\"w-full lg:w-5/12 space-y-6\">\r\n\r\n            {/* 연결된 스킬 */}\r\n            {linkedSkills.length > 0 && (\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.2 }}\r\n                className=\"card p-6\"\r\n              >\r\n                <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4 flex items-center gap-2\">\r\n                  <FaCubes className=\"text-primary-600\" /> 학습한 기술\r\n                </h3>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {linkedSkills.map(skill => (\r\n                    <div\r\n                      key={skill._id}\r\n                      className=\"inline-flex items-center px-3 py-1 rounded-lg text-sm font-medium\"\r\n                      style={{\r\n                        backgroundColor: `${skill.color}26`,\r\n                        color: skill.color,\r\n                      }}\r\n                    >\r\n                      {skill.name}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </motion.div>\r\n            )}\r\n\r\n            {/* 핵심 배움 */}\r\n            {(video.keyTakeaways || isAuthenticated) && (\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.3 }}\r\n                className=\"card p-6 bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 border-l-4 border-blue-600\"\r\n              >\r\n                <div className=\"mb-4\">\r\n                  <div className=\"flex items-center justify-between mb-2\">\r\n                    <h3 className=\"text-xl font-bold text-gray-900 dark:text-white flex items-center gap-2\">\r\n                      <FaLightbulb className=\"text-yellow-500\" /> 핵심 배움\r\n                    </h3>\r\n                    {/* 🌟 편집 버튼 - 인증된 사용자에게만 표시 */}\r\n                    {isAuthenticated && !isEditingKeyTakeaways && (\r\n                      <button\r\n                        onClick={handleStartEdit}\r\n                        className=\"p-1.5 text-blue-600 hover:bg-blue-50 dark:hover:bg-blue-900/30 rounded transition-colors\"\r\n                        title=\"핵심 배움 편집\"\r\n                      >\r\n                        <FaEdit className=\"text-sm\" />\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                  {video.createdAt && (\r\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                      기록 날짜: {formatDate(video.createdAt)}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n\r\n                {/* 읽기 모드 */}\r\n                {!isEditingKeyTakeaways && (\r\n                  <>\r\n                    {video.keyTakeaways ? (\r\n                      <>\r\n                        <div \r\n                          className=\"prose dark:prose-invert max-w-none text-gray-700 dark:text-gray-300\"\r\n                          dangerouslySetInnerHTML={{ \r\n                            __html: renderHtmlWithTimestamps(video.keyTakeaways)\r\n                          }}\r\n                          onClick={(e) => {\r\n                            // 타임스탬프 버튼 클릭 처리\r\n                            const target = e.target as HTMLElement\r\n                            if (target.tagName === 'BUTTON' && target.dataset['timestamp']) {\r\n                              const seconds = parseInt(target.dataset['timestamp'], 10)\r\n                              handleTimestampClick(seconds)\r\n                            }\r\n                          }}\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\r\n                        <p className=\"text-sm\">이 영상의 핵심 배움이 아직 기록되지 않았습니다</p>\r\n                        {isAuthenticated && (\r\n                          <p className=\"text-xs mt-2\">위의 연필 버튼을 클릭하여 학습 기록을 추가하세요</p>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )}\r\n\r\n                {/* 🌟 편집 모드 */}\r\n                {isEditingKeyTakeaways && (\r\n                  <div>\r\n                    <RichTextEditor\r\n                      value={editingContent}\r\n                      onChange={setEditingContent}\r\n                      placeholder=\"영상을 보면서 핵심 배움을 작성하세요. 리치텍스트 에디터를 사용하여 다양한 서식을 적용할 수 있습니다.\"\r\n                      rows={8}\r\n                      className=\"min-h-[250px]\"\r\n                    />\r\n                    <div className=\"flex gap-2 mt-4\">\r\n                      <button\r\n                        onClick={handleSaveEdit}\r\n                        disabled={updateMutation.isPending}\r\n                        className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors text-sm font-medium\"\r\n                      >\r\n                        <FaSave />\r\n                        {updateMutation.isPending ? '저장 중...' : '저장'}\r\n                      </button>\r\n                      <button\r\n                        onClick={handleCancelEdit}\r\n                        disabled={updateMutation.isPending}\r\n                        className=\"flex items-center gap-2 px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors text-sm font-medium\"\r\n                      >\r\n                        <FaTimes />\r\n                        취소\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </motion.div>\r\n            )}\r\n          </div>\r\n          {/* 오른쪽 영역 끝 */}\r\n          \r\n        </div>\r\n        {/* 2단 레이아웃 컨테이너 끝 */}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default VideoLearningDetail\r\n\r\n","import React, { useState, useMemo, useRef, useEffect } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { useParams, Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport { FaArrowLeft, FaList, FaStar, FaCalendar, FaEdit, FaTrash, FaCubes, FaBullseye, FaRocket, FaChevronDown, FaChevronUp, FaSave, FaTimes } from 'react-icons/fa'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { formatDate } from '../utils/dateUtils'\r\nimport { useVideoPlaylist, useDeleteVideoPlaylist, usePlaylistVideos, useUpdatePlaylistVideo } from '../hooks/useVideoPlaylists'\r\nimport { useSkills } from '../hooks/useSkills'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport { renderTextWithTimestamps, renderHtmlWithTimestamps } from '../utils/videoUtils'\r\nimport RichTextEditor from './RichTextEditor'\r\nimport { useToastHelpers } from '../hooks/useToast'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { getLocalizedField } from '@/utils/i18nUtils'\r\nimport StickyVideoPlayer from './StickyVideoPlayer'\r\n\r\n// 유튜브 IFrame Player API 타입 정의\r\ndeclare global {\r\n  interface Window {\r\n    YT: any\r\n    onYouTubeIframeAPIReady: () => void\r\n  }\r\n}\r\n\r\nconst VideoPlaylistDetail: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  const { isAuthenticated } = useAuth()\r\n  const { i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  \r\n  const { data: playlist, isLoading: loading } = useVideoPlaylist(id)\r\n  const { data: playlistVideos = [] } = usePlaylistVideos(id)\r\n  const deleteMutation = useDeleteVideoPlaylist()\r\n  const updateVideoMutation = useUpdatePlaylistVideo()\r\n  const { skillCategories } = useSkills()\r\n  const { success, error } = useToastHelpers()\r\n\r\n  const playerRef = useRef<any>(null)\r\n  const playerContainerRef = useRef<HTMLDivElement>(null)\r\n  const [isPlayerReady, setIsPlayerReady] = useState(false)\r\n  const [activeVideoId, setActiveVideoId] = useState<string | null>(null)\r\n  const [expandedVideoId, setExpandedVideoId] = useState<string | null>(null)\r\n  const [activeVideoTab, setActiveVideoTab] = useState<string | null>(null)\r\n  const [showVideoTabs, setShowVideoTabs] = useState(true)\r\n  \r\n  // 🌟 핵심 배움 편집 상태\r\n  const [editingVideoId, setEditingVideoId] = useState<string | null>(null)\r\n  const [editingContent, setEditingContent] = useState<string>('')\r\n\r\n\r\n  // 첫 번째 영상을 기본 활성 영상으로 설정\r\n  useEffect(() => {\r\n    if (playlistVideos.length > 0 && !activeVideoId && playlistVideos[0]) {\r\n      setActiveVideoId(playlistVideos[0].videoId)\r\n    }\r\n  }, [playlistVideos, activeVideoId])\r\n\r\n  // 유튜브 IFrame API 초기화\r\n  useEffect(() => {\r\n    if (!playlist?.playlistId) return\r\n    \r\n    if (!window.YT) {\r\n      const tag = document.createElement('script')\r\n      tag.src = 'https://www.youtube.com/iframe_api'\r\n      const firstScriptTag = document.getElementsByTagName('script')[0]\r\n      if (firstScriptTag?.parentNode) {\r\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag)\r\n      }\r\n    }\r\n    \r\n    const initializePlayer = () => {\r\n      if (window.YT && window.YT.Player && playerContainerRef.current) {\r\n        playerRef.current = new window.YT.Player(playerContainerRef.current, {\r\n          playerVars: {\r\n            listType: 'playlist',\r\n            list: playlist.playlistId,\r\n            enablejsapi: 1,\r\n            origin: window.location.origin,\r\n            rel: 0,\r\n            modestbranding: 1,\r\n            fs: 1,\r\n            cc_load_policy: 0,\r\n            iv_load_policy: 3,\r\n            showinfo: 0,\r\n          },\r\n          events: {\r\n            onReady: () => {\r\n              setIsPlayerReady(true)\r\n            },\r\n          },\r\n        })\r\n      }\r\n    }\r\n    \r\n    if (window.YT && window.YT.Player) {\r\n      initializePlayer()\r\n    } else {\r\n      window.onYouTubeIframeAPIReady = initializePlayer\r\n    }\r\n    \r\n    return () => {\r\n      if (playerRef.current && typeof playerRef.current.destroy === 'function') {\r\n        playerRef.current.destroy()\r\n      }\r\n    }\r\n  }, [playlist?.playlistId])\r\n\r\n  // 첫 번째 영상을 기본 활성 탭으로 설정\r\n  useEffect(() => {\r\n    if (playlistVideos.length > 0 && !activeVideoTab && playlistVideos[0]) {\r\n      setActiveVideoTab(playlistVideos[0]._id)\r\n    }\r\n  }, [playlistVideos, activeVideoTab])\r\n\r\n  // 연결된 스킬\r\n  const linkedSkills = useMemo(() => {\r\n    if (!playlist?.skillIds || !skillCategories) return []\r\n    const allSkills = skillCategories.flatMap(cat => cat.skills || [])\r\n    return allSkills.filter(skill => skill._id && playlist.skillIds?.includes(skill._id))\r\n  }, [playlist, skillCategories])\r\n\r\n  // 활성 영상\r\n  const activeVideo = useMemo(() => \r\n    playlistVideos.find(v => v._id === activeVideoTab),\r\n    [playlistVideos, activeVideoTab]\r\n  )\r\n\r\n  // 탭 클릭 시 영상 전환\r\n  const handleVideoTabClick = (video: any, index: number) => {\r\n    setActiveVideoTab(video._id)\r\n    handleTimestampClick(video.videoId, 0)\r\n  }\r\n\r\n  // 타임스탬프 클릭 핸들러 (영상 전환 + 시간 이동 + 자동 재생)\r\n  const handleTimestampClick = (targetVideoId: string, seconds: number) => {\r\n    if (!isPlayerReady || !playerRef.current) {\r\n      return\r\n    }\r\n\r\n    try {\r\n      const videoIndex = playlistVideos.findIndex(v => v.videoId === targetVideoId)\r\n      \r\n      if (videoIndex === -1) {\r\n        return\r\n      }\r\n\r\n      // 영상 전환\r\n      playerRef.current.playVideoAt(videoIndex)\r\n      setActiveVideoId(targetVideoId)\r\n      \r\n      // 시간 이동 + 자동 재생\r\n      setTimeout(() => {\r\n        playerRef.current.seekTo(seconds, true)\r\n        playerRef.current.playVideo()\r\n      }, 1000)\r\n      \r\n    } catch (error) {\r\n      console.error('타임스탬프 이동 실패:', error)\r\n    }\r\n  }\r\n\r\n\r\n  // 재생 목록 삭제 핸들러\r\n  const handleDelete = async () => {\r\n    if (!confirm('이 재생 목록을 삭제하시겠습니까?')) return\r\n\r\n    try {\r\n      await deleteMutation.mutateAsync(id!)\r\n      navigate('/video-learnings')\r\n    } catch (error) {\r\n      console.error('삭제 실패:', error)\r\n    }\r\n  }\r\n\r\n  // 🌟 핵심 배움 편집 시작\r\n  const handleStartEdit = (video: any) => {\r\n    setEditingVideoId(video._id)\r\n    setEditingContent(video.keyTakeaways || '')\r\n  }\r\n\r\n  // 🌟 핵심 배움 편집 취소\r\n  const handleCancelEdit = () => {\r\n    setEditingVideoId(null)\r\n    setEditingContent('')\r\n  }\r\n\r\n  // 🌟 핵심 배움 저장\r\n  const handleSaveEdit = async () => {\r\n    if (!editingVideoId || !activeVideo) return\r\n\r\n    try {\r\n      await updateVideoMutation.mutateAsync({\r\n        id: editingVideoId,\r\n        data: {\r\n          playlistId: id!,\r\n          videoId: activeVideo.videoId,\r\n          title: activeVideo.title,\r\n          keyTakeaways: editingContent,\r\n          order: activeVideo.order || 0,\r\n        }\r\n      })\r\n      success('저장 완료', '핵심 배움이 저장되었습니다.')\r\n      setEditingVideoId(null)\r\n      setEditingContent('')\r\n    } catch (err) {\r\n      error('저장 실패', '핵심 배움 저장 중 오류가 발생했습니다.')\r\n      console.error('핵심 배움 저장 실패:', err)\r\n    }\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (!playlist) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <FaList className=\"text-6xl text-gray-400 mx-auto mb-4\" />\r\n          <p className=\"text-xl text-gray-600 dark:text-gray-400\">재생 목록을 찾을 수 없습니다</p>\r\n          <Link \r\n            to=\"/video-learnings\" \r\n            state={location.state}\r\n            className=\"text-primary-600 hover:text-primary-700 mt-4 inline-block\"\r\n          >\r\n            목록으로 돌아가기\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <section className=\"min-h-screen bg-white dark:bg-dark-900\">\r\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\r\n        {/* 뒤로가기 버튼 */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"mb-6\"\r\n        >\r\n          <Link\r\n            to=\"/video-learnings\"\r\n            state={location.state}\r\n            className=\"inline-flex items-center gap-2 text-primary-600 hover:text-primary-700\"\r\n          >\r\n            <FaArrowLeft /> 목록으로 돌아가기\r\n          </Link>\r\n        </motion.div>\r\n\r\n        {/* 2단 레이아웃 컨테이너 */}\r\n        <div className=\"flex flex-col lg:flex-row gap-6\">\r\n          \r\n          {/* ========== 왼쪽 영역: 플레이어 + 기본 정보 ========== */}\r\n          <div className=\"w-full lg:w-7/12 lg:sticky lg:top-8 self-start\">\r\n            \r\n            {/* 유튜브 재생 목록 플레이어 */}\r\n            {playlist.playlistId && activeVideoId && (\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                className=\"mb-6\"\r\n              >\r\n                <StickyVideoPlayer \r\n                  videoId={activeVideoId}\r\n                  playerRef={playerContainerRef}\r\n                  onPlayerReady={() => setIsPlayerReady(true)}\r\n                />\r\n                {!isPlayerReady && (\r\n                  <div className=\"absolute inset-0 flex items-center justify-center bg-gray-900 bg-opacity-75 rounded-xl pointer-events-none\">\r\n                    <div className=\"w-12 h-12 border-4 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n                  </div>\r\n                )}\r\n              </motion.div>\r\n            )}\r\n\r\n            {/* 기본 정보 카드 */}\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ delay: 0.1 }}\r\n              className=\"card p-6 mb-6\"\r\n            >\r\n              <div className=\"flex items-start justify-between mb-4\">\r\n                {/* 카테고리 배지 (복수 표시) */}\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {playlist.categoryIds && playlist.categoryIds.length > 0 ? (\r\n                    (playlist.categoryIds as any[]).map((catIdOrObj: any) => {\r\n                      const catName = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?.name\r\n                      return catName ? (\r\n                        <span \r\n                          key={typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id}\r\n                          className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\"\r\n                        >\r\n                          {catName}\r\n                        </span>\r\n                      ) : null\r\n                    })\r\n                  ) : (\r\n                    // 호환성: categoryIds가 없으면 기존 category 표시\r\n                    playlist.category && (\r\n                      <span className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\">\r\n                        {playlist.category}\r\n                      </span>\r\n                    )\r\n                  )}\r\n                </div>\r\n                {isAuthenticated && (\r\n                  <div className=\"flex gap-2\">\r\n                    <Link\r\n                      to={`/admin`}\r\n                      state={{ tab: 'videoPlaylists', editId: playlist._id }}\r\n                      className=\"p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 text-blue-600 dark:text-blue-400\"\r\n                      aria-label=\"재생 목록 수정\"\r\n                    >\r\n                      <FaEdit />\r\n                    </Link>\r\n                    <button\r\n                      onClick={handleDelete}\r\n                      disabled={deleteMutation.isPending}\r\n                      className=\"p-2 rounded-lg text-red-600 dark:text-red-400 hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n                      aria-label=\"재생 목록 삭제\"\r\n                    >\r\n                      <FaTrash />\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">\r\n                {playlist.title}\r\n              </h1>\r\n\r\n              <div className=\"flex flex-wrap gap-4 text-sm text-gray-600 dark:text-gray-400\">\r\n                {playlist.rating && (\r\n                  <div className=\"flex items-center gap-2\">\r\n                    {Array.from({ length: 5 }, (_, i) => (\r\n                      <FaStar \r\n                        key={i} \r\n                        className={`text-sm ${i < playlist.rating! ? 'text-yellow-500' : 'text-gray-300 dark:text-gray-600'}`} \r\n                      />\r\n                    ))}\r\n                    <span className=\"font-medium\">{playlist.rating}/5</span>\r\n                  </div>\r\n                )}\r\n                <div className=\"flex items-center gap-2\">\r\n                  <FaCalendar />\r\n                  <span>{formatDate(playlist.watchDate)}</span>\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <FaList />\r\n                  <span>{playlistVideos.length}개 영상</span>\r\n                </div>\r\n              </div>\r\n            </motion.div>\r\n\r\n            {/* 시청 목적 */}\r\n            {playlist.purpose && (\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.2 }}\r\n                className=\"card p-6 mb-6\"\r\n              >\r\n                <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-3 flex items-center gap-2\">\r\n                  <FaBullseye className=\"text-blue-600\" /> 시청 목적\r\n                </h3>\r\n                <div className=\"prose dark:prose-invert max-w-none text-gray-700 dark:text-gray-300 text-sm\">\r\n                  <ReactMarkdown>{playlist.purpose}</ReactMarkdown>\r\n                </div>\r\n              </motion.div>\r\n            )}\r\n\r\n            {/* 통합 적용 계획 */}\r\n            {playlist.application && (\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.3 }}\r\n                className=\"card p-6 bg-gradient-to-br from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20 border-l-4 border-purple-600\"\r\n              >\r\n                <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-3 flex items-center gap-2\">\r\n                  <FaRocket className=\"text-purple-600\" /> 통합 적용 계획\r\n                </h3>\r\n                <div className=\"prose dark:prose-invert max-w-none text-gray-700 dark:text-gray-300 text-sm\">\r\n                  <ReactMarkdown>{playlist.application}</ReactMarkdown>\r\n                </div>\r\n              </motion.div>\r\n            )}\r\n          </div>\r\n\r\n          {/* ========== 오른쪽 영역: 학습 기록 ========== */}\r\n          <div className=\"w-full lg:w-5/12 space-y-6\">\r\n\r\n            {/* 연결된 스킬 */}\r\n            {linkedSkills.length > 0 && (\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.2 }}\r\n                className=\"card p-6 mb-6\"\r\n              >\r\n                <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4 flex items-center gap-2\">\r\n                  <FaCubes className=\"text-primary-600\" /> 학습한 기술\r\n                </h3>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {linkedSkills.map(skill => (\r\n                    <div\r\n                      key={skill._id}\r\n                      className=\"inline-flex items-center px-3 py-1 rounded-lg text-sm font-medium\"\r\n                      style={{\r\n                        backgroundColor: `${skill.color}26`,\r\n                        color: skill.color,\r\n                      }}\r\n                    >\r\n                      {skill.name}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </motion.div>\r\n            )}\r\n\r\n            {/* 영상별 학습 기록 - 탭 형태 */}\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ delay: 0.4 }}\r\n              className=\"card p-6\"\r\n            >\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <button\r\n              onClick={() => setShowVideoTabs(!showVideoTabs)}\r\n              className=\"flex items-center gap-2 text-xl font-bold text-gray-900 dark:text-white hover:text-primary-600 dark:hover:text-primary-400 transition-colors\"\r\n            >\r\n              {showVideoTabs ? <FaChevronUp /> : <FaChevronDown />}\r\n              📹 영상별 학습 기록 ({playlistVideos.length}개)\r\n            </button>\r\n          </div>\r\n          \r\n          {/* 영상 탭 버튼들 - 토글 가능 */}\r\n          {showVideoTabs && playlistVideos.length > 0 && (\r\n            <div className=\"flex flex-wrap gap-2 mb-4\">\r\n              {playlistVideos.map((video, index) => (\r\n                <button\r\n                  key={video._id}\r\n                  onClick={() => handleVideoTabClick(video, index)}\r\n                  className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\r\n                    activeVideoTab === video._id\r\n                      ? 'bg-primary-600 text-white'\r\n                      : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\r\n                  }`}\r\n                >\r\n                  #{index + 1} {video.title}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {/* 활성 영상의 학습 기록 */}\r\n          {playlistVideos.length > 0 && activeVideo ? (\r\n            <div className=\"border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden\">\r\n              {/* 영상 헤더 */}\r\n              <div className=\"p-4 bg-gray-50 dark:bg-gray-800\">\r\n                <h4 className=\"font-bold text-gray-900 dark:text-white mb-1\">\r\n                  {activeVideo.title}\r\n                </h4>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"space-y-0.5\">\r\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                      유튜브 영상 ID: {activeVideo.videoId}\r\n                    </p>\r\n                    {activeVideo.createdAt && (\r\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                        기록 날짜: {formatDate(activeVideo.createdAt)}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                  {/* 🌟 편집 버튼 - 인증된 사용자에게만 표시 */}\r\n                  {isAuthenticated && editingVideoId !== activeVideo._id && (\r\n                    <button\r\n                      onClick={() => handleStartEdit(activeVideo)}\r\n                      className=\"p-1.5 text-blue-600 hover:bg-blue-50 dark:hover:bg-blue-900/30 rounded transition-colors\"\r\n                      title=\"핵심 배움 편집\"\r\n                    >\r\n                      <FaEdit className=\"text-sm\" />\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* 핵심 배움 - 읽기 모드 */}\r\n              {editingVideoId !== activeVideo._id && (\r\n                <>\r\n                  {activeVideo.keyTakeaways ? (\r\n                    <div className=\"p-4 bg-white dark:bg-gray-900\">\r\n                      <h5 className=\"text-sm font-bold text-gray-700 dark:text-gray-300 mb-3\">\r\n                        🎯 핵심 배움\r\n                      </h5>\r\n                      <div \r\n                        className=\"prose dark:prose-invert max-w-none text-gray-700 dark:text-gray-300 leading-relaxed\"\r\n                        dangerouslySetInnerHTML={{ \r\n                          __html: renderHtmlWithTimestamps(activeVideo.keyTakeaways)\r\n                        }}\r\n                        onClick={(e) => {\r\n                          // 타임스탬프 버튼 클릭 처리\r\n                          const target = e.target as HTMLElement\r\n                          if (target.tagName === 'BUTTON' && target.dataset['timestamp']) {\r\n                            const seconds = parseInt(target.dataset['timestamp'], 10)\r\n                            handleTimestampClick(activeVideo.videoId, seconds)\r\n                          }\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"p-4 bg-white dark:bg-gray-900 text-center text-gray-500 dark:text-gray-400\">\r\n                      <p className=\"text-sm\">이 영상의 핵심 배움이 아직 기록되지 않았습니다</p>\r\n                      {isAuthenticated && (\r\n                        <p className=\"text-xs mt-2\">위의 연필 버튼을 클릭하여 학습 기록을 추가하세요</p>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n\r\n              {/* 🌟 핵심 배움 - 편집 모드 */}\r\n              {editingVideoId === activeVideo._id && (\r\n                <div className=\"p-4 bg-white dark:bg-gray-900\">\r\n                  <h5 className=\"text-sm font-bold text-gray-700 dark:text-gray-300 mb-3\">\r\n                    ✏️ 핵심 배움 편집\r\n                  </h5>\r\n                  <RichTextEditor\r\n                    value={editingContent}\r\n                    onChange={setEditingContent}\r\n                    placeholder=\"영상을 보면서 핵심 배움을 작성하세요. 리치텍스트 에디터를 사용하여 다양한 서식을 적용할 수 있습니다.\"\r\n                    rows={8}\r\n                    className=\"min-h-[250px]\"\r\n                  />\r\n                  <div className=\"flex gap-2 mt-4\">\r\n                    <button\r\n                      onClick={handleSaveEdit}\r\n                      disabled={updateVideoMutation.isPending}\r\n                      className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors text-sm font-medium\"\r\n                    >\r\n                      <FaSave />\r\n                      {updateVideoMutation.isPending ? '저장 중...' : '저장'}\r\n                    </button>\r\n                    <button\r\n                      onClick={handleCancelEdit}\r\n                      disabled={updateVideoMutation.isPending}\r\n                      className=\"flex items-center gap-2 px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors text-sm font-medium\"\r\n                    >\r\n                      <FaTimes />\r\n                      취소\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : playlistVideos.length === 0 ? (\r\n            <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\r\n              <p className=\"mb-4\">아직 등록된 영상 학습 기록이 없습니다</p>\r\n              {isAuthenticated && (\r\n                <p className=\"text-sm\">관리자 페이지의 재생 목록 수정에서 영상을 추가해주세요</p>\r\n              )}\r\n            </div>\r\n          ) : null}\r\n            </motion.div>\r\n          </div>\r\n          {/* 오른쪽 영역 끝 */}\r\n          \r\n        </div>\r\n        {/* 2단 레이아웃 컨테이너 끝 */}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default VideoPlaylistDetail\r\n\r\n","import React from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { Link } from 'react-router-dom'\r\nimport { FaGithub, FaExternalLinkAlt, FaImage } from 'react-icons/fa'\r\nimport { Project } from '../types'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { getLocalizedField, getLocalizedArrayField } from '@/utils/i18nUtils'\r\n\r\ninterface ProjectCardProps {\r\n  project: Project\r\n  itemVariants: any // framer-motion variants 타입\r\n  getStatusColor: (status: string) => string\r\n  getStatusText: (status: string) => string\r\n}\r\n\r\n// 기술 스택 최대 표시 개수 상수\r\nconst MAX_TECH_DISPLAY = 5\r\n\r\nconst ProjectCard: React.FC<ProjectCardProps> = ({ project, itemVariants, getStatusColor, getStatusText }) => {\r\n  const { i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  \r\n  // Get localized technologies\r\n  const technologies = getLocalizedArrayField(\r\n    currentLang,\r\n    project.technologies,\r\n    project.technologiesEn,\r\n    project.technologiesJa\r\n  )\r\n  \r\n  // 프로젝트 링크 존재 여부 확인\r\n  const hasLinks = project.githubLink || project.liveLink\r\n\r\n  return (\r\n    <motion.div\r\n      key={project._id}\r\n      variants={itemVariants}\r\n      // 레이아웃 변경 시 부드러운 전환을 위해 layout 속성 추가\r\n      layout\r\n      className=\"card overflow-hidden bg-white dark:bg-dark-800 rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 flex flex-col cursor-pointer group\"\r\n    >\r\n      <Link \r\n        to={`/projects/${project._id}`}\r\n        state={{ scrollPosition: window.scrollY }}\r\n        className=\"block flex flex-col h-full\"\r\n      >\r\n      <div className=\"h-48 bg-cream-200 dark:bg-dark-700 flex items-center justify-center relative flex-shrink-0\">\r\n        {project.image ? (\r\n          <img \r\n            src={project.image} \r\n            alt={`${project.title} 썸네일`} \r\n            className=\"w-full h-full object-cover\"\r\n            loading=\"lazy\"\r\n            decoding=\"async\"\r\n            width=\"640\"\r\n            height=\"192\"\r\n          />\r\n        ) : (\r\n          <FaImage className=\"text-dark-400 dark:text-dark-500 text-5xl\" />\r\n        )}\r\n        <div className=\"absolute top-4 right-4\">\r\n          <span className={`px-3 py-1 rounded-full text-sm font-medium ${getStatusColor(project.status)}`}>\r\n            {getStatusText(project.status)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"p-8 flex flex-col flex-grow\">\r\n        <h3 className=\"text-xl font-bold text-dark-900 dark:text-cream-100 mb-3 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors\">\r\n          {getLocalizedField(currentLang, project.title, project.titleEn, project.titleJa)}\r\n        </h3>\r\n        <p className=\"text-dark-600 dark:text-dark-300 mb-6 leading-relaxed flex-grow\">\r\n          {getLocalizedField(currentLang, project.description, project.descriptionEn, project.descriptionJa)}\r\n        </p>\r\n        <div className=\"flex flex-wrap gap-2 mb-4\">\r\n          {technologies.slice(0, MAX_TECH_DISPLAY).map((tech) => (\r\n            <span\r\n              key={tech}\r\n              className=\"px-3 py-1 bg-coffee-50 dark:bg-coffee-900 text-coffee-700 dark:text-coffee-300 rounded-lg text-sm font-medium\"\r\n            >\r\n              {tech}\r\n            </span>\r\n          ))}\r\n          {technologies.length > MAX_TECH_DISPLAY && (\r\n            <span className=\"px-3 py-1 bg-cream-200 dark:bg-dark-700 text-dark-500 dark:text-dark-400 rounded-lg text-sm font-medium\">\r\n              외 {technologies.length - MAX_TECH_DISPLAY}개\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div \r\n          className=\"flex flex-wrap gap-4 pt-4 border-t border-cream-200 dark:border-dark-700\"\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          {hasLinks ? (\r\n            <>\r\n              {project.liveLink && (\r\n                <a \r\n                  href={project.liveLink}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className={`px-4 py-2 rounded-xl font-bold transition-all duration-200 flex items-center gap-2 \r\n                    ${project.status === 'completed' \r\n                      ? 'bg-coffee-600 text-white hover:bg-coffee-700 shadow-md'\r\n                      : 'bg-cream-200 dark:bg-dark-700 text-dark-700 dark:text-dark-300 hover:bg-cream-300 dark:hover:bg-dark-600'\r\n                    }`}\r\n                  aria-label={`${project.title} 라이브 데모 보기`}\r\n                >\r\n                  <FaExternalLinkAlt size={16} />\r\n                  라이브 보기\r\n                </a>\r\n              )}\r\n              {project.githubLink && (\r\n                <a \r\n                  href={project.githubLink}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"px-4 py-2 rounded-xl font-medium transition-all duration-200 flex items-center gap-2 bg-white dark:bg-dark-900 text-dark-600 dark:text-dark-300 hover:bg-cream-100 dark:hover:bg-dark-700 border border-cream-200 dark:border-dark-700\"\r\n                  aria-label={`${project.title} GitHub 레포지토리`}\r\n                >\r\n                  <FaGithub size={20} />\r\n                  GitHub\r\n                </a>\r\n              )}\r\n            </>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      </Link>\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default ProjectCard\r\n","import React, { useState } from 'react'\r\nimport { useParams, useNavigate, Link, useLocation } from 'react-router-dom'\r\nimport { motion } from 'framer-motion'\r\nimport { FaArrowLeft, FaGithub, FaExternalLinkAlt, FaPlay, FaImage, FaCode, FaChevronLeft, FaChevronRight } from 'react-icons/fa'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { useProjectDetail } from '../hooks/useProjectDetail'\r\n\r\nconst ProjectDetail: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  const { i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  \r\n  // Use custom hook for data fetching and i18n processing\r\n  const { loading, error, localizedProject, linkedSkills } = useProjectDetail(id, currentLang)\r\n  \r\n  // UI state management\r\n  const [selectedImage, setSelectedImage] = useState<string | null>(null)\r\n  const [currentVideoIndex, setCurrentVideoIndex] = useState(0)\r\n  const [currentShortsIndex, setCurrentShortsIndex] = useState(0)\r\n\r\n  // Utility function for skill badge styling\r\n  const getBadgeStyle = (colorCode: string) => {\r\n    const bgColor = `${colorCode}26`\r\n    const textColor = colorCode\r\n    \r\n    return {\r\n      backgroundColor: bgColor,\r\n      color: textColor,\r\n    } as React.CSSProperties\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (error || !localizedProject) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <p className=\"text-xl text-gray-600 dark:text-gray-400 mb-4\">{error || '프로젝트를 찾을 수 없습니다.'}</p>\r\n          <button\r\n            onClick={() => navigate('/projects', { state: location.state })}\r\n            className=\"text-primary-600 hover:text-primary-700\"\r\n          >\r\n            목록으로 돌아가기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const isYouTubeUrl = (url: string) => {\r\n    return url.includes('youtube.com') || url.includes('youtu.be')\r\n  }\r\n\r\n  // 🌟 유튜브 쇼츠 URL 판별 함수 추가\r\n  const isYouTubeShorts = (url: string) => {\r\n    return url.includes('youtube.com/shorts/')\r\n  }\r\n\r\n  const getYouTubeEmbedUrl = (url: string) => {\r\n    let videoId = ''\r\n    // 🌟 유튜브 쇼츠 지원 추가\r\n    if (url.includes('youtube.com/shorts/')) {\r\n      videoId = url.split('shorts/')[1]?.split('?')[0] || ''\r\n    } else if (url.includes('youtube.com/watch?v=')) {\r\n      videoId = url.split('v=')[1]?.split('&')[0] || ''\r\n    } else if (url.includes('youtu.be/')) {\r\n      videoId = url.split('youtu.be/')[1]?.split('?')[0] || ''\r\n    }\r\n    return videoId ? `https://www.youtube.com/embed/${videoId}?rel=0&modestbranding=1&showinfo=0` : ''\r\n  }\r\n\r\n  // 🌟 동영상 분류 (쇼츠 vs 일반)\r\n  const regularVideos = localizedProject.videos?.filter((video: string) => !isYouTubeShorts(video)) || []\r\n  const shortsVideos = localizedProject.videos?.filter((video: string) => isYouTubeShorts(video)) || []\r\n\r\n  return (\r\n    <section className=\"section-padding bg-gray-50 dark:bg-dark-900 min-h-screen\">\r\n      <div className=\"max-w-6xl mx-auto px-4\">\r\n        {/* Header */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"mb-8\"\r\n        >\r\n          <Link\r\n            to=\"/projects\"\r\n            state={location.state}\r\n            className=\"inline-flex items-center gap-2 text-primary-600 hover:text-primary-700 mb-6 dark:text-primary-400\"\r\n          >\r\n            <FaArrowLeft /> 목록으로 돌아가기\r\n          </Link>\r\n        </motion.div>\r\n\r\n        {/* Project Header */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8 mb-8\"\r\n        >\r\n          <div className=\"flex flex-col md:flex-row gap-8\">\r\n            {/* 🌟 Main Image - 왼쪽으로 이동 */}\r\n            {localizedProject.image && (\r\n              <div className=\"md:w-1/3\">\r\n                <img \r\n                  src={localizedProject.image}\r\n                  alt={localizedProject.title}\r\n                  className=\"w-full h-auto rounded-lg shadow-lg object-cover\"\r\n                  loading=\"eager\"\r\n                  decoding=\"async\"\r\n                  width=\"800\"\r\n                  height=\"600\"\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {/* 🌟 텍스트 내용 - 오른쪽 */}\r\n            <div className=\"flex-1\">\r\n              <div className=\"flex items-start gap-4 mb-4 flex-wrap\">\r\n                {/* 카테고리 배지 (복수 표시) */}\r\n                {localizedProject.categoryIds && localizedProject.categoryIds.length > 0 ? (\r\n                  (localizedProject.categoryIds as any[]).map((catIdOrObj: any) => {\r\n                    const catName = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?.name\r\n                    return catName ? (\r\n                      <span \r\n                        key={typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id}\r\n                        className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\"\r\n                      >\r\n                        {catName}\r\n                      </span>\r\n                    ) : null\r\n                  })\r\n                ) : (\r\n                  // 호환성: categoryIds가 없으면 기존 category 표시\r\n                  localizedProject.category && (\r\n                    <span className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\">\r\n                      {localizedProject.category}\r\n                    </span>\r\n                  )\r\n                )}\r\n                <span className={`px-3 py-1 rounded-full text-sm font-medium ${\r\n                  localizedProject.status === 'completed' \r\n                    ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200'\r\n                    : localizedProject.status === 'planning'\r\n                    ? 'bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200'\r\n                    : 'bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200'\r\n                }`}>\r\n                  {localizedProject.status === 'completed' ? '완료' : localizedProject.status === 'planning' ? '기획중' : '준비중'}\r\n                </span>\r\n              </div>\r\n              <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4\">\r\n                {localizedProject.title}\r\n              </h1>\r\n              <p className=\"text-lg text-gray-600 dark:text-gray-300 mb-6 leading-relaxed\">\r\n                {localizedProject.description}\r\n              </p>\r\n              \r\n              {/* Technologies */}\r\n              {localizedProject.technologies.length > 0 && (\r\n                <div className=\"mb-6\">\r\n                  <h3 className=\"text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3 flex items-center gap-2\">\r\n                    <FaCode /> 사용 기술\r\n                  </h3>\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    {localizedProject.technologies.map((tech, index) => (\r\n                      <span\r\n                        key={index}\r\n                        className=\"px-3 py-1 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg text-sm font-medium\"\r\n                      >\r\n                        {tech}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* 🌟 Linked Skills (스킬 배지) */}\r\n              {linkedSkills.length > 0 && (\r\n                <div className=\"mb-6\">\r\n                  <h3 className=\"text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3 flex items-center gap-2\">\r\n                    <FaCode /> 사용된 핵심 스킬\r\n                  </h3>\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    {linkedSkills.map((skill) => {\r\n                      // 🌟 동적 스타일 적용\r\n                      const badgeStyle = skill.color ? getBadgeStyle(skill.color) : undefined\r\n\r\n                      return (\r\n                        <Link\r\n                          key={skill._id}\r\n                          to={`/projects?skillId=${skill._id}`}\r\n                          className=\"inline-flex items-center px-3 py-1 rounded-lg text-sm font-medium hover:ring-2 transition-all hover:opacity-80\"\r\n                          title={`${skill.name} 스킬이 사용된 모든 프로젝트 보기`}\r\n                          style={{\r\n                            ...badgeStyle,\r\n                            '--tw-ring-color': skill.color || '#3B82F6',\r\n                          } as React.CSSProperties}\r\n                        >\r\n                          <span className=\"font-semibold\">{skill.name}</span>\r\n                          <span \r\n                            className=\"text-xs font-semibold ml-1\"\r\n                            style={{ color: skill.color || '#3B82F6' }}\r\n                          >\r\n                            [{skill.levelText}]\r\n                          </span>\r\n                        </Link>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Links */}\r\n              <div className=\"flex flex-wrap gap-4\">\r\n                {localizedProject.githubLink && (\r\n                  <a\r\n                    href={localizedProject.githubLink}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"inline-flex items-center gap-2 px-4 py-2 bg-gray-900 dark:bg-gray-700 text-white rounded-lg hover:bg-gray-800 dark:hover:bg-gray-600 transition-colors\"\r\n                  >\r\n                    <FaGithub /> GitHub\r\n                  </a>\r\n                )}\r\n                {localizedProject.liveLink && (\r\n                  <a\r\n                    href={localizedProject.liveLink}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"inline-flex items-center gap-2 px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors\"\r\n                  >\r\n                    <FaExternalLinkAlt /> Live Demo\r\n                  </a>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\">\r\n          {/* Additional Images - 전체 너비 */}\r\n          {localizedProject.images && localizedProject.images.length > 0 && (\r\n            <div className=\"lg:col-span-4 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8\">\r\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-6 flex items-center gap-2\">\r\n                <FaImage /> 프로젝트 이미지\r\n              </h3>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                {localizedProject.images.map((image, index) => (\r\n                  <motion.div\r\n                    key={index}\r\n                    initial={{ opacity: 0, scale: 0.9 }}\r\n                    animate={{ opacity: 1, scale: 1 }}\r\n                    transition={{ delay: index * 0.1 }}\r\n                    className=\"cursor-pointer group\"\r\n                    onClick={() => setSelectedImage(image)}\r\n                  >\r\n                    <div className=\"aspect-video rounded-lg overflow-hidden shadow-md group-hover:shadow-xl transition-shadow\">\r\n                      <img\r\n                        src={image}\r\n                        alt={`${localizedProject.title} ${index + 1}`}\r\n                        className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\r\n                        loading=\"lazy\"\r\n                        decoding=\"async\"\r\n                        width=\"640\"\r\n                        height=\"360\"\r\n                      />\r\n                    </div>\r\n                  </motion.div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* 🌟 영상 섹션 - 가로 배치 */}\r\n          {/* 🌟 일반 동영상 (가로형) - 왼쪽 (3/4) */}\r\n          {regularVideos.length > 0 && (\r\n            <div className=\"lg:col-span-3 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8\" data-video-section>\r\n              <div className=\"flex items-center justify-between mb-6\">\r\n                <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white flex items-center gap-2\">\r\n                  <FaPlay /> 프로젝트 동영상\r\n                </h3>\r\n                {regularVideos.length > 1 && (\r\n                  <span className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                    {currentVideoIndex + 1} / {regularVideos.length}\r\n                  </span>\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"relative\">\r\n                {/* 영상 컨테이너 */}\r\n                <div className=\"relative group\">\r\n                  {(() => {\r\n                    const video = regularVideos[currentVideoIndex]\r\n                    if (!video) return null\r\n                    \r\n                    return (\r\n                      <div>\r\n                        {isYouTubeUrl(video) ? (\r\n                          <div className=\"relative w-full rounded-lg overflow-hidden shadow-lg bg-gray-100 dark:bg-gray-700\">\r\n                            <div className=\"aspect-video\">\r\n                              <iframe\r\n                                src={getYouTubeEmbedUrl(video)}\r\n                                title={`${localizedProject.title} 동영상 ${currentVideoIndex + 1}`}\r\n                                className=\"w-full h-full\"\r\n                                allowFullScreen\r\n                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                              />\r\n                            </div>\r\n                            {/* YouTube 링크 */}\r\n                            <div className=\"absolute bottom-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity z-10\">\r\n                              <a\r\n                                href={video}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm font-medium transition-colors\"\r\n                              >\r\n                                YouTube에서 보기\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"relative w-full rounded-lg overflow-hidden shadow-lg bg-gray-100 dark:bg-gray-700\">\r\n                            <div className=\"aspect-video\">\r\n                              <video\r\n                                src={video}\r\n                                controls\r\n                                className=\"w-full h-full object-cover\"\r\n                                preload=\"metadata\"\r\n                              >\r\n                                <source src={video} type=\"video/mp4\" />\r\n                                <source src={video} type=\"video/webm\" />\r\n                                <source src={video} type=\"video/ogg\" />\r\n                                브라우저가 비디오를 지원하지 않습니다.\r\n                              </video>\r\n                            </div>\r\n                            {/* 직접 링크 */}\r\n                            <div className=\"absolute bottom-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity z-10\">\r\n                              <a\r\n                                href={video}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded text-sm font-medium transition-colors\"\r\n                              >\r\n                                원본 보기\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                        \r\n                        {/* 🌟 영상 설명 (HTML 렌더링) */}\r\n                        {localizedProject.videoDescriptions?.[currentVideoIndex] && (\r\n                          <div className=\"mt-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                            <div \r\n                              className=\"text-gray-700 dark:text-gray-300 text-sm leading-relaxed prose prose-sm dark:prose-invert max-w-none\"\r\n                              dangerouslySetInnerHTML={{ __html: localizedProject.videoDescriptions[currentVideoIndex] }}\r\n                            />\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )\r\n                  })()}\r\n                  \r\n                  {/* 🌟 좌우 화살표 (영상이 2개 이상일 때) */}\r\n                  {regularVideos.length > 1 && (\r\n                    <>\r\n                      <button\r\n                        onClick={() => setCurrentVideoIndex((prev) => (prev === 0 ? regularVideos.length - 1 : prev - 1))}\r\n                        className=\"absolute left-2 top-1/2 -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-all opacity-0 group-hover:opacity-100 z-10\"\r\n                        aria-label=\"이전 영상\"\r\n                      >\r\n                        <FaChevronLeft size={20} />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => setCurrentVideoIndex((prev) => (prev === regularVideos.length - 1 ? 0 : prev + 1))}\r\n                        className=\"absolute right-2 top-1/2 -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-all opacity-0 group-hover:opacity-100 z-10\"\r\n                        aria-label=\"다음 영상\"\r\n                      >\r\n                        <FaChevronRight size={20} />\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                </div>\r\n                \r\n                {/* 🌟 인디케이터 (영상이 2개 이상일 때) */}\r\n                {regularVideos.length > 1 && (\r\n                  <div className=\"flex justify-center gap-2 mt-4\">\r\n                    {regularVideos.map((_: string, index: number) => (\r\n                      <button\r\n                        key={index}\r\n                        onClick={() => setCurrentVideoIndex(index)}\r\n                        className={`h-2 rounded-full transition-all ${\r\n                          index === currentVideoIndex \r\n                            ? 'w-8 bg-blue-600 dark:bg-blue-400' \r\n                            : 'w-2 bg-gray-300 dark:bg-gray-600 hover:bg-gray-400 dark:hover:bg-gray-500'\r\n                        }`}\r\n                        aria-label={`${index + 1}번째 영상 보기`}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* 🌟 유튜브 쇼츠 (세로형) - 오른쪽 (1/4) */}\r\n          {shortsVideos.length > 0 && (\r\n            <div className=\"lg:col-span-1 bg-white dark:bg-gray-800 rounded-2xl shadow-lg px-4 py-8\" data-shorts-section>\r\n              {/* 🌟 쇼츠 컨테이너 - 완전 중앙 정렬 */}\r\n              <div className=\"flex justify-center items-center\">\r\n                <div className=\"relative group px-0\" style={{ maxWidth: '280px', width: '100%' }}>\r\n                  {/* 🌟 타이틀을 영상 컨테이너 안으로 이동 */}\r\n                  <div className=\"flex items-center justify-between mb-6\">\r\n                    <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white flex items-center gap-2\">\r\n                      <FaPlay /> Shorts\r\n                    </h3>\r\n                    {shortsVideos.length > 1 && (\r\n                      <span className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                        {currentShortsIndex + 1} / {shortsVideos.length}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  {(() => {\r\n                    const video = shortsVideos[currentShortsIndex]\r\n                    if (!video) return null\r\n                    \r\n                    const videoIndexInAll = localizedProject.videos?.indexOf(video) ?? -1\r\n                    \r\n                    return (\r\n                      <div className=\"w-full\">\r\n                        <div className=\"relative w-full rounded-lg overflow-hidden shadow-lg bg-black\">\r\n                          {/* 🌟 세로 형식 (9:16 비율) - 최대 높이 설정 */}\r\n                          <div className=\"aspect-[9/16] w-full\" style={{ maxHeight: '600px' }}>\r\n                            <iframe\r\n                              src={getYouTubeEmbedUrl(video)}\r\n                              title={`${localizedProject.title} Shorts ${currentShortsIndex + 1}`}\r\n                              className=\"w-full h-full\"\r\n                              allowFullScreen\r\n                              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                            />\r\n                          </div>\r\n                          {/* YouTube 쇼츠 링크 */}\r\n                          <div className=\"absolute bottom-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity z-10\">\r\n                            <a\r\n                              href={video}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                              className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm font-medium transition-colors flex items-center gap-1 shadow-lg\"\r\n                            >\r\n                              Shorts\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        {/* 🌟 영상 설명 (HTML 렌더링) */}\r\n                        {localizedProject.videoDescriptions?.[videoIndexInAll] && (\r\n                          <div className=\"mt-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\" style={{ maxWidth: '600px', margin: '1rem auto 0' }}>\r\n                            <div \r\n                              className=\"text-gray-700 dark:text-gray-300 text-sm leading-relaxed prose prose-sm dark:prose-invert max-w-none\"\r\n                              dangerouslySetInnerHTML={{ __html: localizedProject.videoDescriptions[videoIndexInAll] }}\r\n                            />\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )\r\n                  })()}\r\n                  \r\n                  {/* 🌟 좌우 화살표 (쇼츠가 2개 이상일 때) */}\r\n                  {shortsVideos.length > 1 && (\r\n                    <>\r\n                      <button\r\n                        onClick={() => setCurrentShortsIndex((prev) => (prev === 0 ? shortsVideos.length - 1 : prev - 1))}\r\n                        className=\"absolute left-2 top-1/2 -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-all opacity-0 group-hover:opacity-100 z-10\"\r\n                        aria-label=\"이전 쇼츠\"\r\n                      >\r\n                        <FaChevronLeft size={20} />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => setCurrentShortsIndex((prev) => (prev === shortsVideos.length - 1 ? 0 : prev + 1))}\r\n                        className=\"absolute right-2 top-1/2 -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-all opacity-0 group-hover:opacity-100 z-10\"\r\n                        aria-label=\"다음 쇼츠\"\r\n                      >\r\n                        <FaChevronRight size={20} />\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              {/* 🌟 인디케이터 (쇼츠가 2개 이상일 때) */}\r\n              {shortsVideos.length > 1 && (\r\n                <div className=\"flex justify-center gap-2 mt-4\">\r\n                  {shortsVideos.map((_: string, index: number) => (\r\n                    <button\r\n                      key={index}\r\n                      onClick={() => setCurrentShortsIndex(index)}\r\n                      className={`h-2 rounded-full transition-all ${\r\n                        index === currentShortsIndex \r\n                          ? 'w-8 bg-red-600 dark:bg-red-400' \r\n                          : 'w-2 bg-gray-300 dark:bg-gray-600 hover:bg-gray-400 dark:hover:bg-gray-500'\r\n                      }`}\r\n                      aria-label={`${index + 1}번째 쇼츠 보기`}\r\n                    />\r\n                  ))}\r\n                </div>\r\n          )}\r\n          </div>\r\n          )}\r\n\r\n          {/* 프로젝트 설명 - 전체 너비 */}\r\n          {localizedProject.detailedDescription && (\r\n            <div className=\"lg:col-span-4 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8\">\r\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\r\n                상세 설명\r\n              </h3>\r\n              <div \r\n                className=\"prose prose-lg dark:prose-invert max-w-none text-gray-700 dark:text-gray-300\"\r\n                dangerouslySetInnerHTML={{ __html: localizedProject.detailedDescription }}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {/* Features & Learnings - 가로 배치 */}\r\n          {/* Features */}\r\n          {localizedProject.features.length > 0 && (\r\n            <div className=\"lg:col-span-2 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8\">\r\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\r\n                주요 기능\r\n              </h3>\r\n              <ul className=\"space-y-3\">\r\n                {localizedProject.features.map((feature, index) => (\r\n                  <li key={index} className=\"flex items-start gap-3\">\r\n                    <span className=\"flex-shrink-0 w-6 h-6 rounded-full bg-primary-100 dark:bg-primary-900 text-primary-600 dark:text-primary-300 flex items-center justify-center text-sm font-medium mt-0.5\">\r\n                      {index + 1}\r\n                    </span>\r\n                    <span className=\"text-gray-700 dark:text-gray-300\">{feature}</span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n\r\n          {/* Learnings */}\r\n          {localizedProject.learnings.length > 0 && (\r\n            <div className=\"lg:col-span-2 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8\">\r\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\r\n                배운 점\r\n              </h3>\r\n              <ul className=\"space-y-3\">\r\n                {localizedProject.learnings.map((learning, index) => (\r\n                  <li key={index} className=\"flex items-start gap-3\">\r\n                    <span className=\"flex-shrink-0 w-2 h-2 rounded-full bg-primary-600 dark:bg-primary-400 mt-2\"></span>\r\n                    <span className=\"text-gray-700 dark:text-gray-300\">{learning}</span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Image Modal */}\r\n      {selectedImage && (\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n          className=\"fixed inset-0 bg-black/90 z-50 flex items-center justify-center p-4\"\r\n          onClick={() => setSelectedImage(null)}\r\n        >\r\n          <button\r\n            onClick={() => setSelectedImage(null)}\r\n            className=\"absolute top-4 right-4 text-white hover:text-gray-300 text-3xl\"\r\n          >\r\n            ×\r\n          </button>\r\n          <img\r\n            src={selectedImage}\r\n            alt=\"확대 이미지\"\r\n            className=\"max-w-full max-h-full object-contain\"\r\n            loading=\"eager\"\r\n            decoding=\"async\"\r\n          />\r\n        </motion.div>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ProjectDetail\r\n","import React, { useState, useMemo } from 'react';\r\nimport { motion, Variants } from 'framer-motion';\r\nimport { \r\n  FaBriefcase, \r\n  FaCheckCircle, \r\n  FaCoffee, \r\n  FaGraduationCap, \r\n  FaChartLine, \r\n  FaCode, \r\n  FaCog, \r\n  FaRobot, \r\n  FaChevronDown, \r\n  FaChevronRight,\r\n  FaCar,           // 🚗 자동차\r\n  FaShieldAlt,     // 🛡️ 군인\r\n  FaLaptopCode     // 💻 프로그래밍\r\n} from 'react-icons/fa';\r\nimport { ExperienceItem as ExperienceItemType } from '../hooks/useExperiences';\r\nimport { ExperienceDetail } from '../types';\r\nimport { useSkills } from '../hooks/useSkills';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getLocalizedField, getLocalizedArrayField } from '@/utils/i18nUtils';\r\n\r\ninterface ExperienceItemProps {\r\n  exp: ExperienceItemType;\r\n  variants: Variants;\r\n  isLast?: boolean;\r\n}\r\n\r\n// 아이콘 매핑\r\nconst iconMap = {\r\n  FaCoffee: FaCoffee,\r\n  FaGraduationCap: FaGraduationCap,\r\n  FaChartLine: FaChartLine,\r\n  FaBriefcase: FaBriefcase,\r\n  FaCode: FaCode,\r\n  FaCog: FaCog,\r\n  FaRobot: FaRobot,\r\n  FaCar: FaCar,               // 🚗 자동차\r\n  FaShieldAlt: FaShieldAlt,   // 🛡️ 군인\r\n  FaLaptopCode: FaLaptopCode, // 💻 프로그래밍\r\n} as const;\r\n\r\nconst ExperienceItem: React.FC<ExperienceItemProps> = ({ exp, variants, isLast = false }) => {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const { skillCategories } = useSkills();\r\n  const { t, i18n } = useTranslation();\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja';\r\n  \r\n  // 아이콘 매핑 및 대체 아이콘 설정\r\n  const IconComponent = exp.iconKey && iconMap[exp.iconKey as keyof typeof iconMap] \r\n    ? iconMap[exp.iconKey as keyof typeof iconMap] \r\n    : FaBriefcase;\r\n  \r\n  // 🌟 연결된 스킬 필터링\r\n  const linkedSkills = useMemo(() => {\r\n    if (!exp.skillIds || !skillCategories) return [];\r\n    const allSkills = skillCategories.flatMap(cat => cat.skills || []);\r\n    return allSkills.filter(skill => {\r\n      const skillId = skill._id;\r\n      return skillId && (exp.skillIds as any[]).some((idOrObj: any) => {\r\n        const id = typeof idOrObj === 'string' ? idOrObj : idOrObj?._id;\r\n        return id === skillId;\r\n      });\r\n    });\r\n  }, [exp.skillIds, skillCategories]);\r\n  \r\n  // description을 줄 바꿈 기준으로 분할하여 목록으로 사용\r\n  const descriptionItems = exp.description \r\n    ? exp.description.split('\\n').filter(line => line.trim() !== '') \r\n    : [];\r\n  \r\n  // 동적 색상 값 변수 설정 (CSS 변수 Fallback)\r\n  const iconColor = exp.color || '#8B4513';\r\n  const iconBgColor = exp.bgColor || '#F5DEB3';\r\n\r\n  return (\r\n    <div className=\"relative flex items-start gap-6\">\r\n      {/* 🌟 타임라인 라인 (세로선) */}\r\n      {!isLast && (\r\n        <div className=\"absolute left-8 top-20 bottom-0 w-0.5 bg-gradient-to-b from-primary-300 to-primary-100 dark:from-primary-700 dark:to-primary-900\" />\r\n      )}\r\n      \r\n      {/* 🌟 타임라인 아이콘 (원형 배지) */}\r\n      <div className=\"relative z-10 flex-shrink-0\">\r\n        <motion.div\r\n          variants={variants}\r\n          className=\"w-16 h-16 rounded-full flex items-center justify-center shadow-lg ring-4 ring-white dark:ring-gray-800\"\r\n          style={{ \r\n            backgroundColor: iconBgColor,\r\n          }}\r\n          whileHover={{ scale: 1.1, rotate: 5 }}\r\n          transition={{ type: 'spring', stiffness: 300 }}\r\n        >\r\n          <IconComponent \r\n            size={28}\r\n            style={{ color: iconColor }}\r\n          />\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* 🌟 콘텐츠 카드 */}\r\n      <motion.div\r\n        variants={variants}\r\n        className=\"flex-1 mb-12\"\r\n      >\r\n        <div className=\"card p-6 hover:shadow-xl transition-all duration-300\">\r\n          {/* 헤더 (클릭 가능) */}\r\n          <button\r\n            onClick={() => setIsExpanded(!isExpanded)}\r\n            className=\"w-full text-left\"\r\n          >\r\n            <div className=\"flex items-start justify-between mb-4\">\r\n              <div className=\"flex-1\">\r\n                {/* 회사명 (작게) */}\r\n                <p className=\"text-sm text-primary-600 dark:text-primary-400 font-semibold mb-1\">\r\n                  {getLocalizedField(currentLang, exp.company, exp.companyEn, exp.companyJa)}\r\n                </p>\r\n                {/* 직책 (크게) */}\r\n                <h3 className=\"text-2xl font-bold text-dark-900 dark:text-white mb-2 flex items-center gap-2\">\r\n                  {getLocalizedField(currentLang, exp.title, exp.titleEn, exp.titleJa)}\r\n                  {/* 🌟 토글 화살표 (항상 표시) */}\r\n                  <span className=\"text-sm\">\r\n                    {isExpanded ? (\r\n                      <FaChevronDown className=\"text-primary-600 dark:text-primary-400\" />\r\n                    ) : (\r\n                      <FaChevronRight className=\"text-gray-400\" />\r\n                    )}\r\n                  </span>\r\n                </h3>\r\n                {/* 기간 배지 */}\r\n                <span className=\"inline-flex items-center px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-700 dark:text-primary-300 rounded-full text-sm font-medium\">\r\n                  📅 {exp.period}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </button>\r\n\r\n          {/* 🌟 아코디언: 주요 내용 (펼쳤을 때만 표시) */}\r\n          {isExpanded && (\r\n            <motion.div\r\n              initial={{ opacity: 0, height: 0 }}\r\n              animate={{ opacity: 1, height: 'auto' }}\r\n              exit={{ opacity: 0, height: 0 }}\r\n              transition={{ duration: 0.3 }}\r\n              className=\"mb-6 pt-4 border-t border-gray-200 dark:border-gray-700\"\r\n            >\r\n              {/* 카테고리별 상세 내용 카드 (details가 있는 경우) */}\r\n              {exp.details && exp.details.length > 0 ? (\r\n                <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                  {exp.details.map((detail: ExperienceDetail, idx: number) => (\r\n                    <motion.div\r\n                      key={idx}\r\n                      initial={{ opacity: 0, y: 20 }}\r\n                      animate={{ opacity: 1, y: 0 }}\r\n                      transition={{ delay: idx * 0.1 }}\r\n                      className=\"bg-gradient-to-br from-white to-gray-50 dark:from-gray-800 dark:to-gray-850 rounded-lg p-5 border-2 border-gray-200 dark:border-gray-700 hover:border-primary-400 dark:hover:border-primary-600 transition-all hover:shadow-lg\"\r\n                    >\r\n                      {/* 카테고리 헤더 */}\r\n                      <div className=\"flex items-center gap-2 mb-4 pb-3 border-b border-gray-200 dark:border-gray-700\">\r\n                        <div className=\"w-2 h-2 rounded-full\" style={{ backgroundColor: iconColor }}></div>\r\n                        <h4 className=\"text-base font-bold text-dark-900 dark:text-white\">\r\n                          {getLocalizedField(currentLang, detail.category, detail.categoryEn, detail.categoryJa)}\r\n                        </h4>\r\n                      </div>\r\n                      \r\n                      {/* 항목 리스트 */}\r\n                      <ul className=\"space-y-2.5\">\r\n                        {getLocalizedArrayField(currentLang, detail.items, detail.itemsEn, detail.itemsJa).map((item: string, itemIdx: number) => (\r\n                          <motion.li\r\n                            key={itemIdx}\r\n                            initial={{ opacity: 0, x: -10 }}\r\n                            animate={{ opacity: 1, x: 0 }}\r\n                            transition={{ delay: (idx * 0.1) + (itemIdx * 0.03) }}\r\n                            className=\"flex items-start gap-2 text-sm text-dark-700 dark:text-dark-300\"\r\n                          >\r\n                            <FaCheckCircle style={{ color: iconColor }} className=\"mt-0.5 flex-shrink-0 text-xs\" />\r\n                            <span className=\"flex-1 leading-relaxed\">{item}</span>\r\n                          </motion.li>\r\n                        ))}\r\n                      </ul>\r\n                    </motion.div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                // 기존 설명 방식 (하위 호환성)\r\n                descriptionItems.length > 0 && (\r\n                  <>\r\n                    <h4 className=\"text-sm font-semibold text-dark-900 dark:text-white mb-3 flex items-center gap-2\">\r\n                      <FaCheckCircle style={{ color: iconColor }} size={14} />\r\n                      {t('experience.keyPoints')}\r\n                    </h4>\r\n                    <ul className=\"space-y-2.5 pl-1\">\r\n                      {descriptionItems.map((item, i) => (\r\n                        <li key={i} className=\"flex items-start gap-3 text-dark-600 dark:text-dark-300\">\r\n                          <span className=\"flex-shrink-0 w-1.5 h-1.5 rounded-full mt-2\" style={{ backgroundColor: iconColor }} />\r\n                          <span className=\"flex-1\">{item}</span>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </>\r\n                )\r\n              )}\r\n            </motion.div>\r\n          )}\r\n\r\n          {/* 🌟 연결된 스킬 배지 (skillIds 기반) */}\r\n          {linkedSkills.length > 0 && (\r\n            <div className=\"flex flex-wrap gap-2 mt-4\">\r\n              {linkedSkills.map((skill) => (\r\n                <Link\r\n                  key={skill._id}\r\n                  to={`/projects?skillId=${skill._id}`}\r\n                  className=\"inline-flex items-center px-3 py-1.5 rounded-lg text-sm font-medium transition-all hover:opacity-80 hover:ring-2\"\r\n                  style={{\r\n                    backgroundColor: `${skill.color}26`,\r\n                    color: skill.color,\r\n                    '--tw-ring-color': skill.color || '#3B82F6',\r\n                  } as React.CSSProperties}\r\n                  title={`${skill.name} ${t('experience.viewProjects')}`}\r\n                >\r\n                  {skill.name}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          )}\r\n          \r\n          {/* 🔄 호환성: 기존 skills 문자열 배열도 표시 (skillIds가 없을 때만) */}\r\n          {!linkedSkills.length && exp.skills && exp.skills.length > 0 && (\r\n            <div className=\"flex flex-wrap gap-2 mt-4\">\r\n              {exp.skills.map((skill) => (\r\n                <span\r\n                  key={skill}\r\n                  className=\"px-3 py-1.5 bg-secondary-100 dark:bg-secondary-900/50 text-secondary-700 dark:text-secondary-300 rounded-lg text-sm font-medium hover:bg-secondary-200 dark:hover:bg-secondary-800/50 transition-colors\"\r\n                >\r\n                  {skill}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExperienceItem;\r\n","import React, { useState } from 'react'\r\nimport { FaSave, FaStar, FaTimes } from 'react-icons/fa'\r\nimport { Book, BookFormData, Skill, SkillCategory } from '../../types'\r\nimport { useSkills } from '../../hooks/useSkills'\r\nimport { useCategories } from '../../hooks/useCategories'\r\n\r\n// 폼 컴포넌트의 Props 타입 정의\r\ninterface FormProps {\r\n  data: Book | null\r\n  onSave: (data: BookFormData) => Promise<void>\r\n  onCancel: () => void\r\n  isSaving?: boolean\r\n  availableCategories?: string[] // 동적 카테고리 목록\r\n}\r\n\r\nconst BookForm: React.FC<FormProps> = ({ \r\n  data, \r\n  onSave, \r\n  onCancel, \r\n  isSaving = false, \r\n  availableCategories = ['PLC', '데이터분석', '로봇공학', 'IoT', '기타'] \r\n}) => {\r\n  // 🌟 스킬 목록 가져오기\r\n  const { skillCategories, loading: skillsLoading } = useSkills()\r\n  \r\n  // 🌟 카테고리 데이터 가져오기\r\n  const { data: categories = [], isLoading: categoriesLoading } = useCategories()\r\n  \r\n  // readDate 초기값 수정\r\n  const initialReadDate = data?.readDate && !isNaN(new Date(data.readDate).getTime())\r\n    ? new Date(data.readDate).toISOString().split('T')[0]\r\n    : new Date().toISOString().split('T')[0]\r\n\r\n  // 🌟 categoryIds 초기값 처리\r\n  const initialCategoryIds = data?.categoryIds \r\n    ? (data.categoryIds as any[]).map((catIdOrObj: any) => \r\n        typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj._id\r\n      ).filter(Boolean) as string[]\r\n    : []\r\n\r\n  // 🌟 skillIds 초기값 처리 (객체 또는 문자열 모두 처리)\r\n  const initialSkillIds = data?.skillIds \r\n    ? (data.skillIds as any[]).map((skillIdOrObj: any) => \r\n        typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj._id\r\n      ).filter(Boolean) as string[]\r\n    : []\r\n\r\n  const [formData, setFormData] = useState<BookFormData>(\r\n    data\r\n      ? { \r\n          title: data.title,\r\n          author: data.author,\r\n          category: data.category,\r\n          categoryIds: initialCategoryIds,\r\n          coverImage: data.coverImage || '',\r\n          readDate: initialReadDate as string,\r\n          rating: data.rating,\r\n          skillIds: initialSkillIds  // 🌟 스킬 ID 문자열 배열로 초기화\r\n        } \r\n      : {\r\n          title: '',\r\n          author: '',\r\n          category: availableCategories[0] || 'PLC', // 동적 카테고리 첫 번째 항목 사용\r\n          categoryIds: [],\r\n          coverImage: '',\r\n          readDate: initialReadDate as string, // initialReadDate를 사용\r\n          rating: 5,\r\n          skillIds: []  // 🌟 스킬 ID 초기값\r\n        }\r\n  )\r\n  \r\n  \r\n  // 🌟 카테고리 선택/해제 핸들러 (체크박스용)\r\n  const handleCategoryToggle = (categoryId: string) => {\r\n    const currentCategoryIds = formData.categoryIds || []\r\n    const isSelected = currentCategoryIds.includes(categoryId)\r\n    \r\n    const newCategoryIds = isSelected\r\n      ? currentCategoryIds.filter((id: string) => id !== categoryId)\r\n      : [...currentCategoryIds, categoryId]\r\n    \r\n    setFormData({ \r\n      ...formData, \r\n      categoryIds: newCategoryIds \r\n    })\r\n  }\r\n\r\n  // 🌟 스킬 선택/해제 핸들러 (체크박스용)\r\n  const handleSkillToggle = (skillId: string) => {\r\n    const currentSkillIds = formData.skillIds || []\r\n    const isSelected = currentSkillIds.includes(skillId)\r\n    \r\n    const newSkillIds = isSelected\r\n      ? currentSkillIds.filter((id: string) => id !== skillId)\r\n      : [...currentSkillIds, skillId]\r\n    \r\n    setFormData({ \r\n      ...formData, \r\n      skillIds: newSkillIds \r\n    })\r\n  }\r\n  \r\n  // 🌟 스킬 카테고리 전체 선택/해제 핸들러\r\n  const handleSkillCategoryToggle = (category: SkillCategory) => {\r\n    const categorySkillIds = (category.skills || []).map(skill => skill._id!).filter(Boolean)\r\n    const currentSkillIds = formData.skillIds || []\r\n    \r\n    const allSelected = categorySkillIds.every((id: string) => currentSkillIds.includes(id))\r\n    \r\n    let newSkillIds: string[]\r\n    if (allSelected) {\r\n      newSkillIds = currentSkillIds.filter((id: string) => !categorySkillIds.includes(id))\r\n    } else {\r\n      const uniqueIds = new Set([...currentSkillIds, ...categorySkillIds])\r\n      newSkillIds = Array.from(uniqueIds)\r\n    }\r\n    \r\n    setFormData({ \r\n      ...formData, \r\n      skillIds: newSkillIds \r\n    })\r\n  }\r\n\r\n  // 필수 필드 검증\r\n  const isFormValid = formData.title.trim() !== '' && \r\n                     formData.author.trim() !== '' && \r\n                     formData.category.trim() !== ''\r\n\r\n  const handleFormSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!isFormValid) {\r\n      alert('필수 필드(제목, 저자, 카테고리)를 모두 입력해주세요.')\r\n      return\r\n    }\r\n    \r\n    console.log('📚 서적 저장 시작:', formData)\r\n    console.log('🔗 선택된 스킬 IDs:', formData.skillIds)\r\n    \r\n    // 🌟 skillIds와 categoryIds를 문자열 배열로 확실하게 변환 + 중복 제거\r\n    const skillIds = Array.from(new Set(\r\n      (formData.skillIds || []).map((skillIdOrObj: any) => \r\n        typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj?._id\r\n      ).filter(Boolean)\r\n    ))\r\n    \r\n    const categoryIds = Array.from(new Set(\r\n      (formData.categoryIds || []).map((catIdOrObj: any) => \r\n        typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\r\n      ).filter(Boolean)\r\n    ))\r\n    \r\n    const { title, author, category, coverImage, readDate, rating } = formData\r\n    \r\n    const saveData = { \r\n      title, \r\n      author, \r\n      category, \r\n      coverImage: coverImage || '', \r\n      readDate, \r\n      rating,\r\n      skillIds,  // 🌟 변환된 skillIds\r\n      categoryIds  // 🌟 변환된 categoryIds\r\n    }\r\n    \r\n    console.log('📤 최종 전송 데이터:', saveData)\r\n    onSave(saveData)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit} className=\"space-y-4\">\r\n      <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">\r\n        {data ? '서적 수정' : '서적 추가'}\r\n      </h3>\r\n      <div className=\"grid md:grid-cols-2 gap-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            제목\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.title}\r\n            onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            저자\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.author}\r\n            onChange={(e) => setFormData({ ...formData, author: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          />\r\n        </div>\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n            카테고리 선택 📂 (다중 선택 가능)\r\n          </label>\r\n\r\n          {/* 선택된 카테고리 태그 표시 */}\r\n          {formData.categoryIds && formData.categoryIds.length > 0 && (\r\n            <div className=\"flex flex-wrap gap-2 mb-3 p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\r\n              {formData.categoryIds.map((catId) => {\r\n                const category = categories.find(c => c._id === catId)\r\n                return category ? (\r\n                  <span\r\n                    key={catId}\r\n                    className=\"inline-flex items-center gap-1 px-3 py-1 bg-blue-600 text-white rounded-full text-sm\"\r\n                  >\r\n                    {category.name}\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => handleCategoryToggle(catId)}\r\n                      className=\"hover:bg-blue-700 rounded-full p-0.5\"\r\n                    >\r\n                      <FaTimes className=\"text-xs\" />\r\n                    </button>\r\n                  </span>\r\n                ) : null\r\n              })}\r\n            </div>\r\n          )}\r\n\r\n          {/* 카테고리 체크박스 목록 */}\r\n          {categoriesLoading ? (\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">카테고리 로딩 중...</p>\r\n          ) : categories.length > 0 ? (\r\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2\">\r\n              {categories.map((category) => {\r\n                const isSelected = (formData.categoryIds || []).includes(category._id)\r\n                return (\r\n                  <label\r\n                    key={category._id}\r\n                    className={`flex items-center gap-2 p-3 border-2 rounded-lg cursor-pointer transition-all ${\r\n                      isSelected\r\n                        ? 'border-primary-600 bg-primary-50 dark:bg-primary-900/20'\r\n                        : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600'\r\n                    }`}\r\n                  >\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={isSelected}\r\n                      onChange={() => handleCategoryToggle(category._id)}\r\n                      className=\"w-4 h-4\"\r\n                    />\r\n                    <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                      {category.name}\r\n                    </span>\r\n                  </label>\r\n                )\r\n              })}\r\n            </div>\r\n          ) : (\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              등록된 카테고리가 없습니다. 관리자 메뉴의 \"카테고리 관리\"에서 추가하세요.\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            평점\r\n          </label>\r\n          <div className=\"flex items-center gap-2\">\r\n            {/* 시각적 별 선택 */}\r\n            <div className=\"flex gap-1\">\r\n              {[1, 2, 3, 4, 5].map((star) => (\r\n                <button\r\n                  key={star}\r\n                  type=\"button\"\r\n                  onClick={() => setFormData({ ...formData, rating: star })}\r\n                  className={`text-2xl transition-colors ${\r\n                    star <= formData.rating \r\n                      ? 'text-yellow-500 hover:text-yellow-600' \r\n                      : 'text-gray-300 hover:text-gray-400'\r\n                  }`}\r\n                >\r\n                  <FaStar />\r\n                </button>\r\n              ))}\r\n            </div>\r\n            {/* 숫자 입력 (보조) */}\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max=\"5\"\r\n              step=\"0.5\"\r\n              value={formData.rating}\r\n              onChange={(e) => {\r\n                const value = e.target.value\r\n                // 입력값이 비어있거나, 유효한 숫자가 아니면 이전 값 유지\r\n                const newRating = value === '' ? 0 : parseFloat(value)\r\n                setFormData({ \r\n                  ...formData, \r\n                  rating: isNaN(newRating) ? formData.rating : Math.max(1, Math.min(5, newRating))\r\n                })\r\n              }}\r\n              className=\"w-20 px-2 py-1 border border-gray-300 dark:border-gray-600 rounded focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            읽은 날짜\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            value={formData.readDate}\r\n            onChange={(e) => setFormData({ ...formData, readDate: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            표지 이미지 URL\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.coverImage}\r\n            onChange={(e) => setFormData({ ...formData, coverImage: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"https://...\"\r\n          />\r\n        </div>\r\n        \r\n        {/* 🌟 서적에서 다루는 핵심 스킬 선택 - 체크박스 UI */}\r\n        <div className=\"md:col-span-2\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n              이 서적에서 다루는 핵심 스킬 🔗\r\n            </label>\r\n            {formData.skillIds && formData.skillIds.length > 0 && (\r\n              <span className=\"text-xs font-semibold text-blue-600 dark:text-blue-400 bg-blue-100 dark:bg-blue-900/30 px-2 py-1 rounded\">\r\n                ✓ {formData.skillIds.length}개 선택됨\r\n              </span>\r\n            )}\r\n          </div>\r\n          \r\n          {skillsLoading ? (\r\n            <div className=\"text-sm text-gray-500 dark:text-gray-400 py-2\">\r\n              스킬 목록을 불러오는 중입니다...\r\n            </div>\r\n          ) : skillCategories.length === 0 ? (\r\n            <div className=\"text-sm text-gray-500 dark:text-gray-400 py-4 text-center border border-gray-300 dark:border-gray-600 rounded-lg\">\r\n              등록된 스킬이 없습니다. 먼저 스킬을 추가해주세요.\r\n            </div>\r\n          ) : (\r\n            <div className=\"border border-gray-300 dark:border-gray-600 rounded-lg p-4 bg-gray-50 dark:bg-gray-800 max-h-[400px] overflow-y-auto\">\r\n              {skillCategories.map((category: SkillCategory) => {\r\n                const categorySkillIds = (category.skills || []).map(skill => skill._id!).filter(Boolean)\r\n                const currentSkillIds = formData.skillIds || []\r\n                \r\n                const selectedCount = categorySkillIds.filter(id => currentSkillIds.includes(id)).length\r\n                const allSelected = categorySkillIds.length > 0 && selectedCount === categorySkillIds.length\r\n                const someSelected = selectedCount > 0 && selectedCount < categorySkillIds.length\r\n                \r\n                return (\r\n                  <div key={category._id} className=\"mb-4 last:mb-0\">\r\n                    {/* 카테고리 헤더 (전체 선택/해제) */}\r\n                    <div \r\n                      className=\"flex items-center gap-2 mb-2 pb-2 border-b border-gray-300 dark:border-gray-600 cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700 p-2 rounded\"\r\n                      onClick={() => handleSkillCategoryToggle(category)}\r\n                    >\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={allSelected}\r\n                        ref={el => {\r\n                          if (el) {\r\n                            el.indeterminate = someSelected\r\n                          }\r\n                        }}\r\n                        onChange={() => handleSkillCategoryToggle(category)}\r\n                        className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\r\n                        onClick={(e) => e.stopPropagation()}\r\n                      />\r\n                      <label \r\n                        className=\"font-semibold text-gray-900 dark:text-white flex-1 cursor-pointer\"\r\n                        style={{ color: category.color || '#3B82F6' }}\r\n                      >\r\n                        {category.title}\r\n                        {selectedCount > 0 && (\r\n                          <span className=\"ml-2 text-xs font-normal text-gray-500 dark:text-gray-400\">\r\n                            ({selectedCount}/{categorySkillIds.length})\r\n                          </span>\r\n                        )}\r\n                      </label>\r\n                    </div>\r\n                    \r\n                    {/* 스킬 목록 */}\r\n                    <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2 pl-6\">\r\n                      {(category.skills || []).map((skill: Skill) => {\r\n                        const currentSkillIds = formData.skillIds || []\r\n                        const isSelected = currentSkillIds.includes(skill._id!)\r\n                        \r\n                        return (\r\n                          <label\r\n                            key={skill._id}\r\n                            className={`flex items-center gap-2 p-2 rounded cursor-pointer transition-colors ${\r\n                              isSelected \r\n                                ? 'bg-blue-50 dark:bg-blue-900/20 border border-blue-300 dark:border-blue-700' \r\n                                : 'hover:bg-gray-100 dark:hover:bg-gray-700 border border-transparent'\r\n                            }`}\r\n                          >\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              checked={isSelected}\r\n                              onChange={() => handleSkillToggle(skill._id!)}\r\n                              className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\r\n                            />\r\n                            <span className={`text-sm ${isSelected ? 'font-semibold text-blue-700 dark:text-blue-300' : 'text-gray-700 dark:text-gray-300'}`}>\r\n                              {skill.name}\r\n                            </span>\r\n                          </label>\r\n                        )\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          )}\r\n          \r\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\r\n            💡 이 서적에서 주요하게 다루는 스킬을 선택하세요. 개별 학습 내용에서도 추가로 스킬을 연결할 수 있습니다.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex gap-3 pt-4\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSaving || !isFormValid}\r\n          className={`flex-1 flex items-center justify-center gap-2 bg-primary-600 hover:bg-primary-700 text-white font-medium py-2 rounded-lg transition-colors ${\r\n            isSaving || !isFormValid ? 'opacity-50 cursor-not-allowed' : ''\r\n          }`}\r\n        >\r\n          {isSaving ? (\r\n            <>\r\n              <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n              저장 중...\r\n            </>\r\n          ) : (\r\n            <>\r\n              <FaSave /> 저장\r\n            </>\r\n          )}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={onCancel}\r\n          className=\"flex-1 bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-900 dark:text-white font-medium py-2 rounded-lg transition-colors\"\r\n        >\r\n          취소\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default BookForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport { FaSave, FaTimes } from 'react-icons/fa'\r\nimport { Chapter } from '../../types'\r\n\r\ninterface ChapterFormProps {\r\n  chapter?: Chapter | null\r\n  onSave: (data: { title: string; order: number }) => Promise<void>\r\n  onCancel: () => void\r\n  maxOrder?: number\r\n}\r\n\r\nconst ChapterForm: React.FC<ChapterFormProps> = ({\r\n  chapter,\r\n  onSave,\r\n  onCancel,\r\n  maxOrder = 0\r\n}) => {\r\n  const [title, setTitle] = useState('')\r\n  const [order, setOrder] = useState(0)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (chapter) {\r\n      setTitle(chapter.title)\r\n      setOrder(chapter.order)\r\n    } else {\r\n      setTitle('')\r\n      setOrder(maxOrder)\r\n    }\r\n  }, [chapter, maxOrder])\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!title.trim()) {\r\n      alert('목차 제목을 입력해주세요.')\r\n      return\r\n    }\r\n\r\n    try {\r\n      setIsSaving(true)\r\n      await onSave({ title: title.trim(), order })\r\n    } catch (error) {\r\n      console.error('목차 저장 실패:', error)\r\n    } finally {\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\">\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n          {chapter ? '목차 수정' : '목차 추가'}\r\n        </h3>\r\n        <button\r\n          onClick={onCancel}\r\n          className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\r\n        >\r\n          <FaTimes className=\"text-gray-500 dark:text-gray-400\" />\r\n        </button>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <div>\r\n          <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            목차 제목\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            placeholder=\"목차 제목을 입력하세요\"\r\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"order\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            순서\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"order\"\r\n            value={order}\r\n            onChange={(e) => setOrder(parseInt(e.target.value) || 0)}\r\n            min=\"0\"\r\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex gap-3 pt-4\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isSaving || !title.trim()}\r\n            className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors flex items-center justify-center gap-2\"\r\n          >\r\n            <FaSave />\r\n            {isSaving ? '저장 중...' : (chapter ? '수정' : '추가')}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onCancel}\r\n            className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\r\n          >\r\n            취소\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChapterForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport { FaSave, FaTimes } from 'react-icons/fa'\r\nimport ReactQuill from 'react-quill'\r\nimport 'react-quill/dist/quill.snow.css'\r\nimport { Learning } from '../../types'\r\n\r\n// 마크다운 문법 변환 함수 (향후 사용을 위해 유지)\r\n// const convertMarkdownToHtml = (text: string): string => {\r\n//   return text\r\n//     .replace(/^### (.*$)/gim, '<h3>$1</h3>')\r\n//     .replace(/^## (.*$)/gim, '<h2>$1</h2>')\r\n//     .replace(/^# (.*$)/gim, '<h1>$1</h1>')\r\n//     .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n//     .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n//     .replace(/```([\\s\\S]*?)```/g, '<pre><code>$1</code></pre>')\r\n//     .replace(/`([^`]+)`/g, '<code>$1</code>')\r\n//     .replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<a href=\"$2\">$1</a>')\r\n//     .replace(/\\n/g, '<br>')\r\n// }\r\n\r\ninterface LearningFormProps {\r\n  learning?: Learning | null\r\n  onSave: (data: { topic: string; content: string }) => Promise<void>\r\n  onCancel: () => void\r\n}\r\n\r\nconst LearningForm: React.FC<LearningFormProps> = ({\r\n  learning,\r\n  onSave,\r\n  onCancel\r\n}) => {\r\n  const [topic, setTopic] = useState('')\r\n  const [content, setContent] = useState('')\r\n  const [isSaving, setIsSaving] = useState(false)\r\n\r\n  // Quill 에디터 설정\r\n  const quillModules = {\r\n    toolbar: [\r\n      [{ 'header': [1, 2, 3, false] }],\r\n      ['bold', 'italic', 'underline', 'strike'],\r\n      [{ 'list': 'ordered'}, { 'list': 'bullet' }],\r\n      [{ 'indent': '-1'}, { 'indent': '+1' }],\r\n      ['blockquote', 'code-block'],\r\n      [{ 'color': [] }, { 'background': [] }],\r\n      ['link', 'image'],\r\n      ['clean']\r\n    ]\r\n  }\r\n\r\n  const quillFormats = [\r\n    'header', 'bold', 'italic', 'underline', 'strike',\r\n    'list', 'bullet', 'indent',\r\n    'blockquote', 'code-block',\r\n    'color', 'background',\r\n    'link', 'image'\r\n  ]\r\n\r\n  useEffect(() => {\r\n    if (learning) {\r\n      setTopic(learning.topic)\r\n      setContent(learning.content)\r\n    } else {\r\n      setTopic('')\r\n      setContent('')\r\n    }\r\n  }, [learning])\r\n\r\n  // HTML 태그를 제거하고 순수 텍스트만 추출하는 함수\r\n  const stripHtml = (html: string) => {\r\n    const tmp = document.createElement('div')\r\n    tmp.innerHTML = html\r\n    return tmp.textContent || tmp.innerText || ''\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!topic.trim()) {\r\n      alert('학습 주제를 입력해주세요.')\r\n      return\r\n    }\r\n\r\n    // HTML 태그를 제거한 순수 텍스트로 검증\r\n    const plainTextContent = stripHtml(content).trim()\r\n    if (!plainTextContent) {\r\n      alert('학습 내용을 입력해주세요.')\r\n      return\r\n    }\r\n\r\n    try {\r\n      setIsSaving(true)\r\n      await onSave({ topic: topic.trim(), content: content.trim() })\r\n    } catch (error) {\r\n      console.error('학습 내용 저장 실패:', error)\r\n    } finally {\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\">\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n          {learning ? '학습 내용 수정' : '학습 내용 추가'}\r\n        </h3>\r\n        <button\r\n          onClick={onCancel}\r\n          className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\r\n        >\r\n          <FaTimes className=\"text-gray-500 dark:text-gray-400\" />\r\n        </button>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <div>\r\n          <label htmlFor=\"topic\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            학습 주제\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"topic\"\r\n            value={topic}\r\n            onChange={(e) => setTopic(e.target.value)}\r\n            placeholder=\"학습 주제를 입력하세요\"\r\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"content\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            학습 내용\r\n            <span className=\"text-xs text-gray-500 ml-2\">\r\n              (마크다운 문법 지원: **굵게**, *기울임*, # 제목, - 목록)\r\n            </span>\r\n          </label>\r\n          <div className=\"rich-text-editor-container\">\r\n            <ReactQuill\r\n              theme=\"snow\"\r\n              value={content}\r\n              onChange={(value) => {\r\n                console.log('ReactQuill onChange:', value)\r\n                setContent(value)\r\n              }}\r\n              placeholder=\"학습 내용을 입력하세요. 마크다운 문법을 사용할 수 있습니다.\"\r\n              modules={quillModules}\r\n              formats={quillFormats}\r\n              className=\"rich-text-editor\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex gap-3 pt-4\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isSaving || !topic.trim() || !stripHtml(content).trim()}\r\n            className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors flex items-center justify-center gap-2\"\r\n          >\r\n            <FaSave />\r\n            {isSaving ? '저장 중...' : (learning ? '수정' : '추가')}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onCancel}\r\n            className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\r\n          >\r\n            취소\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LearningForm\r\n","import React, { useState } from 'react'\r\nimport { FaPlus, FaEdit, FaTrash, FaChevronDown, FaChevronRight, FaBook } from 'react-icons/fa'\r\nimport { Chapter, Learning } from '../../types'\r\nimport { formatDate } from '../../utils/dateUtils'\r\n\r\ninterface ChapterLearningListProps {\r\n  chapters: Chapter[]\r\n  onAddChapter: () => void\r\n  onEditChapter: (chapter: Chapter) => void\r\n  onDeleteChapter: (chapter: Chapter) => void\r\n  onAddLearning: (chapterId: string) => void\r\n  onEditLearning: (learning: Learning, chapterId: string) => void\r\n  onDeleteLearning: (learning: Learning, chapterId: string) => void\r\n  isAuthenticated?: boolean\r\n}\r\n\r\nconst ChapterLearningList: React.FC<ChapterLearningListProps> = ({\r\n  chapters,\r\n  onAddChapter,\r\n  onEditChapter,\r\n  onDeleteChapter,\r\n  onAddLearning,\r\n  onEditLearning,\r\n  onDeleteLearning,\r\n  isAuthenticated = true\r\n}) => {\r\n  const [expandedChapters, setExpandedChapters] = useState<Set<string>>(\r\n    new Set(chapters.map(ch => ch._id)) // 기본적으로 모두 펼쳐진 상태\r\n  )\r\n\r\n  const toggleChapter = (chapterId: string) => {\r\n    setExpandedChapters(prev => {\r\n      const newSet = new Set(prev)\r\n      if (newSet.has(chapterId)) {\r\n        newSet.delete(chapterId)\r\n      } else {\r\n        newSet.add(chapterId)\r\n      }\r\n      return newSet\r\n    })\r\n  }\r\n\r\n  const expandAll = () => {\r\n    setExpandedChapters(new Set(chapters.map(ch => ch._id)))\r\n  }\r\n\r\n  const collapseAll = () => {\r\n    setExpandedChapters(new Set())\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {/* 🌟 헤더 */}\r\n      <div className=\"flex items-center justify-between sticky top-0 bg-white dark:bg-gray-800 z-10 pb-4 border-b border-gray-200 dark:border-gray-700\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <h3 className=\"text-xl font-bold text-gray-900 dark:text-white\">\r\n            📚 목차별 학습 내용\r\n          </h3>\r\n          {chapters.length > 0 && (\r\n            <div className=\"flex gap-2 text-sm\">\r\n              <button\r\n                onClick={expandAll}\r\n                className=\"text-blue-600 hover:text-blue-700 dark:text-blue-400 hover:underline\"\r\n              >\r\n                모두 펼치기\r\n              </button>\r\n              <span className=\"text-gray-400\">|</span>\r\n              <button\r\n                onClick={collapseAll}\r\n                className=\"text-blue-600 hover:text-blue-700 dark:text-blue-400 hover:underline\"\r\n              >\r\n                모두 접기\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {isAuthenticated && (\r\n          <button\r\n            onClick={onAddChapter}\r\n            className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2 text-sm shadow-md\"\r\n          >\r\n            <FaPlus />\r\n            목차 추가\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {/* 🌟 목차 리스트 (아코디언) */}\r\n      {chapters.length > 0 ? (\r\n        <div className=\"space-y-3\">\r\n          {chapters\r\n            .sort((a, b) => a.order - b.order)\r\n            .map((chapter) => {\r\n              const isExpanded = expandedChapters.has(chapter._id)\r\n              const learningCount = chapter.learnings?.length || 0\r\n\r\n              return (\r\n                <div \r\n                  key={chapter._id} \r\n                  className=\"bg-white dark:bg-gray-800 rounded-lg border-2 border-gray-200 dark:border-gray-700 shadow-sm overflow-hidden transition-all hover:shadow-md\"\r\n                >\r\n                  {/* 🌟 목차 헤더 (클릭하여 펼치기/접기) */}\r\n                  <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-gray-700 dark:to-gray-700\">\r\n                    <div className=\"flex items-center justify-between p-4\">\r\n                      <button\r\n                        onClick={() => toggleChapter(chapter._id)}\r\n                        className=\"flex items-center gap-3 flex-1 text-left hover:opacity-80 transition-opacity\"\r\n                      >\r\n                        <div className=\"flex-shrink-0\">\r\n                          {isExpanded ? (\r\n                            <FaChevronDown className=\"text-blue-600 dark:text-blue-400 w-5 h-5\" />\r\n                          ) : (\r\n                            <FaChevronRight className=\"text-gray-400 w-5 h-5\" />\r\n                          )}\r\n                        </div>\r\n                        <div className=\"flex-1 min-w-0\">\r\n                          <div className=\"flex items-center gap-2 mb-1\">\r\n                            <span className=\"text-sm font-bold text-blue-600 dark:text-blue-400 bg-blue-100 dark:bg-blue-900/50 px-2 py-0.5 rounded\">\r\n                              Chapter {chapter.order + 1}\r\n                            </span>\r\n                            <h4 className=\"font-semibold text-gray-900 dark:text-white text-lg truncate\">\r\n                              {chapter.title}\r\n                            </h4>\r\n                          </div>\r\n                          <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                            📝 {learningCount}개의 학습 내용\r\n                          </p>\r\n                        </div>\r\n                      </button>\r\n                      \r\n                      {isAuthenticated && (\r\n                        <div className=\"flex gap-2 ml-3 flex-shrink-0\">\r\n                          <button\r\n                            onClick={(e) => {\r\n                              e.stopPropagation()\r\n                              onAddLearning(chapter._id)\r\n                            }}\r\n                            className=\"p-2 text-green-600 hover:bg-green-100 dark:hover:bg-green-900/30 rounded-lg transition-colors\"\r\n                            title=\"학습 내용 추가\"\r\n                          >\r\n                            <FaPlus className=\"w-4 h-4\" />\r\n                          </button>\r\n                          <button\r\n                            onClick={(e) => {\r\n                              e.stopPropagation()\r\n                              onEditChapter(chapter)\r\n                            }}\r\n                            className=\"p-2 text-blue-600 hover:bg-blue-100 dark:hover:bg-blue-900/30 rounded-lg transition-colors\"\r\n                            title=\"목차 수정\"\r\n                          >\r\n                            <FaEdit className=\"w-4 h-4\" />\r\n                          </button>\r\n                          <button\r\n                            onClick={(e) => {\r\n                              e.stopPropagation()\r\n                              if (confirm(`\"${chapter.title}\" 목차를 삭제하시겠습니까?\\n관련 학습 내용 ${learningCount}개도 모두 삭제됩니다.`)) {\r\n                                onDeleteChapter(chapter)\r\n                              }\r\n                            }}\r\n                            className=\"p-2 text-red-600 hover:bg-red-100 dark:hover:bg-red-900/30 rounded-lg transition-colors\"\r\n                            title=\"목차 삭제\"\r\n                          >\r\n                            <FaTrash className=\"w-4 h-4\" />\r\n                          </button>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* 🌟 목차별 학습 내용 (아코디언 콘텐츠) */}\r\n                  {isExpanded && (\r\n                    <div className=\"p-5 bg-gray-50 dark:bg-gray-800/50 border-t border-gray-200 dark:border-gray-700\">\r\n                      {learningCount > 0 ? (\r\n                        <div className=\"space-y-4\">\r\n                          {(chapter.learnings || [])\r\n                            .sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())\r\n                            .map((learning, idx) => (\r\n                            <div \r\n                              key={learning._id} \r\n                              className=\"bg-white dark:bg-gray-800 p-5 rounded-lg border border-gray-200 dark:border-gray-600 shadow-sm hover:shadow-md transition-shadow\"\r\n                            >\r\n                              <div className=\"flex items-start justify-between mb-3\">\r\n                                <div className=\"flex items-center gap-2 flex-1\">\r\n                                  <span className=\"flex-shrink-0 text-xs font-bold text-white bg-blue-600 dark:bg-blue-500 px-2 py-1 rounded-full\">\r\n                                    #{idx + 1}\r\n                                  </span>\r\n                                  <h5 className=\"font-semibold text-gray-900 dark:text-white text-lg\">\r\n                                    {learning.topic}\r\n                                  </h5>\r\n                                </div>\r\n                                {isAuthenticated && (\r\n                                  <div className=\"flex gap-1 flex-shrink-0 ml-2\">\r\n                                    <button\r\n                                      onClick={() => onEditLearning(learning, chapter._id)}\r\n                                      className=\"p-1.5 text-blue-600 hover:bg-blue-100 dark:hover:bg-blue-900/30 rounded transition-colors\"\r\n                                      title=\"수정\"\r\n                                    >\r\n                                      <FaEdit className=\"w-3.5 h-3.5\" />\r\n                                    </button>\r\n                                    <button\r\n                                      onClick={() => {\r\n                                        if (confirm(`\"${learning.topic}\" 학습 내용을 삭제하시겠습니까?`)) {\r\n                                          onDeleteLearning(learning, chapter._id)\r\n                                        }\r\n                                      }}\r\n                                      className=\"p-1.5 text-red-600 hover:bg-red-100 dark:hover:bg-red-900/30 rounded transition-colors\"\r\n                                      title=\"삭제\"\r\n                                    >\r\n                                      <FaTrash className=\"w-3.5 h-3.5\" />\r\n                                    </button>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                              \r\n                              {/* 🌟 ReactQuill로 작성된 HTML 콘텐츠 렌더링 */}\r\n                              <div \r\n                                className=\"prose prose-sm max-w-none dark:prose-invert text-gray-700 dark:text-gray-300\r\n                                  prose-headings:text-gray-900 dark:prose-headings:text-white\r\n                                  prose-p:text-gray-700 dark:prose-p:text-gray-300\r\n                                  prose-code:bg-gray-200 dark:prose-code:bg-gray-700 prose-code:text-red-600 dark:prose-code:text-red-400 prose-code:px-1 prose-code:rounded\r\n                                  prose-pre:bg-gray-900 dark:prose-pre:bg-gray-950 prose-pre:text-gray-100\r\n                                  prose-a:text-blue-600 dark:prose-a:text-blue-400\"\r\n                                dangerouslySetInnerHTML={{ __html: learning.content }}\r\n                              />\r\n                              \r\n                              <div className=\"mt-4 pt-3 border-t border-gray-200 dark:border-gray-700 flex items-center justify-between text-xs text-gray-500 dark:text-gray-400\">\r\n                                <span>📅 작성일: {formatDate(learning.createdAt)}</span>\r\n                                {learning.updatedAt && learning.updatedAt !== learning.createdAt && (\r\n                                  <span>✏️ 수정일: {formatDate(learning.updatedAt)}</span>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"text-center py-10 bg-white dark:bg-gray-800 rounded-lg border border-dashed border-gray-300 dark:border-gray-600\">\r\n                          <FaBook className=\"mx-auto text-3xl mb-3 text-gray-400 opacity-50\" />\r\n                          <p className=\"text-gray-500 dark:text-gray-400 mb-3\">\r\n                            이 목차에 아직 학습 내용이 없습니다.\r\n                          </p>\r\n                          {isAuthenticated && (\r\n                            <button\r\n                              onClick={() => onAddLearning(chapter._id)}\r\n                              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors inline-flex items-center gap-2\"\r\n                            >\r\n                              <FaPlus />\r\n                              첫 번째 학습 내용 추가하기\r\n                            </button>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            })}\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center py-16 bg-gray-50 dark:bg-gray-800 rounded-lg border-2 border-dashed border-gray-300 dark:border-gray-600\">\r\n          <FaBook className=\"mx-auto text-5xl mb-4 text-gray-400\" />\r\n          <p className=\"text-lg text-gray-600 dark:text-gray-400 mb-2 font-medium\">\r\n            아직 목차가 없습니다.\r\n          </p>\r\n          <p className=\"text-sm text-gray-500 dark:text-gray-500 mb-6\">\r\n            먼저 목차를 추가하고, 각 목차에 학습 내용을 기록하세요.\r\n          </p>\r\n          {isAuthenticated && (\r\n            <button\r\n              onClick={onAddChapter}\r\n              className=\"px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors inline-flex items-center gap-2 shadow-md\"\r\n            >\r\n              <FaPlus />\r\n              첫 번째 목차 추가하기\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChapterLearningList\r\n","import React, { useEffect } from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport { FaCheck, FaExclamationTriangle, FaInfo, FaTimes } from 'react-icons/fa'\r\nimport { Toast as ToastType } from '../../hooks/useToast'\r\n\r\ninterface ToastProps {\r\n  toast: ToastType\r\n  onClose: (id: string) => void\r\n}\r\n\r\nconst Toast: React.FC<ToastProps> = ({ toast, onClose }) => {\r\n  const getIcon = () => {\r\n    switch (toast.type) {\r\n      case 'success':\r\n        return <FaCheck className=\"text-green-500\" />\r\n      case 'error':\r\n        return <FaExclamationTriangle className=\"text-red-500\" />\r\n      case 'warning':\r\n        return <FaExclamationTriangle className=\"text-yellow-500\" />\r\n      case 'info':\r\n        return <FaInfo className=\"text-blue-500\" />\r\n      default:\r\n        return <FaInfo className=\"text-blue-500\" />\r\n    }\r\n  }\r\n\r\n  const getBgColor = () => {\r\n    switch (toast.type) {\r\n      case 'success':\r\n        return 'bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-800'\r\n      case 'error':\r\n        return 'bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-800'\r\n      case 'warning':\r\n        return 'bg-yellow-50 dark:bg-yellow-900/20 border-yellow-200 dark:border-yellow-800'\r\n      case 'info':\r\n        return 'bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-800'\r\n      default:\r\n        return 'bg-gray-50 dark:bg-gray-900/20 border-gray-200 dark:border-gray-800'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: -50, scale: 0.95 }}\r\n      animate={{ opacity: 1, y: 0, scale: 1 }}\r\n      exit={{ opacity: 0, y: -20, scale: 0.95 }}\r\n      transition={{ duration: 0.2 }}\r\n      className={`\r\n        relative flex items-start gap-3 p-4 rounded-lg border shadow-lg\r\n        ${getBgColor()}\r\n        max-w-md w-full\r\n      `}\r\n    >\r\n      <div className=\"flex-shrink-0 mt-0.5\">\r\n        {getIcon()}\r\n      </div>\r\n      \r\n      <div className=\"flex-1 min-w-0\">\r\n        <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n          {toast.title}\r\n        </h4>\r\n        {toast.message && (\r\n          <p className=\"mt-1 text-sm text-gray-600 dark:text-gray-300\">\r\n            {toast.message}\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      <button\r\n        onClick={() => onClose(toast.id)}\r\n        className=\"flex-shrink-0 p-1 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-full transition-colors\"\r\n      >\r\n        <FaTimes className=\"w-3 h-3 text-gray-400\" />\r\n      </button>\r\n    </motion.div>\r\n  )\r\n}\r\n\r\ninterface ToastContainerProps {\r\n  toasts: ToastType[]\r\n  onClose: (id: string) => void\r\n}\r\n\r\nconst ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onClose }) => {\r\n  return (\r\n    <div className=\"fixed top-4 right-4 z-50 space-y-2\">\r\n      <AnimatePresence>\r\n        {toasts.map((toast) => (\r\n          <Toast\r\n            key={toast.id}\r\n            toast={toast}\r\n            onClose={onClose}\r\n          />\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ToastContainer\r\nexport { Toast }\r\n","import React, { useState, useMemo } from 'react'\r\nimport { FaSave, FaStar, FaTimes } from 'react-icons/fa'\r\nimport { VideoLearning, VideoLearningFormData, Skill, SkillCategory } from '../../types'\r\nimport { extractYouTubeId, getYouTubeThumbnail } from '../../utils/videoUtils'\r\nimport { useSkills } from '../../hooks/useSkills'\r\nimport { useCategories } from '../../hooks/useCategories'\r\n\r\ninterface FormProps {\r\n  data?: VideoLearning\r\n  onSave: (data: VideoLearningFormData) => void\r\n  onCancel: () => void\r\n  isSaving?: boolean\r\n  availableCategories?: string[]\r\n}\r\n\r\nconst VideoLearningForm: React.FC<FormProps> = ({ \r\n  data, \r\n  onSave, \r\n  onCancel, \r\n  isSaving = false, \r\n  availableCategories = ['PLC', '데이터분석', '로봇공학', 'IoT', '기타'] \r\n}) => {\r\n  // 🌟 스킬 데이터 가져오기\r\n  const { skillCategories, loading: skillsLoading } = useSkills()\r\n  \r\n  // 🌟 카테고리 데이터 가져오기\r\n  const { data: categories = [], isLoading: categoriesLoading } = useCategories()\r\n\r\n  // watchDate 초기값 수정\r\n  const initialWatchDate = data?.watchDate && !isNaN(new Date(data.watchDate).getTime())\r\n    ? new Date(data.watchDate).toISOString().split('T')[0]\r\n    : new Date().toISOString().split('T')[0]\r\n\r\n  // 🌟 폼 상태 관리 (내부에서는 videoUrl로 관리, 저장 시 videoId로 변환)\r\n  const [videoUrlInput, setVideoUrlInput] = useState<string>(() => {\r\n    // videoId가 있으면 URL로 변환, videoUrl이 있으면 그대로 사용 (호환성)\r\n    if (data?.videoId) return `https://www.youtube.com/watch?v=${data.videoId}`\r\n    if ((data as any)?.videoUrl) return (data as any).videoUrl\r\n    return ''\r\n  })\r\n\r\n  // 🌟 skillIds 초기값 처리 (populate된 객체 배열에서 _id만 추출)\r\n  const initialSkillIds = data?.skillIds \r\n    ? (data.skillIds as any[]).map((skillIdOrObj: any) => \r\n        typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj._id\r\n      ).filter(Boolean) as string[]\r\n    : []\r\n\r\n  // 🌟 categoryIds 초기값 처리\r\n  const initialCategoryIds = data?.categoryIds \r\n    ? (data.categoryIds as any[]).map((catIdOrObj: any) => \r\n        typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj._id\r\n      ).filter(Boolean) as string[]\r\n    : []\r\n\r\n  console.log('🎬 VideoLearningForm 초기화:', {\r\n    hasData: !!data,\r\n    rawSkillIds: data?.skillIds,\r\n    extractedSkillIds: initialSkillIds,\r\n    rawCategoryIds: data?.categoryIds,\r\n    extractedCategoryIds: initialCategoryIds,\r\n  })\r\n\r\n  const [formData, setFormData] = useState<Omit<VideoLearningFormData, 'videoId'>>(\r\n    data\r\n      ? { \r\n          title: data.title,\r\n          category: data.category,\r\n          categoryIds: initialCategoryIds,\r\n          watchDate: initialWatchDate as string,\r\n          rating: data.rating || 3,\r\n          purpose: data.purpose || '',\r\n          keyTakeaways: data.keyTakeaways || '',\r\n          application: data.application || '',\r\n          skillIds: initialSkillIds,\r\n          order: data.order || 0,\r\n        } \r\n      : {\r\n          title: '',\r\n          category: availableCategories[0] || 'PLC',\r\n          categoryIds: [],\r\n          watchDate: initialWatchDate as string,\r\n          rating: 3,\r\n          purpose: '',\r\n          keyTakeaways: '',\r\n          application: '',\r\n          skillIds: [],\r\n          order: 0,\r\n        }\r\n  )\r\n\r\n  // 🌟 유튜브 영상 ID 추출 (실시간) + 디버깅 로그\r\n  const videoId = useMemo(() => {\r\n    const id = extractYouTubeId(videoUrlInput)\r\n    console.log('🎬 VideoForm: URL 파싱 결과 -', { inputUrl: videoUrlInput, extractedId: id })\r\n    return id\r\n  }, [videoUrlInput])\r\n  \r\n  const thumbnailUrl = useMemo(() => videoId ? getYouTubeThumbnail(videoId) : null, [videoId])\r\n  const isValidUrl = useMemo(() => videoId !== null, [videoId])\r\n\r\n\r\n  // 🌟 카테고리 선택/해제 핸들러 (체크박스용)\r\n  const handleCategoryToggle = (categoryId: string) => {\r\n    const currentCategoryIds = formData.categoryIds || []\r\n    const isSelected = currentCategoryIds.includes(categoryId)\r\n    \r\n    const newCategoryIds = isSelected\r\n      ? currentCategoryIds.filter((id: string) => id !== categoryId)\r\n      : [...currentCategoryIds, categoryId]\r\n    \r\n    setFormData({ \r\n      ...formData, \r\n      categoryIds: newCategoryIds \r\n    })\r\n  }\r\n\r\n  // 🌟 스킬 선택/해제 핸들러 (체크박스용)\r\n  const handleSkillToggle = (skillId: string) => {\r\n    const currentSkillIds = formData.skillIds || []\r\n    const isSelected = currentSkillIds.includes(skillId)\r\n    \r\n    const newSkillIds = isSelected\r\n      ? currentSkillIds.filter((id: string) => id !== skillId)\r\n      : [...currentSkillIds, skillId]\r\n    \r\n    setFormData({ \r\n      ...formData, \r\n      skillIds: newSkillIds \r\n    })\r\n  }\r\n  \r\n  // 🌟 스킬 카테고리 전체 선택/해제 핸들러\r\n  const handleSkillCategoryToggle = (category: SkillCategory) => {\r\n    const categorySkillIds = (category.skills || []).map((skill: Skill) => skill._id!).filter(Boolean)\r\n    const currentSkillIds = formData.skillIds || []\r\n    \r\n    // 카테고리의 모든 스킬이 선택되어 있는지 확인\r\n    const allSelected = categorySkillIds.every((id: string) => currentSkillIds.includes(id))\r\n    \r\n    let newSkillIds: string[]\r\n    if (allSelected) {\r\n      // 모두 선택되어 있으면 전체 해제\r\n      newSkillIds = currentSkillIds.filter((id: string) => !categorySkillIds.includes(id))\r\n    } else {\r\n      // 일부만 선택되어 있거나 없으면 전체 선택\r\n      const uniqueIds = new Set([...currentSkillIds, ...categorySkillIds])\r\n      newSkillIds = Array.from(uniqueIds)\r\n    }\r\n    \r\n    setFormData({ \r\n      ...formData, \r\n      skillIds: newSkillIds \r\n    })\r\n  }\r\n\r\n  const handleFormSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!formData.title.trim() || !videoUrlInput.trim()) {\r\n      alert('필수 필드(제목, 영상 URL)를 모두 입력해주세요.')\r\n      return\r\n    }\r\n\r\n    if (!isValidUrl || !videoId) {\r\n      alert('❌ 올바른 유튜브 URL을 입력해주세요.')\r\n      return\r\n    }\r\n\r\n    console.log('📹 영상 학습 저장 시작:', formData)\r\n    console.log('🎬 추출된 영상 ID:', videoId)\r\n    console.log('🔗 선택된 스킬 IDs:', formData.skillIds)\r\n    \r\n    const { title, category, watchDate, rating, purpose, keyTakeaways, application, skillIds, order } = formData\r\n    \r\n    // 🌟 videoId로 변환하여 저장\r\n    onSave({ \r\n      title, \r\n      videoId: videoId!,  // 추출된 영상 ID\r\n      category, \r\n      watchDate, \r\n      ...(rating !== undefined && { rating }),\r\n      ...(purpose && { purpose }),\r\n      ...(keyTakeaways && { keyTakeaways }),\r\n      ...(application && { application }),\r\n      skillIds: skillIds || [],\r\n      order: order || 0,\r\n    })\r\n  }\r\n\r\n  // 폼 유효성 검사\r\n  const isFormValid = formData.title.trim() && videoUrlInput.trim() && isValidUrl\r\n\r\n  // 🌟 별점 렌더링 (클릭 가능)\r\n  const renderRatingStars = () => {\r\n    return Array.from({ length: 5 }, (_, i) => {\r\n      const starValue = i + 1\r\n      return (\r\n        <button\r\n          key={i}\r\n          type=\"button\"\r\n          onClick={() => setFormData({ ...formData, rating: starValue })}\r\n          className={`text-3xl transition-colors ${\r\n            starValue <= (formData.rating || 0)\r\n              ? 'text-yellow-500 hover:text-yellow-600'\r\n              : 'text-gray-300 dark:text-gray-600 hover:text-gray-400'\r\n          }`}\r\n        >\r\n          <FaStar />\r\n        </button>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit} className=\"space-y-6\">\r\n      {/* 기본 정보 */}\r\n      <div className=\"grid md:grid-cols-2 gap-6\">\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            제목 <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.title}\r\n            onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"영상 제목을 입력하세요\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            영상 URL <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={videoUrlInput}\r\n            onChange={(e) => setVideoUrlInput(e.target.value)}\r\n            className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white ${\r\n              videoUrlInput && !isValidUrl\r\n                ? 'border-red-500'\r\n                : 'border-gray-300 dark:border-gray-600'\r\n            }`}\r\n            placeholder=\"https://www.youtube.com/watch?v=...\"\r\n            required\r\n          />\r\n          {videoUrlInput && !isValidUrl && (\r\n            <p className=\"text-red-500 text-sm mt-1\">올바른 유튜브 URL을 입력해주세요</p>\r\n          )}\r\n          {videoId && (\r\n            <p className=\"text-green-600 text-sm mt-1\">✅ 영상 ID: <code className=\"bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded\">{videoId}</code></p>\r\n          )}\r\n          {/* 🌟 썸네일 미리보기 */}\r\n          {thumbnailUrl && isValidUrl && (\r\n            <div className=\"mt-3\">\r\n              <img \r\n                src={thumbnailUrl} \r\n                alt=\"영상 썸네일\" \r\n                className=\"w-full max-w-md rounded-lg shadow-md\"\r\n                onError={(e) => {\r\n                  // maxresdefault가 없으면 hqdefault로 폴백\r\n                  const target = e.target as HTMLImageElement\r\n                  if (target.src.includes('maxresdefault')) {\r\n                    target.src = getYouTubeThumbnail(videoId!, 'hqdefault')\r\n                  }\r\n                }}\r\n              />\r\n              <p className=\"text-sm text-green-600 dark:text-green-400 mt-2\">✓ 유효한 유튜브 URL</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n            카테고리 선택 📂 (다중 선택 가능)\r\n          </label>\r\n\r\n          {/* 선택된 카테고리 태그 표시 */}\r\n          {formData.categoryIds && formData.categoryIds.length > 0 && (\r\n            <div className=\"flex flex-wrap gap-2 mb-3 p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\r\n              {formData.categoryIds.map((catId) => {\r\n                const category = categories.find(c => c._id === catId)\r\n                return category ? (\r\n                  <span\r\n                    key={catId}\r\n                    className=\"inline-flex items-center gap-1 px-3 py-1 bg-blue-600 text-white rounded-full text-sm\"\r\n                  >\r\n                    {category.name}\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => handleCategoryToggle(catId)}\r\n                      className=\"hover:bg-blue-700 rounded-full p-0.5\"\r\n                    >\r\n                      <FaTimes className=\"text-xs\" />\r\n                    </button>\r\n                  </span>\r\n                ) : null\r\n              })}\r\n            </div>\r\n          )}\r\n\r\n          {/* 카테고리 체크박스 목록 */}\r\n          {categoriesLoading ? (\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">카테고리 로딩 중...</p>\r\n          ) : categories.length > 0 ? (\r\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2\">\r\n              {categories.map((category) => {\r\n                const isSelected = (formData.categoryIds || []).includes(category._id)\r\n                return (\r\n                  <label\r\n                    key={category._id}\r\n                    className={`flex items-center gap-2 p-3 border-2 rounded-lg cursor-pointer transition-all ${\r\n                      isSelected\r\n                        ? 'border-primary-600 bg-primary-50 dark:bg-primary-900/20'\r\n                        : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600'\r\n                    }`}\r\n                  >\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={isSelected}\r\n                      onChange={() => handleCategoryToggle(category._id)}\r\n                      className=\"w-4 h-4\"\r\n                    />\r\n                    <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                      {category.name}\r\n                    </span>\r\n                  </label>\r\n                )\r\n              })}\r\n            </div>\r\n          ) : (\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              등록된 카테고리가 없습니다. 관리자 메뉴의 \"카테고리 관리\"에서 추가하세요.\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            시청 날짜\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            value={formData.watchDate}\r\n            onChange={(e) => setFormData({ ...formData, watchDate: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            이해도 평점\r\n          </label>\r\n          <div className=\"flex items-center gap-2\">\r\n            {renderRatingStars()}\r\n            <span className=\"ml-3 text-gray-600 dark:text-gray-400\">{formData.rating}/5</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 상세 정보 */}\r\n      <div className=\"space-y-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            시청 목적\r\n          </label>\r\n          <textarea\r\n            value={formData.purpose}\r\n            onChange={(e) => setFormData({ ...formData, purpose: e.target.value })}\r\n            className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-vertical\"\r\n            rows={3}\r\n            placeholder=\"이 영상을 왜 시청했는지, 어떤 문제를 해결하기 위해서인지 작성하세요...\"\r\n          />\r\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">최대 1000자</p>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            핵심 배움 (마크다운 지원)\r\n          </label>\r\n          <textarea\r\n            value={formData.keyTakeaways}\r\n            onChange={(e) => setFormData({ ...formData, keyTakeaways: e.target.value })}\r\n            className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-vertical font-mono text-sm\"\r\n            rows={8}\r\n            placeholder=\"영상에서 얻은 핵심 지식 3-5가지를 정리하세요...&#10;&#10;예시:&#10;- [2:30] React Query의 staleTime과 cacheTime 차이&#10;- [5:15] Optimistic Updates 구현 방법&#10;- [8:45] Query Invalidation 전략\"\r\n          />\r\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n            최대 5000자 | 타임스탬프 형식: [MM:SS] 또는 [H:MM:SS]\r\n          </p>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            적용 계획 (마크다운 지원)\r\n          </label>\r\n          <textarea\r\n            value={formData.application}\r\n            onChange={(e) => setFormData({ ...formData, application: e.target.value })}\r\n            className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-vertical font-mono text-sm\"\r\n            rows={5}\r\n            placeholder=\"이 지식을 어떻게 활용할 계획인지, 또는 이미 적용한 경험을 작성하세요...\"\r\n          />\r\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">최대 3000자</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 🌟 스킬 연결 (체크박스 UI) */}\r\n      <div className=\"md:col-span-2\">\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          관련 기술 연동 🔗\r\n        </label>\r\n        {skillsLoading ? (\r\n          <div className=\"text-sm text-gray-500 dark:text-gray-400 py-2\">\r\n            스킬 목록을 불러오는 중입니다...\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {/* 선택된 스킬 개수 표시 */}\r\n            {(formData.skillIds || []).length > 0 && (\r\n              <div className=\"mb-3 px-3 py-2 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\r\n                <span className=\"text-sm text-blue-700 dark:text-blue-300 font-medium\">\r\n                  ✓ {(formData.skillIds || []).length}개 선택됨\r\n                </span>\r\n              </div>\r\n            )}\r\n            \r\n            {/* 카테고리별 스킬 체크박스 */}\r\n            <div className=\"border border-gray-300 dark:border-gray-600 rounded-lg p-4 max-h-[400px] overflow-y-auto bg-gray-50 dark:bg-gray-800/50\">\r\n              {skillCategories.map((category) => {\r\n                const categorySkills = category.skills || []\r\n                const categorySkillIds = categorySkills.map((s: Skill) => s._id!).filter(Boolean)\r\n                const selectedInCategory = categorySkillIds.filter((id: string) => \r\n                  (formData.skillIds || []).includes(id)\r\n                )\r\n                const allSelected = categorySkillIds.length > 0 && selectedInCategory.length === categorySkillIds.length\r\n                const someSelected = selectedInCategory.length > 0 && !allSelected\r\n\r\n                return (\r\n                  <div key={category._id} className=\"mb-4 last:mb-0\">\r\n                    {/* 카테고리 헤더 */}\r\n                    <div \r\n                      onClick={() => handleSkillCategoryToggle(category)}\r\n                      className=\"flex items-center gap-3 p-3 bg-white dark:bg-gray-700 rounded-lg cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors mb-2\"\r\n                    >\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={allSelected}\r\n                        ref={(input) => {\r\n                          if (input) input.indeterminate = someSelected\r\n                        }}\r\n                        onChange={() => {}}\r\n                        className=\"w-5 h-5 text-primary-600 rounded focus:ring-2 focus:ring-primary-500\"\r\n                      />\r\n                      <label \r\n                        className=\"font-bold text-base cursor-pointer flex-1\"\r\n                        style={{ color: category.color || '#3B82F6' }}\r\n                      >\r\n                        {category.title} ({selectedInCategory.length}/{categorySkills.length})\r\n                      </label>\r\n                    </div>\r\n\r\n                    {/* 개별 스킬 체크박스 */}\r\n                    <div className=\"ml-8 space-y-2\">\r\n                      {categorySkills.map((skill: Skill) => {\r\n                        const isSelected = (formData.skillIds || []).includes(skill._id!)\r\n                        return (\r\n                          <div\r\n                            key={skill._id}\r\n                            onClick={() => handleSkillToggle(skill._id!)}\r\n                            className={`flex items-center gap-3 p-2 rounded-lg cursor-pointer transition-all ${\r\n                              isSelected\r\n                                ? 'bg-blue-100 dark:bg-blue-900/30 font-medium'\r\n                                : 'hover:bg-gray-100 dark:hover:bg-gray-600'\r\n                            }`}\r\n                          >\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              checked={isSelected}\r\n                              onChange={() => {}}\r\n                              className=\"w-4 h-4 text-primary-600 rounded focus:ring-2 focus:ring-primary-500\"\r\n                            />\r\n                            <label \r\n                              className=\"cursor-pointer flex-1 text-sm\"\r\n                              style={{ color: isSelected ? skill.color : undefined }}\r\n                            >\r\n                              {skill.name}\r\n                            </label>\r\n                          </div>\r\n                        )\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {/* 순서 */}\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          순서 (낮을수록 먼저 표시)\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          value={formData.order}\r\n          onChange={(e) => setFormData({ ...formData, order: parseInt(e.target.value) || 0 })}\r\n          className=\"w-32 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          min=\"0\"\r\n        />\r\n      </div>\r\n\r\n      {/* 버튼 */}\r\n      <div className=\"flex gap-4 pt-4\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSaving || !isFormValid || !isValidUrl}\r\n          className=\"flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors font-medium\"\r\n        >\r\n          <FaSave /> {isSaving ? '저장 중...' : '저장'}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={onCancel}\r\n          className=\"px-6 py-3 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors font-medium\"\r\n        >\r\n          취소\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default VideoLearningForm\r\n\r\n","import React, { useState, useMemo } from 'react'\r\nimport { FaSave, FaStar, FaTimes } from 'react-icons/fa'\r\nimport { VideoPlaylist, VideoPlaylistFormData } from '../../types'\r\nimport { formatCategoryDisplayName } from '../../utils/categoryUtils'\r\nimport { extractYouTubePlaylistId, getYouTubePlaylistThumbnail } from '../../utils/videoUtils'\r\nimport { useSkills } from '../../hooks/useSkills'\r\nimport { useCategories } from '../../hooks/useCategories'\r\n\r\ninterface FormProps {\r\n  data?: VideoPlaylist\r\n  onSave: (data: VideoPlaylistFormData) => void\r\n  onCancel: () => void\r\n  isSaving?: boolean\r\n  availableCategories?: string[]\r\n}\r\n\r\nconst VideoPlaylistForm: React.FC<FormProps> = ({ \r\n  data, \r\n  onSave, \r\n  onCancel, \r\n  isSaving = false, \r\n  availableCategories = ['PLC', '데이터분석', '로봇공학', 'IoT', '기타'] \r\n}) => {\r\n  const { skillCategories, loading: skillsLoading } = useSkills()\r\n  \r\n  // 🌟 카테고리 데이터 가져오기\r\n  const { data: categories = [], isLoading: categoriesLoading } = useCategories()\r\n\r\n  const initialWatchDate = data?.watchDate && !isNaN(new Date(data.watchDate).getTime())\r\n    ? new Date(data.watchDate).toISOString().split('T')[0]\r\n    : new Date().toISOString().split('T')[0]\r\n\r\n  const [playlistUrlInput, setPlaylistUrlInput] = useState<string>(() => {\r\n    if (data?.playlistId) return `https://www.youtube.com/playlist?list=${data.playlistId}`\r\n    return ''\r\n  })\r\n\r\n  // 🌟 categoryIds 초기값 처리\r\n  const initialCategoryIds = data?.categoryIds \r\n    ? (data.categoryIds as any[]).map((catIdOrObj: any) => \r\n        typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj._id\r\n      ).filter(Boolean) as string[]\r\n    : []\r\n\r\n  const [formData, setFormData] = useState<Omit<VideoPlaylistFormData, 'playlistId'>>(\r\n    data\r\n      ? { \r\n          title: data.title,\r\n          category: data.category,\r\n          categoryIds: initialCategoryIds,\r\n          watchDate: initialWatchDate as string,\r\n          rating: data.rating || 3,\r\n          purpose: data.purpose || '',\r\n          application: data.application || '',\r\n          skillIds: (data.skillIds || []).map((skillIdOrObj: any) => \r\n            typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj._id\r\n          ).filter(Boolean) as string[],\r\n          order: data.order || 0,\r\n        } \r\n      : {\r\n          title: '',\r\n          category: availableCategories[0] || 'PLC',\r\n          categoryIds: [],\r\n          watchDate: initialWatchDate as string,\r\n          rating: 3,\r\n          purpose: '',\r\n          application: '',\r\n          skillIds: [],\r\n          order: 0,\r\n        }\r\n  )\r\n\r\n  const playlistId = useMemo(() => {\r\n    const id = extractYouTubePlaylistId(playlistUrlInput)\r\n    console.log('🎬 PlaylistForm: URL 파싱 결과 -', { inputUrl: playlistUrlInput, extractedId: id })\r\n    return id\r\n  }, [playlistUrlInput])\r\n  \r\n  const thumbnailUrl = useMemo(() => playlistId ? getYouTubePlaylistThumbnail(playlistId) : null, [playlistId])\r\n  const isValidUrl = useMemo(() => playlistId !== null, [playlistId])\r\n\r\n  // 🌟 카테고리 선택/해제 핸들러 (체크박스용)\r\n  const handleCategoryToggle = (categoryId: string) => {\r\n    const currentCategoryIds = formData.categoryIds || []\r\n    const isSelected = currentCategoryIds.includes(categoryId)\r\n    \r\n    const newCategoryIds = isSelected\r\n      ? currentCategoryIds.filter((id: string) => id !== categoryId)\r\n      : [...currentCategoryIds, categoryId]\r\n    \r\n    setFormData({ \r\n      ...formData, \r\n      categoryIds: newCategoryIds \r\n    })\r\n  }\r\n\r\n  const handleSkillToggle = (skillId: string) => {\r\n    const currentSkillIds = formData.skillIds || []\r\n    const isSelected = currentSkillIds.includes(skillId)\r\n    \r\n    const newSkillIds = isSelected\r\n      ? currentSkillIds.filter((id: string) => id !== skillId)\r\n      : [...currentSkillIds, skillId]\r\n    \r\n    setFormData({ \r\n      ...formData, \r\n      skillIds: newSkillIds \r\n    })\r\n  }\r\n\r\n  const handleFormSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!formData.title.trim() || !playlistUrlInput.trim()) {\r\n      alert('필수 필드(제목, 재생 목록 URL)를 모두 입력해주세요.')\r\n      return\r\n    }\r\n\r\n    if (!isValidUrl || !playlistId) {\r\n      alert('❌ 올바른 유튜브 재생 목록 URL을 입력해주세요.')\r\n      return\r\n    }\r\n    \r\n    const { title, category, categoryIds, watchDate, rating, purpose, application, skillIds, order } = formData\r\n    \r\n    const saveData = { \r\n      title, \r\n      playlistId: playlistId!,\r\n      category, \r\n      categoryIds: categoryIds || [],  // 🌟 다중 카테고리 추가\r\n      watchDate, \r\n      ...(rating !== undefined && { rating }),\r\n      ...(purpose && { purpose }),\r\n      ...(application && { application }),\r\n      skillIds: skillIds || [],\r\n      order: order || 0,\r\n    }\r\n    \r\n    console.log('📝 VideoPlaylistForm: 저장 데이터 전송', saveData)\r\n    onSave(saveData)\r\n  }\r\n\r\n  const isFormValid = formData.title.trim() && playlistUrlInput.trim() && isValidUrl\r\n\r\n  const renderRatingStars = () => {\r\n    return Array.from({ length: 5 }, (_, i) => {\r\n      const starValue = i + 1\r\n      return (\r\n        <button\r\n          key={i}\r\n          type=\"button\"\r\n          onClick={() => setFormData({ ...formData, rating: starValue })}\r\n          className={`text-3xl transition-colors ${\r\n            starValue <= (formData.rating || 0)\r\n              ? 'text-yellow-500 hover:text-yellow-600'\r\n              : 'text-gray-300 dark:text-gray-600 hover:text-gray-400'\r\n          }`}\r\n        >\r\n          <FaStar />\r\n        </button>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit} className=\"space-y-6\">\r\n      <div className=\"grid md:grid-cols-2 gap-6\">\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            제목 <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.title}\r\n            onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"재생 목록 제목을 입력하세요\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            재생 목록 URL <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={playlistUrlInput}\r\n            onChange={(e) => setPlaylistUrlInput(e.target.value)}\r\n            className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white ${\r\n              playlistUrlInput && !isValidUrl\r\n                ? 'border-red-500'\r\n                : 'border-gray-300 dark:border-gray-600'\r\n            }`}\r\n            placeholder=\"https://www.youtube.com/playlist?list=...\"\r\n            required\r\n          />\r\n          {playlistUrlInput && !isValidUrl && (\r\n            <p className=\"text-red-500 text-sm mt-1\">올바른 유튜브 재생 목록 URL을 입력해주세요</p>\r\n          )}\r\n          {playlistId && (\r\n            <p className=\"text-green-600 text-sm mt-1\">✅ 재생 목록 ID: <code className=\"bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded\">{playlistId}</code></p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n            카테고리 선택 📂 (다중 선택 가능)\r\n          </label>\r\n\r\n          {/* 선택된 카테고리 태그 표시 */}\r\n          {formData.categoryIds && formData.categoryIds.length > 0 && (\r\n            <div className=\"flex flex-wrap gap-2 mb-3 p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\r\n              {formData.categoryIds.map((catId) => {\r\n                const category = categories.find(c => c._id === catId)\r\n                return category ? (\r\n                  <span\r\n                    key={catId}\r\n                    className=\"inline-flex items-center gap-1 px-3 py-1 bg-blue-600 text-white rounded-full text-sm\"\r\n                  >\r\n                    {category.name}\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => handleCategoryToggle(catId)}\r\n                      className=\"hover:bg-blue-700 rounded-full p-0.5\"\r\n                    >\r\n                      <FaTimes className=\"text-xs\" />\r\n                    </button>\r\n                  </span>\r\n                ) : null\r\n              })}\r\n            </div>\r\n          )}\r\n\r\n          {/* 카테고리 체크박스 목록 */}\r\n          {categoriesLoading ? (\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">카테고리 로딩 중...</p>\r\n          ) : categories.length > 0 ? (\r\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2\">\r\n              {categories.map((category) => {\r\n                const isSelected = (formData.categoryIds || []).includes(category._id)\r\n                return (\r\n                  <label\r\n                    key={category._id}\r\n                    className={`flex items-center gap-2 p-3 border-2 rounded-lg cursor-pointer transition-all ${\r\n                      isSelected\r\n                        ? 'border-primary-600 bg-primary-50 dark:bg-primary-900/20'\r\n                        : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600'\r\n                    }`}\r\n                  >\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={isSelected}\r\n                      onChange={() => handleCategoryToggle(category._id)}\r\n                      className=\"w-4 h-4\"\r\n                    />\r\n                    <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                      {category.name}\r\n                    </span>\r\n                  </label>\r\n                )\r\n              })}\r\n            </div>\r\n          ) : (\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              등록된 카테고리가 없습니다. 관리자 메뉴의 \"카테고리 관리\"에서 추가하세요.\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            시청 날짜\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            value={formData.watchDate}\r\n            onChange={(e) => setFormData({ ...formData, watchDate: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            평점\r\n          </label>\r\n          <div className=\"flex items-center gap-2\">\r\n            {renderRatingStars()}\r\n            <span className=\"ml-3 text-gray-600 dark:text-gray-400\">{formData.rating}/5</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"space-y-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            시청 목적\r\n          </label>\r\n          <textarea\r\n            value={formData.purpose}\r\n            onChange={(e) => setFormData({ ...formData, purpose: e.target.value })}\r\n            className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-vertical\"\r\n            rows={3}\r\n            placeholder=\"이 재생 목록을 왜 시청했는지 작성하세요...\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            통합 적용 계획 (마크다운 지원)\r\n          </label>\r\n          <textarea\r\n            value={formData.application}\r\n            onChange={(e) => setFormData({ ...formData, application: e.target.value })}\r\n            className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-vertical font-mono text-sm\"\r\n            rows={5}\r\n            placeholder=\"이 지식을 어떻게 활용할 계획인지 작성하세요...\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* 스킬 연결 (VideoLearningForm과 동일한 UI) */}\r\n      <div className=\"md:col-span-2\">\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          관련 기술 연동 🔗\r\n        </label>\r\n        {skillsLoading ? (\r\n          <div className=\"text-sm text-gray-500 dark:text-gray-400 py-2\">\r\n            스킬 목록을 불러오는 중입니다...\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {(formData.skillIds || []).length > 0 && (\r\n              <div className=\"mb-3 px-3 py-2 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\r\n                <span className=\"text-sm text-blue-700 dark:text-blue-300 font-medium\">\r\n                  ✓ {(formData.skillIds || []).length}개 선택됨\r\n                </span>\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"border border-gray-300 dark:border-gray-600 rounded-lg p-4 max-h-[300px] overflow-y-auto bg-gray-50 dark:bg-gray-800/50\">\r\n              {skillCategories.map((category) => (\r\n                <div key={category._id} className=\"mb-3 last:mb-0\">\r\n                  <label \r\n                    className=\"font-bold text-sm block mb-2\"\r\n                    style={{ color: category.color || '#3B82F6' }}\r\n                  >\r\n                    {category.title}\r\n                  </label>\r\n                  <div className=\"ml-4 space-y-1\">\r\n                    {(category.skills || []).map((skill) => {\r\n                      const isSelected = (formData.skillIds || []).includes(skill._id!)\r\n                      return (\r\n                        <div\r\n                          key={skill._id}\r\n                          onClick={() => handleSkillToggle(skill._id!)}\r\n                          className={`flex items-center gap-2 p-2 rounded cursor-pointer transition-all ${\r\n                            isSelected\r\n                              ? 'bg-blue-100 dark:bg-blue-900/30 font-medium'\r\n                              : 'hover:bg-gray-100 dark:hover:bg-gray-600'\r\n                          }`}\r\n                        >\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={isSelected}\r\n                            onChange={() => {}}\r\n                            className=\"w-4 h-4\"\r\n                          />\r\n                          <span className=\"text-sm\">{skill.name}</span>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"flex gap-4 pt-4\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSaving || !isFormValid || !isValidUrl}\r\n          className=\"flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors font-medium\"\r\n        >\r\n          <FaSave /> {isSaving ? '저장 중...' : '저장'}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={onCancel}\r\n          className=\"px-6 py-3 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors font-medium\"\r\n        >\r\n          취소\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default VideoPlaylistForm\r\n\r\n","import React, { useState, useMemo } from 'react'\r\nimport { FaSave } from 'react-icons/fa'\r\nimport { PlaylistVideo, PlaylistVideoFormData } from '../../types'\r\nimport { extractYouTubeId, getYouTubeThumbnail } from '../../utils/videoUtils'\r\n\r\ninterface FormProps {\r\n  playlistId: string\r\n  data?: PlaylistVideo\r\n  onSave: (data: PlaylistVideoFormData) => void\r\n  onCancel: () => void\r\n  isSaving?: boolean\r\n}\r\n\r\nconst PlaylistVideoForm: React.FC<FormProps> = ({ \r\n  playlistId,\r\n  data, \r\n  onSave, \r\n  onCancel, \r\n  isSaving = false \r\n}) => {\r\n  // 🌟 영상 URL 입력 (videoId 자동 추출)\r\n  const [videoUrlInput, setVideoUrlInput] = useState<string>(() => {\r\n    if (data?.videoId) return `https://www.youtube.com/watch?v=${data.videoId}`\r\n    return ''\r\n  })\r\n\r\n  const [formData, setFormData] = useState<Omit<PlaylistVideoFormData, 'playlistId' | 'videoId'>>(\r\n    data\r\n      ? { \r\n          title: data.title,\r\n          keyTakeaways: data.keyTakeaways || '',\r\n          order: data.order || 0,\r\n        } \r\n      : {\r\n          title: '',\r\n          keyTakeaways: '',\r\n          order: 0,\r\n        }\r\n  )\r\n\r\n  const videoId = useMemo(() => extractYouTubeId(videoUrlInput), [videoUrlInput])\r\n  const thumbnailUrl = useMemo(() => videoId ? getYouTubeThumbnail(videoId) : null, [videoId])\r\n  const isValidUrl = useMemo(() => videoId !== null, [videoId])\r\n\r\n  const handleFormSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!formData.title.trim() || !videoUrlInput.trim()) {\r\n      alert('필수 필드(제목, 영상 URL)를 모두 입력해주세요.')\r\n      return\r\n    }\r\n\r\n    if (!isValidUrl || !videoId) {\r\n      alert('❌ 올바른 유튜브 영상 URL을 입력해주세요.')\r\n      return\r\n    }\r\n    \r\n    onSave({ \r\n      playlistId,\r\n      videoId: videoId!,\r\n      title: formData.title,\r\n      keyTakeaways: formData.keyTakeaways || '',\r\n      order: formData.order || 0,\r\n    })\r\n  }\r\n\r\n  const isFormValid = formData.title.trim() && videoUrlInput.trim() && isValidUrl\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit} className=\"space-y-4\">\r\n      <div className=\"grid gap-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            영상 URL <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={videoUrlInput}\r\n            onChange={(e) => setVideoUrlInput(e.target.value)}\r\n            className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white ${\r\n              videoUrlInput && !isValidUrl\r\n                ? 'border-red-500'\r\n                : 'border-gray-300 dark:border-gray-600'\r\n            }`}\r\n            placeholder=\"https://www.youtube.com/watch?v=...\"\r\n            required\r\n          />\r\n          {videoUrlInput && !isValidUrl && (\r\n            <p className=\"text-red-500 text-sm mt-1\">올바른 유튜브 URL을 입력해주세요</p>\r\n          )}\r\n          {videoId && (\r\n            <p className=\"text-green-600 text-sm mt-1\">✅ 영상 ID: <code className=\"bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded\">{videoId}</code></p>\r\n          )}\r\n          {/* 🌟 썸네일 미리보기 */}\r\n          {thumbnailUrl && isValidUrl && (\r\n            <div className=\"mt-3\">\r\n              <img \r\n                src={thumbnailUrl} \r\n                alt=\"영상 썸네일\" \r\n                className=\"w-full max-w-xs rounded-lg shadow-md\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            영상 제목 <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.title}\r\n            onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"영상 제목을 입력하세요\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            핵심 배움 (마크다운 지원)\r\n          </label>\r\n          <textarea\r\n            value={formData.keyTakeaways}\r\n            onChange={(e) => setFormData({ ...formData, keyTakeaways: e.target.value })}\r\n            className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-vertical font-mono text-sm\"\r\n            rows={6}\r\n            placeholder=\"예시:&#10;- [2:30] React Query의 staleTime 이해&#10;- [5:15] 캐시 무효화 전략&#10;- [8:45] Optimistic Updates\"\r\n          />\r\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n            타임스탬프 형식: [MM:SS] 또는 [H:MM:SS]\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex gap-4 pt-4\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSaving || !isFormValid}\r\n          className=\"flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors font-medium\"\r\n        >\r\n          <FaSave /> {isSaving ? '저장 중...' : '저장'}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={onCancel}\r\n          className=\"px-6 py-3 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors font-medium\"\r\n        >\r\n          취소\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PlaylistVideoForm\r\n\r\n","import React from 'react'\r\n\r\nexport type AdminLanguage = 'ko' | 'en' | 'ja'\r\n\r\ninterface LanguageTabsProps {\r\n  activeLanguage: AdminLanguage\r\n  onChange: (lang: AdminLanguage) => void\r\n}\r\n\r\nconst LanguageTabs: React.FC<LanguageTabsProps> = ({ activeLanguage, onChange }) => {\r\n  const languages: { code: AdminLanguage; flag: string; label: string }[] = [\r\n    { code: 'ko', flag: '🇰🇷', label: '한국어' },\r\n    { code: 'en', flag: '🇺🇸', label: 'English' },\r\n    { code: 'ja', flag: '🇯🇵', label: '日本語' }\r\n  ]\r\n\r\n  return (\r\n    <div className=\"flex gap-2 mb-6 border-b border-gray-200 dark:border-gray-700\">\r\n      {languages.map((lang) => {\r\n        const isActive = activeLanguage === lang.code\r\n        return (\r\n          <button\r\n            key={lang.code}\r\n            type=\"button\"\r\n            onClick={() => onChange(lang.code)}\r\n            className={`flex items-center gap-2 px-6 py-3 font-semibold transition-all duration-200 border-b-2 ${\r\n              isActive\r\n                ? 'border-blue-600 text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/20'\r\n                : 'border-transparent text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800'\r\n            }`}\r\n          >\r\n            <span className=\"text-xl\">{lang.flag}</span>\r\n            <span>{lang.label}</span>\r\n          </button>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LanguageTabs\r\n\r\n","import React, { useState } from 'react'\r\nimport { \r\n  FaSave, \r\n  FaPlus, \r\n  FaTrash, \r\n  FaBriefcase, \r\n  FaCoffee, \r\n  FaGraduationCap, \r\n  FaChartLine, \r\n  FaCode, \r\n  FaCog, \r\n  FaRobot,\r\n  FaCar,           // 🚗 자동차\r\n  FaShieldAlt,     // 🛡️ 군인\r\n  FaLaptopCode,    // 💻 프로그래밍\r\n  FaBars           // 🌟 드래그 핸들 아이콘\r\n} from 'react-icons/fa'\r\nimport { Experience, ExperienceFormData, ExperienceDetail, Skill, SkillCategory } from '../../types'\r\nimport RichTextEditor from '../RichTextEditor'\r\nimport { DndContext, closestCenter, DragEndEvent } from '@dnd-kit/core'\r\nimport { SortableContext, verticalListSortingStrategy, useSortable } from '@dnd-kit/sortable'\r\nimport { CSS } from '@dnd-kit/utilities'\r\nimport { useSkills } from '../../hooks/useSkills'\r\nimport LanguageTabs, { AdminLanguage } from '../common/LanguageTabs'\r\n\r\n// 🌟 아이콘 옵션 정의\r\nconst iconOptions = [\r\n  { key: 'FaBriefcase', icon: FaBriefcase, label: '💼 일반 업무' },\r\n  { key: 'FaCoffee', icon: FaCoffee, label: '☕ 서비스/카페' },\r\n  { key: 'FaGraduationCap', icon: FaGraduationCap, label: '🎓 교육/학습' },\r\n  { key: 'FaChartLine', icon: FaChartLine, label: '📈 성장/분석' },\r\n  { key: 'FaLaptopCode', icon: FaLaptopCode, label: '💻 프로그래밍' },\r\n  { key: 'FaCode', icon: FaCode, label: '⌨️ 개발/코딩' },\r\n  { key: 'FaCog', icon: FaCog, label: '⚙️ 기술/엔지니어링' },\r\n  { key: 'FaRobot', icon: FaRobot, label: '🤖 자동화/AI' },\r\n  { key: 'FaCar', icon: FaCar, label: '🚗 자동차/운전' },\r\n  { key: 'FaShieldAlt', icon: FaShieldAlt, label: '🛡️ 군대/보안' },\r\n]\r\n\r\n// 🌟 Sortable 카테고리 아이템 컴포넌트\r\ninterface SortableCategoryItemProps {\r\n  detail: ExperienceDetail\r\n  index: number\r\n  editingCategoryIndex: number | null\r\n  onEdit: (index: number) => void\r\n  onRemove: (index: number) => void\r\n}\r\n\r\nconst SortableCategoryItem: React.FC<SortableCategoryItemProps> = ({ \r\n  detail, \r\n  index, \r\n  editingCategoryIndex,\r\n  onEdit,\r\n  onRemove\r\n}) => {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition,\r\n    isDragging,\r\n  } = useSortable({ id: index })\r\n\r\n  const style = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition,\r\n    opacity: isDragging ? 0.5 : 1,\r\n    zIndex: isDragging ? 1000 : 'auto',\r\n  }\r\n\r\n  return (\r\n    <div \r\n      ref={setNodeRef} \r\n      style={style}\r\n      className=\"bg-white dark:bg-gray-800 p-4 rounded-lg border-2 border-gray-300 dark:border-gray-600 hover:border-blue-400 dark:hover:border-blue-600 transition-colors\"\r\n    >\r\n      <div className=\"flex items-center justify-between mb-2\">\r\n        <div className=\"flex items-center gap-2\">\r\n          {/* 🌟 드래그 핸들 */}\r\n          <div\r\n            {...attributes}\r\n            {...listeners}\r\n            className=\"cursor-grab active:cursor-grabbing text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 p-1\"\r\n            title=\"드래그하여 순서 변경\"\r\n          >\r\n            <FaBars />\r\n          </div>\r\n          <div className=\"w-2 h-2 rounded-full bg-blue-600\"></div>\r\n          <h5 className=\"font-bold text-gray-900 dark:text-white\">{detail.category}</h5>\r\n          <span className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n            ({detail.items.length}개 항목)\r\n          </span>\r\n        </div>\r\n        <div className=\"flex gap-2\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onEdit(index)}\r\n            disabled={editingCategoryIndex !== null}\r\n            className={`px-3 py-1 text-xs bg-blue-600 hover:bg-blue-700 text-white rounded transition-colors ${\r\n              editingCategoryIndex !== null ? 'opacity-50 cursor-not-allowed' : ''\r\n            }`}\r\n          >\r\n            수정\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onRemove(index)}\r\n            disabled={editingCategoryIndex !== null}\r\n            className={`p-1.5 text-red-600 hover:bg-red-100 dark:hover:bg-red-900/30 rounded transition-colors ${\r\n              editingCategoryIndex !== null ? 'opacity-50 cursor-not-allowed' : ''\r\n            }`}\r\n            title=\"카테고리 삭제\"\r\n          >\r\n            <FaTrash className=\"text-xs\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <ul className=\"text-sm text-gray-700 dark:text-gray-300 pl-4\">\r\n        {detail.items.slice(0, 3).map((item, i) => (\r\n          <li key={i} className=\"list-disc\">{item}</li>\r\n        ))}\r\n        {detail.items.length > 3 && (\r\n          <li className=\"text-gray-500 dark:text-gray-400 italic\">\r\n            외 {detail.items.length - 3}개 항목...\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\n// 폼 컴포넌트의 Props 타입 정의\r\ninterface FormProps {\r\n  data: Experience | null\r\n  onSave: (data: ExperienceFormData) => Promise<void>\r\n  onCancel: () => void\r\n  isSaving?: boolean\r\n}\r\n\r\nconst ExperienceForm: React.FC<FormProps> = ({ data, onSave, onCancel, isSaving = false }) => {\r\n  const [currentLang, setCurrentLang] = useState<AdminLanguage>('ko')\r\n  \r\n  // 🌟 스킬 목록 가져오기\r\n  const { skillCategories, loading: skillsLoading } = useSkills()\r\n  \r\n  // 🌟 skillIds 초기값 처리 (객체 또는 문자열 모두 처리)\r\n  const initialSkillIds = data?.skillIds \r\n    ? (data.skillIds as any[]).map((skillIdOrObj: any) => \r\n        typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj?._id\r\n      ).filter(Boolean) as string[]\r\n    : []\r\n  \r\n  // 초기 formData 설정 (iconKey 포함, details에 order 호환성 처리)\r\n  const initialFormData: ExperienceFormData = data ? {\r\n    ...data,\r\n    iconKey: data.iconKey || 'FaBriefcase',\r\n    // 🌟 기존 데이터 호환성: details에 order가 없으면 인덱스를 기본값으로 설정\r\n    details: (data.details || []).map((detail, index) => ({\r\n      ...detail,\r\n      order: detail.order ?? index\r\n    })),\r\n    skills: data.skills || [],\r\n    skillsEn: data.skillsEn || [],\r\n    skillsJa: data.skillsJa || [],\r\n    skillIds: initialSkillIds,  // 🌟 스킬 ID 문자열 배열로 초기화\r\n    titleEn: data.titleEn || '',\r\n    titleJa: data.titleJa || '',\r\n    companyEn: data.companyEn || '',\r\n    companyJa: data.companyJa || ''\r\n  } : {\r\n    period: '',\r\n    title: '',\r\n    titleEn: '',\r\n    titleJa: '',\r\n    company: '',\r\n    companyEn: '',\r\n    companyJa: '',\r\n    description: '',\r\n    details: [],\r\n    skills: [],\r\n    skillsEn: [],\r\n    skillsJa: [],\r\n    skillIds: [],  // 🌟 스킬 ID 초기값\r\n    order: 0,\r\n    iconKey: 'FaBriefcase'\r\n  }\r\n  \r\n  const [formData, setFormData] = useState<ExperienceFormData>(initialFormData)\r\n  \r\n  // 기술 입력을 위한 별도 상태 (입력 중에는 문자열로 유지)\r\n  const [skillsInput, setSkillsInput] = useState<string>(\r\n    Array.isArray(formData.skills) ? formData.skills.join(', ') : ''\r\n  )\r\n  const [skillsInputEn, setSkillsInputEn] = useState<string>(\r\n    Array.isArray(formData.skillsEn) ? formData.skillsEn.join(', ') : ''\r\n  )\r\n  const [skillsInputJa, setSkillsInputJa] = useState<string>(\r\n    Array.isArray(formData.skillsJa) ? formData.skillsJa.join(', ') : ''\r\n  )\r\n  \r\n  // 🌟 카테고리별 상세 내용 관리 상태\r\n  const [editingCategoryIndex, setEditingCategoryIndex] = useState<number | null>(null)\r\n  const [categoryFormData, setCategoryFormData] = useState<{ \r\n    category: string\r\n    categoryEn: string\r\n    categoryJa: string\r\n    content: string\r\n    contentEn: string\r\n    contentJa: string\r\n  }>({\r\n    category: '',\r\n    categoryEn: '',\r\n    categoryJa: '',\r\n    content: '',\r\n    contentEn: '',\r\n    contentJa: ''\r\n  })\r\n  \r\n  // 🌟 스킬 선택/해제 핸들러 (체크박스용)\r\n  const handleSkillToggle = (skillId: string) => {\r\n    const currentSkillIds = formData.skillIds || []\r\n    const isSelected = currentSkillIds.includes(skillId)\r\n    \r\n    const newSkillIds = isSelected\r\n      ? currentSkillIds.filter((id: string) => id !== skillId)\r\n      : [...currentSkillIds, skillId]\r\n    \r\n    setFormData({ \r\n      ...formData, \r\n      skillIds: newSkillIds \r\n    })\r\n  }\r\n  \r\n  // 🌟 스킬 카테고리 전체 선택/해제 핸들러\r\n  const handleSkillCategoryToggle = (category: SkillCategory) => {\r\n    const categorySkillIds = (category.skills || []).map(skill => skill._id!).filter(Boolean)\r\n    const currentSkillIds = formData.skillIds || []\r\n    \r\n    const allSelected = categorySkillIds.every((id: string) => currentSkillIds.includes(id))\r\n    \r\n    let newSkillIds: string[]\r\n    if (allSelected) {\r\n      newSkillIds = currentSkillIds.filter((id: string) => !categorySkillIds.includes(id))\r\n    } else {\r\n      const uniqueIds = new Set([...currentSkillIds, ...categorySkillIds])\r\n      newSkillIds = Array.from(uniqueIds)\r\n    }\r\n    \r\n    setFormData({ \r\n      ...formData, \r\n      skillIds: newSkillIds \r\n    })\r\n  }\r\n  \r\n  // 🌟 카테고리별 상세 내용 관리 함수들\r\n  const addDetailCategory = () => {\r\n    setEditingCategoryIndex((formData.details || []).length)\r\n    setCategoryFormData({ \r\n      category: '', \r\n      categoryEn: '', \r\n      categoryJa: '', \r\n      content: '', \r\n      contentEn: '', \r\n      contentJa: '' \r\n    })\r\n  }\r\n  \r\n  const editDetailCategory = (index: number) => {\r\n    const detail = (formData.details || [])[index]\r\n    if (detail) {\r\n      setEditingCategoryIndex(index)\r\n      setCategoryFormData({\r\n        category: detail.category,\r\n        categoryEn: detail.categoryEn || '',\r\n        categoryJa: detail.categoryJa || '',\r\n        content: detail.items.join('\\n'),\r\n        contentEn: detail.itemsEn?.join('\\n') || '',\r\n        contentJa: detail.itemsJa?.join('\\n') || ''\r\n      })\r\n    }\r\n  }\r\n  \r\n  const saveDetailCategory = () => {\r\n    if (!categoryFormData.category.trim() || !categoryFormData.content.trim()) {\r\n      alert('카테고리 이름과 내용을 모두 입력해주세요.')\r\n      return\r\n    }\r\n    \r\n    const items = categoryFormData.content.split('\\n').map(s => s.trim()).filter(s => s.length > 0)\r\n    const itemsEn = categoryFormData.contentEn.split('\\n').map(s => s.trim()).filter(s => s.length > 0)\r\n    const itemsJa = categoryFormData.contentJa.split('\\n').map(s => s.trim()).filter(s => s.length > 0)\r\n    \r\n    const newDetail: ExperienceDetail = {\r\n      category: categoryFormData.category.trim(),\r\n      categoryEn: categoryFormData.categoryEn.trim() || undefined,\r\n      categoryJa: categoryFormData.categoryJa.trim() || undefined,\r\n      items,\r\n      itemsEn: itemsEn.length > 0 ? itemsEn : undefined,\r\n      itemsJa: itemsJa.length > 0 ? itemsJa : undefined\r\n    }\r\n    \r\n    const newDetails = [...(formData.details || [])]\r\n    if (editingCategoryIndex !== null) {\r\n      newDetails[editingCategoryIndex] = newDetail\r\n    }\r\n    \r\n    setFormData({ ...formData, details: newDetails })\r\n    setEditingCategoryIndex(null)\r\n    setCategoryFormData({ \r\n      category: '', \r\n      categoryEn: '', \r\n      categoryJa: '', \r\n      content: '', \r\n      contentEn: '', \r\n      contentJa: '' \r\n    })\r\n  }\r\n  \r\n  const cancelDetailCategory = () => {\r\n    setEditingCategoryIndex(null)\r\n    setCategoryFormData({ \r\n      category: '', \r\n      categoryEn: '', \r\n      categoryJa: '', \r\n      content: '', \r\n      contentEn: '', \r\n      contentJa: '' \r\n    })\r\n  }\r\n  \r\n  const removeDetailCategory = (index: number) => {\r\n    if (!confirm('이 카테고리를 삭제하시겠습니까?')) return\r\n    const newDetails = [...(formData.details || [])]\r\n    newDetails.splice(index, 1)\r\n    setFormData({ ...formData, details: newDetails })\r\n  }\r\n  \r\n  // 🌟 드래그 앤 드롭 핸들러\r\n  const handleDragEnd = (event: DragEndEvent) => {\r\n    const { active, over } = event\r\n    \r\n    if (!over || active.id === over.id) return\r\n    \r\n    const oldIndex = (formData.details || []).findIndex((_, i) => i === active.id)\r\n    const newIndex = (formData.details || []).findIndex((_, i) => i === over.id)\r\n    \r\n    if (oldIndex === -1 || newIndex === -1) return\r\n    \r\n    // 배열 순서 변경\r\n    const newDetails = [...(formData.details || [])]\r\n    const [movedItem] = newDetails.splice(oldIndex, 1)\r\n    \r\n    if (!movedItem) return  // 안전성 체크\r\n    \r\n    newDetails.splice(newIndex, 0, movedItem)\r\n    \r\n    // 🌟 순서 변경 후 각 항목에 새로운 order 값 할당\r\n    const reorderedDetails = newDetails.map((detail, index) => ({\r\n      ...detail,\r\n      order: index\r\n    }))\r\n    \r\n    setFormData({ ...formData, details: reorderedDetails })\r\n  }\r\n\r\n  // 필수 필드 검증\r\n  const isFormValid = formData.title.trim() !== '' && \r\n                     formData.company.trim() !== '' && \r\n                     formData.period.trim() !== ''\r\n\r\n  const handleFormSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!isFormValid) {\r\n      alert('필수 필드(기간, 직책, 회사/기관)를 모두 입력해주세요.')\r\n      return\r\n    }\r\n    \r\n    // 제출 시 최신 기술 배열을 포함하여 저장 (호환성 유지)\r\n    const skillsArray = skillsInput.split(',').map((s) => s.trim()).filter(s => s.length > 0)\r\n    const skillsArrayEn = skillsInputEn.split(',').map((s) => s.trim()).filter(s => s.length > 0)\r\n    const skillsArrayJa = skillsInputJa.split(',').map((s) => s.trim()).filter(s => s.length > 0)\r\n    \r\n    // 🌟 skillIds를 문자열 배열로 확실하게 변환 + 중복 제거\r\n    const skillIds = Array.from(new Set(\r\n      (formData.skillIds || []).map((skillIdOrObj: any) => \r\n        typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj?._id\r\n      ).filter(Boolean)\r\n    ))\r\n    \r\n    // 🌟 details 배열의 각 항목에 order 값 할당 (현재 배열 순서 기준)\r\n    const orderedDetails = (formData.details || []).map((detail, index) => ({\r\n      ...detail,\r\n      order: detail.order ?? index  // 기존 order가 있으면 유지, 없으면 인덱스 사용\r\n    }))\r\n    \r\n    const finalFormData = { \r\n      ...formData, \r\n      skills: skillsArray,  // 🔄 호환성 유지\r\n      skillsEn: skillsArrayEn,\r\n      skillsJa: skillsArrayJa,\r\n      skillIds,  // 🌟 스킬 ID 배열\r\n      details: orderedDetails\r\n    }\r\n    \r\n    console.log('📤 경력 저장 데이터:', finalFormData)\r\n    onSave(finalFormData)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit} className=\"space-y-4\">\r\n      <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">\r\n        {data ? '경력 수정' : '경력 추가'}\r\n      </h3>\r\n      \r\n      {/* Language Tabs for Main Fields */}\r\n      <div className=\"mb-6\">\r\n        <LanguageTabs activeLanguage={currentLang} onChange={setCurrentLang} />\r\n      </div>\r\n\r\n      <div className=\"grid md:grid-cols-2 gap-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            기간\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.period}\r\n            onChange={(e) => setFormData({ ...formData, period: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"2018 - 2023\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            직책 {currentLang === 'ko' && <span className=\"text-red-500\">*</span>}\r\n            <span className=\"text-xs text-gray-500 ml-2\">\r\n              ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n            </span>\r\n          </label>\r\n          {currentLang === 'ko' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.title}\r\n              onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n              className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"바리스타\"\r\n            />\r\n          )}\r\n          {currentLang === 'en' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.titleEn || ''}\r\n              onChange={(e) => setFormData({ ...formData, titleEn: e.target.value })}\r\n              className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"Barista\"\r\n            />\r\n          )}\r\n          {currentLang === 'ja' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.titleJa || ''}\r\n              onChange={(e) => setFormData({ ...formData, titleJa: e.target.value })}\r\n              className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"バリスタ\"\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            회사/기관 {currentLang === 'ko' && <span className=\"text-red-500\">*</span>}\r\n            <span className=\"text-xs text-gray-500 ml-2\">\r\n              ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n            </span>\r\n          </label>\r\n          {currentLang === 'ko' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.company}\r\n              onChange={(e) => setFormData({ ...formData, company: e.target.value })}\r\n              className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"스타벅스커피코리아\"\r\n            />\r\n          )}\r\n          {currentLang === 'en' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.companyEn || ''}\r\n              onChange={(e) => setFormData({ ...formData, companyEn: e.target.value })}\r\n              className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"Starbucks Coffee Korea\"\r\n            />\r\n          )}\r\n          {currentLang === 'ja' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.companyJa || ''}\r\n              onChange={(e) => setFormData({ ...formData, companyJa: e.target.value })}\r\n              className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"スターバックスコーヒージャパン\"\r\n            />\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            순서\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={formData.order}\r\n            onChange={(e) => {\r\n              const value = parseInt(e.target.value)\r\n              setFormData({ ...formData, order: isNaN(value) ? 0 : value })\r\n            }}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            min=\"0\"\r\n            placeholder=\"표시 순서 (숫자가 작을수록 먼저 표시)\"\r\n          />\r\n        </div>\r\n        {/* 🌟 아이콘 선택 필드 (신규) */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            아이콘\r\n          </label>\r\n          <select\r\n            value={formData.iconKey || 'FaBriefcase'}\r\n            onChange={(e) => setFormData({ ...formData, iconKey: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          >\r\n            {iconOptions.map((option) => (\r\n              <option key={option.key} value={option.key}>\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {/* 미리보기 */}\r\n          <div className=\"mt-2 flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400\">\r\n            <span>미리보기:</span>\r\n            {React.createElement(\r\n              iconOptions.find(opt => opt.key === (formData.iconKey || 'FaBriefcase'))?.icon || FaBriefcase,\r\n              { className: 'text-xl' }\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* 🌟 카테고리별 상세 내용 입력 (신규) */}\r\n      <div className=\"bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg border-2 border-blue-200 dark:border-blue-800\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div>\r\n            <h4 className=\"text-md font-bold text-gray-900 dark:text-white\">\r\n              📋 카테고리별 상세 내용\r\n            </h4>\r\n            <p className=\"text-xs text-gray-600 dark:text-gray-400 mt-1\">\r\n              근무경험, 교육, 근무매장 등 카테고리별로 구체적인 내용을 정리하세요\r\n            </p>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={addDetailCategory}\r\n            disabled={editingCategoryIndex !== null}\r\n            className={`px-3 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg transition-colors flex items-center gap-2 text-sm ${\r\n              editingCategoryIndex !== null ? 'opacity-50 cursor-not-allowed' : ''\r\n            }`}\r\n          >\r\n            <FaPlus className=\"text-xs\" />\r\n            카테고리 추가\r\n          </button>\r\n        </div>\r\n        \r\n        {/* 저장된 카테고리 목록 - 🌟 드래그 앤 드롭 적용 */}\r\n        {formData.details && formData.details.length > 0 && (\r\n          <DndContext collisionDetection={closestCenter} onDragEnd={handleDragEnd}>\r\n            <SortableContext items={formData.details.map((_, i) => i)} strategy={verticalListSortingStrategy}>\r\n              <div className=\"space-y-3 mb-4\">\r\n                {formData.details.map((detail, index) => (\r\n                  <SortableCategoryItem\r\n                    key={index}\r\n                    detail={detail}\r\n                    index={index}\r\n                    editingCategoryIndex={editingCategoryIndex}\r\n                    onEdit={editDetailCategory}\r\n                    onRemove={removeDetailCategory}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </SortableContext>\r\n          </DndContext>\r\n        )}\r\n        \r\n        {/* 카테고리 추가/수정 폼 */}\r\n        {editingCategoryIndex !== null && (\r\n          <div className=\"bg-white dark:bg-gray-800 p-5 rounded-lg border-2 border-blue-400 dark:border-blue-600 shadow-lg\">\r\n            <h5 className=\"font-bold text-gray-900 dark:text-white mb-4\">\r\n              {editingCategoryIndex < (formData.details || []).length ? '카테고리 수정' : '카테고리 추가'}\r\n            </h5>\r\n            \r\n            {/* Language Tabs for Detail Category */}\r\n            <div className=\"mb-4\">\r\n              <LanguageTabs activeLanguage={currentLang} onChange={setCurrentLang} />\r\n            </div>\r\n            \r\n            <div className=\"space-y-4\">\r\n              {/* Category Name (Multilingual) */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  카테고리 이름 {currentLang === 'ko' && <span className=\"text-red-500\">*</span>}\r\n                  <span className=\"text-xs text-gray-500 ml-2\">\r\n                    ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n                  </span>\r\n                </label>\r\n                {currentLang === 'ko' && (\r\n                  <input\r\n                    type=\"text\"\r\n                    value={categoryFormData.category}\r\n                    onChange={(e) => setCategoryFormData({ ...categoryFormData, category: e.target.value })}\r\n                    placeholder=\"예: 근무경험, 교육, 근무매장\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white font-semibold\"\r\n                  />\r\n                )}\r\n                {currentLang === 'en' && (\r\n                  <input\r\n                    type=\"text\"\r\n                    value={categoryFormData.categoryEn}\r\n                    onChange={(e) => setCategoryFormData({ ...categoryFormData, categoryEn: e.target.value })}\r\n                    placeholder=\"e.g., Work Experience, Education, Store\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white font-semibold\"\r\n                  />\r\n                )}\r\n                {currentLang === 'ja' && (\r\n                  <input\r\n                    type=\"text\"\r\n                    value={categoryFormData.categoryJa}\r\n                    onChange={(e) => setCategoryFormData({ ...categoryFormData, categoryJa: e.target.value })}\r\n                    placeholder=\"例: 職務経験、教育、店舗\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white font-semibold\"\r\n                  />\r\n                )}\r\n              </div>\r\n              \r\n              {/* Category Content (Multilingual) */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  카테고리 내용 {currentLang === 'ko' && <span className=\"text-red-500\">*</span>}\r\n                  <span className=\"text-xs text-gray-500 ml-2\">\r\n                    ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n                  </span>\r\n                </label>\r\n                {currentLang === 'ko' && (\r\n                  <>\r\n                    <RichTextEditor\r\n                      value={categoryFormData.content}\r\n                      onChange={(value) => setCategoryFormData({ ...categoryFormData, content: value })}\r\n                      placeholder=\"항목들을 한 줄씩 입력하세요&#10;예:&#10;매장인원 관리&#10;신규파트너 교육&#10;라떼아트 교육\"\r\n                      rows={8}\r\n                      className=\"min-h-[200px]\"\r\n                    />\r\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\r\n                      💡 한 줄에 하나씩 항목을 입력하세요 (Enter로 구분)\r\n                    </p>\r\n                  </>\r\n                )}\r\n                {currentLang === 'en' && (\r\n                  <>\r\n                    <RichTextEditor\r\n                      value={categoryFormData.contentEn}\r\n                      onChange={(value) => setCategoryFormData({ ...categoryFormData, contentEn: value })}\r\n                      placeholder=\"Enter items one per line&#10;e.g.&#10;Store Staff Management&#10;New Partner Training&#10;Latte Art Education\"\r\n                      rows={8}\r\n                      className=\"min-h-[200px]\"\r\n                    />\r\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\r\n                      💡 Enter one item per line (separated by Enter)\r\n                    </p>\r\n                  </>\r\n                )}\r\n                {currentLang === 'ja' && (\r\n                  <>\r\n                    <RichTextEditor\r\n                      value={categoryFormData.contentJa}\r\n                      onChange={(value) => setCategoryFormData({ ...categoryFormData, contentJa: value })}\r\n                      placeholder=\"1行に1項目を入力してください&#10;例:&#10;店舗スタッフ管理&#10;新規パートナー教育&#10;ラテアート教育\"\r\n                      rows={8}\r\n                      className=\"min-h-[200px]\"\r\n                    />\r\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\r\n                      💡 1行に1項目を入力してください (Enterで区切る)\r\n                    </p>\r\n                  </>\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"flex gap-3\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={saveDetailCategory}\r\n                  className=\"flex-1 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors flex items-center justify-center gap-2\"\r\n                >\r\n                  <FaSave />\r\n                  저장\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={cancelDetailCategory}\r\n                  className=\"px-4 py-2 bg-gray-500 hover:bg-gray-600 text-white rounded-lg transition-colors\"\r\n                >\r\n                  취소\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* 빈 상태 */}\r\n        {(!formData.details || formData.details.length === 0) && editingCategoryIndex === null && (\r\n          <div className=\"text-center py-6 bg-white dark:bg-gray-800 rounded-lg border-2 border-dashed border-gray-300 dark:border-gray-600\">\r\n            <p className=\"text-gray-500 dark:text-gray-400 text-sm mb-2\">\r\n              아직 카테고리가 없습니다\r\n            </p>\r\n            <p className=\"text-xs text-gray-400 dark:text-gray-500\">\r\n              상단의 \"카테고리 추가\" 버튼을 눌러 시작하세요\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          설명 (리치텍스트 에디터) - 선택사항\r\n        </label>\r\n        <p className=\"text-xs text-gray-500 dark:text-gray-400 mb-2\">\r\n          💡 위의 \"카테고리별 상세 내용\"을 사용하면 더 체계적으로 정리됩니다. 이 필드는 하위 호환성을 위해 유지됩니다.\r\n        </p>\r\n        <RichTextEditor\r\n          value={formData.description || ''}\r\n          onChange={(value) => setFormData({ ...formData, description: value })}\r\n          placeholder=\"(선택사항) 전체적인 설명을 작성하거나, 위의 카테고리별 입력을 사용하세요.\"\r\n          rows={4}\r\n          className=\"min-h-[150px]\"\r\n        />\r\n      </div>\r\n      {/* 🌟 스킬 연결 (체크박스) */}\r\n      <div className=\"md:col-span-2\">\r\n        <div className=\"flex items-center justify-between mb-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n            이 경력에서 사용한 스킬 🔗\r\n          </label>\r\n          {formData.skillIds && formData.skillIds.length > 0 && (\r\n            <span className=\"text-xs font-semibold text-blue-600 dark:text-blue-400 bg-blue-100 dark:bg-blue-900/30 px-2 py-1 rounded\">\r\n              ✓ {formData.skillIds.length}개 선택됨\r\n            </span>\r\n          )}\r\n        </div>\r\n        \r\n        {skillsLoading ? (\r\n          <div className=\"text-sm text-gray-500 dark:text-gray-400 py-2\">\r\n            스킬 목록을 불러오는 중입니다...\r\n          </div>\r\n        ) : skillCategories.length === 0 ? (\r\n          <div className=\"text-sm text-gray-500 dark:text-gray-400 py-4 text-center border border-gray-300 dark:border-gray-600 rounded-lg\">\r\n            등록된 스킬이 없습니다. 먼저 스킬을 추가해주세요.\r\n          </div>\r\n        ) : (\r\n          <div className=\"border border-gray-300 dark:border-gray-600 rounded-lg p-4 bg-gray-50 dark:bg-gray-800 max-h-[400px] overflow-y-auto\">\r\n            {skillCategories.map((category: SkillCategory) => {\r\n              const categorySkillIds = (category.skills || []).map(skill => skill._id!).filter(Boolean)\r\n              const currentSkillIds = formData.skillIds || []\r\n              const selectedCount = categorySkillIds.filter(id => currentSkillIds.includes(id)).length\r\n              const allSelected = categorySkillIds.length > 0 && selectedCount === categorySkillIds.length\r\n              const someSelected = selectedCount > 0 && selectedCount < categorySkillIds.length\r\n              \r\n              return (\r\n                <div key={category._id} className=\"mb-4 last:mb-0\">\r\n                  {/* 카테고리 헤더 (전체 선택/해제) */}\r\n                  <div \r\n                    className=\"flex items-center gap-2 mb-2 pb-2 border-b border-gray-300 dark:border-gray-600 cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700 p-2 rounded\"\r\n                    onClick={() => handleSkillCategoryToggle(category)}\r\n                  >\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={allSelected}\r\n                      ref={el => {\r\n                        if (el) {\r\n                          el.indeterminate = someSelected\r\n                        }\r\n                      }}\r\n                      onChange={() => handleSkillCategoryToggle(category)}\r\n                      className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\r\n                      onClick={(e) => e.stopPropagation()}\r\n                    />\r\n                    <label \r\n                      className=\"font-semibold text-gray-900 dark:text-white flex-1 cursor-pointer\"\r\n                      style={{ color: category.color || '#3B82F6' }}\r\n                    >\r\n                      {category.title}\r\n                      {selectedCount > 0 && (\r\n                        <span className=\"ml-2 text-xs font-normal text-gray-500 dark:text-gray-400\">\r\n                          ({selectedCount}/{categorySkillIds.length})\r\n                        </span>\r\n                      )}\r\n                    </label>\r\n                  </div>\r\n                  \r\n                  {/* 스킬 목록 */}\r\n                  <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2 pl-6\">\r\n                    {(category.skills || []).map((skill: Skill) => {\r\n                      const isSelected = (formData.skillIds || []).includes(skill._id!)\r\n                      \r\n                      return (\r\n                        <label\r\n                          key={skill._id}\r\n                          className={`flex items-center gap-2 p-2 rounded cursor-pointer transition-colors ${\r\n                            isSelected \r\n                              ? 'bg-blue-50 dark:bg-blue-900/20 border border-blue-300 dark:border-blue-700' \r\n                              : 'hover:bg-gray-100 dark:hover:bg-gray-700 border border-transparent'\r\n                          }`}\r\n                        >\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={isSelected}\r\n                            onChange={() => handleSkillToggle(skill._id!)}\r\n                            className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\r\n                          />\r\n                          <span className={`text-sm ${isSelected ? 'font-semibold text-blue-700 dark:text-blue-300' : 'text-gray-700 dark:text-gray-300'}`}>\r\n                            {skill.name}\r\n                          </span>\r\n                        </label>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        )}\r\n        \r\n        <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\r\n          💡 체크박스를 클릭하여 경력에서 사용한 스킬을 선택하세요. 카테고리 제목을 클릭하면 전체 선택/해제할 수 있습니다.\r\n        </p>\r\n      </div>\r\n      \r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          기술 (쉼표로 구분) - 선택사항\r\n          <span className=\"text-xs text-gray-500 ml-2\">\r\n            ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n          </span>\r\n        </label>\r\n        {currentLang === 'ko' && (\r\n          <input\r\n            type=\"text\"\r\n            value={skillsInput}\r\n            onChange={(e) => setSkillsInput(e.target.value)}\r\n            onBlur={() => {\r\n              const skillsArray = skillsInput.split(',').map((s) => s.trim()).filter(s => s.length > 0)\r\n              setFormData({ ...formData, skills: skillsArray })\r\n            }}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"PLC 프로그래밍, Python, 데이터 분석\"\r\n          />\r\n        )}\r\n        {currentLang === 'en' && (\r\n          <input\r\n            type=\"text\"\r\n            value={skillsInputEn}\r\n            onChange={(e) => setSkillsInputEn(e.target.value)}\r\n            onBlur={() => {\r\n              const skillsArray = skillsInputEn.split(',').map((s) => s.trim()).filter(s => s.length > 0)\r\n              setFormData({ ...formData, skillsEn: skillsArray })\r\n            }}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"PLC Programming, Python, Data Analysis\"\r\n          />\r\n        )}\r\n        {currentLang === 'ja' && (\r\n          <input\r\n            type=\"text\"\r\n            value={skillsInputJa}\r\n            onChange={(e) => setSkillsInputJa(e.target.value)}\r\n            onBlur={() => {\r\n              const skillsArray = skillsInputJa.split(',').map((s) => s.trim()).filter(s => s.length > 0)\r\n              setFormData({ ...formData, skillsJa: skillsArray })\r\n            }}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"PLCプログラミング、Python、データ分析\"\r\n          />\r\n        )}\r\n        <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n          💡 위의 스킬 체크박스를 사용하는 것을 권장합니다. 이 필드는 하위 호환성을 위해 유지됩니다.\r\n        </p>\r\n      </div>\r\n      {/* 🌟 최종 저장 안내 (카테고리 입력 중일 때) */}\r\n      {editingCategoryIndex !== null && (\r\n        <div className=\"bg-yellow-50 dark:bg-yellow-900/20 p-4 rounded-lg border-2 border-yellow-300 dark:border-yellow-700\">\r\n          <p className=\"text-sm text-yellow-800 dark:text-yellow-300 font-medium\">\r\n            ⚠️ 카테고리 입력 중입니다. 위의 \"저장\" 버튼을 먼저 눌러 카테고리를 저장하세요.\r\n          </p>\r\n        </div>\r\n      )}\r\n      \r\n      {/* 🌟 저장된 카테고리 요약 */}\r\n      {formData.details && formData.details.length > 0 && editingCategoryIndex === null && (\r\n        <div className=\"bg-green-50 dark:bg-green-900/20 p-4 rounded-lg border-2 border-green-300 dark:border-green-700\">\r\n          <p className=\"text-sm text-green-800 dark:text-green-300 font-medium mb-2\">\r\n            ✅ {formData.details.length}개의 카테고리가 준비되었습니다\r\n          </p>\r\n          <p className=\"text-xs text-green-700 dark:text-green-400\">\r\n            아래 \"저장\" 버튼을 눌러 경력 데이터를 최종 저장하세요\r\n          </p>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"flex gap-3 pt-4 border-t-2 border-gray-300 dark:border-gray-600\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSaving || !isFormValid || editingCategoryIndex !== null}\r\n          className={`flex-1 flex items-center justify-center gap-2 bg-primary-600 hover:bg-primary-700 text-white font-bold py-3 rounded-lg transition-colors text-lg ${\r\n            isSaving || !isFormValid || editingCategoryIndex !== null ? 'opacity-50 cursor-not-allowed' : 'shadow-lg'\r\n          }`}\r\n          title={editingCategoryIndex !== null ? '카테고리 입력을 먼저 완료하세요' : ''}\r\n        >\r\n          {isSaving ? (\r\n            <>\r\n              <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n              저장 중...\r\n            </>\r\n          ) : (\r\n            <>\r\n              <FaSave className=\"text-xl\" /> 최종 저장\r\n            </>\r\n          )}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={onCancel}\r\n          disabled={isSaving}\r\n          className={`flex-1 bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-900 dark:text-white font-medium py-3 rounded-lg transition-colors ${\r\n            isSaving ? 'opacity-50 cursor-not-allowed' : ''\r\n          }`}\r\n        >\r\n          취소\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ExperienceForm\r\n","import React from 'react'\r\nimport { FaSave, FaPlus, FaTrash, FaVideo, FaTimes } from 'react-icons/fa'\r\nimport { Project, ProjectFormData, Skill, SkillCategory } from '../../types'\r\nimport RichTextEditor from '../RichTextEditor'\r\nimport { useSkills } from '../../hooks/useSkills'\r\nimport { useCategories } from '../../hooks/useCategories'\r\nimport LanguageTabs from '../common/LanguageTabs'\r\nimport { useProjectForm } from '../../hooks/useProjectForm'\r\n\r\n// 폼 컴포넌트의 Props 타입 정의\r\ninterface FormProps {\r\n  data: Project | null\r\n  onSave: (data: ProjectFormData) => Promise<void>\r\n  onCancel: () => void\r\n  isSaving?: boolean\r\n}\r\n\r\nconst ProjectForm: React.FC<FormProps> = ({ data, onSave, onCancel, isSaving = false }) => {\r\n  // Use custom hook for form logic\r\n  const {\r\n    formData,\r\n    videoItems,\r\n    currentLang,\r\n    setCurrentLang,\r\n    setFormData,\r\n    handleVideoUrlChange,\r\n    handleVideoDescriptionChange,\r\n    handleAddVideo,\r\n    handleRemoveVideo,\r\n    prepareDataForSubmit\r\n  } = useProjectForm(data)\r\n  \r\n  // 🌟 모든 스킬 목록을 가져옵니다\r\n  const { skillCategories, loading: skillsLoading } = useSkills()\r\n  \r\n  // 🌟 카테고리 데이터 가져오기\r\n  const { data: categories = [], isLoading: categoriesLoading } = useCategories()\r\n\r\n  // 🌟 카테고리 선택/해제 핸들러 (체크박스용)\r\n  const handleCategoryToggle = (categoryId: string) => {\r\n    const currentCategoryIds = formData.categoryIds || []\r\n    const isSelected = currentCategoryIds.includes(categoryId)\r\n    \r\n    const newCategoryIds = isSelected\r\n      ? currentCategoryIds.filter((id: string) => id !== categoryId)\r\n      : [...currentCategoryIds, categoryId]\r\n    \r\n    setFormData({ \r\n      ...formData, \r\n      categoryIds: newCategoryIds \r\n    })\r\n  }\r\n\r\n  // 🌟 스킬 선택/해제 핸들러 (체크박스용)\r\n  const handleSkillToggle = (skillId: string) => {\r\n    const currentSkillIds = formData.skillIds || []\r\n    const isSelected = currentSkillIds.includes(skillId)\r\n    \r\n    const newSkillIds = isSelected\r\n      ? currentSkillIds.filter((id: string) => id !== skillId) // 선택 해제\r\n      : [...currentSkillIds, skillId] // 선택 추가\r\n    \r\n    console.log('🔧 스킬 변경:', { skillId, isSelected: !isSelected, newSkillIds })\r\n    setFormData({ \r\n      ...formData, \r\n      skillIds: newSkillIds \r\n    })\r\n  }\r\n  \r\n  // 🌟 스킬 카테고리 전체 선택/해제 핸들러\r\n  const handleSkillCategoryToggle = (category: SkillCategory) => {\r\n    const categorySkillIds = (category.skills || []).map(skill => skill._id!).filter(Boolean)\r\n    const currentSkillIds = formData.skillIds || []\r\n    \r\n    // 카테고리의 모든 스킬이 선택되어 있는지 확인\r\n    const allSelected = categorySkillIds.every((id: string) => currentSkillIds.includes(id))\r\n    \r\n    let newSkillIds: string[]\r\n    if (allSelected) {\r\n      // 모두 선택되어 있으면 전체 해제\r\n      newSkillIds = currentSkillIds.filter((id: string) => !categorySkillIds.includes(id))\r\n    } else {\r\n      // 일부만 선택되어 있거나 없으면 전체 선택\r\n      const uniqueIds = new Set([...currentSkillIds, ...categorySkillIds])\r\n      newSkillIds = Array.from(uniqueIds)\r\n    }\r\n    \r\n    console.log('📁 카테고리 전체 변경:', { category: category.title, allSelected: !allSelected, newSkillIds })\r\n    setFormData({ \r\n      ...formData, \r\n      skillIds: newSkillIds \r\n    })\r\n  }\r\n\r\n  const handleSaveClick = () => {\r\n    try {\r\n      console.log('💾 저장 시작 - videoItems:', videoItems)\r\n      console.log('🔗 선택된 스킬 IDs:', formData.skillIds)\r\n      \r\n      // Use hook's prepare function to process all data\r\n      const processedData = prepareDataForSubmit()\r\n      \r\n      console.log('✅ 최종 processedData:', processedData)\r\n      console.log('✅ 최종 skillIds:', processedData.skillIds)\r\n      onSave(processedData)\r\n    } catch (error: any) {\r\n      console.error('❌ 저장 중 오류 발생:', error)\r\n      alert(error.message || '저장 중 오류가 발생했습니다. 콘솔을 확인해주세요.')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">\r\n        {data ? '프로젝트 수정' : '프로젝트 추가'}\r\n      </h3>\r\n      \r\n      {/* Language Tabs */}\r\n      <LanguageTabs activeLanguage={currentLang} onChange={setCurrentLang} />\r\n\r\n      <div className=\"grid md:grid-cols-2 gap-4\">\r\n        {/* Title Field (Multilingual) */}\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            제목 {currentLang === 'ko' && <span className=\"text-red-500\">*</span>}\r\n            <span className=\"text-xs text-gray-500 ml-2\">\r\n              ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n            </span>\r\n          </label>\r\n          {currentLang === 'ko' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.title}\r\n              onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n              className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"프로젝트 제목\"\r\n              required\r\n            />\r\n          )}\r\n          {currentLang === 'en' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.titleEn || ''}\r\n              onChange={(e) => setFormData({ ...formData, titleEn: e.target.value })}\r\n              className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"Project Title\"\r\n            />\r\n          )}\r\n          {currentLang === 'ja' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.titleJa || ''}\r\n              onChange={(e) => setFormData({ ...formData, titleJa: e.target.value })}\r\n              className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"プロジェクトタイトル\"\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n            카테고리 선택 📂 (다중 선택 가능)\r\n          </label>\r\n\r\n          {/* 선택된 카테고리 태그 표시 */}\r\n          {formData.categoryIds && formData.categoryIds.length > 0 && (\r\n            <div className=\"flex flex-wrap gap-2 mb-3 p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\r\n              {formData.categoryIds.map((catId: string) => {\r\n                const category = categories.find(c => c._id === catId)\r\n                return category ? (\r\n                  <span\r\n                    key={catId}\r\n                    className=\"inline-flex items-center gap-1 px-3 py-1 bg-blue-600 text-white rounded-full text-sm\"\r\n                  >\r\n                    {category.name}\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => handleCategoryToggle(catId)}\r\n                      className=\"hover:bg-blue-700 rounded-full p-0.5\"\r\n                    >\r\n                      <FaTimes className=\"text-xs\" />\r\n                    </button>\r\n                  </span>\r\n                ) : null\r\n              })}\r\n            </div>\r\n          )}\r\n\r\n          {/* 카테고리 체크박스 목록 */}\r\n          {categoriesLoading ? (\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">카테고리 로딩 중...</p>\r\n          ) : categories.length > 0 ? (\r\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2\">\r\n              {categories.map((category) => {\r\n                const isSelected = (formData.categoryIds || []).includes(category._id)\r\n                return (\r\n                  <label\r\n                    key={category._id}\r\n                    className={`flex items-center gap-2 p-3 border-2 rounded-lg cursor-pointer transition-all ${\r\n                      isSelected\r\n                        ? 'border-primary-600 bg-primary-50 dark:bg-primary-900/20'\r\n                        : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600'\r\n                    }`}\r\n                  >\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={isSelected}\r\n                      onChange={() => handleCategoryToggle(category._id)}\r\n                      className=\"w-4 h-4\"\r\n                    />\r\n                    <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                      {category.name}\r\n                    </span>\r\n                  </label>\r\n                )\r\n              })}\r\n            </div>\r\n          ) : (\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              등록된 카테고리가 없습니다. 관리자 메뉴의 \"카테고리 관리\"에서 추가하세요.\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            상태\r\n          </label>\r\n          <select\r\n            value={formData.status}\r\n            onChange={(e) => setFormData({ ...formData, status: e.target.value as 'preparing' | 'planning' | 'completed' })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          >\r\n            <option value=\"preparing\">준비 중</option>\r\n            <option value=\"planning\">계획 중</option>\r\n            <option value=\"completed\">완료</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            GitHub URL\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.githubLink || ''}\r\n            onChange={(e) => setFormData({ ...formData, githubLink: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"https://github.com/...\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            Live URL\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.liveLink || ''}\r\n            onChange={(e) => setFormData({ ...formData, liveLink: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"https://...\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            이미지 URL\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.image}\r\n            onChange={(e) => setFormData({ ...formData, image: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"https://...\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            순서\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={formData.order}\r\n            onChange={(e) => setFormData({ ...formData, order: parseInt(e.target.value) })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          />\r\n        </div>\r\n\r\n        {/* 🌟 개선: 사용된 스킬 - 체크박스 UI */}\r\n        <div className=\"md:col-span-2\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n              사용된 스킬 (프로젝트 연동) 🔗\r\n            </label>\r\n            {formData.skillIds && formData.skillIds.length > 0 && (\r\n              <span className=\"text-xs font-semibold text-blue-600 dark:text-blue-400 bg-blue-100 dark:bg-blue-900/30 px-2 py-1 rounded\">\r\n                ✓ {formData.skillIds.length}개 선택됨\r\n              </span>\r\n            )}\r\n          </div>\r\n          \r\n          {skillsLoading ? (\r\n            <div className=\"text-sm text-gray-500 dark:text-gray-400 py-2\">\r\n              스킬 목록을 불러오는 중입니다...\r\n            </div>\r\n          ) : skillCategories.length === 0 ? (\r\n            <div className=\"text-sm text-gray-500 dark:text-gray-400 py-4 text-center border border-gray-300 dark:border-gray-600 rounded-lg\">\r\n              등록된 스킬이 없습니다. 먼저 스킬을 추가해주세요.\r\n            </div>\r\n          ) : (\r\n            <div className=\"border border-gray-300 dark:border-gray-600 rounded-lg p-4 bg-gray-50 dark:bg-gray-800 max-h-[400px] overflow-y-auto\">\r\n              {skillCategories.map((category: SkillCategory) => {\r\n                const categorySkillIds = (category.skills || []).map(skill => skill._id!).filter(Boolean)\r\n                const selectedCount = categorySkillIds.filter(id => (formData.skillIds || []).includes(id)).length\r\n                const allSelected = categorySkillIds.length > 0 && selectedCount === categorySkillIds.length\r\n                const someSelected = selectedCount > 0 && selectedCount < categorySkillIds.length\r\n                \r\n                return (\r\n                  <div key={category._id} className=\"mb-4 last:mb-0\">\r\n                    {/* 카테고리 헤더 (전체 선택/해제) */}\r\n                    <div \r\n                      className=\"flex items-center gap-2 mb-2 pb-2 border-b border-gray-300 dark:border-gray-600 cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700 p-2 rounded\"\r\n                      onClick={() => handleSkillCategoryToggle(category)}\r\n                    >\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={allSelected}\r\n                        ref={el => {\r\n                          if (el) {\r\n                            el.indeterminate = someSelected\r\n                          }\r\n                        }}\r\n                        onChange={() => handleSkillCategoryToggle(category)}\r\n                        className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\r\n                        onClick={(e) => e.stopPropagation()}\r\n                      />\r\n                      <label \r\n                        className=\"font-semibold text-gray-900 dark:text-white flex-1 cursor-pointer\"\r\n                        style={{ color: category.color || '#3B82F6' }}\r\n                      >\r\n                        {category.title}\r\n                        {selectedCount > 0 && (\r\n                          <span className=\"ml-2 text-xs font-normal text-gray-500 dark:text-gray-400\">\r\n                            ({selectedCount}/{categorySkillIds.length})\r\n                          </span>\r\n                        )}\r\n                      </label>\r\n                    </div>\r\n                    \r\n                    {/* 스킬 목록 */}\r\n                    <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2 pl-6\">\r\n                      {(category.skills || []).map((skill: Skill) => {\r\n                        const isSelected = (formData.skillIds || []).includes(skill._id!)\r\n                        \r\n                        return (\r\n                          <label\r\n                            key={skill._id}\r\n                            className={`flex items-center gap-2 p-2 rounded cursor-pointer transition-colors ${\r\n                              isSelected \r\n                                ? 'bg-blue-50 dark:bg-blue-900/20 border border-blue-300 dark:border-blue-700' \r\n                                : 'hover:bg-gray-100 dark:hover:bg-gray-700 border border-transparent'\r\n                            }`}\r\n                          >\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              checked={isSelected}\r\n                              onChange={() => handleSkillToggle(skill._id!)}\r\n                              className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\r\n                            />\r\n                            <span className={`text-sm ${isSelected ? 'font-semibold text-blue-700 dark:text-blue-300' : 'text-gray-700 dark:text-gray-300'}`}>\r\n                              {skill.name}\r\n                            </span>\r\n                          </label>\r\n                        )\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          )}\r\n          \r\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\r\n            💡 체크박스를 클릭하여 프로젝트에서 사용한 스킬을 선택하세요. 카테고리 제목을 클릭하면 전체 선택/해제할 수 있습니다.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      {/* Description Field (Multilingual) */}\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          설명 (리치텍스트 에디터)\r\n          <span className=\"text-xs text-gray-500 ml-2\">\r\n            ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n          </span>\r\n        </label>\r\n        {currentLang === 'ko' && (\r\n          <RichTextEditor\r\n            value={formData.description || ''}\r\n            onChange={(value) => setFormData({ ...formData, description: value })}\r\n            placeholder=\"프로젝트에 대한 간단한 설명을 작성하세요.\"\r\n            rows={4}\r\n            className=\"min-h-[150px]\"\r\n          />\r\n        )}\r\n        {currentLang === 'en' && (\r\n          <RichTextEditor\r\n            value={formData.descriptionEn || ''}\r\n            onChange={(value) => setFormData({ ...formData, descriptionEn: value })}\r\n            placeholder=\"Write a brief description of the project.\"\r\n            rows={4}\r\n            className=\"min-h-[150px]\"\r\n          />\r\n        )}\r\n        {currentLang === 'ja' && (\r\n          <RichTextEditor\r\n            value={formData.descriptionJa || ''}\r\n            onChange={(value) => setFormData({ ...formData, descriptionJa: value })}\r\n            placeholder=\"プロジェクトの簡単な説明を書いてください。\"\r\n            rows={4}\r\n            className=\"min-h-[150px]\"\r\n          />\r\n        )}\r\n      </div>\r\n      {/* Technologies Field (Multilingual) */}\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          기술 스택 (쉼표 또는 줄바꿈으로 구분)\r\n          <span className=\"text-xs text-gray-500 ml-2\">\r\n            ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n          </span>\r\n        </label>\r\n        {currentLang === 'ko' && (\r\n          <textarea\r\n            value={typeof formData.technologies === 'string' ? formData.technologies : (Array.isArray(formData.technologies) ? formData.technologies.join('\\n') : '')}\r\n            onChange={(e) => setFormData({ ...formData, technologies: e.target.value })}\r\n            rows={3}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\r\n            placeholder=\"PLC, Python, Arduino\"\r\n          />\r\n        )}\r\n        {currentLang === 'en' && (\r\n          <textarea\r\n            value={typeof formData.technologiesEn === 'string' ? formData.technologiesEn : (Array.isArray(formData.technologiesEn) ? formData.technologiesEn.join('\\n') : '')}\r\n            onChange={(e) => setFormData({ ...formData, technologiesEn: e.target.value })}\r\n            rows={3}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\r\n            placeholder=\"PLC, Python, Arduino\"\r\n          />\r\n        )}\r\n        {currentLang === 'ja' && (\r\n          <textarea\r\n            value={typeof formData.technologiesJa === 'string' ? formData.technologiesJa : (Array.isArray(formData.technologiesJa) ? formData.technologiesJa.join('\\n') : '')}\r\n            onChange={(e) => setFormData({ ...formData, technologiesJa: e.target.value })}\r\n            rows={3}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\r\n            placeholder=\"PLC, Python, Arduino\"\r\n          />\r\n        )}\r\n      </div>\r\n      \r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          추가 이미지 URLs (줄바꿈으로 구분)\r\n        </label>\r\n        <textarea\r\n          value={typeof formData.images === 'string' ? formData.images : (Array.isArray(formData.images) ? formData.images.join('\\n') : '')}\r\n          onChange={(e) => {\r\n            const value = e.target.value\r\n            setFormData({\r\n              ...formData,\r\n              images: value, // 원본 텍스트를 그대로 저장\r\n            })\r\n          }}\r\n          rows={3}\r\n          className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\r\n          placeholder=\"https://example.com/image1.jpg\r\nhttps://example.com/image2.jpg\"\r\n        />\r\n      </div>\r\n\r\n      {/* 🌟 영상 관리 섹션 (개선된 UI) */}\r\n      <div className=\"border border-gray-300 dark:border-gray-600 rounded-lg p-6 space-y-4 bg-gray-50 dark:bg-gray-800\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <label className=\"block text-lg font-semibold text-gray-900 dark:text-white flex items-center gap-2\">\r\n            <FaVideo className=\"text-blue-600 dark:text-blue-400\" />\r\n            동영상 관리\r\n          </label>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleAddVideo}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors text-sm font-medium\"\r\n          >\r\n            <FaPlus /> 영상 추가\r\n          </button>\r\n        </div>\r\n\r\n        {videoItems.length === 0 ? (\r\n          <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\r\n            <FaVideo className=\"text-4xl mx-auto mb-2 opacity-50\" />\r\n            <p>아직 추가된 영상이 없습니다.</p>\r\n            <p className=\"text-sm mt-1\">위의 \"영상 추가\" 버튼을 클릭하여 영상을 추가하세요.</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"space-y-6\">\r\n            {videoItems.map((item, index) => (\r\n              <div key={index} className=\"border border-gray-200 dark:border-gray-700 rounded-lg p-4 bg-white dark:bg-gray-900 space-y-4\">\r\n                {/* 헤더 */}\r\n                <div className=\"flex items-center justify-between\">\r\n                  <h4 className=\"text-md font-semibold text-gray-900 dark:text-white flex items-center gap-2\">\r\n                    <span className=\"flex items-center justify-center w-8 h-8 bg-blue-100 dark:bg-blue-900 text-blue-600 dark:text-blue-300 rounded-full text-sm font-bold\">\r\n                      {index + 1}\r\n                    </span>\r\n                    영상 {index + 1}\r\n                  </h4>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => handleRemoveVideo(index)}\r\n                    className=\"flex items-center gap-1 px-3 py-1 text-red-600 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-lg transition-colors text-sm\"\r\n                  >\r\n                    <FaTrash /> 삭제\r\n                  </button>\r\n                </div>\r\n\r\n                {/* 영상 URL 입력 */}\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    영상 URL *\r\n                  </label>\r\n                  <input\r\n                    type=\"url\"\r\n                    value={item.url}\r\n                    onChange={(e) => handleVideoUrlChange(index, e.target.value)}\r\n                    placeholder=\"https://youtube.com/watch?v=... 또는 https://youtube.com/shorts/...\"\r\n                    className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                  />\r\n                </div>\r\n\r\n                {/* 영상 설명 (RichTextEditor - 다국어) */}\r\n                <div>\r\n                  <div className=\"flex items-center justify-between mb-2\">\r\n                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                      영상 설명 (리치텍스트)\r\n                      <span className=\"text-xs text-gray-500 ml-2\">\r\n                        ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n                      </span>\r\n                    </label>\r\n                    <span className={`text-xs ${\r\n                      (currentLang === 'ko' ? item.description.length : currentLang === 'en' ? item.descriptionEn.length : item.descriptionJa.length) > 5000 \r\n                        ? 'text-red-600 dark:text-red-400 font-bold' \r\n                        : (currentLang === 'ko' ? item.description.length : currentLang === 'en' ? item.descriptionEn.length : item.descriptionJa.length) > 4000\r\n                        ? 'text-orange-600 dark:text-orange-400'\r\n                        : 'text-gray-500 dark:text-gray-400'\r\n                    }`}>\r\n                      {currentLang === 'ko' ? item.description.length : currentLang === 'en' ? item.descriptionEn.length : item.descriptionJa.length} / 5000자\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  {currentLang === 'ko' && (\r\n                    <RichTextEditor\r\n                      value={item.description}\r\n                      onChange={(value) => handleVideoDescriptionChange(index, value, 'ko')}\r\n                      placeholder=\"이 영상에 대한 상세한 설명을 작성하세요. 굵게, 기울임, 리스트 등 다양한 서식을 사용할 수 있습니다.\"\r\n                      rows={4}\r\n                      className=\"min-h-[150px]\"\r\n                    />\r\n                  )}\r\n                  \r\n                  {currentLang === 'en' && (\r\n                    <RichTextEditor\r\n                      value={item.descriptionEn}\r\n                      onChange={(value) => handleVideoDescriptionChange(index, value, 'en')}\r\n                      placeholder=\"Write a detailed description of this video. You can use bold, italic, lists, and other formatting.\"\r\n                      rows={4}\r\n                      className=\"min-h-[150px]\"\r\n                    />\r\n                  )}\r\n                  \r\n                  {currentLang === 'ja' && (\r\n                    <RichTextEditor\r\n                      value={item.descriptionJa}\r\n                      onChange={(value) => handleVideoDescriptionChange(index, value, 'ja')}\r\n                      placeholder=\"この動画の詳細な説明を書いてください。太字、斜体、リストなどの書式を使用できます。\"\r\n                      rows={4}\r\n                      className=\"min-h-[150px]\"\r\n                    />\r\n                  )}\r\n                  \r\n                  <div className=\"flex items-center justify-between mt-1\">\r\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                      💡 이 설명은 프로젝트 상세 페이지에서 영상 하단에 표시됩니다.\r\n                    </p>\r\n                    {(currentLang === 'ko' ? item.description.length : currentLang === 'en' ? item.descriptionEn.length : item.descriptionJa.length) > 4000 && (\r\n                      <p className=\"text-xs text-orange-600 dark:text-orange-400\">\r\n                        ⚠️ 글자 수가 많습니다. 간결하게 작성해주세요.\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Detailed Description Field (Multilingual) */}\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          상세 설명 (리치텍스트 에디터)\r\n          <span className=\"text-xs text-gray-500 ml-2\">\r\n            ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n          </span>\r\n        </label>\r\n        {currentLang === 'ko' && (\r\n          <RichTextEditor\r\n            value={formData.detailedDescription || ''}\r\n            onChange={(value) => setFormData({ ...formData, detailedDescription: value })}\r\n            placeholder=\"프로젝트의 상세한 설명을 작성해주세요.\"\r\n            rows={6}\r\n            className=\"min-h-[200px]\"\r\n          />\r\n        )}\r\n        {currentLang === 'en' && (\r\n          <RichTextEditor\r\n            value={formData.detailedDescriptionEn || ''}\r\n            onChange={(value) => setFormData({ ...formData, detailedDescriptionEn: value })}\r\n            placeholder=\"Write a detailed description of the project.\"\r\n            rows={6}\r\n            className=\"min-h-[200px]\"\r\n          />\r\n        )}\r\n        {currentLang === 'ja' && (\r\n          <RichTextEditor\r\n            value={formData.detailedDescriptionJa || ''}\r\n            onChange={(value) => setFormData({ ...formData, detailedDescriptionJa: value })}\r\n            placeholder=\"プロジェクトの詳細な説明を書いてください。\"\r\n            rows={6}\r\n            className=\"min-h-[200px]\"\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      {/* Features Field (Multilingual) */}\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          주요 기능 (줄바꿈으로 구분)\r\n          <span className=\"text-xs text-gray-500 ml-2\">\r\n            ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n          </span>\r\n        </label>\r\n        {currentLang === 'ko' && (\r\n          <textarea\r\n            value={typeof formData.features === 'string' ? formData.features : (Array.isArray(formData.features) ? formData.features.join('\\n') : '')}\r\n            onChange={(e) => setFormData({ ...formData, features: e.target.value })}\r\n            rows={4}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\r\n            placeholder=\"실시간 모니터링&#10;데이터 수집 및 분석&#10;알림 시스템\"\r\n          />\r\n        )}\r\n        {currentLang === 'en' && (\r\n          <textarea\r\n            value={typeof formData.featuresEn === 'string' ? formData.featuresEn : (Array.isArray(formData.featuresEn) ? formData.featuresEn.join('\\n') : '')}\r\n            onChange={(e) => setFormData({ ...formData, featuresEn: e.target.value })}\r\n            rows={4}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\r\n            placeholder=\"Real-time monitoring&#10;Data collection and analysis&#10;Alert system\"\r\n          />\r\n        )}\r\n        {currentLang === 'ja' && (\r\n          <textarea\r\n            value={typeof formData.featuresJa === 'string' ? formData.featuresJa : (Array.isArray(formData.featuresJa) ? formData.featuresJa.join('\\n') : '')}\r\n            onChange={(e) => setFormData({ ...formData, featuresJa: e.target.value })}\r\n            rows={4}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\r\n            placeholder=\"リアルタイム監視&#10;データ収集と分析&#10;通知システム\"\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      {/* Learnings Field (Multilingual) */}\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          학습 내용 (줄바꿈으로 구분)\r\n          <span className=\"text-xs text-gray-500 ml-2\">\r\n            ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n          </span>\r\n        </label>\r\n        {currentLang === 'ko' && (\r\n          <textarea\r\n            value={typeof formData.learnings === 'string' ? formData.learnings : (Array.isArray(formData.learnings) ? formData.learnings.join('\\n') : '')}\r\n            onChange={(e) => setFormData({ ...formData, learnings: e.target.value })}\r\n            rows={4}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\r\n            placeholder=\"PLC 프로그래밍 기법&#10;실시간 데이터 처리&#10;웹 기반 대시보드 구축\"\r\n          />\r\n        )}\r\n        {currentLang === 'en' && (\r\n          <textarea\r\n            value={typeof formData.learningsEn === 'string' ? formData.learningsEn : (Array.isArray(formData.learningsEn) ? formData.learningsEn.join('\\n') : '')}\r\n            onChange={(e) => setFormData({ ...formData, learningsEn: e.target.value })}\r\n            rows={4}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\r\n            placeholder=\"PLC programming techniques&#10;Real-time data processing&#10;Web-based dashboard development\"\r\n          />\r\n        )}\r\n        {currentLang === 'ja' && (\r\n          <textarea\r\n            value={typeof formData.learningsJa === 'string' ? formData.learningsJa : (Array.isArray(formData.learningsJa) ? formData.learningsJa.join('\\n') : '')}\r\n            onChange={(e) => setFormData({ ...formData, learningsJa: e.target.value })}\r\n            rows={4}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\r\n            placeholder=\"PLCプログラミング技術&#10;リアルタイムデータ処理&#10;Webベースダッシュボード開発\"\r\n          />\r\n        )}\r\n      </div>\r\n      <div className=\"flex gap-3 pt-4\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleSaveClick}\r\n          disabled={isSaving}\r\n          className={`flex-1 flex items-center justify-center gap-2 bg-primary-600 hover:bg-primary-700 text-white font-medium py-2 rounded-lg transition-colors ${\r\n            isSaving ? 'opacity-50 cursor-not-allowed' : ''\r\n          }`}\r\n        >\r\n          {isSaving ? (\r\n            <>\r\n              <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n              저장 중...\r\n            </>\r\n          ) : (\r\n            <>\r\n              <FaSave /> 저장\r\n            </>\r\n          )}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={onCancel}\r\n          className=\"flex-1 bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-900 dark:text-white font-medium py-2 rounded-lg transition-colors\"\r\n        >\r\n          취소\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport { SkillCategory, SkillCategoryFormData } from '../../types'\r\nimport LanguageTabs, { AdminLanguage } from '../common/LanguageTabs'\r\n\r\ninterface SkillCategoryFormProps {\r\n  initialData?: SkillCategory | null\r\n  onSave: (data: SkillCategoryFormData) => void\r\n  onCancel: () => void\r\n  isSaving?: boolean\r\n}\r\n\r\nconst SkillCategoryForm: React.FC<SkillCategoryFormProps> = ({\r\n  initialData,\r\n  onSave,\r\n  onCancel,\r\n  isSaving = false\r\n}) => {\r\n  const [currentLang, setCurrentLang] = useState<AdminLanguage>('ko')\r\n  const [formData, setFormData] = useState<SkillCategoryFormData>({\r\n    title: '',\r\n    titleEn: '',\r\n    titleJa: '',\r\n    description: '',\r\n    descriptionEn: '',\r\n    descriptionJa: '',\r\n    color: '#3B82F6',\r\n    order: 0\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (initialData) {\r\n      setFormData({\r\n        title: initialData.title,\r\n        titleEn: initialData.titleEn || '',\r\n        titleJa: initialData.titleJa || '',\r\n        description: initialData.description || '',\r\n        descriptionEn: initialData.descriptionEn || '',\r\n        descriptionJa: initialData.descriptionJa || '',\r\n        color: initialData.color,\r\n        order: initialData.order\r\n      })\r\n    }\r\n  }, [initialData])\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    console.log('📋 폼 제출:', formData)\r\n    onSave(formData)\r\n  }\r\n\r\n  const handleChange = (field: keyof SkillCategoryFormData, value: string | number) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }))\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg border border-gray-200 dark:border-gray-700 mb-6\">\r\n      <h3 className=\"text-lg font-semibold mb-4\">\r\n        {initialData ? '카테고리 수정' : '새 카테고리 추가'}\r\n      </h3>\r\n      \r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        {/* Language Tabs */}\r\n        <LanguageTabs activeLanguage={currentLang} onChange={setCurrentLang} />\r\n\r\n        {/* Title Field (Multilingual) */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-2\">\r\n            제목 {currentLang === 'ko' && <span className=\"text-red-500\">*</span>}\r\n            <span className=\"text-xs text-gray-500 ml-2\">\r\n              ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n            </span>\r\n          </label>\r\n          {currentLang === 'ko' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.title}\r\n              onChange={(e) => handleChange('title', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"예: 프로그래밍 언어\"\r\n              required\r\n            />\r\n          )}\r\n          {currentLang === 'en' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.titleEn || ''}\r\n              onChange={(e) => handleChange('titleEn', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"e.g., Programming Languages\"\r\n            />\r\n          )}\r\n          {currentLang === 'ja' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.titleJa || ''}\r\n              onChange={(e) => handleChange('titleJa', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"例: プログラミング言語\"\r\n            />\r\n          )}\r\n        </div>\r\n        \r\n        {/* Description Field (Multilingual) */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-2\">\r\n            설명\r\n            <span className=\"text-xs text-gray-500 ml-2\">\r\n              ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n            </span>\r\n          </label>\r\n          {currentLang === 'ko' && (\r\n            <textarea\r\n              value={formData.description}\r\n              onChange={(e) => handleChange('description', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              rows={3}\r\n              placeholder=\"카테고리에 대한 설명을 입력하세요\"\r\n            />\r\n          )}\r\n          {currentLang === 'en' && (\r\n            <textarea\r\n              value={formData.descriptionEn || ''}\r\n              onChange={(e) => handleChange('descriptionEn', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              rows={3}\r\n              placeholder=\"Enter description for this category\"\r\n            />\r\n          )}\r\n          {currentLang === 'ja' && (\r\n            <textarea\r\n              value={formData.descriptionJa || ''}\r\n              onChange={(e) => handleChange('descriptionJa', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              rows={3}\r\n              placeholder=\"このカテゴリの説明を入力してください\"\r\n            />\r\n          )}\r\n        </div>\r\n        \r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-2\">색상</label>\r\n          <input\r\n            type=\"color\"\r\n            value={formData.color}\r\n            onChange={(e) => handleChange('color', e.target.value)}\r\n            className=\"w-12 h-10 border border-gray-300 dark:border-gray-600 rounded-md\"\r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-2\">순서 (고급 옵션)</label>\r\n          <input\r\n            type=\"number\"\r\n            value={formData.order}\r\n            onChange={(e) => handleChange('order', parseInt(e.target.value) || 0)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            min=\"0\"\r\n          />\r\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n            💡 카테고리 목록에서 드래그하여 순서를 변경할 수 있습니다\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"flex gap-2\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isSaving}\r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50\"\r\n          >\r\n            {isSaving ? '저장 중...' : '저장'}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onCancel}\r\n            className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\r\n          >\r\n            취소\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SkillCategoryForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Skill, SkillFormData } from '../../types'\r\nimport DynamicIcon from '../common/DynamicIcon'\r\nimport LanguageTabs, { AdminLanguage } from '../common/LanguageTabs'\r\n\r\ninterface SkillFormProps {\r\n  initialData?: Skill | null\r\n  categoryId?: string | undefined\r\n  onSave: (data: SkillFormData) => void\r\n  onCancel: () => void\r\n  isSaving?: boolean\r\n}\r\n\r\nconst SkillForm: React.FC<SkillFormProps> = ({\r\n  initialData,\r\n  onSave,\r\n  onCancel,\r\n  isSaving = false\r\n}) => {\r\n  const [currentLang, setCurrentLang] = useState<AdminLanguage>('ko')\r\n  const [formData, setFormData] = useState<SkillFormData>({\r\n    name: '',\r\n    nameEn: '',\r\n    nameJa: '',\r\n    level: 50, // 새 스킬 생성 시 기본 숙련도\r\n    icon: 'FaMicrochip',\r\n    description: '',\r\n    descriptionEn: '',\r\n    descriptionJa: '',\r\n    order: 0\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (initialData) {\r\n      setFormData({\r\n        name: initialData.name,\r\n        nameEn: initialData.nameEn || '',\r\n        nameJa: initialData.nameJa || '',\r\n        level: initialData.level, // 기존 스킬의 숙련도 유지 (목록에서 조절)\r\n        icon: initialData.icon,\r\n        description: initialData.description || '',\r\n        descriptionEn: initialData.descriptionEn || '',\r\n        descriptionJa: initialData.descriptionJa || '',\r\n        order: initialData.order\r\n      })\r\n    }\r\n  }, [initialData])\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    onSave(formData)\r\n  }\r\n\r\n  const handleChange = (field: keyof SkillFormData, value: string | number) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }))\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg border border-gray-200 dark:border-gray-700 mb-6\">\r\n      <h3 className=\"text-lg font-semibold mb-4\">\r\n        {initialData ? '스킬 수정' : '새 스킬 추가'}\r\n      </h3>\r\n      \r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        {/* Language Tabs */}\r\n        <LanguageTabs activeLanguage={currentLang} onChange={setCurrentLang} />\r\n\r\n        {/* Name Field (Multilingual) */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-2\">\r\n            이름 {currentLang === 'ko' && <span className=\"text-red-500\">*</span>}\r\n            <span className=\"text-xs text-gray-500 ml-2\">\r\n              ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n            </span>\r\n          </label>\r\n          {currentLang === 'ko' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.name}\r\n              onChange={(e) => handleChange('name', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"예: Python, React, PLC\"\r\n              required\r\n            />\r\n          )}\r\n          {currentLang === 'en' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.nameEn || ''}\r\n              onChange={(e) => handleChange('nameEn', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"e.g., Python, React, PLC\"\r\n            />\r\n          )}\r\n          {currentLang === 'ja' && (\r\n            <input\r\n              type=\"text\"\r\n              value={formData.nameJa || ''}\r\n              onChange={(e) => handleChange('nameJa', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"例: Python, React, PLC\"\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        {/* Description Field (Multilingual) */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-2\">\r\n            설명 (선택사항)\r\n            <span className=\"text-xs text-gray-500 ml-2\">\r\n              ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n            </span>\r\n          </label>\r\n          {currentLang === 'ko' && (\r\n            <textarea\r\n              value={formData.description || ''}\r\n              onChange={(e) => handleChange('description', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              rows={3}\r\n              placeholder=\"스킬에 대한 간단한 설명\"\r\n            />\r\n          )}\r\n          {currentLang === 'en' && (\r\n            <textarea\r\n              value={formData.descriptionEn || ''}\r\n              onChange={(e) => handleChange('descriptionEn', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              rows={3}\r\n              placeholder=\"Brief description of this skill\"\r\n            />\r\n          )}\r\n          {currentLang === 'ja' && (\r\n            <textarea\r\n              value={formData.descriptionJa || ''}\r\n              onChange={(e) => handleChange('descriptionJa', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              rows={3}\r\n              placeholder=\"このスキルの簡単な説明\"\r\n            />\r\n          )}\r\n        </div>\r\n        \r\n        {/* 🌟 숙련도는 기술 관리 목록의 인라인 슬라이더로 조절합니다 */}\r\n        \r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-2\">아이콘</label>\r\n          <div className=\"flex items-center gap-3 mb-2\">\r\n            <div className=\"text-lg text-blue-600 dark:text-blue-400\">\r\n              <DynamicIcon iconName={formData.icon} size={20} />\r\n            </div>\r\n            <span className=\"text-sm text-gray-600 dark:text-gray-400\">미리보기</span>\r\n          </div>\r\n          <select\r\n            value={formData.icon}\r\n            onChange={(e) => handleChange('icon', e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          >\r\n            <optgroup label=\"프로그래밍 언어\">\r\n              <option value=\"FaPython\">Python</option>\r\n              <option value=\"SiJavascript\">JavaScript</option>\r\n              <option value=\"SiTypescript\">TypeScript</option>\r\n              <option value=\"SiC\">C</option>\r\n              <option value=\"SiCplusplus\">C++</option>\r\n              <option value=\"SiCsharp\">C#</option>\r\n              <option value=\"SiGo\">Go</option>\r\n              <option value=\"SiRust\">Rust</option>\r\n              <option value=\"SiJava\">Java</option>\r\n              <option value=\"SiPhp\">PHP</option>\r\n              <option value=\"SiRuby\">Ruby</option>\r\n              <option value=\"SiSwift\">Swift</option>\r\n              <option value=\"SiKotlin\">Kotlin</option>\r\n            </optgroup>\r\n            <optgroup label=\"프레임워크 & 라이브러리\">\r\n              <option value=\"SiReact\">React</option>\r\n              <option value=\"SiNodedotjs\">Node.js</option>\r\n              <option value=\"SiVuedotjs\">Vue.js</option>\r\n              <option value=\"SiAngular\">Angular</option>\r\n              <option value=\"SiNextdotjs\">Next.js</option>\r\n              <option value=\"SiExpress\">Express</option>\r\n              <option value=\"SiDjango\">Django</option>\r\n              <option value=\"SiFlask\">Flask</option>\r\n              <option value=\"SiSpring\">Spring</option>\r\n            </optgroup>\r\n            <optgroup label=\"데이터베이스\">\r\n              <option value=\"FaDatabase\">Database</option>\r\n              <option value=\"SiMysql\">MySQL</option>\r\n              <option value=\"SiMongodb\">MongoDB</option>\r\n              <option value=\"SiPostgresql\">PostgreSQL</option>\r\n              <option value=\"SiRedis\">Redis</option>\r\n              <option value=\"SiSqlite\">SQLite</option>\r\n            </optgroup>\r\n            <optgroup label=\"자동화 & 하드웨어\">\r\n              <option value=\"FaMicrochip\">Microchip</option>\r\n              <option value=\"FaRobot\">Robot</option>\r\n              <option value=\"SiArduino\">Arduino</option>\r\n              <option value=\"SiRaspberrypi\">Raspberry Pi</option>\r\n              <option value=\"SiSiemens\">Siemens</option>\r\n              <option value=\"SiMitsubishi\">Mitsubishi</option>\r\n            </optgroup>\r\n            <optgroup label=\"개발 도구\">\r\n              <option value=\"FaCode\">Code</option>\r\n              <option value=\"FaServer\">Server</option>\r\n              <option value=\"SiDocker\">Docker</option>\r\n              <option value=\"SiGit\">Git</option>\r\n              <option value=\"SiLinux\">Linux</option>\r\n              <option value=\"SiGithub\">GitHub</option>\r\n              <option value=\"SiGitlab\">GitLab</option>\r\n              <option value=\"SiVisualstudiocode\">VS Code</option>\r\n            </optgroup>\r\n            <optgroup label=\"언어\">\r\n              <option value=\"FaLanguage\">언어 일반</option>\r\n              <option value=\"FaGlobeAsia\">일본어</option>\r\n              <option value=\"FaGlobeEurope\">독일어</option>\r\n              <option value=\"FaFlag\">러시아어</option>\r\n              <option value=\"FaFlagCheckered\">한국어</option>\r\n              <option value=\"FaGlobe\">에스토니아어</option>\r\n              <option value=\"FaFont\">중국어</option>\r\n              <option value=\"FaComment\">영어</option>\r\n            </optgroup>\r\n            <optgroup label=\"학문 & 전공\">\r\n              <option value=\"FaLaptopCode\">컴퓨터공학</option>\r\n              <option value=\"FaChartBar\">통계학</option>\r\n              <option value=\"FaCalculator\">수학</option>\r\n              <option value=\"FaSquareRootAlt\">수학 (고급)</option>\r\n              <option value=\"FaUniversity\">대학/학술</option>\r\n              <option value=\"FaGraduationCap\">졸업/학위</option>\r\n            </optgroup>\r\n            <optgroup label=\"공학\">\r\n              <option value=\"FaCogs\">공학 일반</option>\r\n              <option value=\"FaTools\">기계공학</option>\r\n              <option value=\"FaWrench\">기계설계</option>\r\n              <option value=\"FaBolt\">전기공학</option>\r\n              <option value=\"FaPlug\">전력공학</option>\r\n              <option value=\"FaMicrochip\">전자공학</option>\r\n              <option value=\"FaHardHat\">토목공학</option>\r\n              <option value=\"FaBuilding\">건축공학</option>\r\n              <option value=\"FaIndustry\">산업공학</option>\r\n              <option value=\"FaChartLine\">경영공학</option>\r\n              <option value=\"FaFlask\">화학공학</option>\r\n              <option value=\"FaCubes\">재료공학</option>\r\n              <option value=\"FaPlane\">항공공학</option>\r\n              <option value=\"FaRocket\">우주공학</option>\r\n              <option value=\"FaLeaf\">환경공학</option>\r\n              <option value=\"FaRecycle\">자원공학</option>\r\n              <option value=\"FaDna\">생명공학</option>\r\n              <option value=\"FaOilCan\">석유공학</option>\r\n              <option value=\"FaFire\">에너지공학</option>\r\n              <option value=\"FaShieldAlt\">안전공학</option>\r\n            </optgroup>\r\n            <optgroup label=\"과학\">\r\n              <option value=\"FaAtom\">원자/물리학</option>\r\n              <option value=\"FaFlask\">화학/실험</option>\r\n              <option value=\"FaMicroscope\">생물학/연구</option>\r\n              <option value=\"FaDna\">DNA/유전학</option>\r\n              <option value=\"FaRocket\">우주/항공</option>\r\n              <option value=\"FaSatellite\">위성/통신</option>\r\n              <option value=\"FaBrain\">뇌과학/심리학</option>\r\n              <option value=\"FaLightbulb\">발명/혁신</option>\r\n              <option value=\"FaWaveSquare\">전자/전기공학</option>\r\n              <option value=\"FaMagnet\">자기학/물리</option>\r\n            </optgroup>\r\n            <optgroup label=\"예술 & 취미\">\r\n              <option value=\"FaPalette\">미술</option>\r\n              <option value=\"FaPaintBrush\">그림</option>\r\n              <option value=\"FaCamera\">사진</option>\r\n              <option value=\"FaCameraRetro\">사진 (레트로)</option>\r\n              <option value=\"FaCoffee\">커피</option>\r\n              <option value=\"FaMugHot\">커피 (머그)</option>\r\n              <option value=\"FaMusic\">음악</option>\r\n              <option value=\"FaGuitar\">악기</option>\r\n              <option value=\"FaFilm\">영화/영상</option>\r\n            </optgroup>\r\n            <optgroup label=\"경력 & 경험\">\r\n              <option value=\"FaUserShield\">군인</option>\r\n              <option value=\"FaShieldAlt\">방어/보안</option>\r\n              <option value=\"FaCar\">운전</option>\r\n              <option value=\"FaTruck\">트럭 운전</option>\r\n              <option value=\"FaShippingFast\">물류</option>\r\n              <option value=\"FaBriefcase\">비즈니스</option>\r\n              <option value=\"FaHandshake\">협업</option>\r\n            </optgroup>\r\n            <optgroup label=\"기타\">\r\n              <option value=\"FaChartLine\">Chart</option>\r\n              <option value=\"FaCubes\">Cubes</option>\r\n              <option value=\"FaCog\">Settings</option>\r\n              <option value=\"FaMobile\">Mobile</option>\r\n              <option value=\"FaDesktop\">Desktop</option>\r\n              <option value=\"FaCloud\">Cloud</option>\r\n              <option value=\"FaNetworkWired\">Network</option>\r\n            </optgroup>\r\n          </select>\r\n        </div>\r\n        \r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-2\">순서 (고급 옵션)</label>\r\n          <input\r\n            type=\"number\"\r\n            value={formData.order}\r\n            onChange={(e) => handleChange('order', parseInt(e.target.value) || 0)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            min=\"0\"\r\n          />\r\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n            💡 스킬 목록에서 드래그하여 순서를 변경할 수 있습니다\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"flex gap-2\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isSaving}\r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50\"\r\n          >\r\n            {isSaving ? '저장 중...' : '저장'}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onCancel}\r\n            className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\r\n          >\r\n            취소\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SkillForm\r\n","import React, { useState } from 'react'\r\nimport { FaSave } from 'react-icons/fa'\r\nimport { Category, CategoryFormData } from '../../types'\r\nimport LanguageTabs, { AdminLanguage } from '../common/LanguageTabs'\r\n\r\ninterface FormProps {\r\n  data?: Category\r\n  onSave: (data: CategoryFormData) => void\r\n  onCancel: () => void\r\n  isSaving?: boolean\r\n}\r\n\r\nconst CategoryForm: React.FC<FormProps> = ({ \r\n  data, \r\n  onSave, \r\n  onCancel, \r\n  isSaving = false \r\n}) => {\r\n  const [currentLang, setCurrentLang] = useState<AdminLanguage>('ko')\r\n  const [formData, setFormData] = useState<CategoryFormData>(\r\n    data\r\n      ? { \r\n          name: data.name,\r\n          nameEn: data.nameEn,\r\n          nameJa: data.nameJa,\r\n          order: data.order || 0,\r\n        } \r\n      : {\r\n          name: '',\r\n          nameEn: '',\r\n          nameJa: '',\r\n          order: 0,\r\n        }\r\n  )\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!formData.name.trim()) {\r\n      alert('카테고리 이름을 입력해주세요')\r\n      return\r\n    }\r\n\r\n    onSave(formData)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n      {/* Language Tabs */}\r\n      <LanguageTabs activeLanguage={currentLang} onChange={setCurrentLang} />\r\n\r\n      {/* Name Field (Multilingual) */}\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          카테고리 이름 {currentLang === 'ko' && <span className=\"text-red-500\">*</span>}\r\n          <span className=\"text-xs text-gray-500 ml-2\">\r\n            ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\r\n          </span>\r\n        </label>\r\n        {currentLang === 'ko' && (\r\n          <input\r\n            type=\"text\"\r\n            value={formData.name}\r\n            onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"예: PLC, 웹개발, AI/ML\"\r\n            required\r\n          />\r\n        )}\r\n        {currentLang === 'en' && (\r\n          <input\r\n            type=\"text\"\r\n            value={formData.nameEn || ''}\r\n            onChange={(e) => setFormData({ ...formData, nameEn: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"e.g., PLC, Web Development, AI/ML\"\r\n          />\r\n        )}\r\n        {currentLang === 'ja' && (\r\n          <input\r\n            type=\"text\"\r\n            value={formData.nameJa || ''}\r\n            onChange={(e) => setFormData({ ...formData, nameJa: e.target.value })}\r\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            placeholder=\"例: PLC, ウェブ開発, AI/ML\"\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          순서 (고급 옵션)\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          value={formData.order}\r\n          onChange={(e) => setFormData({ ...formData, order: parseInt(e.target.value) || 0 })}\r\n          className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n          min=\"0\"\r\n        />\r\n        <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n          💡 카테고리 목록에서 드래그 앤 드롭으로 순서를 변경할 수 있습니다\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"flex gap-3 pt-4\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSaving || !formData.name.trim()}\r\n          className=\"flex-1 flex items-center justify-center gap-2 px-6 py-3 bg-primary-600 text-white rounded-lg hover:bg-primary-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors font-medium\"\r\n        >\r\n          <FaSave />\r\n          {isSaving ? '저장 중...' : '저장'}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={onCancel}\r\n          disabled={isSaving}\r\n          className=\"px-6 py-3 bg-gray-500 text-white rounded-lg hover:bg-gray-600 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors font-medium\"\r\n        >\r\n          취소\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default CategoryForm\r\n","import React from 'react'\r\nimport { FaBell } from 'react-icons/fa'\r\n\r\ninterface Notification {\r\n  id: string\r\n  message: string\r\n  read: boolean\r\n  createdAt: string\r\n}\r\n\r\ninterface NotificationDropdownProps {\r\n  notifications: Notification[]\r\n  showNotifications: boolean\r\n  onToggle: () => void\r\n  onNotificationClick?: (notificationId: string) => void\r\n}\r\n\r\nconst NotificationDropdown: React.FC<NotificationDropdownProps> = ({\r\n  notifications,\r\n  showNotifications,\r\n  onToggle,\r\n  onNotificationClick\r\n}) => {\r\n  const getUnreadNotificationCount = () => {\r\n    return notifications.filter(n => !n.read).length\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <button\r\n        onClick={onToggle}\r\n        className=\"p-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors relative\"\r\n      >\r\n        <FaBell />\r\n        알림\r\n        {getUnreadNotificationCount() > 0 && (\r\n          <span className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\">\r\n            {getUnreadNotificationCount()}\r\n          </span>\r\n        )}\r\n      </button>\r\n\r\n      {showNotifications && (\r\n        <div className=\"absolute right-0 top-full mt-2 w-80 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg z-50\">\r\n          <div className=\"p-4\">\r\n            <h3 className=\"font-semibold text-gray-900 dark:text-white mb-3\">\r\n              알림\r\n            </h3>\r\n            {notifications.length === 0 ? (\r\n              <p className=\"text-gray-500 dark:text-gray-400 text-sm\">\r\n                새로운 알림이 없습니다.\r\n              </p>\r\n            ) : (\r\n              <div className=\"space-y-2\">\r\n                {notifications.slice(0, 5).map((notification) => (\r\n                  <div\r\n                    key={notification.id}\r\n                    onClick={() => onNotificationClick?.(notification.id)}\r\n                    className={`p-3 rounded-lg border cursor-pointer transition-all hover:shadow-md ${\r\n                      !notification.read\r\n                        ? 'bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-800 hover:bg-blue-100 dark:hover:bg-blue-900/30'\r\n                        : 'bg-gray-50 dark:bg-gray-700 border-gray-200 dark:border-gray-600 hover:bg-gray-100 dark:hover:bg-gray-600'\r\n                    }`}\r\n                  >\r\n                    <p className=\"text-sm text-gray-900 dark:text-white\">\r\n                      {notification.message}\r\n                    </p>\r\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n                      {new Date(notification.createdAt).toLocaleString('ko-KR')}\r\n                    </p>\r\n                  </div>\r\n                ))}\r\n                {notifications.length > 5 && (\r\n                  <p className=\"text-center text-sm text-gray-500 dark:text-gray-400 pt-2 border-t border-gray-200 dark:border-gray-700\">\r\n                    +{notifications.length - 5}개 더 보기\r\n                  </p>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotificationDropdown\r\n","import React, { useState } from 'react'\r\nimport { BookFilterGroup } from '../../hooks/useAdminSidebarState'\r\n\r\ninterface BookFilterMenuProps {\r\n  filterGroup: BookFilterGroup\r\n  count: number\r\n}\r\n\r\nconst BookFilterMenu: React.FC<BookFilterMenuProps> = ({ filterGroup, count }) => {\r\n  const { state, actions, data } = filterGroup\r\n  \r\n  // 로컬 UI 상태: 검색창 표시 여부\r\n  const [showBookSearch, setShowBookSearch] = useState(false)\r\n\r\n  // 모든 필터 초기화 함수\r\n  const resetAllFilters = () => {\r\n    actions.setFilter('all')\r\n    actions.setSearchTerm('')\r\n    actions.setSelectedCategory('')\r\n    setShowBookSearch(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-6\">\r\n      <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n        서적 관리\r\n      </h4>\r\n      <div className=\"space-y-1\">\r\n        {/* 모든 서적 버튼 */}\r\n        <button\r\n          onClick={() => {\r\n            actions.setFilter('all')\r\n            actions.setSearchTerm('')\r\n            setShowBookSearch(false)\r\n            actions.setSelectedCategory('')\r\n          }}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            state.filter === 'all' && !state.searchTerm && !state.selectedCategory\r\n              ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          📖 모든 서적 ({count})\r\n        </button>\r\n\r\n        {/* 평점 5점 서적 버튼 */}\r\n        <button\r\n          onClick={() => {\r\n            actions.setFilter('five-star')\r\n            actions.setSearchTerm('')\r\n            setShowBookSearch(false)\r\n            actions.setSelectedCategory('')\r\n          }}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            state.filter === 'five-star'\r\n              ? 'bg-yellow-100 dark:bg-yellow-900 text-yellow-700 dark:text-yellow-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          ⭐ 평점 5점 서적\r\n        </button>\r\n\r\n        {/* 카테고리별 보기 버튼 */}\r\n        <button\r\n          onClick={() => {\r\n            actions.setFilter('category')\r\n            actions.setSearchTerm('')\r\n            setShowBookSearch(false)\r\n          }}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            state.filter === 'category'\r\n              ? 'bg-purple-100 dark:bg-purple-900 text-purple-700 dark:text-purple-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          📚 카테고리별 보기\r\n        </button>\r\n\r\n        {/* 카테고리 드롭다운 */}\r\n        {state.filter === 'category' && (\r\n          <div className=\"ml-4 mb-2\">\r\n            <select\r\n              value={state.selectedCategory}\r\n              onChange={(e) => actions.setSelectedCategory(e.target.value)}\r\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            >\r\n              <option value=\"\">카테고리 선택</option>\r\n              {data.categories.map((category) => (\r\n                <option key={category} value={category}>\r\n                  {category}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        )}\r\n\r\n        {/* 검색 버튼 */}\r\n        <button\r\n          onClick={() => setShowBookSearch(!showBookSearch)}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            showBookSearch\r\n              ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          🔍 서적 검색\r\n        </button>\r\n\r\n        {/* 검색 입력창 */}\r\n        {showBookSearch && (\r\n          <div className=\"ml-4 mb-2\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"제목, 저자, 카테고리 검색...\"\r\n              value={state.searchTerm}\r\n              onChange={(e) => actions.setSearchTerm(e.target.value)}\r\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* 필터 초기화 버튼 */}\r\n        {(state.filter !== 'all' || state.searchTerm || state.selectedCategory) && (\r\n          <button\r\n            onClick={resetAllFilters}\r\n            className=\"w-full text-left px-3 py-2 text-sm rounded-lg transition-colors text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20\"\r\n          >\r\n            🔄 필터 초기화\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BookFilterMenu\r\n","import React, { useState } from 'react'\r\nimport { ExperienceFilterGroup } from '../../hooks/useAdminSidebarState'\r\n\r\ninterface ExperienceFilterMenuProps {\r\n  filterGroup: ExperienceFilterGroup\r\n  count: number\r\n}\r\n\r\nconst ExperienceFilterMenu: React.FC<ExperienceFilterMenuProps> = ({ filterGroup, count }) => {\r\n  const { state, actions, data } = filterGroup\r\n  \r\n  // 로컬 UI 상태: 검색창 표시 여부\r\n  const [showExperienceSearch, setShowExperienceSearch] = useState(false)\r\n\r\n  // 모든 필터 초기화 함수\r\n  const resetAllFilters = () => {\r\n    actions.setFilter('all')\r\n    actions.setSearchTerm('')\r\n    actions.setSelectedCompany('')\r\n    actions.setSelectedYear('')\r\n    setShowExperienceSearch(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-6\">\r\n      <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n        경력 관리\r\n      </h4>\r\n      <div className=\"space-y-1\">\r\n        {/* 모든 경력 버튼 */}\r\n        <button\r\n          onClick={() => {\r\n            actions.setFilter('all')\r\n            actions.setSearchTerm('')\r\n            setShowExperienceSearch(false)\r\n            actions.setSelectedCompany('')\r\n            actions.setSelectedYear('')\r\n          }}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            state.filter === 'all' && !state.searchTerm && !state.selectedCompany && !state.selectedYear\r\n              ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          💼 모든 경력 ({count})\r\n        </button>\r\n\r\n        {/* 회사별 보기 버튼 */}\r\n        <button\r\n          onClick={() => {\r\n            actions.setFilter('company')\r\n            actions.setSearchTerm('')\r\n            setShowExperienceSearch(false)\r\n            actions.setSelectedYear('')\r\n          }}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            state.filter === 'company'\r\n              ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          🏢 회사별 보기\r\n        </button>\r\n\r\n        {/* 회사 드롭다운 */}\r\n        {state.filter === 'company' && (\r\n          <div className=\"ml-4 mb-2\">\r\n            <select\r\n              value={state.selectedCompany}\r\n              onChange={(e) => actions.setSelectedCompany(e.target.value)}\r\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            >\r\n              <option value=\"\">회사 선택</option>\r\n              {data.companies.map((company) => (\r\n                <option key={company} value={company}>\r\n                  {company}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        )}\r\n\r\n        {/* 연도별 보기 버튼 */}\r\n        <button\r\n          onClick={() => {\r\n            actions.setFilter('year')\r\n            actions.setSearchTerm('')\r\n            setShowExperienceSearch(false)\r\n            actions.setSelectedCompany('')\r\n          }}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            state.filter === 'year'\r\n              ? 'bg-indigo-100 dark:bg-indigo-900 text-indigo-700 dark:text-indigo-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          📅 연도별 보기\r\n        </button>\r\n\r\n        {/* 연도 드롭다운 */}\r\n        {state.filter === 'year' && (\r\n          <div className=\"ml-4 mb-2\">\r\n            <select\r\n              value={state.selectedYear}\r\n              onChange={(e) => actions.setSelectedYear(e.target.value)}\r\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            >\r\n              <option value=\"\">연도 선택</option>\r\n              {data.years.map((year) => (\r\n                <option key={year} value={year}>\r\n                  {year}년\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        )}\r\n\r\n        {/* 검색 버튼 */}\r\n        <button\r\n          onClick={() => setShowExperienceSearch(!showExperienceSearch)}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            showExperienceSearch\r\n              ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          🔍 경력 검색\r\n        </button>\r\n\r\n        {/* 검색 입력창 */}\r\n        {showExperienceSearch && (\r\n          <div className=\"ml-4 mb-2\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"제목, 회사, 설명 검색...\"\r\n              value={state.searchTerm}\r\n              onChange={(e) => actions.setSearchTerm(e.target.value)}\r\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* 필터 초기화 버튼 */}\r\n        {(state.filter !== 'all' || state.searchTerm || state.selectedCompany || state.selectedYear) && (\r\n          <button\r\n            onClick={resetAllFilters}\r\n            className=\"w-full text-left px-3 py-2 text-sm rounded-lg transition-colors text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20\"\r\n          >\r\n            🔄 필터 초기화\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExperienceFilterMenu\r\n","import React, { useState } from 'react'\r\nimport { ProjectFilterGroup } from '../../hooks/useAdminSidebarState'\r\n\r\ninterface ProjectFilterMenuProps {\r\n  filterGroup: ProjectFilterGroup\r\n  count: number\r\n}\r\n\r\nconst ProjectFilterMenu: React.FC<ProjectFilterMenuProps> = ({ filterGroup, count }) => {\r\n  const { state, actions, data } = filterGroup\r\n  \r\n  // 로컬 UI 상태: 검색창 표시 여부\r\n  const [showProjectSearch, setShowProjectSearch] = useState(false)\r\n\r\n  // 모든 필터 초기화 함수\r\n  const resetAllFilters = () => {\r\n    actions.setFilter('all')\r\n    actions.setSearchTerm('')\r\n    actions.setSelectedCategory('')\r\n    setShowProjectSearch(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-6\">\r\n      <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n        프로젝트 관리\r\n      </h4>\r\n      <div className=\"space-y-1\">\r\n        {/* 모든 프로젝트 버튼 */}\r\n        <button\r\n          onClick={() => {\r\n            actions.setFilter('all')\r\n            actions.setSearchTerm('')\r\n            setShowProjectSearch(false)\r\n            actions.setSelectedCategory('')\r\n          }}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            state.filter === 'all' && !state.searchTerm && !state.selectedCategory\r\n              ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          📁 모든 프로젝트 ({count})\r\n        </button>\r\n\r\n        {/* 카테고리별 보기 버튼 */}\r\n        <button\r\n          onClick={() => {\r\n            actions.setFilter('category')\r\n            actions.setSearchTerm('')\r\n            setShowProjectSearch(false)\r\n          }}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            state.filter === 'category'\r\n              ? 'bg-purple-100 dark:bg-purple-900 text-purple-700 dark:text-purple-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          🏷️ 카테고리별 보기\r\n        </button>\r\n\r\n        {/* 카테고리 드롭다운 */}\r\n        {state.filter === 'category' && (\r\n          <div className=\"ml-4 mb-2\">\r\n            <select\r\n              value={state.selectedCategory}\r\n              onChange={(e) => actions.setSelectedCategory(e.target.value)}\r\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n            >\r\n              <option value=\"\">카테고리 선택</option>\r\n              {data.categories.map((category) => (\r\n                <option key={category} value={category}>\r\n                  {category}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        )}\r\n\r\n        {/* 주요 프로젝트 버튼 */}\r\n        <button\r\n          onClick={() => {\r\n            actions.setFilter('featured')\r\n            actions.setSearchTerm('')\r\n            setShowProjectSearch(false)\r\n            actions.setSelectedCategory('')\r\n          }}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            state.filter === 'featured'\r\n              ? 'bg-yellow-100 dark:bg-yellow-900 text-yellow-700 dark:text-yellow-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          🌟 주요 프로젝트\r\n        </button>\r\n\r\n        {/* 검색 버튼 */}\r\n        <button\r\n          onClick={() => setShowProjectSearch(!showProjectSearch)}\r\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n            showProjectSearch\r\n              ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300'\r\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n          }`}\r\n        >\r\n          🔍 프로젝트 검색\r\n        </button>\r\n\r\n        {/* 검색 입력창 */}\r\n        {showProjectSearch && (\r\n          <div className=\"ml-4 mb-2\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"제목, 설명, 기술스택 검색...\"\r\n              value={state.searchTerm}\r\n              onChange={(e) => actions.setSearchTerm(e.target.value)}\r\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* 필터 초기화 버튼 */}\r\n        {(state.filter !== 'all' || state.searchTerm || state.selectedCategory) && (\r\n          <button\r\n            onClick={resetAllFilters}\r\n            className=\"w-full text-left px-3 py-2 text-sm rounded-lg transition-colors text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20\"\r\n          >\r\n            🔄 필터 초기화\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectFilterMenu\r\n","import React from 'react'\r\n\r\ninterface SettingsMenuProps {\r\n  activeSettingsSection: string | null\r\n  setActiveSettingsSection: (section: string | null) => void\r\n}\r\n\r\nconst SettingsMenu: React.FC<SettingsMenuProps> = ({ \r\n  activeSettingsSection, \r\n  setActiveSettingsSection \r\n}) => {\r\n  const settingsOptions = [\r\n    { id: 'general', label: '🏠 일반 설정', description: '사이트 기본 정보' },\r\n    { id: 'appearance', label: '🎨 외관 설정', description: '테마 및 디자인' },\r\n    { id: 'seo', label: '🔍 SEO 설정', description: '검색 엔진 최적화' },\r\n    { id: 'social', label: '📱 소셜 미디어', description: '소셜 링크 및 연락처' },\r\n    { id: 'analytics', label: '📊 분석 도구', description: 'Google Analytics 등' },\r\n    { id: 'security', label: '🔒 보안 설정', description: '인증 및 보안' },\r\n  ]\r\n\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n        사이트 설정\r\n      </h4>\r\n      \r\n      <div className=\"space-y-1\">\r\n        {settingsOptions.map((option) => (\r\n          <button\r\n            key={option.id}\r\n            onClick={() => setActiveSettingsSection(option.id)}\r\n            className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\r\n              activeSettingsSection === option.id\r\n                ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'\r\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            <div className=\"flex flex-col\">\r\n              <span className=\"font-medium\">{option.label}</span>\r\n              <span className=\"text-xs text-gray-500 dark:text-gray-400 mt-0.5\">\r\n                {option.description}\r\n              </span>\r\n            </div>\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* 설정 초기화 버튼 */}\r\n      {activeSettingsSection && (\r\n        <button\r\n          onClick={() => setActiveSettingsSection(null)}\r\n          className=\"w-full text-left px-3 py-2 text-sm rounded-lg transition-colors text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n        >\r\n          ← 설정 메뉴로 돌아가기\r\n        </button>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SettingsMenu\r\n","import React from 'react'\r\nimport { AdminTab, BookFilterGroup, ExperienceFilterGroup, ProjectFilterGroup } from '../../hooks/useAdminSidebarState'\r\n\r\n// 분리된 컴포넌트들 import\r\nimport BookFilterMenu from './BookFilterMenu'\r\nimport ExperienceFilterMenu from './ExperienceFilterMenu'\r\nimport ProjectFilterMenu from './ProjectFilterMenu'\r\nimport SettingsMenu from './SettingsMenu'\r\n\r\ninterface DataCounts {\r\n  books: number\r\n  videoLearnings: number\r\n  videoPlaylists: number\r\n  experiences: number\r\n  projects: number\r\n  messages: number\r\n  skills: number\r\n  categories: number\r\n}\r\n\r\ninterface RightSidebarProps {\r\n  // 탭 관련 props (핵심만)\r\n  activeTab: AdminTab\r\n  setActiveTab: (tab: AdminTab) => void\r\n  activeSettingsSection: string | null\r\n  setActiveSettingsSection: (section: string | null) => void\r\n  \r\n  // 데이터 카운트\r\n  counts: DataCounts\r\n  refreshCounts: () => void\r\n  \r\n  // 필터 그룹들 (각각 하나의 객체로 전달)\r\n  bookFilters: BookFilterGroup\r\n  experienceFilters: ExperienceFilterGroup\r\n  projectFilters: ProjectFilterGroup\r\n}\r\n\r\nconst RightSidebar: React.FC<RightSidebarProps> = ({ \r\n  activeTab, \r\n  setActiveTab, \r\n  activeSettingsSection,\r\n  setActiveSettingsSection, \r\n  counts,\r\n  refreshCounts,\r\n  bookFilters,\r\n  experienceFilters,\r\n  projectFilters,\r\n}) => {\r\n  return (\r\n    <div className=\"w-80 bg-white dark:bg-gray-800 border-l border-gray-200 dark:border-gray-700 p-6\">\r\n      <div className=\"sticky top-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n          빠른 메뉴\r\n        </h3>\r\n\r\n        {/* 관리자 대시보드 홈 버튼 */}\r\n        <div className=\"mb-8\">\r\n          <button\r\n            onClick={() => {\r\n              setActiveTab('settings')\r\n              setActiveSettingsSection(null)\r\n            }}\r\n            className={`w-full flex items-center gap-3 px-4 py-3 text-sm font-semibold rounded-lg transition-colors ${\r\n              activeTab === 'settings' && activeSettingsSection === null\r\n                ? 'bg-blue-600 text-white'\r\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            <span className=\"text-lg\">🏠</span>\r\n            관리자 대시보드\r\n          </button>\r\n        </div>\r\n\r\n        {/* 관리 버튼들 */}\r\n        <div className=\"space-y-2 mb-8\">\r\n          <button\r\n            onClick={() => setActiveTab('books')}\r\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\r\n              activeTab === 'books'\r\n                ? 'bg-orange-100 dark:bg-orange-900 text-orange-700 dark:text-orange-300'\r\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            <span>📚 서적 관리</span>\r\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\r\n              {counts.books}\r\n            </span>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => {\r\n              setActiveSettingsSection(null)\r\n              setActiveTab('videoLearnings')\r\n            }}\r\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\r\n              activeTab === 'videoLearnings'\r\n                ? 'bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-300'\r\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            <span>📹 개별 영상</span>\r\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\r\n              {counts.videoLearnings || 0}\r\n            </span>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => {\r\n              setActiveSettingsSection(null)\r\n              setActiveTab('videoPlaylists')\r\n            }}\r\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\r\n              activeTab === 'videoPlaylists'\r\n                ? 'bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-300'\r\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            <span>📺 시리즈 영상</span>\r\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\r\n              {counts.videoPlaylists || 0}\r\n            </span>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => setActiveTab('experiences')}\r\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\r\n              activeTab === 'experiences'\r\n                ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300'\r\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            <span>💼 경력 관리</span>\r\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\r\n              {counts.experiences}\r\n            </span>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => setActiveTab('projects')}\r\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\r\n              activeTab === 'projects'\r\n                ? 'bg-purple-100 dark:bg-purple-900 text-purple-700 dark:text-purple-300'\r\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            <span>🚀 프로젝트 관리</span>\r\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\r\n              {counts.projects}\r\n            </span>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => setActiveTab('messages')}\r\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\r\n              activeTab === 'messages'\r\n                ? 'bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-300'\r\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            <span>💬 메시지 관리</span>\r\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\r\n              {counts.messages}\r\n            </span>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => setActiveTab('skills')}\r\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\r\n              activeTab === 'skills'\r\n                ? 'bg-indigo-100 dark:bg-indigo-900 text-indigo-700 dark:text-indigo-300'\r\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            <span>⚡ 기술 관리</span>\r\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\r\n              {counts.skills}\r\n            </span>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => {\r\n              setActiveSettingsSection(null)\r\n              setActiveTab('categories')\r\n            }}\r\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\r\n              activeTab === 'categories'\r\n                ? 'bg-yellow-100 dark:bg-yellow-900 text-yellow-700 dark:text-yellow-300'\r\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            <span>📂 카테고리 관리</span>\r\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\r\n              {counts.categories || 0}\r\n            </span>\r\n          </button>\r\n        </div>\r\n\r\n        {/* 세부 메뉴 - 분리된 컴포넌트들로 대체 */}\r\n        {activeTab === 'books' && (\r\n          <BookFilterMenu \r\n            filterGroup={bookFilters} \r\n            count={counts.books} \r\n          />\r\n        )}\r\n\r\n        {activeTab === 'experiences' && (\r\n          <ExperienceFilterMenu \r\n            filterGroup={experienceFilters} \r\n            count={counts.experiences} \r\n          />\r\n        )}\r\n\r\n        {activeTab === 'projects' && (\r\n          <ProjectFilterMenu \r\n            filterGroup={projectFilters} \r\n            count={counts.projects} \r\n          />\r\n        )}\r\n\r\n        {activeTab === 'settings' && (\r\n          <SettingsMenu \r\n            activeSettingsSection={activeSettingsSection}\r\n            setActiveSettingsSection={setActiveSettingsSection}\r\n          />\r\n        )}\r\n\r\n        {/* 공통 도구 */}\r\n        <div className=\"mt-8 pt-6 border-t border-gray-200 dark:border-gray-700\">\r\n          <div className=\"space-y-2\">\r\n            <button\r\n              onClick={refreshCounts}\r\n              className=\"w-full flex items-center gap-2 px-3 py-2 text-sm text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\r\n            >\r\n              <span>🔄</span>\r\n              데이터 새로고침\r\n            </button>\r\n            \r\n            <div className=\"text-xs text-gray-500 dark:text-gray-400 text-center\">\r\n              마지막 업데이트: {new Date().toLocaleTimeString('ko-KR')}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RightSidebar"],"names":["ProtectedRoute","element","Component","isAuthenticated","isLoading","useAuth","jsxRuntimeExports","jsxs","style","display","justifyContent","alignItems","height","backgroundColor","children","width","border","borderTop","borderRadius","animation","marginLeft","color","fontSize","jsx","Navigate","to","replace","LoadScene","onFirstVisitComplete","progress","setProgress","useState","navigate","useNavigate","useEffect","window","location","hash","sceneRef","useRef","animationRef","tlRef","textMeshesRef","sceneInstanceRef","cameraRef","rendererRef","autoNavigateTimer","setTimeout","localStorage","setItem","clearTimeout","cleanup","current","cancelAnimationFrame","kill","canvas","domElement","contains","removeChild","dispose","initThreeScene","scene","THREE.Scene","background","THREE.Color","camera","THREE.PerspectiveCamera","innerWidth","innerHeight","renderer","THREE.WebGLRenderer","alpha","antialias","setSize","setClearColor","shadowMap","enabled","type","THREE.PCFSoftShadowMap","appendChild","ambientLight","THREE.AmbientLight","add","directionalLight","THREE.DirectionalLight","position","set","castShadow","shadow","mapSize","pointLight","THREE.PointLight","pointLight2","create3DText","z","lookAt","animate","requestAnimationFrame","forEach","mesh","index","rotation","y","x","Math","sin","Date","now","cos","render","handleResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","loadingLetters","letter","geometry","createLGeometry","THREE.TorusGeometry","THREE.ConeGeometry","createDGeometry","THREE.BoxGeometry","createNGeometry","createGGeometry","hue","length","material","THREE.MeshPhongMaterial","setHSL","shininess","specular","emissive","THREE.Mesh","receiveShadow","startX","scale","PI","push","gsapWithCSS","duration","delay","ease","THREE.BufferGeometry","vertices","setAttribute","THREE.Float32BufferAttribute","computeVertexNormals","i","angle","setupAnimation","tl","gsap","timeline","onUpdate","this","className","ref","motion","div","initial","opacity","transition","round","IconMap","FaIcons","SiIcons","DynamicIcon","iconName","size","IconComponent","React","createElement","FaIcons.FaMicrochip","LanguageSwitcher","variant","i18n","useTranslation","changeLanguage","lang","languages","code","short","full","FaGlobe","map","isActive","language","onClick","getLocalizedField","currentLang","koValue","enValue","jaValue","getLocalizedArrayField","koArray","enArray","jaArray","getLocalizedSkillName","skill","name","nameEn","nameJa","getLocalizedSkillDescription","description","descriptionEn","descriptionJa","getLocalizedCategoryName","category","getLocalizedSkillCategoryTitle","skillCategory","title","titleEn","titleJa","SidebarNavItem","item","setIsOpen","activeSection","useMemo","pathname","startsWith","path","icon","classes","handleNavigation","useCallback","href","Sidebar","darkMode","toggleDarkMode","onLoginClick","isOpen","useLocation","logout","t","settings","siteSettings","useSiteSettings","useScrollSpy","navItems","FaHome","FaUser","FaBriefcase","FaWrench","FaLaptopCode","FaBook","FaVideo","FaCommentDots","coreSkills","languageSkills","isLoadingSkills","useSidebarSkills","socialLinks","FaGithub","label","FaLinkedin","FaEnvelope","Fragment","FaTimes","FaBars","exit","firstName","firstNameEn","firstNameJa","FaCode","fullName","fullNameEn","fullNameJa","role","roleEn","roleJa","subtitle","subtitleEn","subtitleJa","locationEn","locationJa","education","educationEn","educationJa","yearsOfExperience","yearsOfExperienceEn","yearsOfExperienceJa","skillName","isNative","includes","level","cx","cy","r","stroke","strokeWidth","fill","strokeDasharray","strokeLinecap","_id","Link","FaUserShield","Icon","FaSun","FaMoon","FaSignInAlt","LoginModal","onClose","username","setUsername","password","setPassword","error","setError","setIsLoading","login","handleClose","AnimatePresence","id","onSubmit","async","e","preventDefault","err","errorMessage","message","htmlFor","value","onChange","target","placeholder","required","autoComplete","FaLock","button","disabled","whileHover","whileTap","FaCircleNotch","AppLayout","showLoginModal","setShowLoginModal","isFirstVisit","SimpleLoadingSpinner","Suspense","fallback","Outlet","Hero","loading","scrollYProgress","useScroll","yTop","useTransform","yBottom","itemVariants","hidden","visible","stats","number","stat1Number","stat1Label","stat1LabelEn","stat1LabelJa","FaCoffee","stat2Number","stat2Label","stat2LabelEn","stat2LabelJa","stat3Number","stat3Label","stat3LabelEn","stat3LabelJa","FaCog","variants","staggerChildren","heroTag","heroTagEn","heroTagJa","h1","heroTitle","heroTitleEn","heroTitleJa","p","heroSubtitle","heroSubtitleEn","heroSubtitleJa","FaArrowRight","alert","FaDownload","stat","BookCoverImage","src","alt","fallbackIcon","imageState","setImageState","imageSrc","setImageSrc","FaImage","decoding","onLoad","onError","ScrollToTopButton","isVisible","setIsVisible","toggleVisibility","scrollY","scrollTo","top","behavior","FaArrowUp","getFormattedReadingTime","text","wordsPerMinute","minutes","words","trim","split","ceil","max","calculateReadingTime","formatReadingTime","RichTextEditor","rows","textareaRef","cursorPosition","setCursorPosition","updateCursorPosition","selectionStart","getCurrentLine","lines","currentLineIndex","lineStart","lineLengthWithNewline","_a","lineIndex","line","applyHeading","prefix","repeat","match","join","applyListStyle","indent","adjustIndent","direction","applyTextStyle","textarea","start","end","selectionEnd","selectedText","substring","wrap","wrappedText","newValue","setSelectionRange","focus","FaBold","FaItalic","FaUnderline","FaListUl","FaListOl","FaOutdent","FaIndent","newLine","splice","newPosition","FaChevronDown","codeBlockLines","positionToMove","_b","MdCode","onSelect","onKeyUp","onMouseUp","dangerouslySetInnerHTML","__html","_match","p1","p2","LearningItem","learning","isEditing","currentFormData","setCurrentFormData","onStartEdit","onSaveEdit","onCancelEdit","onDelete","isSaving","allSkillsMap","onSkillLinkChange","chapterId","linkedSkills","skillIds","get","skillId","filter","availableSkills","Array","from","values","topic","prev","content","FaTag","isLinked","dynamicStyle","handleSkillToggle","FaEdit","FaTrash","badgeStyle","colorCode","formatDate","createdAt","formatRelativeDate","useParams","data","book","isError","useBook","bookChapters","useQuery","queryKey","queryFn","response","chaptersAPI","getByBook","staleTime","skillCategories","useSkills","deleteMutation","useDeleteBook","bookApiError","editingLearningId","showAddForm","learningApiError","handleToggleAddForm","handleAddLearning","handleDeleteLearning","handleStartEdit","handleSaveEdit","handleCancelEdit","handleSkillLinkChange","useLearningManager","expandedChapterId","setExpandedChapterId","linkedBookSkills","allSkills","flatMap","skills","uniqueSkillIds","Set","chapter","learnings","has","levelText","Map","isDeleting","isPending","sortedLearnings","sort","a","b","getTime","state","FaArrowLeft","coverImage","categoryIds","catIdOrObj","catName","tab","editId","confirm","mutateAsync","author","authorEn","authorJa","rating","_","FaStar","FaCalendar","readDate","FaCubes","FaPlus","isExpanded","toggleChapter","prevId","span","rotate","FaChevronRight","StickyVideoPlayer","videoId","playerRef","externalPlayerRef","onPlayerReady","containerRef","isSticky","setIsSticky","isClosed","setIsClosed","containerTop","setContainerTop","rect","getBoundingClientRect","handleScroll","passive","damping","stiffness","left","transform","maxWidth","allow","allowFullScreen","video","useVideoLearning","useDeleteVideoLearning","updateMutation","useUpdateVideoLearning","success","toastError","useToastHelpers","playerContainerRef","isPlayerReady","setIsPlayerReady","isEditingKeyTakeaways","setIsEditingKeyTakeaways","editingContent","setEditingContent","videoUrl","extractYouTubeId","YT","tag","document","firstScriptTag","getElementsByTagName","parentNode","insertBefore","initializePlayer","Player","playerVars","enablejsapi","origin","rel","modestbranding","fs","cc_load_policy","iv_load_policy","showinfo","controls","events","onReady","onYouTubeIframeAPIReady","destroy","cat","watchDate","purpose","FaBullseye","ReactMarkdown","application","FaRocket","keyTakeaways","FaLightbulb","renderHtmlWithTimestamps","tagName","dataset","seconds","seekTo","playVideo","handleTimestampClick","parseInt","skillIdOrObj","Boolean","updateData","order","_c","FaSave","playlist","useVideoPlaylist","playlistVideos","usePlaylistVideos","useDeleteVideoPlaylist","updateVideoMutation","useUpdatePlaylistVideo","activeVideoId","setActiveVideoId","activeVideoTab","setActiveVideoTab","showVideoTabs","setShowVideoTabs","editingVideoId","setEditingVideoId","playlistId","listType","list","activeVideo","find","v","targetVideoId","videoIndex","findIndex","playVideoAt","FaList","FaChevronUp","handleVideoTabClick","ProjectCard","project","getStatusColor","getStatusText","technologies","technologiesEn","technologiesJa","hasLinks","githubLink","liveLink","layout","scrollPosition","image","status","slice","tech","stopPropagation","FaExternalLinkAlt","localizedProject","useProjectDetail","selectedImage","setSelectedImage","currentVideoIndex","setCurrentVideoIndex","currentShortsIndex","setCurrentShortsIndex","isYouTubeShorts","url","getYouTubeEmbedUrl","regularVideos","videos","shortsVideos","images","FaPlay","preload","videoDescriptions","FaChevronLeft","videoIndexInAll","indexOf","maxHeight","margin","detailedDescription","features","feature","iconMap","FaGraduationCap","FaChartLine","FaRobot","FaCar","FaShieldAlt","ExperienceItem","exp","isLast","setIsExpanded","iconKey","some","idOrObj","descriptionItems","iconColor","iconBgColor","bgColor","company","companyEn","companyJa","period","details","detail","idx","categoryEn","categoryJa","items","itemsEn","itemsJa","itemIdx","li","FaCheckCircle","BookForm","onSave","onCancel","availableCategories","skillsLoading","categories","categoriesLoading","useCategories","initialReadDate","isNaN","toISOString","initialCategoryIds","initialSkillIds","formData","setFormData","handleCategoryToggle","categoryId","currentCategoryIds","newCategoryIds","handleSkillCategoryToggle","categorySkillIds","currentSkillIds","newSkillIds","every","uniqueIds","isFormValid","catId","c","isSelected","checked","star","min","step","newRating","parseFloat","selectedCount","allSelected","someSelected","el","indeterminate","ChapterForm","maxOrder","setTitle","setOrder","setIsSaving","LearningForm","setTopic","setContent","stripHtml","html","tmp","innerHTML","textContent","innerText","ReactQuill","theme","modules","toolbar","header","formats","ChapterLearningList","chapters","onAddChapter","onEditChapter","onDeleteChapter","onAddLearning","onEditLearning","onDeleteLearning","expandedChapters","setExpandedChapters","ch","learningCount","newSet","delete","updatedAt","Toast","toast","getBgColor","FaCheck","FaExclamationTriangle","FaInfo","getIcon","ToastContainer","toasts","VideoLearningForm","initialWatchDate","videoUrlInput","setVideoUrlInput","thumbnailUrl","getYouTubeThumbnail","isValidUrl","starValue","categorySkills","s","selectedInCategory","input","VideoPlaylistForm","playlistUrlInput","setPlaylistUrlInput","extractYouTubePlaylistId","reactExports","getYouTubePlaylistThumbnail","saveData","PlaylistVideoForm","LanguageTabs","activeLanguage","flag","iconOptions","key","SortableCategoryItem","editingCategoryIndex","onEdit","onRemove","attributes","listeners","setNodeRef","isDragging","useSortable","CSS","Transform","toString","zIndex","ExperienceForm","setCurrentLang","initialFormData","skillsEn","skillsJa","skillsInput","setSkillsInput","isArray","skillsInputEn","setSkillsInputEn","skillsInputJa","setSkillsInputJa","setEditingCategoryIndex","categoryFormData","setCategoryFormData","contentEn","contentJa","editDetailCategory","removeDetailCategory","newDetails","skillsArray","skillsArrayEn","skillsArrayJa","orderedDetails","finalFormData","option","opt","DndContext","collisionDetection","closestCenter","onDragEnd","event","active","over","oldIndex","newIndex","movedItem","reorderedDetails","SortableContext","strategy","verticalListSortingStrategy","newDetail","onBlur","ProjectForm","videoItems","handleVideoUrlChange","handleVideoDescriptionChange","handleAddVideo","handleRemoveVideo","prepareDataForSubmit","useProjectForm","detailedDescriptionEn","detailedDescriptionJa","featuresEn","featuresJa","learningsEn","learningsJa","processedData","SkillCategoryForm","initialData","handleChange","field","SkillForm","CategoryForm","NotificationDropdown","notifications","showNotifications","onToggle","onNotificationClick","getUnreadNotificationCount","n","read","FaBell","notification","toLocaleString","BookFilterMenu","filterGroup","count","actions","showBookSearch","setShowBookSearch","setFilter","setSearchTerm","setSelectedCategory","searchTerm","selectedCategory","ExperienceFilterMenu","showExperienceSearch","setShowExperienceSearch","setSelectedCompany","setSelectedYear","selectedCompany","selectedYear","companies","years","year","ProjectFilterMenu","showProjectSearch","setShowProjectSearch","SettingsMenu","activeSettingsSection","setActiveSettingsSection","RightSidebar","activeTab","setActiveTab","counts","refreshCounts","bookFilters","experienceFilters","projectFilters","books","videoLearnings","videoPlaylists","experiences","projects","messages","toLocaleTimeString"],"mappings":"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"}