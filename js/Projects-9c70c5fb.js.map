{"version":3,"file":"Projects-9c70c5fb.js","sources":["../../src/components/ProjectCard.tsx","../../src/pages/Projects.tsx"],"sourcesContent":["import React from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { Link } from 'react-router-dom'\r\nimport { FaGithub, FaExternalLinkAlt, FaImage } from 'react-icons/fa'\r\nimport { Project } from '../types'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { getLocalizedField, getLocalizedArrayField } from '@/utils/i18nUtils'\r\n\r\ninterface ProjectCardProps {\r\n  project: Project\r\n  itemVariants: any // framer-motion variants 타입\r\n  getStatusColor: (status: string) => string\r\n  getStatusText: (status: string) => string\r\n}\r\n\r\n// 기술 스택 최대 표시 개수 상수\r\nconst MAX_TECH_DISPLAY = 5\r\n\r\nconst ProjectCard: React.FC<ProjectCardProps> = ({ project, itemVariants, getStatusColor, getStatusText }) => {\r\n  const { i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  \r\n  // Get localized technologies\r\n  const technologies = getLocalizedArrayField(\r\n    currentLang,\r\n    project.technologies,\r\n    project.technologiesEn,\r\n    project.technologiesJa\r\n  )\r\n  \r\n  // 프로젝트 링크 존재 여부 확인\r\n  const hasLinks = project.githubLink || project.liveLink\r\n\r\n  return (\r\n    <motion.div\r\n      key={project._id}\r\n      variants={itemVariants}\r\n      // 레이아웃 변경 시 부드러운 전환을 위해 layout 속성 추가\r\n      layout\r\n      className=\"card overflow-hidden bg-white dark:bg-dark-800 rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 flex flex-col cursor-pointer group\"\r\n    >\r\n      <Link \r\n        to={`/projects/${project._id}`}\r\n        state={{ scrollPosition: window.scrollY }}\r\n        className=\"block flex flex-col h-full\"\r\n      >\r\n      <div className=\"h-48 bg-cream-200 dark:bg-dark-700 flex items-center justify-center relative flex-shrink-0\">\r\n        {project.image ? (\r\n          <img \r\n            src={project.image} \r\n            alt={`${project.title} 썸네일`} \r\n            className=\"w-full h-full object-cover\"\r\n            loading=\"lazy\"\r\n            decoding=\"async\"\r\n            width=\"640\"\r\n            height=\"192\"\r\n          />\r\n        ) : (\r\n          <FaImage className=\"text-dark-400 dark:text-dark-500 text-5xl\" />\r\n        )}\r\n        <div className=\"absolute top-4 right-4\">\r\n          <span className={`px-3 py-1 rounded-full text-sm font-medium ${getStatusColor(project.status)}`}>\r\n            {getStatusText(project.status)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"p-8 flex flex-col flex-grow\">\r\n        <h3 className=\"text-xl font-bold text-dark-900 dark:text-cream-100 mb-3 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors\">\r\n          {getLocalizedField(currentLang, project.title, project.titleEn, project.titleJa)}\r\n        </h3>\r\n        <p className=\"text-dark-600 dark:text-dark-300 mb-6 leading-relaxed flex-grow\">\r\n          {getLocalizedField(currentLang, project.description, project.descriptionEn, project.descriptionJa)}\r\n        </p>\r\n        <div className=\"flex flex-wrap gap-2 mb-4\">\r\n          {technologies.slice(0, MAX_TECH_DISPLAY).map((tech) => (\r\n            <span\r\n              key={tech}\r\n              className=\"px-3 py-1 bg-coffee-50 dark:bg-coffee-900 text-coffee-700 dark:text-coffee-300 rounded-lg text-sm font-medium\"\r\n            >\r\n              {tech}\r\n            </span>\r\n          ))}\r\n          {technologies.length > MAX_TECH_DISPLAY && (\r\n            <span className=\"px-3 py-1 bg-cream-200 dark:bg-dark-700 text-dark-500 dark:text-dark-400 rounded-lg text-sm font-medium\">\r\n              외 {technologies.length - MAX_TECH_DISPLAY}개\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div \r\n          className=\"flex flex-wrap gap-4 pt-4 border-t border-cream-200 dark:border-dark-700\"\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          {hasLinks ? (\r\n            <>\r\n              {project.liveLink && (\r\n                <a \r\n                  href={project.liveLink}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className={`px-4 py-2 rounded-xl font-bold transition-all duration-200 flex items-center gap-2 \r\n                    ${project.status === 'completed' \r\n                      ? 'bg-coffee-600 text-white hover:bg-coffee-700 shadow-md'\r\n                      : 'bg-cream-200 dark:bg-dark-700 text-dark-700 dark:text-dark-300 hover:bg-cream-300 dark:hover:bg-dark-600'\r\n                    }`}\r\n                  aria-label={`${project.title} 라이브 데모 보기`}\r\n                >\r\n                  <FaExternalLinkAlt size={16} />\r\n                  라이브 보기\r\n                </a>\r\n              )}\r\n              {project.githubLink && (\r\n                <a \r\n                  href={project.githubLink}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"px-4 py-2 rounded-xl font-medium transition-all duration-200 flex items-center gap-2 bg-white dark:bg-dark-900 text-dark-600 dark:text-dark-300 hover:bg-cream-100 dark:hover:bg-dark-700 border border-cream-200 dark:border-dark-700\"\r\n                  aria-label={`${project.title} GitHub 레포지토리`}\r\n                >\r\n                  <FaGithub size={20} />\r\n                  GitHub\r\n                </a>\r\n              )}\r\n            </>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      </Link>\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default ProjectCard\r\n","import React, { useState, useEffect } from 'react'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport { useInView } from 'react-intersection-observer'\r\nimport { FaLaptopCode, FaPlus } from 'react-icons/fa'\r\nimport { Link, useSearchParams, useLocation } from 'react-router-dom'\r\nimport { useSiteSettings } from '@/hooks/useSiteSettings'\r\nimport { useAuth } from '@/contexts/AuthContext'\r\nimport { useProjects } from '@/hooks/useProjects'\r\nimport { useCategories } from '@/hooks/useCategories'\r\nimport ProjectCard from '@/components/ProjectCard'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { getLocalizedField, getLocalizedCategoryName } from '@/utils/i18nUtils'\r\n\r\nconst Projects: React.FC = () => {\r\n  const { settings: siteSettings } = useSiteSettings()\r\n  const { isAuthenticated } = useAuth()\r\n  const { projects, loading, error } = useProjects()\r\n  const location = useLocation()\r\n  const { t, i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  \r\n  // 🌟 카테고리 데이터 가져오기\r\n  const { data: categories = [], isLoading: categoriesLoading } = useCategories()\r\n\r\n  const [filter, setFilter] = useState('all')\r\n  \r\n  // 🌟 URL 쿼리 파라미터에서 skillId 읽기\r\n  const [searchParams, setSearchParams] = useSearchParams()\r\n  const skillIdFromUrl = searchParams.get('skillId')\r\n  \r\n  // 🌟 스크롤 위치 복원\r\n  useEffect(() => {\r\n    const scrollPosition = (location.state as any)?.scrollPosition\r\n    if (scrollPosition) {\r\n      window.scrollTo(0, scrollPosition)\r\n      // state를 정리하여 뒤로가기 시 다시 복원되지 않도록\r\n      window.history.replaceState({}, document.title)\r\n    }\r\n  }, [])\r\n  \r\n  // 🌟 skillIdFromUrl이 변경될 때마다 카테고리 필터를 'all'로 초기화\r\n  useEffect(() => {\r\n    if (skillIdFromUrl) {\r\n      setFilter('all')\r\n    }\r\n  }, [skillIdFromUrl])\r\n\r\n  // useInView 훅 선언\r\n  const [ref, inView] = useInView({\r\n    triggerOnce: true,\r\n    threshold: 0.1,\r\n  })\r\n\r\n  // 🌟 프로젝트 필터링 로직 확장 (categoryIds 배열 + 스킬 ID)\r\n  const filteredProjects = projects.filter(project => {\r\n    // 1. 카테고리 필터 검사 (categoryIds 배열 기반)\r\n    let categoryMatch = filter === 'all'\r\n    if (!categoryMatch) {\r\n      if (!project.categoryIds || project.categoryIds.length === 0) {\r\n        // 호환성: categoryIds가 없으면 기존 category 문자열 사용\r\n        categoryMatch = project.category === filter\r\n      } else {\r\n        // categoryIds 배열에 선택된 카테고리 ID가 포함되어 있는지 확인\r\n        categoryMatch = (project.categoryIds as any[]).some((catIdOrObj: any) => {\r\n          const catId = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\r\n          return catId === filter\r\n        })\r\n      }\r\n    }\r\n    \r\n    // 2. 스킬 ID 필터 검사\r\n    const skillMatch = !skillIdFromUrl || (project.skillIds && project.skillIds.includes(skillIdFromUrl))\r\n    \r\n    return categoryMatch && skillMatch\r\n  })\r\n  \r\n  // 🌟 카테고리 필터 버튼 핸들러 수정\r\n  const handleCategoryFilter = (categoryId: string) => {\r\n    setFilter(categoryId)\r\n    // 카테고리 버튼을 누르면 URL의 skillId 파라미터는 제거\r\n    setSearchParams(searchParams => {\r\n      searchParams.delete('skillId')\r\n      return searchParams\r\n    }, { replace: true })\r\n  }\r\n\r\n  const containerVariants = {\r\n    visible: {\r\n      transition: {\r\n        staggerChildren: 0.1,\r\n      },\r\n    },\r\n  }\r\n\r\n  const itemVariants = {\r\n    hidden: { opacity: 0, y: 30 },\r\n    visible: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        duration: 0.6,\r\n        ease: 'easeOut',\r\n      },\r\n    },\r\n  }\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'preparing':\r\n        return 'bg-caramel-100 text-caramel-800 dark:bg-caramel-900 dark:text-caramel-200'\r\n      case 'planning':\r\n        return 'bg-coffee-100 text-coffee-800 dark:bg-coffee-900 dark:text-coffee-200'\r\n      case 'completed':\r\n        return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'\r\n      default:\r\n        return 'bg-cream-100 text-dark-800 dark:bg-dark-700 dark:text-dark-200'\r\n    }\r\n  }\r\n\r\n  const getStatusText = (status: string) => {\r\n    switch (status) {\r\n      case 'preparing':\r\n        return t('projects.status.preparing')\r\n      case 'planning':\r\n        return t('projects.status.planning')\r\n      case 'completed':\r\n        return t('projects.status.completed')\r\n      default:\r\n        return t('projects.status.all')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"section-padding bg-white dark:bg-dark-800 min-h-screen\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <motion.div\r\n          ref={ref}\r\n          initial=\"hidden\"\r\n          animate={inView ? 'visible' : 'hidden'}\r\n          variants={containerVariants}\r\n        >\r\n          {/* 1. 제목 및 부제목 */}\r\n          <motion.div variants={itemVariants} className=\"text-center mb-16\">\r\n            <h2 className=\"text-4xl md:text-5xl font-bold text-dark-900 dark:text-white mb-6\">\r\n              {getLocalizedField(currentLang, siteSettings?.projectsTitle, siteSettings?.projectsTitleEn, siteSettings?.projectsTitleJa) || t('projects.title')}\r\n            </h2>\r\n            <p className=\"text-xl text-dark-600 dark:text-dark-300 max-w-3xl mx-auto mb-8\">\r\n              {/* 🌟 skillId 필터 활성화 시 부제목 변경 */}\r\n              {skillIdFromUrl \r\n                ? t('projects.subtitle')\r\n                : getLocalizedField(currentLang, siteSettings?.projectsSubtitle, siteSettings?.projectsSubtitleEn, siteSettings?.projectsSubtitleJa) || t('projects.subtitle')\r\n              }\r\n            </p>\r\n          </motion.div>\r\n\r\n          {/* 2. 프로젝트 추가 버튼 (인증된 경우) */}\r\n          {isAuthenticated && (\r\n            <motion.div variants={itemVariants} className=\"mb-8 flex justify-end\">\r\n              <Link\r\n                to=\"/admin\"\r\n                className=\"inline-flex items-center gap-2 bg-accent-500 hover:bg-accent-600 text-white font-medium px-6 py-3 rounded-lg transition-colors duration-600 shadow-medium hover:shadow-glow\"\r\n              >\r\n                <FaPlus /> {t('common.create')}\r\n              </Link>\r\n            </motion.div>\r\n          )}\r\n\r\n          {/* 3. 카테고리 필터 */}\r\n          <motion.div variants={itemVariants} className=\"flex justify-center flex-wrap gap-3 mb-12\">\r\n            {/* 🌟 skillIdFromUrl이 있을 경우 초기화 버튼 표시 */}\r\n            {skillIdFromUrl && (\r\n              <motion.button\r\n                onClick={() => setSearchParams({}, { replace: true })}\r\n                whileTap={{ scale: 0.95 }}\r\n                layout\r\n                transition={{ type: 'spring', stiffness: 700, damping: 30 }}\r\n                className=\"px-6 py-2 rounded-xl font-medium bg-red-500 text-white shadow-lg shadow-red-500/50 transition-all duration-200 hover:bg-red-600\"\r\n              >\r\n                ❌ 스킬 필터 초기화\r\n              </motion.button>\r\n            )}\r\n\r\n            {/* 전체 버튼 */}\r\n            <motion.button\r\n              key=\"all\"\r\n              onClick={() => handleCategoryFilter('all')}\r\n              whileTap={{ scale: 0.95 }}\r\n              layout\r\n              transition={{ type: 'spring', stiffness: 700, damping: 30 }}\r\n              className={`px-6 py-2 rounded-xl font-medium transition-all duration-200 ${\r\n                !skillIdFromUrl && filter === 'all'\r\n                  ? 'bg-primary-500 text-white shadow-lg shadow-primary-500/50'\r\n                  : 'bg-white dark:bg-dark-800 text-dark-700 dark:text-dark-300 hover:bg-secondary-100 dark:hover:bg-dark-700 border border-secondary-200 dark:border-dark-700'\r\n              }`}\r\n            >\r\n              전체\r\n            </motion.button>\r\n            \r\n            {/* 카테고리 버튼들 */}\r\n            {categories.map((category) => (\r\n              <motion.button\r\n                key={category._id}\r\n                onClick={() => handleCategoryFilter(category._id)}\r\n                whileTap={{ scale: 0.95 }}\r\n                layout\r\n                transition={{ type: 'spring', stiffness: 700, damping: 30 }}\r\n                className={`px-6 py-2 rounded-xl font-medium transition-all duration-200 ${\r\n                  // 🌟 skillIdFromUrl이 없을 때만 category filter의 활성화 상태 표시\r\n                  !skillIdFromUrl && filter === category._id\r\n                    ? 'bg-primary-500 text-white shadow-lg shadow-primary-500/50'\r\n                    : 'bg-white dark:bg-dark-800 text-dark-700 dark:text-dark-300 hover:bg-secondary-100 dark:hover:bg-dark-700 border border-secondary-200 dark:border-dark-700'\r\n                }`}\r\n              >\r\n                {getLocalizedCategoryName(currentLang, category)}\r\n              </motion.button>\r\n            ))}\r\n          </motion.div>\r\n\r\n          {/* 4. 프로젝트 그리드 */}\r\n          <motion.div \r\n            className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\"\r\n            variants={containerVariants}\r\n            initial=\"hidden\"\r\n            animate={inView ? \"visible\" : \"hidden\"}\r\n            layout\r\n          >\r\n            <AnimatePresence>\r\n              {loading && (\r\n                <motion.div \r\n                  key=\"loading\"\r\n                  initial={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                  exit={{ opacity: 0 }}\r\n                  className=\"md:col-span-2 lg:col-span-3 text-center p-12 bg-white dark:bg-dark-800 rounded-2xl shadow-inner border border-secondary-200 dark:border-dark-700\"\r\n                >\r\n                  <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto mb-4\"></div>\r\n                  <p className=\"text-xl font-semibold text-dark-800 dark:text-cream-100\">\r\n                    프로젝트를 불러오는 중...\r\n                  </p>\r\n                </motion.div>\r\n              )}\r\n\r\n              {error && (\r\n                <motion.div \r\n                  key=\"error\"\r\n                  initial={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                  exit={{ opacity: 0 }}\r\n                  className=\"md:col-span-2 lg:col-span-3 text-center p-12 bg-red-50 dark:bg-red-900/20 rounded-2xl shadow-inner border border-red-200 dark:border-red-800\"\r\n                >\r\n                  <p className=\"text-xl font-semibold text-red-800 dark:text-red-200\">\r\n                    {error}\r\n                  </p>\r\n                </motion.div>\r\n              )}\r\n\r\n              {!loading && !error && filteredProjects.length === 0 && (\r\n                <motion.div \r\n                  key=\"no-projects\"\r\n                  initial={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                  exit={{ opacity: 0 }}\r\n                  className=\"md:col-span-2 lg:col-span-3 text-center p-12 bg-white dark:bg-dark-800 rounded-2xl shadow-inner border border-secondary-200 dark:border-dark-700\"\r\n                >\r\n                  <FaLaptopCode className=\"text-primary-600 dark:text-primary-400 text-4xl mx-auto mb-4\" />\r\n                  <p className=\"text-xl font-semibold text-dark-800 dark:text-cream-100\">\r\n                    {filter === 'all' ? '등록된 프로젝트가 없습니다.' : '선택하신 카테고리의 프로젝트가 아직 없습니다.'}\r\n                  </p>\r\n                  <p className=\"text-dark-500 dark:text-dark-400 mt-2\">\r\n                    {filter === 'all' ? '관리자 대시보드에서 첫 번째 프로젝트를 추가해보세요!' : '다른 필터를 선택하거나, 곧 업데이트될 프로젝트를 기대해 주세요!'}\r\n                  </p>\r\n                </motion.div>\r\n              )}\r\n            \r\n              {!loading && !error && filteredProjects.map((project) => (\r\n                <ProjectCard\r\n                  key={project._id}\r\n                  project={project}\r\n                  itemVariants={itemVariants}\r\n                  getStatusColor={getStatusColor}\r\n                  getStatusText={getStatusText}\r\n                />\r\n              ))}\r\n            </AnimatePresence>\r\n          </motion.div>\r\n\r\n          {/* 🌟 프로젝트 업데이트 카드 - 사이트 설정에서 관리 */}\r\n          {siteSettings?.projectsUpdateTitle && (\r\n            <motion.div\r\n              variants={itemVariants}\r\n              className=\"card p-10 mt-12 bg-primary-600 text-white rounded-2xl shadow-xl\"\r\n            >\r\n              <h3 className=\"text-2xl font-bold mb-4\">{siteSettings.projectsUpdateTitle}</h3>\r\n              <p className=\"text-secondary-100 mb-6 text-lg\">\r\n                {siteSettings.projectsUpdateDescription || '현재 학습 중인 기술들을 활용한 실제 프로젝트들을 곧 업로드할 예정입니다.'}\r\n              </p>\r\n              <div className=\"flex flex-wrap gap-3\">\r\n                {(siteSettings.projectsUpdateTechList || ['PLC 프로그래밍', '데이터 분석', 'IoT 시스템', '협동로봇']).map((tech: string) => (\r\n                  <span\r\n                    key={tech}\r\n                    className=\"px-4 py-2 bg-white/20 rounded-lg text-sm font-medium\"\r\n                  >\r\n                    {tech}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </motion.div>\r\n          )}\r\n        </motion.div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Projects"],"names":["ProjectCard","project","itemVariants","getStatusColor","getStatusText","i18n","useTranslation","currentLang","language","technologies","getLocalizedArrayField","technologiesEn","technologiesJa","hasLinks","githubLink","liveLink","jsxRuntimeExports","jsx","motion","div","variants","layout","className","children","jsxs","Link","to","_id","state","scrollPosition","window","scrollY","image","src","alt","title","loading","decoding","width","height","FaImage","status","getLocalizedField","titleEn","titleJa","description","descriptionEn","descriptionJa","slice","map","tech","length","onClick","e","stopPropagation","Fragment","href","target","rel","FaExternalLinkAlt","size","FaGithub","Projects","settings","siteSettings","useSiteSettings","isAuthenticated","useAuth","projects","error","useProjects","location","useLocation","t","data","categories","isLoading","categoriesLoading","useCategories","filter","setFilter","useState","searchParams","setSearchParams","useSearchParams","skillIdFromUrl","get","useEffect","_a","scrollTo","history","replaceState","document","ref","inView","useInView","triggerOnce","threshold","filteredProjects","categoryMatch","categoryIds","some","catIdOrObj","category","skillMatch","skillIds","includes","handleCategoryFilter","categoryId","delete","replace","containerVariants","visible","transition","staggerChildren","hidden","opacity","y","duration","ease","initial","animate","projectsTitle","projectsTitleEn","projectsTitleJa","projectsSubtitle","projectsSubtitleEn","projectsSubtitleJa","FaPlus","button","whileTap","scale","type","stiffness","damping","getLocalizedCategoryName","AnimatePresence","exit","FaLaptopCode","projectsUpdateTitle","projectsUpdateDescription","projectsUpdateTechList"],"mappings":"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"}