{"version":3,"file":"chunk-7523ae4e.js","sources":["../../src/hooks/useVideoPlaylists.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { videoPlaylistsAPI, playlistVideosAPI } from '../services/api'\r\nimport { VideoPlaylist, VideoPlaylistFormData, PlaylistVideo, PlaylistVideoFormData } from '../types'\r\n\r\n// =================================================================\r\n// Ïû¨ÏÉù Î™©Î°ù Ï°∞Ìöå ÌõÖ\r\n// =================================================================\r\n\r\nexport const useVideoPlaylists = () => {\r\n  return useQuery<VideoPlaylist[], Error>({\r\n    queryKey: ['videoPlaylists'],\r\n    queryFn: async () => {\r\n      const response = await videoPlaylistsAPI.getAll()\r\n      return response.data?.data || response.data || []\r\n    },\r\n    staleTime: 5 * 60 * 1000,\r\n  })\r\n}\r\n\r\nexport const useVideoPlaylist = (id: string | undefined) => {\r\n  return useQuery<VideoPlaylist, Error>({\r\n    queryKey: ['videoPlaylist', id],\r\n    queryFn: async () => {\r\n      if (!id) throw new Error('IDÍ∞Ä ÌïÑÏöîÌï©ÎãàÎã§')\r\n      const response = await videoPlaylistsAPI.getById(id)\r\n      return response.data?.data || response.data\r\n    },\r\n    enabled: !!id,\r\n    staleTime: 5 * 60 * 1000,\r\n  })\r\n}\r\n\r\n// =================================================================\r\n// Ïû¨ÏÉù Î™©Î°ù ÎÇ¥ ÏòÅÏÉÅ Ï°∞Ìöå ÌõÖ\r\n// =================================================================\r\n\r\nexport const usePlaylistVideos = (playlistId: string | undefined) => {\r\n  return useQuery<PlaylistVideo[], Error>({\r\n    queryKey: ['playlistVideos', playlistId],\r\n    queryFn: async () => {\r\n      if (!playlistId) return []\r\n      const response = await playlistVideosAPI.getByPlaylist(playlistId)\r\n      return response.data?.data || response.data || []\r\n    },\r\n    enabled: !!playlistId,\r\n    staleTime: 5 * 60 * 1000,\r\n  })\r\n}\r\n\r\n// =================================================================\r\n// Ïû¨ÏÉù Î™©Î°ù Mutation ÌõÖ\r\n// =================================================================\r\n\r\nexport const useCreateVideoPlaylist = () => {\r\n  const queryClient = useQueryClient()\r\n\r\n  return useMutation({\r\n    mutationFn: (data: VideoPlaylistFormData) => videoPlaylistsAPI.create(data),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['videoPlaylists'] })\r\n    },\r\n  })\r\n}\r\n\r\nexport const useUpdateVideoPlaylist = () => {\r\n  const queryClient = useQueryClient()\r\n\r\n  return useMutation({\r\n    mutationFn: ({ id, data }: { id: string; data: VideoPlaylistFormData }) =>\r\n      videoPlaylistsAPI.update(id, data),\r\n    onSuccess: (_, variables) => {\r\n      queryClient.invalidateQueries({ queryKey: ['videoPlaylists'] })\r\n      queryClient.invalidateQueries({ queryKey: ['videoPlaylist', variables.id] })\r\n    },\r\n  })\r\n}\r\n\r\nexport const useDeleteVideoPlaylist = () => {\r\n  const queryClient = useQueryClient()\r\n\r\n  return useMutation({\r\n    mutationFn: (id: string) => videoPlaylistsAPI.delete(id),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['videoPlaylists'] })\r\n    },\r\n  })\r\n}\r\n\r\n// =================================================================\r\n// Ïû¨ÏÉù Î™©Î°ù ÏòÅÏÉÅ Mutation ÌõÖ\r\n// =================================================================\r\n\r\nexport const useCreatePlaylistVideo = () => {\r\n  const queryClient = useQueryClient()\r\n\r\n  return useMutation({\r\n    mutationFn: (data: PlaylistVideoFormData) => playlistVideosAPI.create(data),\r\n    onSuccess: (_, variables) => {\r\n      queryClient.invalidateQueries({ queryKey: ['playlistVideos', variables.playlistId] })\r\n    },\r\n  })\r\n}\r\n\r\nexport const useUpdatePlaylistVideo = () => {\r\n  const queryClient = useQueryClient()\r\n\r\n  return useMutation({\r\n    mutationFn: ({ id, data }: { id: string; data: PlaylistVideoFormData }) =>\r\n      playlistVideosAPI.update(id, data),\r\n    onSuccess: (response) => {\r\n      const playlistId = response.data?.data?.playlistId\r\n      if (playlistId) {\r\n        queryClient.invalidateQueries({ queryKey: ['playlistVideos', playlistId] })\r\n      }\r\n    },\r\n  })\r\n}\r\n\r\nexport const useDeletePlaylistVideo = () => {\r\n  const queryClient = useQueryClient()\r\n\r\n  return useMutation({\r\n    mutationFn: (id: string) => playlistVideosAPI.delete(id),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['playlistVideos'] })\r\n    },\r\n  })\r\n}\r\n\r\n// =================================================================\r\n// Í¥ÄÎ¶¨ÏûêÏö© Îç∞Ïù¥ÌÑ∞ ÌõÖ\r\n// =================================================================\r\n\r\nexport const useVideoPlaylistManagerData = () => {\r\n  const { data: playlists = [], isLoading } = useVideoPlaylists()\r\n  const createMutation = useCreateVideoPlaylist()\r\n  const updateMutation = useUpdateVideoPlaylist()\r\n  const deleteMutation = useDeleteVideoPlaylist()\r\n\r\n  const createPlaylist = async (data: VideoPlaylistFormData) => {\r\n    try {\r\n      console.log('üé¨ Ïû¨ÏÉù Î™©Î°ù ÏÉùÏÑ± ÏãúÎèÑ:', data)\r\n      const result = await createMutation.mutateAsync(data)\r\n      console.log('‚úÖ Ïû¨ÏÉù Î™©Î°ù ÏÉùÏÑ± ÏÑ±Í≥µ:', result)\r\n      return { success: true }\r\n    } catch (error: any) {\r\n      console.error('‚ùå Ïû¨ÏÉù Î™©Î°ù ÏÉùÏÑ± Ïã§Ìå®:', error)\r\n      console.error('‚ùå ÏóêÎü¨ ÏÉÅÏÑ∏:', {\r\n        message: error?.message,\r\n        response: error?.response?.data,\r\n        status: error?.response?.status\r\n      })\r\n      return { success: false, error }\r\n    }\r\n  }\r\n\r\n  const updatePlaylist = async (id: string, data: VideoPlaylistFormData) => {\r\n    try {\r\n      await updateMutation.mutateAsync({ id, data })\r\n      return { success: true }\r\n    } catch (error) {\r\n      console.error('Ïû¨ÏÉù Î™©Î°ù ÏàòÏ†ï Ïã§Ìå®:', error)\r\n      return { success: false, error }\r\n    }\r\n  }\r\n\r\n  const deletePlaylist = async (id: string) => {\r\n    try {\r\n      await deleteMutation.mutateAsync(id)\r\n      return { success: true }\r\n    } catch (error) {\r\n      console.error('Ïû¨ÏÉù Î™©Î°ù ÏÇ≠Ï†ú Ïã§Ìå®:', error)\r\n      return { success: false, error }\r\n    }\r\n  }\r\n\r\n  return {\r\n    playlists,\r\n    isLoading,\r\n    createPlaylist,\r\n    updatePlaylist,\r\n    deletePlaylist,\r\n  }\r\n}\r\n\r\n"],"names":["useVideoPlaylists","useQuery","queryKey","queryFn","async","response","videoPlaylistsAPI","getAll","_a","data","staleTime","useVideoPlaylist","id","Error","getById","enabled","usePlaylistVideos","playlistId","playlistVideosAPI","getByPlaylist","useDeleteVideoPlaylist","queryClient","useQueryClient","useMutation","mutationFn","delete","onSuccess","invalidateQueries","useCreatePlaylistVideo","create","_","variables","useUpdatePlaylistVideo","update","_b","useDeletePlaylistVideo","useVideoPlaylistManagerData","playlists","isLoading","createMutation","useCreateVideoPlaylist","updateMutation","useUpdateVideoPlaylist","deleteMutation","createPlaylist","mutateAsync","success","error","updatePlaylist","deletePlaylist"],"mappings":"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"}