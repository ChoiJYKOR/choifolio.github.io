import{c as a,u as e,b as t}from"./chunk-9a18e39e.js";import{ao as r}from"./index-5373f156.js";const s=["categories"],n=()=>a({queryKey:s,queryFn:async()=>(await r.getAll()).data}),c=e=>a({queryKey:[...s,e,"usage"],queryFn:async()=>{if(!e)throw new Error("ID가 필요합니다");return(await r.getUsage(e)).data},enabled:!!e}),u=()=>{const{data:a=[],isLoading:c}=n(),u=(()=>{const a=e();return t({mutationFn:async a=>(await r.create(a)).data,onSuccess:()=>{a.invalidateQueries({queryKey:s})}})})(),i=(()=>{const a=e();return t({mutationFn:async({id:a,data:e})=>(await r.update(a,e)).data,onSuccess:()=>{a.invalidateQueries({queryKey:s})}})})(),o=(()=>{const a=e();return t({mutationFn:async a=>(await r.delete(a)).data,onSuccess:()=>{a.invalidateQueries({queryKey:s})}})})();return{categories:a,isLoading:c,createCategory:async a=>{try{return await u.mutateAsync(a),{success:!0}}catch(e){return{success:!1,error:e}}},updateCategory:async(a,e)=>{try{return await i.mutateAsync({id:a,data:e}),{success:!0}}catch(t){return{success:!1,error:t}}},deleteCategory:async a=>{try{return await o.mutateAsync(a),{success:!0}}catch(e){return{success:!1,error:e}}}}};export{u as a,c as b,n as u};
//# sourceMappingURL=chunk-eaed8c6b.js.map
