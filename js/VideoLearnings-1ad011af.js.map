{"version":3,"file":"VideoLearnings-1ad011af.js","sources":["../../src/pages/VideoLearnings.tsx"],"sourcesContent":["import React, { useState, useMemo, useEffect } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { useInView } from 'react-intersection-observer'\r\nimport { FaVideo, FaPlus, FaStar, FaCalendar, FaCubes } from 'react-icons/fa'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { useAuth } from '@/contexts/AuthContext'\r\nimport { useSiteSettings } from '@/hooks/useSiteSettings'\r\nimport { useVideoLearnings } from '@/hooks/useVideoLearnings'\r\nimport { useVideoPlaylists } from '@/hooks/useVideoPlaylists'\r\nimport { useCategories } from '@/hooks/useCategories'\r\nimport { formatDate } from '@/utils/dateUtils'\r\nimport { extractUniqueCategories, createCategoryDisplayNames } from '@/utils/categoryUtils'\r\nimport { extractYouTubeId, getYouTubeThumbnail } from '@/utils/videoUtils'\r\nimport ScrollToTopButton from '@/components/common/ScrollToTopButton'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { getLocalizedCategoryName } from '@/utils/i18nUtils'\r\n\r\nconst VideoLearnings: React.FC = () => {\r\n  const { settings: siteSettings, loading: settingsLoading } = useSiteSettings()\r\n  const { t, i18n } = useTranslation()\r\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\r\n  const { data: videoLearnings = [], isLoading: loading } = useVideoLearnings()\r\n  const { data: playlists = [], isLoading: playlistsLoading } = useVideoPlaylists()\r\n  const location = useLocation()\r\n  \r\n  const [ref, inView] = useInView({\r\n    triggerOnce: true,\r\n    threshold: 0.1,\r\n  })\r\n\r\n  // 🌟 location state에서 이전 탭과 스크롤 위치 복원\r\n  const [activeTab, setActiveTab] = useState<'individual' | 'playlist'>(() => {\r\n    return (location.state as any)?.previousTab || 'individual'\r\n  })\r\n  const [filter, setFilter] = useState('all')\r\n  const { isAuthenticated } = useAuth()\r\n  \r\n  // 🌟 스크롤 위치 복원\r\n  useEffect(() => {\r\n    const scrollPosition = (location.state as any)?.scrollPosition\r\n    if (scrollPosition) {\r\n      window.scrollTo(0, scrollPosition)\r\n      // state를 정리하여 뒤로가기 시 다시 복원되지 않도록\r\n      window.history.replaceState({}, document.title)\r\n    }\r\n  }, [])\r\n  \r\n  // 🌟 카테고리 데이터 가져오기\r\n  const { data: categories = [], isLoading: categoriesLoading } = useCategories()\r\n\r\n  // 🌟 개별 영상 필터링 로직 (categoryIds 배열 기반)\r\n  const filteredVideos = useMemo(() => {\r\n    const safeVideos = videoLearnings || []\r\n    if (filter === 'all') return safeVideos\r\n    \r\n    // categoryIds 배열에 선택된 카테고리 ID가 포함되어 있는지 확인\r\n    return safeVideos.filter(video => {\r\n      if (!video.categoryIds || video.categoryIds.length === 0) {\r\n        // 호환성: categoryIds가 없으면 기존 category 문자열 사용\r\n        return video.category?.toLowerCase() === filter\r\n      }\r\n      \r\n      // categoryIds가 populate된 객체 배열인 경우와 ID 문자열 배열인 경우 모두 처리\r\n      return (video.categoryIds as any[]).some((catIdOrObj: any) => {\r\n        const catId = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\r\n        return catId === filter\r\n      })\r\n    })\r\n  }, [videoLearnings, filter])\r\n\r\n  // 🌟 재생 목록 필터링 로직 (개별 영상과 동일한 방식)\r\n  const filteredPlaylists = useMemo(() => {\r\n    const safePlaylists = playlists || []\r\n    if (filter === 'all') return safePlaylists\r\n    \r\n    // categoryIds 배열에 선택된 카테고리 ID가 포함되어 있는지 확인\r\n    return safePlaylists.filter(playlist => {\r\n      if (!playlist.categoryIds || playlist.categoryIds.length === 0) {\r\n        // 호환성: categoryIds가 없으면 기존 category 문자열 사용\r\n        return playlist.category?.toLowerCase() === filter\r\n      }\r\n      \r\n      // categoryIds가 populate된 객체 배열인 경우와 ID 문자열 배열인 경우 모두 처리\r\n      return (playlist.categoryIds as any[]).some((catIdOrObj: any) => {\r\n        const catId = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\r\n        return catId === filter\r\n      })\r\n    })\r\n  }, [playlists, filter])\r\n\r\n  const isPageLoading = settingsLoading || loading\r\n\r\n  const containerVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.2,\r\n      },\r\n    },\r\n  }\r\n\r\n  const itemVariants = {\r\n    hidden: { y: 20, opacity: 0 },\r\n    visible: {\r\n      y: 0,\r\n      opacity: 1,\r\n    },\r\n  }\r\n\r\n  if (isPageLoading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <section className=\"section-padding bg-white dark:bg-dark-900 min-h-screen\">\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        {/* 헤더 */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"text-center mb-12\"\r\n        >\r\n          <h1 className=\"text-4xl md:text-5xl font-bold mb-4 text-gray-900 dark:text-white flex items-center justify-center gap-3\">\r\n            <FaVideo className=\"text-red-600\" />\r\n            {t('videoLearnings.title')}\r\n          </h1>\r\n          <p className=\"text-xl text-gray-600 dark:text-gray-400\">\r\n            {t('videoLearnings.subtitle')}\r\n          </p>\r\n        </motion.div>\r\n\r\n        {/* 🌟 탭 전환 UI */}\r\n        <div className=\"flex gap-4 mb-8 border-b border-gray-200 dark:border-gray-700\">\r\n          <button\r\n            onClick={() => setActiveTab('individual')}\r\n            className={`px-6 py-3 font-medium transition-all ${\r\n              activeTab === 'individual'\r\n                ? 'border-b-2 border-primary-600 text-primary-600 dark:text-primary-400'\r\n                : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-200'\r\n            }`}\r\n          >\r\n            {t('videoLearnings.individual')}\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('playlist')}\r\n            className={`px-6 py-3 font-medium transition-all ${\r\n              activeTab === 'playlist'\r\n                ? 'border-b-2 border-primary-600 text-primary-600 dark:text-primary-400'\r\n                : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-200'\r\n            }`}\r\n          >\r\n            {t('videoLearnings.playlist')}\r\n          </button>\r\n        </div>\r\n\r\n        {/* 🌟 카테고리 필터 - 개별 영상 탭 */}\r\n        {activeTab === 'individual' && (\r\n          <div ref={ref} className=\"flex gap-2 mb-8 overflow-x-auto pb-2\">\r\n          <button\r\n            onClick={() => setFilter('all')}\r\n            className={`px-6 py-2 rounded-full transition-colors font-medium whitespace-nowrap ${\r\n              filter === 'all'\r\n                ? 'bg-primary-600 text-white'\r\n                : 'bg-gray-200 dark:bg-dark-700 text-dark-700 dark:text-dark-300 hover:bg-gray-300 dark:hover:bg-dark-600'\r\n            }`}\r\n          >\r\n            전체 ({videoLearnings.length})\r\n          </button>\r\n          {categories.map((category) => {\r\n            // 해당 카테고리를 가진 영상 개수 계산\r\n            const count = videoLearnings.filter(v => {\r\n              if (!v.categoryIds || v.categoryIds.length === 0) {\r\n                return v.category === category.name\r\n              }\r\n              return (v.categoryIds as any[]).some((catIdOrObj: any) => {\r\n                const catId = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\r\n                return catId === category._id\r\n              })\r\n            }).length\r\n            \r\n            return (\r\n              <button\r\n                key={category._id}\r\n                onClick={() => setFilter(category._id)}\r\n                className={`px-6 py-2 rounded-full transition-colors font-medium whitespace-nowrap ${\r\n                  filter === category._id\r\n                    ? 'bg-primary-600 text-white'\r\n                    : 'bg-gray-200 dark:bg-dark-700 text-dark-700 dark:text-dark-300 hover:bg-gray-300 dark:hover:bg-dark-600'\r\n                }`}\r\n              >\r\n                {getLocalizedCategoryName(currentLang, category)} ({count})\r\n              </button>\r\n            )\r\n          })}\r\n          </div>\r\n        )}\r\n\r\n        {/* 🌟 카테고리 필터 - 시리즈 영상 탭 */}\r\n        {activeTab === 'playlist' && (\r\n          <div ref={ref} className=\"flex gap-2 mb-8 overflow-x-auto pb-2\">\r\n          <button\r\n            onClick={() => setFilter('all')}\r\n            className={`px-6 py-2 rounded-full transition-colors font-medium whitespace-nowrap ${\r\n              filter === 'all'\r\n                ? 'bg-primary-600 text-white'\r\n                : 'bg-gray-200 dark:bg-dark-700 text-dark-700 dark:text-dark-300 hover:bg-gray-300 dark:hover:bg-dark-600'\r\n            }`}\r\n          >\r\n            전체 ({playlists.length})\r\n          </button>\r\n          {categories.map((category) => {\r\n            // 해당 카테고리를 가진 시리즈 영상 개수 계산\r\n            const count = playlists.filter(p => {\r\n              if (!p.categoryIds || p.categoryIds.length === 0) {\r\n                return p.category === category.name\r\n              }\r\n              return (p.categoryIds as any[]).some((catIdOrObj: any) => {\r\n                const catId = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\r\n                return catId === category._id\r\n              })\r\n            }).length\r\n            \r\n            return (\r\n              <button\r\n                key={category._id}\r\n                onClick={() => setFilter(category._id)}\r\n                className={`px-6 py-2 rounded-full transition-colors font-medium whitespace-nowrap ${\r\n                  filter === category._id\r\n                    ? 'bg-primary-600 text-white'\r\n                    : 'bg-gray-200 dark:bg-dark-700 text-dark-700 dark:text-dark-300 hover:bg-gray-300 dark:hover:bg-dark-600'\r\n                }`}\r\n              >\r\n                {getLocalizedCategoryName(currentLang, category)} ({count})\r\n              </button>\r\n            )\r\n          })}\r\n          </div>\r\n        )}\r\n\r\n        {/* 개별 영상 그리드 - individual 탭에서만 표시 */}\r\n        {activeTab === 'individual' && (\r\n          <motion.div\r\n          variants={containerVariants}\r\n          initial=\"hidden\"\r\n          animate={inView ? 'visible' : 'hidden'}\r\n          className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\"\r\n        >\r\n            {filteredVideos.map((video) => {\r\n            // 🌟 호환성: videoId가 없으면 videoUrl에서 추출\r\n            const videoId = video.videoId || ((video as any).videoUrl ? extractYouTubeId((video as any).videoUrl) : null)\r\n            const thumbnailUrl = videoId ? getYouTubeThumbnail(videoId, 'hqdefault') : null\r\n\r\n            return (\r\n              <motion.div key={video._id} variants={itemVariants}>\r\n                <Link\r\n                  to={`/video-learnings/${video._id}`}\r\n                  state={{ previousTab: activeTab, scrollPosition: window.scrollY }}\r\n                  className=\"block bg-white dark:bg-dark-800 rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-shadow border border-gray-200 dark:border-dark-700\"\r\n                >\r\n                  {/* 썸네일 */}\r\n                  {thumbnailUrl ? (\r\n                    <div className=\"relative aspect-video bg-gray-200 dark:bg-gray-700\">\r\n                      <img\r\n                        src={thumbnailUrl}\r\n                        alt={video.title}\r\n                        className=\"w-full h-full object-cover\"\r\n                        loading=\"lazy\"\r\n                        decoding=\"async\"\r\n                        width=\"640\"\r\n                        height=\"360\"\r\n                      />\r\n                      <div className=\"absolute inset-0 bg-black/0 hover:bg-black/10 transition-colors\" />\r\n                      <div className=\"absolute top-2 right-2 bg-red-600 px-2 py-1 rounded text-white text-xs font-bold\">\r\n                        YouTube\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"aspect-video bg-gradient-to-br from-red-400 to-pink-500 flex items-center justify-center\">\r\n                      <FaVideo className=\"text-white text-6xl\" />\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* 내용 */}\r\n                  <div className=\"p-6\">\r\n                    <div className=\"flex items-center justify-between mb-3\">\r\n                      {/* 카테고리 배지 (복수 표시) */}\r\n                      <div className=\"flex flex-wrap gap-2\">\r\n                        {video.categoryIds && video.categoryIds.length > 0 ? (\r\n                          (video.categoryIds as any[]).map((catIdOrObj: any) => {\r\n                            const catId = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\r\n                            const categoryObj = typeof catIdOrObj === 'string' \r\n                              ? categories.find(c => c._id === catId)\r\n                              : catIdOrObj\r\n                            \r\n                            return categoryObj ? (\r\n                              <span \r\n                                key={catId}\r\n                                className=\"px-3 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-full text-sm font-medium\"\r\n                              >\r\n                                {getLocalizedCategoryName(currentLang, categoryObj)}\r\n                              </span>\r\n                            ) : null\r\n                          })\r\n                        ) : (\r\n                          // 호환성: categoryIds가 없으면 기존 category 표시\r\n                          video.category && (\r\n                            <span className=\"px-3 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-full text-sm font-medium\">\r\n                              {video.category}\r\n                            </span>\r\n                          )\r\n                        )}\r\n                      </div>\r\n                      {video.rating && (\r\n                        <div className=\"flex items-center gap-1\">\r\n                          {Array.from({ length: 5 }, (_, i) => (\r\n                            <FaStar\r\n                              key={i}\r\n                              className={`text-sm ${\r\n                                i < video.rating! ? 'text-yellow-500' : 'text-gray-300 dark:text-gray-600'\r\n                              }`}\r\n                            />\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n\r\n                    <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-2 line-clamp-2\">\r\n                      {video.title}\r\n                    </h3>\r\n\r\n                    {video.purpose && (\r\n                      <p className=\"text-gray-600 dark:text-gray-400 mb-4 line-clamp-2 text-sm\">\r\n                        {video.purpose}\r\n                      </p>\r\n                    )}\r\n\r\n                    <div className=\"flex items-center gap-4 text-sm text-gray-500 dark:text-gray-400\">\r\n                      <div className=\"flex items-center gap-1\">\r\n                        <FaCalendar className=\"text-xs\" />\r\n                        <span>{formatDate(video.watchDate)}</span>\r\n                      </div>\r\n                      {video.skillIds && video.skillIds.length > 0 && (\r\n                        <div className=\"flex items-center gap-1\">\r\n                          <FaCubes className=\"text-xs\" />\r\n                          <span>{video.skillIds.length}개 스킬</span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </motion.div>\r\n            )\r\n          })}\r\n          </motion.div>\r\n        )}\r\n\r\n        {/* 시리즈 영상 탭 - playlist 탭에서만 표시 */}\r\n        {activeTab === 'playlist' && (\r\n          <motion.div\r\n            variants={containerVariants}\r\n            initial=\"hidden\"\r\n            animate={inView ? 'visible' : 'hidden'}\r\n            className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\"\r\n          >\r\n            {filteredPlaylists.map((playlist) => (\r\n              <motion.div key={playlist._id} variants={itemVariants}>\r\n                <Link\r\n                  to={`/video-playlists/${playlist._id}`}\r\n                  state={{ previousTab: activeTab, scrollPosition: window.scrollY }}\r\n                  className=\"block bg-white dark:bg-dark-800 rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-shadow border border-gray-200 dark:border-dark-700\"\r\n                >\r\n                  {/* 재생 목록 아이콘 */}\r\n                  <div className=\"relative aspect-video bg-gradient-to-br from-purple-400 to-pink-500 flex items-center justify-center\">\r\n                    <FaVideo className=\"text-white text-6xl\" />\r\n                    <div className=\"absolute top-2 right-2 bg-red-600 px-2 py-1 rounded text-white text-xs font-bold\">\r\n                      재생목록\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* 내용 */}\r\n                  <div className=\"p-6\">\r\n                    <div className=\"flex items-center justify-between mb-3\">\r\n                      {/* 카테고리 배지 (복수 표시) */}\r\n                      <div className=\"flex flex-wrap gap-2\">\r\n                        {playlist.categoryIds && playlist.categoryIds.length > 0 ? (\r\n                          (playlist.categoryIds as any[]).map((catIdOrObj: any) => {\r\n                            const catId = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\r\n                            const categoryObj = typeof catIdOrObj === 'string' \r\n                              ? categories.find(c => c._id === catId)\r\n                              : catIdOrObj\r\n                            \r\n                            return categoryObj ? (\r\n                              <span \r\n                                key={catId}\r\n                                className=\"px-3 py-1 bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-200 rounded-full text-sm font-medium\"\r\n                              >\r\n                                {getLocalizedCategoryName(currentLang, categoryObj)}\r\n                              </span>\r\n                            ) : null\r\n                          })\r\n                        ) : (\r\n                          // 호환성: categoryIds가 없으면 기존 category 표시\r\n                          playlist.category && (\r\n                            <span className=\"px-3 py-1 bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-200 rounded-full text-sm font-medium\">\r\n                              {playlist.category}\r\n                            </span>\r\n                          )\r\n                        )}\r\n                      </div>\r\n                      {playlist.rating && (\r\n                        <div className=\"flex items-center gap-1\">\r\n                          {Array.from({ length: 5 }, (_, i) => (\r\n                            <FaStar\r\n                              key={i}\r\n                              className={`text-sm ${\r\n                                i < playlist.rating! ? 'text-yellow-500' : 'text-gray-300 dark:text-gray-600'\r\n                              }`}\r\n                            />\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n\r\n                    <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-2 line-clamp-2\">\r\n                      {playlist.title}\r\n                    </h3>\r\n\r\n                    {playlist.purpose && (\r\n                      <p className=\"text-gray-600 dark:text-gray-400 mb-4 line-clamp-2 text-sm\">\r\n                        {playlist.purpose}\r\n                      </p>\r\n                    )}\r\n\r\n                    <div className=\"flex items-center gap-4 text-sm text-gray-500 dark:text-gray-400\">\r\n                      <div className=\"flex items-center gap-1\">\r\n                        <FaCalendar className=\"text-xs\" />\r\n                        <span>{formatDate(playlist.watchDate)}</span>\r\n                      </div>\r\n                      {playlist.skillIds && playlist.skillIds.length > 0 && (\r\n                        <div className=\"flex items-center gap-1\">\r\n                          <FaCubes className=\"text-xs\" />\r\n                          <span>{playlist.skillIds.length}개 스킬</span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </motion.div>\r\n            ))}\r\n          </motion.div>\r\n        )}\r\n\r\n        {/* 시리즈 영상 빈 상태 */}\r\n        {activeTab === 'playlist' && filteredPlaylists.length === 0 && (\r\n          <div className=\"card p-12 text-center\">\r\n            <FaVideo className=\"text-6xl text-gray-400 mx-auto mb-4\" />\r\n            <h3 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\r\n              {filter === 'all' ? '시리즈 영상이 없습니다' : '해당 카테고리에 시리즈 영상이 없습니다'}\r\n            </h3>\r\n            <p className=\"text-gray-600 dark:text-gray-400\">\r\n              여러 영상을 통한 체계적인 학습 과정을 추가해보세요\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {/* 빈 상태 - individual 탭에서만 */}\r\n        {activeTab === 'individual' && filteredVideos.length === 0 && (\r\n          <div className=\"card p-12 text-center\">\r\n            <FaVideo className=\"text-6xl text-gray-400 mx-auto mb-4\" />\r\n            <h3 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\r\n              {filter === 'all' ? '영상 학습 기록이 없습니다' : '해당 카테고리에 영상이 없습니다'}\r\n            </h3>\r\n            <p className=\"text-gray-600 dark:text-gray-400\">\r\n              유튜브 영상을 통한 학습 내용을 추가해보세요\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {/* 🌟 스크롤 투 탑 버튼 */}\r\n      <ScrollToTopButton />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default VideoLearnings\r\n\r\n"],"names":["VideoLearnings","settings","siteSettings","loading","settingsLoading","useSiteSettings","t","i18n","useTranslation","currentLang","language","data","videoLearnings","isLoading","useVideoLearnings","playlists","playlistsLoading","useVideoPlaylists","location","useLocation","ref","inView","useInView","triggerOnce","threshold","activeTab","setActiveTab","useState","_a","state","previousTab","filter","setFilter","useAuth","useEffect","scrollPosition","window","scrollTo","history","replaceState","document","title","categories","categoriesLoading","useCategories","filteredVideos","useMemo","safeVideos","video","categoryIds","length","some","catIdOrObj","_id","category","toLowerCase","filteredPlaylists","safePlaylists","playlist","containerVariants","hidden","opacity","visible","transition","staggerChildren","itemVariants","y","jsxRuntimeExports","jsx","className","children","jsxs","motion","div","initial","animate","FaVideo","onClick","map","count","v","name","getLocalizedCategoryName","p","variants","videoId","videoUrl","extractYouTubeId","thumbnailUrl","getYouTubeThumbnail","Link","to","scrollY","src","alt","decoding","width","height","catId","categoryObj","find","c","rating","Array","from","_","i","FaStar","purpose","FaCalendar","formatDate","watchDate","skillIds","FaCubes","ScrollToTopButton"],"mappings":"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"}