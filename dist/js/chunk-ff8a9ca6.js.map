{"version":3,"file":"chunk-ff8a9ca6.js","sources":["../../src/utils/videoUtils.tsx","../../src/components/forms/BookForm.tsx","../../src/components/forms/ChapterForm.tsx","../../src/components/forms/LearningForm.tsx","../../src/components/forms/VideoLearningForm.tsx","../../src/components/forms/VideoPlaylistForm.tsx","../../src/components/forms/PlaylistVideoForm.tsx","../../src/components/forms/ExperienceForm.tsx","../../src/components/forms/ProjectForm.tsx","../../src/components/forms/SkillCategoryForm.tsx","../../src/components/forms/SkillForm.tsx","../../src/components/forms/CategoryForm.tsx"],"sourcesContent":["// =================================================================\n// 📹 유튜브 영상 관련 유틸리티 함수\n// =================================================================\n\n/**\n * 다양한 유튜브 URL 형식에서 영상 ID 추출\n * @param url - 유튜브 URL\n * @returns 영상 ID 또는 null\n */\nexport const extractYouTubeId = (url: string): string | null => {\n  if (!url) return null\n  \n  // 다양한 유튜브 URL 패턴\n  const patterns = [\n    /(?:youtube\\.com\\/watch\\?v=)([a-zA-Z0-9_-]{11})/,  // https://www.youtube.com/watch?v=VIDEO_ID\n    /(?:youtu\\.be\\/)([a-zA-Z0-9_-]{11})/,  // https://youtu.be/VIDEO_ID\n    /(?:youtube\\.com\\/embed\\/)([a-zA-Z0-9_-]{11})/,  // https://www.youtube.com/embed/VIDEO_ID\n    /(?:youtube\\.com\\/shorts\\/)([a-zA-Z0-9_-]{11})/,  // https://www.youtube.com/shorts/VIDEO_ID\n    /(?:youtube\\.com\\/v\\/)([a-zA-Z0-9_-]{11})/,  // https://www.youtube.com/v/VIDEO_ID\n  ]\n  \n  for (const pattern of patterns) {\n    const match = url.match(pattern)\n    if (match && match[1]) {\n      return match[1]\n    }\n  }\n  \n  return null\n}\n\n/**\n * 유튜브 영상 ID로 고해상도 썸네일 URL 생성\n * @param videoId - 유튜브 영상 ID\n * @param quality - 썸네일 품질 (maxresdefault, hqdefault, mqdefault, sddefault)\n * @returns 썸네일 URL\n */\nexport const getYouTubeThumbnail = (videoId: string, quality: string = 'maxresdefault'): string => {\n  return `https://img.youtube.com/vi/${videoId}/${quality}.jpg`\n}\n\n/**\n * 유튜브 임베드 URL 생성 (타임스탬프 지원, 전문성 최적화)\n * @param videoId - 유튜브 영상 ID\n * @param startTime - 시작 시간 (초 단위)\n * @param autoplay - 자동 재생 여부 (기본값: false)\n * @returns 임베드 URL\n */\nexport const getYouTubeEmbedUrl = (videoId: string, startTime?: number, autoplay: boolean = false): string => {\n  const baseUrl = `https://www.youtube.com/embed/${videoId}`\n  const params = new URLSearchParams()\n  \n  if (startTime !== undefined && startTime > 0) {\n    params.append('start', startTime.toString())\n  }\n  \n  if (autoplay) {\n    params.append('autoplay', '1')\n  }\n  \n  // 🌟 전문성을 위한 플레이어 최적화 파라미터\n  params.append('rel', '0')  // 관련 영상 추천 비활성화\n  params.append('modestbranding', '1')  // 유튜브 로고 최소화 & '동영상 더보기' 툴팁 제거\n  params.append('iv_load_policy', '3')  // 영상 주석(annotations) 비활성화\n  params.append('showinfo', '0')  // 영상 정보 표시 최소화\n  params.append('fs', '1')  // 전체 화면 버튼 표시\n  params.append('cc_load_policy', '0')  // 자막 자동 로드 비활성화\n  params.append('controls', '1')  // 컨트롤러 표시\n  \n  return `${baseUrl}?${params.toString()}`\n}\n\n/**\n * 텍스트에서 타임스탬프 패턴 추출 및 초 단위 변환\n * @param text - 타임스탬프를 포함한 텍스트\n * @returns 타임스탬프 정보 배열 [{ text: '[1:30]', seconds: 90, position: 10 }]\n */\nexport interface TimestampMatch {\n  text: string  // 원본 텍스트 (예: '[1:30]')\n  seconds: number  // 초 단위 시간\n  position: number  // 텍스트 내 위치\n}\n\nexport const parseTimestamps = (text: string): TimestampMatch[] => {\n  if (!text) return []\n  \n  // 타임스탬프 패턴: [MM:SS] 또는 [H:MM:SS]\n  const pattern = /\\[(\\d{1,2}):(\\d{2})(?::(\\d{2}))?\\]/g\n  const matches: TimestampMatch[] = []\n  \n  let match\n  while ((match = pattern.exec(text)) !== null) {\n    const hours = match[3] ? parseInt(match[1], 10) : 0\n    const minutes = match[3] ? parseInt(match[2], 10) : parseInt(match[1], 10)\n    const seconds = match[3] ? parseInt(match[3], 10) : parseInt(match[2], 10)\n    \n    const totalSeconds = hours * 3600 + minutes * 60 + seconds\n    \n    matches.push({\n      text: match[0],\n      seconds: totalSeconds,\n      position: match.index,\n    })\n  }\n  \n  return matches\n}\n\n/**\n * 타임스탬프가 포함된 텍스트를 클릭 가능한 링크로 변환\n * @param text - 원본 텍스트\n * @param onTimestampClick - 타임스탬프 클릭 핸들러\n * @returns JSX 요소 배열\n */\nexport const renderTextWithTimestamps = (\n  text: string,\n  onTimestampClick?: (seconds: number) => void\n): (string | JSX.Element)[] => {\n  if (!text) return []\n  \n  const timestamps = parseTimestamps(text)\n  if (timestamps.length === 0) return [text]\n  \n  const result: (string | JSX.Element)[] = []\n  let lastIndex = 0\n  \n  timestamps.forEach((ts, idx) => {\n    // 타임스탬프 이전 텍스트 추가\n    if (ts.position > lastIndex) {\n      result.push(text.substring(lastIndex, ts.position))\n    }\n    \n    // 타임스탬프를 클릭 가능한 버튼으로 추가\n    if (onTimestampClick) {\n      result.push(\n        <button\n          key={`ts-${idx}`}\n          onClick={() => onTimestampClick(ts.seconds)}\n          className=\"inline-flex items-center px-2 py-1 bg-blue-600 hover:bg-blue-700 text-white rounded font-mono text-xs font-bold transition-colors mx-1\"\n          title={`영상 ${ts.text} 위치로 이동`}\n        >\n          {ts.text}\n        </button>\n      )\n    } else {\n      result.push(\n        <span key={`ts-${idx}`} className=\"inline-flex items-center px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded font-mono text-xs font-bold mx-1\">\n          {ts.text}\n        </span>\n      )\n    }\n    \n    lastIndex = ts.position + ts.text.length\n  })\n  \n  // 마지막 타임스탬프 이후 텍스트 추가\n  if (lastIndex < text.length) {\n    result.push(text.substring(lastIndex))\n  }\n  \n  return result\n}\n\n/**\n * 유튜브 URL 유효성 검사\n * @param url - 검증할 URL\n * @returns 유효한 유튜브 URL 여부\n */\nexport const isValidYouTubeUrl = (url: string): boolean => {\n  if (!url) return false\n  return extractYouTubeId(url) !== null\n}\n\n/**\n * 유튜브 재생 목록 ID 추출\n * @param url - 유튜브 재생 목록 URL\n * @returns 재생 목록 ID 또는 null\n */\nexport const extractYouTubePlaylistId = (url: string): string | null => {\n  if (!url) return null\n  \n  // 재생 목록 URL 패턴\n  const patterns = [\n    /[?&]list=([a-zA-Z0-9_-]{13,})/,  // ?list=PLAYLIST_ID 또는 &list=PLAYLIST_ID\n    /youtube\\.com\\/playlist\\?list=([a-zA-Z0-9_-]{13,})/,  // playlist 전용 URL\n  ]\n  \n  for (const pattern of patterns) {\n    const match = url.match(pattern)\n    if (match && match[1]) {\n      return match[1]\n    }\n  }\n  \n  return null\n}\n\n/**\n * 유튜브 재생 목록 임베드 URL 생성\n * @param playlistId - 유튜브 재생 목록 ID\n * @param startVideoId - 시작할 영상 ID (선택사항)\n * @returns 재생 목록 임베드 URL\n */\nexport const getYouTubePlaylistEmbedUrl = (playlistId: string, startVideoId?: string): string => {\n  const params = new URLSearchParams()\n  \n  params.append('list', playlistId)\n  params.append('rel', '0')\n  params.append('modestbranding', '1')\n  params.append('iv_load_policy', '3')\n  params.append('showinfo', '0')\n  params.append('fs', '1')\n  params.append('cc_load_policy', '0')\n  params.append('controls', '1')\n  params.append('enablejsapi', '1')\n  \n  if (startVideoId) {\n    // 특정 영상부터 시작\n    return `https://www.youtube.com/embed/${startVideoId}?${params.toString()}`\n  } else {\n    // 재생 목록 첫 영상부터 시작\n    return `https://www.youtube.com/embed?${params.toString()}`\n  }\n}\n\n/**\n * 유튜브 재생 목록 썸네일 URL 생성\n * @param playlistId - 유튜브 재생 목록 ID\n * @returns 썸네일 URL\n */\nexport const getYouTubePlaylistThumbnail = (playlistId: string): string => {\n  // 재생 목록 썸네일은 특정 API를 통해서만 가능하므로\n  // 대신 첫 번째 영상의 썸네일을 사용하거나 기본 이미지 사용\n  return `https://i.ytimg.com/vi//hqdefault.jpg` // 플레이스홀더\n}\n\n/**\n * 마크다운을 HTML로 변환\n * @param markdown - 마크다운 텍스트\n * @returns HTML 문자열\n */\nexport const renderMarkdown = (markdown: string): string => {\n  if (!markdown) return ''\n  \n  return markdown\n    // 제목\n    .replace(/^### (.*$)/gim, '<h3 class=\"text-lg font-semibold mt-4 mb-2 text-gray-900 dark:text-white\">$1</h3>')\n    .replace(/^## (.*$)/gim, '<h2 class=\"text-xl font-semibold mt-4 mb-2 text-gray-900 dark:text-white\">$1</h2>')\n    .replace(/^# (.*$)/gim, '<h1 class=\"text-2xl font-bold mt-4 mb-2 text-gray-900 dark:text-white\">$1</h1>')\n    // 볼드\n    .replace(/\\*\\*(.*?)\\*\\*/g, '<strong class=\"font-bold\">$1</strong>')\n    // 이탤릭\n    .replace(/\\*(.*?)\\*/g, '<em class=\"italic\">$1</em>')\n    // 밑줄\n    .replace(/__(.*?)__/g, '<u class=\"underline\">$1</u>')\n    // 인라인 코드\n    .replace(/`(.*?)`/g, '<code class=\"bg-gray-200 dark:bg-gray-600 text-red-600 dark:text-red-400 px-1 rounded text-sm\">$1</code>')\n    // 토글\n    .replace(/^▶ (.*$)/gim, '<div class=\"flex items-center mt-2 mb-1\"><span class=\"mr-2\">▶</span><span class=\"font-medium text-gray-900 dark:text-white\">$1</span></div>')\n    // 불릿 리스트\n    .replace(/^[\\s]*[-*+]\\s(.*$)/gim, '<div class=\"ml-4 mb-1\"><span class=\"mr-2\">•</span>$1</div>')\n    // 숫자 리스트\n    .replace(/^[\\s]*\\d+\\.\\s(.*$)/gim, '<div class=\"ml-4 mb-1\"><span class=\"mr-2\">1.</span>$1</div>')\n    // 코드 블록\n    .replace(/```(.*?)\\n([\\s\\S]*?)\\n```/gim, (_match, p1, p2) => {\n      const lang = p1 ? `language-${p1.trim()}` : ''\n      return `<pre class=\"bg-gray-800 p-3 rounded-lg overflow-x-auto my-3\"><code class=\"${lang} text-sm text-gray-100\">${p2.trim()}</code></pre>`\n    })\n    // 줄바꿈\n    .replace(/\\n/g, '<br>')\n}\n\n/**\n * 마크다운을 HTML로 변환하고 타임스탬프를 클릭 가능한 버튼으로 변환\n * @param markdown - 마크다운 형식의 콘텐츠\n * @param onTimestampClick - 타임스탬프 클릭 핸들러\n * @returns 변환된 HTML 문자열\n */\nexport const renderHtmlWithTimestamps = (\n  markdown: string,\n  onTimestampClick?: (seconds: number) => void\n): string => {\n  if (!markdown) return ''\n  \n  // 1단계: 마크다운을 HTML로 변환\n  let html = renderMarkdown(markdown)\n  \n  // 2단계: 타임스탬프를 버튼으로 변환\n  const pattern = /\\[(\\d{1,2}):(\\d{2})(?::(\\d{2}))?\\]/g\n  \n  html = html.replace(pattern, (match, ...groups) => {\n    const hours = groups[2] ? parseInt(groups[0], 10) : 0\n    const minutes = groups[2] ? parseInt(groups[1], 10) : parseInt(groups[0], 10)\n    const seconds = groups[2] ? parseInt(groups[2], 10) : parseInt(groups[1], 10)\n    \n    const totalSeconds = hours * 3600 + minutes * 60 + seconds\n    \n    // 데이터 속성으로 초를 저장하여 클릭 이벤트에서 사용\n    return `<button \n      class=\"inline-flex items-center px-2 py-1 bg-blue-600 hover:bg-blue-700 text-white rounded font-mono text-xs font-bold transition-colors mx-1 cursor-pointer\"\n      data-timestamp=\"${totalSeconds}\"\n      title=\"영상 ${match} 위치로 이동\"\n    >${match}</button>`\n  })\n  \n  return html\n}\n\n","import React, { useState } from 'react'\nimport { FaSave, FaStar, FaTimes } from 'react-icons/fa'\nimport { Book, BookFormData, Skill, SkillCategory } from '../../types'\nimport { useSkills } from '../../hooks/useSkills'\nimport { useCategories } from '../../hooks/useCategories'\n\n// 폼 컴포넌트의 Props 타입 정의\ninterface FormProps {\n  data: Book | null\n  onSave: (data: BookFormData) => Promise<void>\n  onCancel: () => void\n  isSaving?: boolean\n  availableCategories?: string[] // 동적 카테고리 목록\n}\n\nconst BookForm: React.FC<FormProps> = ({ \n  data, \n  onSave, \n  onCancel, \n  isSaving = false, \n  availableCategories = ['PLC', '데이터분석', '로봇공학', 'IoT', '기타'] \n}) => {\n  // 🌟 스킬 목록 가져오기\n  const { skillCategories, loading: skillsLoading } = useSkills()\n  \n  // 🌟 카테고리 데이터 가져오기\n  const { data: categoriesData, isLoading: categoriesLoading } = useCategories()\n  // categories가 배열이 아닌 경우를 대비한 안전 처리\n  const categories = Array.isArray(categoriesData) ? categoriesData : []\n  \n  // readDate 초기값 수정\n  const initialReadDate = data?.readDate && !isNaN(new Date(data.readDate).getTime())\n    ? new Date(data.readDate).toISOString().split('T')[0]\n    : new Date().toISOString().split('T')[0]\n\n  // 🌟 categoryIds 초기값 처리\n  const initialCategoryIds = data?.categoryIds \n    ? (data.categoryIds as any[]).map((catIdOrObj: any) => \n        typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj._id\n      ).filter(Boolean) as string[]\n    : []\n\n  // 🌟 skillIds 초기값 처리 (객체 또는 문자열 모두 처리)\n  const initialSkillIds = data?.skillIds \n    ? (data.skillIds as any[]).map((skillIdOrObj: any) => \n        typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj._id\n      ).filter(Boolean) as string[]\n    : []\n\n  const [formData, setFormData] = useState<BookFormData>(\n    data\n      ? { \n          title: data.title,\n          author: data.author,\n          category: data.category,\n          categoryIds: initialCategoryIds,\n          coverImage: data.coverImage || '',\n          readDate: initialReadDate as string,\n          rating: data.rating,\n          skillIds: initialSkillIds  // 🌟 스킬 ID 문자열 배열로 초기화\n        } \n      : {\n          title: '',\n          author: '',\n          category: availableCategories[0] || 'PLC', // 동적 카테고리 첫 번째 항목 사용\n          categoryIds: [],\n          coverImage: '',\n          readDate: initialReadDate as string, // initialReadDate를 사용\n          rating: 5,\n          skillIds: []  // 🌟 스킬 ID 초기값\n        }\n  )\n  \n  \n  // 🌟 카테고리 선택/해제 핸들러 (체크박스용)\n  const handleCategoryToggle = (categoryId: string) => {\n    const currentCategoryIds = formData.categoryIds || []\n    const isSelected = currentCategoryIds.includes(categoryId)\n    \n    const newCategoryIds = isSelected\n      ? currentCategoryIds.filter((id: string) => id !== categoryId)\n      : [...currentCategoryIds, categoryId]\n    \n    setFormData({ \n      ...formData, \n      categoryIds: newCategoryIds \n    })\n  }\n\n  // 🌟 스킬 선택/해제 핸들러 (체크박스용)\n  const handleSkillToggle = (skillId: string) => {\n    const currentSkillIds = formData.skillIds || []\n    const isSelected = currentSkillIds.includes(skillId)\n    \n    const newSkillIds = isSelected\n      ? currentSkillIds.filter((id: string) => id !== skillId)\n      : [...currentSkillIds, skillId]\n    \n    setFormData({ \n      ...formData, \n      skillIds: newSkillIds \n    })\n  }\n  \n  // 🌟 스킬 카테고리 전체 선택/해제 핸들러\n  const handleSkillCategoryToggle = (category: SkillCategory) => {\n    const categorySkillIds = (category.skills || []).map(skill => skill._id!).filter(Boolean)\n    const currentSkillIds = formData.skillIds || []\n    \n    const allSelected = categorySkillIds.every((id: string) => currentSkillIds.includes(id))\n    \n    let newSkillIds: string[]\n    if (allSelected) {\n      newSkillIds = currentSkillIds.filter((id: string) => !categorySkillIds.includes(id))\n    } else {\n      const uniqueIds = new Set([...currentSkillIds, ...categorySkillIds])\n      newSkillIds = Array.from(uniqueIds)\n    }\n    \n    setFormData({ \n      ...formData, \n      skillIds: newSkillIds \n    })\n  }\n\n  // 필수 필드 검증\n  const isFormValid = formData.title.trim() !== '' && \n                     formData.author.trim() !== '' && \n                     formData.category.trim() !== ''\n\n  const handleFormSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!isFormValid) {\n      alert('필수 필드(제목, 저자, 카테고리)를 모두 입력해주세요.')\n      return\n    }\n    \n    console.log('📚 서적 저장 시작:', formData)\n    console.log('🔗 선택된 스킬 IDs:', formData.skillIds)\n    \n    // 🌟 skillIds와 categoryIds를 문자열 배열로 확실하게 변환 + 중복 제거\n    const skillIds = Array.from(new Set(\n      (formData.skillIds || []).map((skillIdOrObj: any) => \n        typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj?._id\n      ).filter(Boolean)\n    ))\n    \n    const categoryIds = Array.from(new Set(\n      (formData.categoryIds || []).map((catIdOrObj: any) => \n        typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\n      ).filter(Boolean)\n    ))\n    \n    const { title, author, category, coverImage, readDate, rating } = formData\n    \n    const saveData = { \n      title, \n      author, \n      category, \n      coverImage: coverImage || '', \n      readDate, \n      rating,\n      skillIds,  // 🌟 변환된 skillIds\n      categoryIds  // 🌟 변환된 categoryIds\n    }\n    \n    console.log('📤 최종 전송 데이터:', saveData)\n    onSave(saveData)\n  }\n\n  return (\n    <form onSubmit={handleFormSubmit} className=\"space-y-4\">\n      <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">\n        {data ? '서적 수정' : '서적 추가'}\n      </h3>\n      <div className=\"grid md:grid-cols-2 gap-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            제목\n          </label>\n          <input\n            type=\"text\"\n            value={formData.title}\n            onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n          />\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            저자\n          </label>\n          <input\n            type=\"text\"\n            value={formData.author}\n            onChange={(e) => setFormData({ ...formData, author: e.target.value })}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n          />\n        </div>\n        <div className=\"md:col-span-2\">\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\n            카테고리 선택 📂 (다중 선택 가능)\n          </label>\n\n          {/* 선택된 카테고리 태그 표시 */}\n          {formData.categoryIds && formData.categoryIds.length > 0 && (\n            <div className=\"flex flex-wrap gap-2 mb-3 p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n              {formData.categoryIds.map((catId) => {\n                const category = categories.find(c => c._id === catId)\n                return category ? (\n                  <span\n                    key={catId}\n                    className=\"inline-flex items-center gap-1 px-3 py-1 bg-blue-600 text-white rounded-full text-sm\"\n                  >\n                    {category.name}\n                    <button\n                      type=\"button\"\n                      onClick={() => handleCategoryToggle(catId)}\n                      className=\"hover:bg-blue-700 rounded-full p-0.5\"\n                    >\n                      <FaTimes className=\"text-xs\" />\n                    </button>\n                  </span>\n                ) : null\n              })}\n            </div>\n          )}\n\n          {/* 카테고리 체크박스 목록 */}\n          {categoriesLoading ? (\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">카테고리 로딩 중...</p>\n          ) : categories.length > 0 ? (\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2\">\n              {categories.map((category) => {\n                const isSelected = (formData.categoryIds || []).includes(category._id)\n                return (\n                  <label\n                    key={category._id}\n                    className={`flex items-center gap-2 p-3 border-2 rounded-lg cursor-pointer transition-all ${\n                      isSelected\n                        ? 'border-primary-600 bg-primary-50 dark:bg-primary-900/20'\n                        : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600'\n                    }`}\n                  >\n                    <input\n                      type=\"checkbox\"\n                      checked={isSelected}\n                      onChange={() => handleCategoryToggle(category._id)}\n                      className=\"w-4 h-4\"\n                    />\n                    <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      {category.name}\n                    </span>\n                  </label>\n                )\n              })}\n            </div>\n          ) : (\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n              등록된 카테고리가 없습니다. 관리자 메뉴의 \"카테고리 관리\"에서 추가하세요.\n            </p>\n          )}\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            평점\n          </label>\n          <div className=\"flex items-center gap-2\">\n            {/* 시각적 별 선택 */}\n            <div className=\"flex gap-1\">\n              {[1, 2, 3, 4, 5].map((star) => (\n                <button\n                  key={star}\n                  type=\"button\"\n                  onClick={() => setFormData({ ...formData, rating: star })}\n                  className={`text-2xl transition-colors ${\n                    star <= formData.rating \n                      ? 'text-yellow-500 hover:text-yellow-600' \n                      : 'text-gray-300 hover:text-gray-400'\n                  }`}\n                >\n                  <FaStar />\n                </button>\n              ))}\n            </div>\n            {/* 숫자 입력 (보조) */}\n            <input\n              type=\"number\"\n              min=\"1\"\n              max=\"5\"\n              step=\"0.5\"\n              value={formData.rating}\n              onChange={(e) => {\n                const value = e.target.value\n                // 입력값이 비어있거나, 유효한 숫자가 아니면 이전 값 유지\n                const newRating = value === '' ? 0 : parseFloat(value)\n                setFormData({ \n                  ...formData, \n                  rating: isNaN(newRating) ? formData.rating : Math.max(1, Math.min(5, newRating))\n                })\n              }}\n              className=\"w-20 px-2 py-1 border border-gray-300 dark:border-gray-600 rounded focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm\"\n            />\n          </div>\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            읽은 날짜\n          </label>\n          <input\n            type=\"date\"\n            value={formData.readDate}\n            onChange={(e) => setFormData({ ...formData, readDate: e.target.value })}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n          />\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            표지 이미지 URL\n          </label>\n          <input\n            type=\"text\"\n            value={formData.coverImage}\n            onChange={(e) => setFormData({ ...formData, coverImage: e.target.value })}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            placeholder=\"https://...\"\n          />\n        </div>\n        \n        {/* 🌟 서적에서 다루는 핵심 스킬 선택 - 체크박스 UI */}\n        <div className=\"md:col-span-2\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n              이 서적에서 다루는 핵심 스킬 🔗\n            </label>\n            {formData.skillIds && formData.skillIds.length > 0 && (\n              <span className=\"text-xs font-semibold text-blue-600 dark:text-blue-400 bg-blue-100 dark:bg-blue-900/30 px-2 py-1 rounded\">\n                ✓ {formData.skillIds.length}개 선택됨\n              </span>\n            )}\n          </div>\n          \n          {skillsLoading ? (\n            <div className=\"text-sm text-gray-500 dark:text-gray-400 py-2\">\n              스킬 목록을 불러오는 중입니다...\n            </div>\n          ) : skillCategories.length === 0 ? (\n            <div className=\"text-sm text-gray-500 dark:text-gray-400 py-4 text-center border border-gray-300 dark:border-gray-600 rounded-lg\">\n              등록된 스킬이 없습니다. 먼저 스킬을 추가해주세요.\n            </div>\n          ) : (\n            <div className=\"border border-gray-300 dark:border-gray-600 rounded-lg p-4 bg-gray-50 dark:bg-gray-800 max-h-[400px] overflow-y-auto\">\n              {skillCategories.map((category: SkillCategory) => {\n                const categorySkillIds = (category.skills || []).map(skill => skill._id!).filter(Boolean)\n                const currentSkillIds = formData.skillIds || []\n                \n                const selectedCount = categorySkillIds.filter(id => currentSkillIds.includes(id)).length\n                const allSelected = categorySkillIds.length > 0 && selectedCount === categorySkillIds.length\n                const someSelected = selectedCount > 0 && selectedCount < categorySkillIds.length\n                \n                return (\n                  <div key={category._id} className=\"mb-4 last:mb-0\">\n                    {/* 카테고리 헤더 (전체 선택/해제) */}\n                    <div \n                      className=\"flex items-center gap-2 mb-2 pb-2 border-b border-gray-300 dark:border-gray-600 cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700 p-2 rounded\"\n                      onClick={() => handleSkillCategoryToggle(category)}\n                    >\n                      <input\n                        type=\"checkbox\"\n                        checked={allSelected}\n                        ref={el => {\n                          if (el) {\n                            el.indeterminate = someSelected\n                          }\n                        }}\n                        onChange={() => handleSkillCategoryToggle(category)}\n                        className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n                        onClick={(e) => e.stopPropagation()}\n                      />\n                      <label \n                        className=\"font-semibold text-gray-900 dark:text-white flex-1 cursor-pointer\"\n                        style={{ color: category.color || '#3B82F6' }}\n                      >\n                        {category.title}\n                        {selectedCount > 0 && (\n                          <span className=\"ml-2 text-xs font-normal text-gray-500 dark:text-gray-400\">\n                            ({selectedCount}/{categorySkillIds.length})\n                          </span>\n                        )}\n                      </label>\n                    </div>\n                    \n                    {/* 스킬 목록 */}\n                    <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2 pl-6\">\n                      {(category.skills || []).map((skill: Skill) => {\n                        const currentSkillIds = formData.skillIds || []\n                        const isSelected = currentSkillIds.includes(skill._id!)\n                        \n                        return (\n                          <label\n                            key={skill._id}\n                            className={`flex items-center gap-2 p-2 rounded cursor-pointer transition-colors ${\n                              isSelected \n                                ? 'bg-blue-50 dark:bg-blue-900/20 border border-blue-300 dark:border-blue-700' \n                                : 'hover:bg-gray-100 dark:hover:bg-gray-700 border border-transparent'\n                            }`}\n                          >\n                            <input\n                              type=\"checkbox\"\n                              checked={isSelected}\n                              onChange={() => handleSkillToggle(skill._id!)}\n                              className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n                            />\n                            <span className={`text-sm ${isSelected ? 'font-semibold text-blue-700 dark:text-blue-300' : 'text-gray-700 dark:text-gray-300'}`}>\n                              {skill.name}\n                            </span>\n                          </label>\n                        )\n                      })}\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n          )}\n          \n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\n            💡 이 서적에서 주요하게 다루는 스킬을 선택하세요. 개별 학습 내용에서도 추가로 스킬을 연결할 수 있습니다.\n          </p>\n        </div>\n      </div>\n      <div className=\"flex gap-3 pt-4\">\n        <button\n          type=\"submit\"\n          disabled={isSaving || !isFormValid}\n          className={`flex-1 flex items-center justify-center gap-2 bg-primary-600 hover:bg-primary-700 text-white font-medium py-2 rounded-lg transition-colors ${\n            isSaving || !isFormValid ? 'opacity-50 cursor-not-allowed' : ''\n          }`}\n        >\n          {isSaving ? (\n            <>\n              <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n              저장 중...\n            </>\n          ) : (\n            <>\n              <FaSave /> 저장\n            </>\n          )}\n        </button>\n        <button\n          type=\"button\"\n          onClick={onCancel}\n          className=\"flex-1 bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-900 dark:text-white font-medium py-2 rounded-lg transition-colors\"\n        >\n          취소\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default BookForm\n","import React, { useState, useEffect } from 'react'\nimport { FaSave, FaTimes } from 'react-icons/fa'\nimport { Chapter } from '../../types'\n\ninterface ChapterFormProps {\n  chapter?: Chapter | null\n  onSave: (data: { title: string; order: number }) => Promise<void>\n  onCancel: () => void\n  maxOrder?: number\n}\n\nconst ChapterForm: React.FC<ChapterFormProps> = ({\n  chapter,\n  onSave,\n  onCancel,\n  maxOrder = 0\n}) => {\n  const [title, setTitle] = useState('')\n  const [order, setOrder] = useState(0)\n  const [isSaving, setIsSaving] = useState(false)\n\n  useEffect(() => {\n    if (chapter) {\n      setTitle(chapter.title)\n      setOrder(chapter.order)\n    } else {\n      setTitle('')\n      setOrder(maxOrder)\n    }\n  }, [chapter, maxOrder])\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!title.trim()) {\n      alert('목차 제목을 입력해주세요.')\n      return\n    }\n\n    try {\n      setIsSaving(true)\n      await onSave({ title: title.trim(), order })\n    } catch (error) {\n      console.error('목차 저장 실패:', error)\n    } finally {\n      setIsSaving(false)\n    }\n  }\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n          {chapter ? '목차 수정' : '목차 추가'}\n        </h3>\n        <button\n          onClick={onCancel}\n          className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\n        >\n          <FaTimes className=\"text-gray-500 dark:text-gray-400\" />\n        </button>\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <div>\n          <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            목차 제목\n          </label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            placeholder=\"목차 제목을 입력하세요\"\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            required\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"order\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            순서\n          </label>\n          <input\n            type=\"number\"\n            id=\"order\"\n            value={order}\n            onChange={(e) => setOrder(parseInt(e.target.value) || 0)}\n            min=\"0\"\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n          />\n        </div>\n\n        <div className=\"flex gap-3 pt-4\">\n          <button\n            type=\"submit\"\n            disabled={isSaving || !title.trim()}\n            className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors flex items-center justify-center gap-2\"\n          >\n            <FaSave />\n            {isSaving ? '저장 중...' : (chapter ? '수정' : '추가')}\n          </button>\n          <button\n            type=\"button\"\n            onClick={onCancel}\n            className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\n          >\n            취소\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default ChapterForm\n","import React, { useState, useEffect } from 'react'\nimport { FaSave, FaTimes } from 'react-icons/fa'\nimport ReactQuill from 'react-quill'\nimport 'react-quill/dist/quill.snow.css'\nimport { Learning } from '../../types'\n\n// 마크다운 문법 변환 함수 (향후 사용을 위해 유지)\n// const convertMarkdownToHtml = (text: string): string => {\n//   return text\n//     .replace(/^### (.*$)/gim, '<h3>$1</h3>')\n//     .replace(/^## (.*$)/gim, '<h2>$1</h2>')\n//     .replace(/^# (.*$)/gim, '<h1>$1</h1>')\n//     .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n//     .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\n//     .replace(/```([\\s\\S]*?)```/g, '<pre><code>$1</code></pre>')\n//     .replace(/`([^`]+)`/g, '<code>$1</code>')\n//     .replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<a href=\"$2\">$1</a>')\n//     .replace(/\\n/g, '<br>')\n// }\n\ninterface LearningFormProps {\n  learning?: Learning | null\n  onSave: (data: { topic: string; content: string }) => Promise<void>\n  onCancel: () => void\n}\n\nconst LearningForm: React.FC<LearningFormProps> = ({\n  learning,\n  onSave,\n  onCancel\n}) => {\n  const [topic, setTopic] = useState('')\n  const [content, setContent] = useState('')\n  const [isSaving, setIsSaving] = useState(false)\n\n  // Quill 에디터 설정\n  const quillModules = {\n    toolbar: [\n      [{ 'header': [1, 2, 3, false] }],\n      ['bold', 'italic', 'underline', 'strike'],\n      [{ 'list': 'ordered'}, { 'list': 'bullet' }],\n      [{ 'indent': '-1'}, { 'indent': '+1' }],\n      ['blockquote', 'code-block'],\n      [{ 'color': [] }, { 'background': [] }],\n      ['link', 'image'],\n      ['clean']\n    ]\n  }\n\n  const quillFormats = [\n    'header', 'bold', 'italic', 'underline', 'strike',\n    'list', 'bullet', 'indent',\n    'blockquote', 'code-block',\n    'color', 'background',\n    'link', 'image'\n  ]\n\n  useEffect(() => {\n    if (learning) {\n      setTopic(learning.topic)\n      setContent(learning.content)\n    } else {\n      setTopic('')\n      setContent('')\n    }\n  }, [learning])\n\n  // HTML 태그를 제거하고 순수 텍스트만 추출하는 함수\n  const stripHtml = (html: string) => {\n    const tmp = document.createElement('div')\n    tmp.innerHTML = html\n    return tmp.textContent || tmp.innerText || ''\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!topic.trim()) {\n      alert('학습 주제를 입력해주세요.')\n      return\n    }\n\n    // HTML 태그를 제거한 순수 텍스트로 검증\n    const plainTextContent = stripHtml(content).trim()\n    if (!plainTextContent) {\n      alert('학습 내용을 입력해주세요.')\n      return\n    }\n\n    try {\n      setIsSaving(true)\n      await onSave({ topic: topic.trim(), content: content.trim() })\n    } catch (error) {\n      console.error('학습 내용 저장 실패:', error)\n    } finally {\n      setIsSaving(false)\n    }\n  }\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n          {learning ? '학습 내용 수정' : '학습 내용 추가'}\n        </h3>\n        <button\n          onClick={onCancel}\n          className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\n        >\n          <FaTimes className=\"text-gray-500 dark:text-gray-400\" />\n        </button>\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <div>\n          <label htmlFor=\"topic\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            학습 주제\n          </label>\n          <input\n            type=\"text\"\n            id=\"topic\"\n            value={topic}\n            onChange={(e) => setTopic(e.target.value)}\n            placeholder=\"학습 주제를 입력하세요\"\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            required\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"content\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            학습 내용\n            <span className=\"text-xs text-gray-500 ml-2\">\n              (마크다운 문법 지원: **굵게**, *기울임*, # 제목, - 목록)\n            </span>\n          </label>\n          <div className=\"rich-text-editor-container\">\n            <ReactQuill\n              theme=\"snow\"\n              value={content}\n              onChange={(value) => {\n                console.log('ReactQuill onChange:', value)\n                setContent(value)\n              }}\n              placeholder=\"학습 내용을 입력하세요. 마크다운 문법을 사용할 수 있습니다.\"\n              modules={quillModules}\n              formats={quillFormats}\n              className=\"rich-text-editor\"\n            />\n          </div>\n        </div>\n\n        <div className=\"flex gap-3 pt-4\">\n          <button\n            type=\"submit\"\n            disabled={isSaving || !topic.trim() || !stripHtml(content).trim()}\n            className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors flex items-center justify-center gap-2\"\n          >\n            <FaSave />\n            {isSaving ? '저장 중...' : (learning ? '수정' : '추가')}\n          </button>\n          <button\n            type=\"button\"\n            onClick={onCancel}\n            className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\n          >\n            취소\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default LearningForm\n","import React, { useState, useMemo } from 'react'\nimport { FaSave, FaStar, FaTimes } from 'react-icons/fa'\nimport { VideoLearning, VideoLearningFormData, Skill, SkillCategory } from '../../types'\nimport { extractYouTubeId, getYouTubeThumbnail } from '../../utils/videoUtils'\nimport { useSkills } from '../../hooks/useSkills'\nimport { useCategories } from '../../hooks/useCategories'\nimport LexicalEditor from '../lexical/LexicalEditor'\nimport { SerializedEditorState } from 'lexical'\n\ninterface FormProps {\n  data?: VideoLearning\n  onSave: (data: VideoLearningFormData) => void\n  onCancel: () => void\n  isSaving?: boolean\n  availableCategories?: string[]\n}\n\nconst VideoLearningForm: React.FC<FormProps> = ({ \n  data, \n  onSave, \n  onCancel, \n  isSaving = false, \n  availableCategories = ['PLC', '데이터분석', '로봇공학', 'IoT', '기타'] \n}) => {\n  // 🌟 스킬 데이터 가져오기\n  const { skillCategories, loading: skillsLoading } = useSkills()\n  \n  // 🌟 카테고리 데이터 가져오기\n  const { data: categoriesData, isLoading: categoriesLoading } = useCategories()\n  // categories가 배열이 아닌 경우를 대비한 안전 처리\n  const categories = Array.isArray(categoriesData) ? categoriesData : []\n\n  // watchDate 초기값 수정\n  const initialWatchDate = data?.watchDate && !isNaN(new Date(data.watchDate).getTime())\n    ? new Date(data.watchDate).toISOString().split('T')[0]\n    : new Date().toISOString().split('T')[0]\n\n  // 🌟 폼 상태 관리 (내부에서는 videoUrl로 관리, 저장 시 videoId로 변환)\n  const [videoUrlInput, setVideoUrlInput] = useState<string>(() => {\n    // videoId가 있으면 URL로 변환, videoUrl이 있으면 그대로 사용 (호환성)\n    if (data?.videoId) return `https://www.youtube.com/watch?v=${data.videoId}`\n    if ((data as any)?.videoUrl) return (data as any).videoUrl\n    return ''\n  })\n\n  // 🌟 skillIds 초기값 처리 (populate된 객체 배열에서 _id만 추출)\n  const initialSkillIds = data?.skillIds \n    ? (data.skillIds as any[]).map((skillIdOrObj: any) => \n        typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj._id\n      ).filter(Boolean) as string[]\n    : []\n\n  // 🌟 categoryIds 초기값 처리\n  const initialCategoryIds = data?.categoryIds \n    ? (data.categoryIds as any[]).map((catIdOrObj: any) => \n        typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj._id\n      ).filter(Boolean) as string[]\n    : []\n\n  console.log('🎬 VideoLearningForm 초기화:', {\n    hasData: !!data,\n    rawSkillIds: data?.skillIds,\n    extractedSkillIds: initialSkillIds,\n    rawCategoryIds: data?.categoryIds,\n    extractedCategoryIds: initialCategoryIds,\n  })\n\n  // keyTakeaways를 SerializedEditorState 형식으로 관리\n  const parseKeyTakeaways = (value: string | undefined): SerializedEditorState => {\n    if (!value) return { root: { children: [], direction: 'ltr', format: '', indent: 0, type: 'root', version: 1 } }\n    try {\n      const parsed = JSON.parse(value)\n      if (parsed && parsed.root) return parsed\n      // 레거시 형식도 처리\n      return { root: { children: [], direction: 'ltr', format: '', indent: 0, type: 'root', version: 1 } }\n    } catch {\n      return { root: { children: [], direction: 'ltr', format: '', indent: 0, type: 'root', version: 1 } }\n    }\n  }\n\n  const [formData, setFormData] = useState<Omit<VideoLearningFormData, 'videoId' | 'keyTakeaways'> & { keyTakeaways: SerializedEditorState }>(\n    data\n      ? { \n          title: data.title,\n          category: data.category,\n          categoryIds: initialCategoryIds,\n          watchDate: initialWatchDate as string,\n          rating: data.rating || 3,\n          purpose: data.purpose || '',\n          keyTakeaways: parseKeyTakeaways(data.keyTakeaways),\n          application: data.application || '',\n          skillIds: initialSkillIds,\n          order: data.order || 0,\n        } \n      : {\n          title: '',\n          category: availableCategories[0] || 'PLC',\n          categoryIds: [],\n          watchDate: initialWatchDate as string,\n          rating: 3,\n          purpose: '',\n          keyTakeaways: { blocks: [] },\n          application: '',\n          skillIds: [],\n          order: 0,\n        }\n  )\n\n  // 🌟 유튜브 영상 ID 추출 (실시간) + 디버깅 로그\n  const videoId = useMemo(() => {\n    const id = extractYouTubeId(videoUrlInput)\n    console.log('🎬 VideoForm: URL 파싱 결과 -', { inputUrl: videoUrlInput, extractedId: id })\n    return id\n  }, [videoUrlInput])\n  \n  const thumbnailUrl = useMemo(() => videoId ? getYouTubeThumbnail(videoId) : null, [videoId])\n  const isValidUrl = useMemo(() => videoId !== null, [videoId])\n\n\n  // 🌟 카테고리 선택/해제 핸들러 (체크박스용)\n  const handleCategoryToggle = (categoryId: string) => {\n    const currentCategoryIds = formData.categoryIds || []\n    const isSelected = currentCategoryIds.includes(categoryId)\n    \n    const newCategoryIds = isSelected\n      ? currentCategoryIds.filter((id: string) => id !== categoryId)\n      : [...currentCategoryIds, categoryId]\n    \n    setFormData({ \n      ...formData, \n      categoryIds: newCategoryIds \n    })\n  }\n\n  // 🌟 스킬 선택/해제 핸들러 (체크박스용)\n  const handleSkillToggle = (skillId: string) => {\n    const currentSkillIds = formData.skillIds || []\n    const isSelected = currentSkillIds.includes(skillId)\n    \n    const newSkillIds = isSelected\n      ? currentSkillIds.filter((id: string) => id !== skillId)\n      : [...currentSkillIds, skillId]\n    \n    setFormData({ \n      ...formData, \n      skillIds: newSkillIds \n    })\n  }\n  \n  // 🌟 스킬 카테고리 전체 선택/해제 핸들러\n  const handleSkillCategoryToggle = (category: SkillCategory) => {\n    const categorySkillIds = (category.skills || []).map((skill: Skill) => skill._id!).filter(Boolean)\n    const currentSkillIds = formData.skillIds || []\n    \n    // 카테고리의 모든 스킬이 선택되어 있는지 확인\n    const allSelected = categorySkillIds.every((id: string) => currentSkillIds.includes(id))\n    \n    let newSkillIds: string[]\n    if (allSelected) {\n      // 모두 선택되어 있으면 전체 해제\n      newSkillIds = currentSkillIds.filter((id: string) => !categorySkillIds.includes(id))\n    } else {\n      // 일부만 선택되어 있거나 없으면 전체 선택\n      const uniqueIds = new Set([...currentSkillIds, ...categorySkillIds])\n      newSkillIds = Array.from(uniqueIds)\n    }\n    \n    setFormData({ \n      ...formData, \n      skillIds: newSkillIds \n    })\n  }\n\n  const handleFormSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!formData.title.trim() || !videoUrlInput.trim()) {\n      alert('필수 필드(제목, 영상 URL)를 모두 입력해주세요.')\n      return\n    }\n\n    if (!isValidUrl || !videoId) {\n      alert('❌ 올바른 유튜브 URL을 입력해주세요.')\n      return\n    }\n\n    console.log('📹 영상 학습 저장 시작:', formData)\n    console.log('🎬 추출된 영상 ID:', videoId)\n    console.log('🔗 선택된 스킬 IDs:', formData.skillIds)\n    \n    const { title, category, watchDate, rating, purpose, keyTakeaways, application, skillIds, order } = formData\n    \n    // 🌟 videoId로 변환하여 저장\n    onSave({ \n      title, \n      videoId: videoId!,  // 추출된 영상 ID\n      category, \n      watchDate, \n      ...(rating !== undefined && { rating }),\n      ...(purpose && { purpose }),\n      ...(keyTakeaways && { keyTakeaways: JSON.stringify(keyTakeaways) }),\n      ...(application && { application }),\n      skillIds: skillIds || [],\n      order: order || 0,\n    })\n  }\n\n  // 폼 유효성 검사\n  const isFormValid = formData.title.trim() && videoUrlInput.trim() && isValidUrl\n\n  // 🌟 별점 렌더링 (클릭 가능)\n  const renderRatingStars = () => {\n    return Array.from({ length: 5 }, (_, i) => {\n      const starValue = i + 1\n      return (\n        <button\n          key={i}\n          type=\"button\"\n          onClick={() => setFormData({ ...formData, rating: starValue })}\n          className={`text-3xl transition-colors ${\n            starValue <= (formData.rating || 0)\n              ? 'text-yellow-500 hover:text-yellow-600'\n              : 'text-gray-300 dark:text-gray-600 hover:text-gray-400'\n          }`}\n        >\n          <FaStar />\n        </button>\n      )\n    })\n  }\n\n  return (\n    <form onSubmit={handleFormSubmit} className=\"space-y-6\">\n      {/* 기본 정보 */}\n      <div className=\"grid md:grid-cols-2 gap-6\">\n        <div className=\"md:col-span-2\">\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            제목 <span className=\"text-red-500\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            value={formData.title}\n            onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            placeholder=\"영상 제목을 입력하세요\"\n            required\n          />\n        </div>\n\n        <div className=\"md:col-span-2\">\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            영상 URL <span className=\"text-red-500\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            value={videoUrlInput}\n            onChange={(e) => setVideoUrlInput(e.target.value)}\n            className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white ${\n              videoUrlInput && !isValidUrl\n                ? 'border-red-500'\n                : 'border-gray-300 dark:border-gray-600'\n            }`}\n            placeholder=\"https://www.youtube.com/watch?v=...\"\n            required\n          />\n          {videoUrlInput && !isValidUrl && (\n            <p className=\"text-red-500 text-sm mt-1\">올바른 유튜브 URL을 입력해주세요</p>\n          )}\n          {videoId && (\n            <p className=\"text-green-600 text-sm mt-1\">✅ 영상 ID: <code className=\"bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded\">{videoId}</code></p>\n          )}\n          {/* 🌟 썸네일 미리보기 */}\n          {thumbnailUrl && isValidUrl && (\n            <div className=\"mt-3\">\n              <img \n                src={thumbnailUrl} \n                alt=\"영상 썸네일\" \n                className=\"w-full max-w-md rounded-lg shadow-md\"\n                onError={(e) => {\n                  // maxresdefault가 없으면 hqdefault로 폴백\n                  const target = e.target as HTMLImageElement\n                  if (target.src.includes('maxresdefault')) {\n                    target.src = getYouTubeThumbnail(videoId!, 'hqdefault')\n                  }\n                }}\n              />\n              <p className=\"text-sm text-green-600 dark:text-green-400 mt-2\">✓ 유효한 유튜브 URL</p>\n            </div>\n          )}\n        </div>\n\n        <div className=\"md:col-span-2\">\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\n            카테고리 선택 📂 (다중 선택 가능)\n          </label>\n\n          {/* 선택된 카테고리 태그 표시 */}\n          {formData.categoryIds && formData.categoryIds.length > 0 && (\n            <div className=\"flex flex-wrap gap-2 mb-3 p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n              {formData.categoryIds.map((catId) => {\n                const category = categories.find(c => c._id === catId)\n                return category ? (\n                  <span\n                    key={catId}\n                    className=\"inline-flex items-center gap-1 px-3 py-1 bg-blue-600 text-white rounded-full text-sm\"\n                  >\n                    {category.name}\n                    <button\n                      type=\"button\"\n                      onClick={() => handleCategoryToggle(catId)}\n                      className=\"hover:bg-blue-700 rounded-full p-0.5\"\n                    >\n                      <FaTimes className=\"text-xs\" />\n                    </button>\n                  </span>\n                ) : null\n              })}\n            </div>\n          )}\n\n          {/* 카테고리 체크박스 목록 */}\n          {categoriesLoading ? (\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">카테고리 로딩 중...</p>\n          ) : categories.length > 0 ? (\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2\">\n              {categories.map((category) => {\n                const isSelected = (formData.categoryIds || []).includes(category._id)\n                return (\n                  <label\n                    key={category._id}\n                    className={`flex items-center gap-2 p-3 border-2 rounded-lg cursor-pointer transition-all ${\n                      isSelected\n                        ? 'border-primary-600 bg-primary-50 dark:bg-primary-900/20'\n                        : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600'\n                    }`}\n                  >\n                    <input\n                      type=\"checkbox\"\n                      checked={isSelected}\n                      onChange={() => handleCategoryToggle(category._id)}\n                      className=\"w-4 h-4\"\n                    />\n                    <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      {category.name}\n                    </span>\n                  </label>\n                )\n              })}\n            </div>\n          ) : (\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n              등록된 카테고리가 없습니다. 관리자 메뉴의 \"카테고리 관리\"에서 추가하세요.\n            </p>\n          )}\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            시청 날짜\n          </label>\n          <input\n            type=\"date\"\n            value={formData.watchDate}\n            onChange={(e) => setFormData({ ...formData, watchDate: e.target.value })}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n          />\n        </div>\n\n        <div className=\"md:col-span-2\">\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            이해도 평점\n          </label>\n          <div className=\"flex items-center gap-2\">\n            {renderRatingStars()}\n            <span className=\"ml-3 text-gray-600 dark:text-gray-400\">{formData.rating}/5</span>\n          </div>\n        </div>\n      </div>\n\n      {/* 상세 정보 */}\n      <div className=\"space-y-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            시청 목적\n          </label>\n          <textarea\n            value={formData.purpose}\n            onChange={(e) => setFormData({ ...formData, purpose: e.target.value })}\n            className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-vertical\"\n            rows={3}\n            placeholder=\"이 영상을 왜 시청했는지, 어떤 문제를 해결하기 위해서인지 작성하세요...\"\n          />\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">최대 1000자</p>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            핵심 배움\n          </label>\n          <LexicalEditor\n            value={formData.keyTakeaways}\n            onChange={(value) => setFormData({ ...formData, keyTakeaways: value })}\n            placeholder=\"영상에서 얻은 핵심 지식 3-5가지를 정리하세요...\"\n            className=\"min-h-[300px]\"\n          />\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n            텍스트, 이미지, 리스트로 정리할 수 있습니다\n          </p>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            적용 계획 (마크다운 지원)\n          </label>\n          <textarea\n            value={formData.application}\n            onChange={(e) => setFormData({ ...formData, application: e.target.value })}\n            className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-vertical font-mono text-sm\"\n            rows={5}\n            placeholder=\"이 지식을 어떻게 활용할 계획인지, 또는 이미 적용한 경험을 작성하세요...\"\n          />\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">최대 3000자</p>\n        </div>\n      </div>\n\n      {/* 🌟 스킬 연결 (체크박스 UI) */}\n      <div className=\"md:col-span-2\">\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          관련 기술 연동 🔗\n        </label>\n        {skillsLoading ? (\n          <div className=\"text-sm text-gray-500 dark:text-gray-400 py-2\">\n            스킬 목록을 불러오는 중입니다...\n          </div>\n        ) : (\n          <>\n            {/* 선택된 스킬 개수 표시 */}\n            {(formData.skillIds || []).length > 0 && (\n              <div className=\"mb-3 px-3 py-2 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n                <span className=\"text-sm text-blue-700 dark:text-blue-300 font-medium\">\n                  ✓ {(formData.skillIds || []).length}개 선택됨\n                </span>\n              </div>\n            )}\n            \n            {/* 카테고리별 스킬 체크박스 */}\n            <div className=\"border border-gray-300 dark:border-gray-600 rounded-lg p-4 max-h-[400px] overflow-y-auto bg-gray-50 dark:bg-gray-800/50\">\n              {skillCategories.map((category) => {\n                const categorySkills = category.skills || []\n                const categorySkillIds = categorySkills.map((s: Skill) => s._id!).filter(Boolean)\n                const selectedInCategory = categorySkillIds.filter((id: string) => \n                  (formData.skillIds || []).includes(id)\n                )\n                const allSelected = categorySkillIds.length > 0 && selectedInCategory.length === categorySkillIds.length\n                const someSelected = selectedInCategory.length > 0 && !allSelected\n\n                return (\n                  <div key={category._id} className=\"mb-4 last:mb-0\">\n                    {/* 카테고리 헤더 */}\n                    <div \n                      onClick={() => handleSkillCategoryToggle(category)}\n                      className=\"flex items-center gap-3 p-3 bg-white dark:bg-gray-700 rounded-lg cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors mb-2\"\n                    >\n                      <input\n                        type=\"checkbox\"\n                        checked={allSelected}\n                        ref={(input) => {\n                          if (input) input.indeterminate = someSelected\n                        }}\n                        onChange={() => {}}\n                        className=\"w-5 h-5 text-primary-600 rounded focus:ring-2 focus:ring-primary-500\"\n                      />\n                      <label \n                        className=\"font-bold text-base cursor-pointer flex-1\"\n                        style={{ color: category.color || '#3B82F6' }}\n                      >\n                        {category.title} ({selectedInCategory.length}/{categorySkills.length})\n                      </label>\n                    </div>\n\n                    {/* 개별 스킬 체크박스 */}\n                    <div className=\"ml-8 space-y-2\">\n                      {categorySkills.map((skill: Skill) => {\n                        const isSelected = (formData.skillIds || []).includes(skill._id!)\n                        return (\n                          <div\n                            key={skill._id}\n                            onClick={() => handleSkillToggle(skill._id!)}\n                            className={`flex items-center gap-3 p-2 rounded-lg cursor-pointer transition-all ${\n                              isSelected\n                                ? 'bg-blue-100 dark:bg-blue-900/30 font-medium'\n                                : 'hover:bg-gray-100 dark:hover:bg-gray-600'\n                            }`}\n                          >\n                            <input\n                              type=\"checkbox\"\n                              checked={isSelected}\n                              onChange={() => {}}\n                              className=\"w-4 h-4 text-primary-600 rounded focus:ring-2 focus:ring-primary-500\"\n                            />\n                            <label \n                              className=\"cursor-pointer flex-1 text-sm\"\n                              style={{ color: isSelected ? skill.color : undefined }}\n                            >\n                              {skill.name}\n                            </label>\n                          </div>\n                        )\n                      })}\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n          </>\n        )}\n      </div>\n\n      {/* 순서 */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          순서 (낮을수록 먼저 표시)\n        </label>\n        <input\n          type=\"number\"\n          value={formData.order}\n          onChange={(e) => setFormData({ ...formData, order: parseInt(e.target.value) || 0 })}\n          className=\"w-32 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n          min=\"0\"\n        />\n      </div>\n\n      {/* 버튼 */}\n      <div className=\"flex gap-4 pt-4\">\n        <button\n          type=\"submit\"\n          disabled={isSaving || !isFormValid || !isValidUrl}\n          className=\"flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors font-medium\"\n        >\n          <FaSave /> {isSaving ? '저장 중...' : '저장'}\n        </button>\n        <button\n          type=\"button\"\n          onClick={onCancel}\n          className=\"px-6 py-3 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors font-medium\"\n        >\n          취소\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default VideoLearningForm\n\n","import React, { useState, useMemo } from 'react'\nimport { FaSave, FaStar, FaTimes } from 'react-icons/fa'\nimport { VideoPlaylist, VideoPlaylistFormData } from '../../types'\nimport { formatCategoryDisplayName } from '../../utils/categoryUtils'\nimport { extractYouTubePlaylistId, getYouTubePlaylistThumbnail } from '../../utils/videoUtils'\nimport { useSkills } from '../../hooks/useSkills'\nimport { useCategories } from '../../hooks/useCategories'\nimport LexicalEditor from '../lexical/LexicalEditor'\nimport { SerializedEditorState } from 'lexical'\n\ninterface FormProps {\n  data?: VideoPlaylist\n  onSave: (data: VideoPlaylistFormData) => void\n  onCancel: () => void\n  isSaving?: boolean\n  availableCategories?: string[]\n}\n\nconst VideoPlaylistForm: React.FC<FormProps> = ({ \n  data, \n  onSave, \n  onCancel, \n  isSaving = false, \n  availableCategories = ['PLC', '데이터분석', '로봇공학', 'IoT', '기타'] \n}) => {\n  const { skillCategories, loading: skillsLoading } = useSkills()\n  \n  // 🌟 카테고리 데이터 가져오기\n  const { data: categoriesData, isLoading: categoriesLoading } = useCategories()\n  // categories가 배열이 아닌 경우를 대비한 안전 처리\n  const categories = Array.isArray(categoriesData) ? categoriesData : []\n\n  const initialWatchDate = data?.watchDate && !isNaN(new Date(data.watchDate).getTime())\n    ? new Date(data.watchDate).toISOString().split('T')[0]\n    : new Date().toISOString().split('T')[0]\n\n  const [playlistUrlInput, setPlaylistUrlInput] = useState<string>(() => {\n    if (data?.playlistId) return `https://www.youtube.com/playlist?list=${data.playlistId}`\n    return ''\n  })\n\n  // 🌟 categoryIds 초기값 처리\n  const initialCategoryIds = data?.categoryIds \n    ? (data.categoryIds as any[]).map((catIdOrObj: any) => \n        typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj._id\n      ).filter(Boolean) as string[]\n    : []\n\n  // keyTakeaways를 SerializedEditorState 형식으로 관리\n  const parseKeyTakeaways = (value: string | undefined): SerializedEditorState => {\n    if (!value) return { root: { children: [], direction: 'ltr', format: '', indent: 0, type: 'root', version: 1 } }\n    try {\n      const parsed = JSON.parse(value)\n      if (parsed && parsed.root) return parsed\n      return { root: { children: [], direction: 'ltr', format: '', indent: 0, type: 'root', version: 1 } }\n    } catch {\n      return { root: { children: [], direction: 'ltr', format: '', indent: 0, type: 'root', version: 1 } }\n    }\n  }\n\n  const [formData, setFormData] = useState<Omit<VideoPlaylistFormData, 'playlistId' | 'keyTakeaways'> & { keyTakeaways: SerializedEditorState }>(\n    data\n      ? { \n          title: data.title,\n          category: data.category,\n          categoryIds: initialCategoryIds,\n          watchDate: initialWatchDate as string,\n          rating: data.rating || 3,\n          purpose: data.purpose || '',\n          keyTakeaways: parseKeyTakeaways(data.keyTakeaways),\n          application: data.application || '',\n          skillIds: (data.skillIds || []).map((skillIdOrObj: any) => \n            typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj._id\n          ).filter(Boolean) as string[],\n          order: data.order || 0,\n        } \n      : {\n          title: '',\n          category: availableCategories[0] || 'PLC',\n          categoryIds: [],\n          watchDate: initialWatchDate as string,\n          rating: 3,\n          purpose: '',\n          keyTakeaways: { blocks: [] },\n          application: '',\n          skillIds: [],\n          order: 0,\n        }\n  )\n\n  const playlistId = useMemo(() => {\n    const id = extractYouTubePlaylistId(playlistUrlInput)\n    console.log('🎬 PlaylistForm: URL 파싱 결과 -', { inputUrl: playlistUrlInput, extractedId: id })\n    return id\n  }, [playlistUrlInput])\n  \n  const thumbnailUrl = useMemo(() => playlistId ? getYouTubePlaylistThumbnail(playlistId) : null, [playlistId])\n  const isValidUrl = useMemo(() => playlistId !== null, [playlistId])\n\n  // 🌟 카테고리 선택/해제 핸들러 (체크박스용)\n  const handleCategoryToggle = (categoryId: string) => {\n    const currentCategoryIds = formData.categoryIds || []\n    const isSelected = currentCategoryIds.includes(categoryId)\n    \n    const newCategoryIds = isSelected\n      ? currentCategoryIds.filter((id: string) => id !== categoryId)\n      : [...currentCategoryIds, categoryId]\n    \n    setFormData({ \n      ...formData, \n      categoryIds: newCategoryIds \n    })\n  }\n\n  const handleSkillToggle = (skillId: string) => {\n    const currentSkillIds = formData.skillIds || []\n    const isSelected = currentSkillIds.includes(skillId)\n    \n    const newSkillIds = isSelected\n      ? currentSkillIds.filter((id: string) => id !== skillId)\n      : [...currentSkillIds, skillId]\n    \n    setFormData({ \n      ...formData, \n      skillIds: newSkillIds \n    })\n  }\n\n  const handleFormSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!formData.title.trim() || !playlistUrlInput.trim()) {\n      alert('필수 필드(제목, 재생 목록 URL)를 모두 입력해주세요.')\n      return\n    }\n\n    if (!isValidUrl || !playlistId) {\n      alert('❌ 올바른 유튜브 재생 목록 URL을 입력해주세요.')\n      return\n    }\n    \n    const { title, category, categoryIds, watchDate, rating, purpose, keyTakeaways, application, skillIds, order } = formData\n    \n    const saveData = { \n      title, \n      playlistId: playlistId!,\n      category, \n      categoryIds: categoryIds || [],  // 🌟 다중 카테고리 추가\n      watchDate, \n      ...(rating !== undefined && { rating }),\n      ...(purpose && { purpose }),\n      ...(keyTakeaways && { keyTakeaways: JSON.stringify(keyTakeaways) }),\n      ...(application && { application }),\n      skillIds: skillIds || [],\n      order: order || 0,\n    }\n    \n    console.log('📝 VideoPlaylistForm: 저장 데이터 전송', saveData)\n    onSave(saveData as VideoPlaylistFormData)\n  }\n\n  const isFormValid = formData.title.trim() && playlistUrlInput.trim() && isValidUrl\n\n  const renderRatingStars = () => {\n    return Array.from({ length: 5 }, (_, i) => {\n      const starValue = i + 1\n      return (\n        <button\n          key={i}\n          type=\"button\"\n          onClick={() => setFormData({ ...formData, rating: starValue })}\n          className={`text-3xl transition-colors ${\n            starValue <= (formData.rating || 0)\n              ? 'text-yellow-500 hover:text-yellow-600'\n              : 'text-gray-300 dark:text-gray-600 hover:text-gray-400'\n          }`}\n        >\n          <FaStar />\n        </button>\n      )\n    })\n  }\n\n  return (\n    <form onSubmit={handleFormSubmit} className=\"space-y-6\">\n      <div className=\"grid md:grid-cols-2 gap-6\">\n        <div className=\"md:col-span-2\">\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            제목 <span className=\"text-red-500\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            value={formData.title}\n            onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            placeholder=\"재생 목록 제목을 입력하세요\"\n            required\n          />\n        </div>\n\n        <div className=\"md:col-span-2\">\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            재생 목록 URL <span className=\"text-red-500\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            value={playlistUrlInput}\n            onChange={(e) => setPlaylistUrlInput(e.target.value)}\n            className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white ${\n              playlistUrlInput && !isValidUrl\n                ? 'border-red-500'\n                : 'border-gray-300 dark:border-gray-600'\n            }`}\n            placeholder=\"https://www.youtube.com/playlist?list=...\"\n            required\n          />\n          {playlistUrlInput && !isValidUrl && (\n            <p className=\"text-red-500 text-sm mt-1\">올바른 유튜브 재생 목록 URL을 입력해주세요</p>\n          )}\n          {playlistId && (\n            <p className=\"text-green-600 text-sm mt-1\">✅ 재생 목록 ID: <code className=\"bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded\">{playlistId}</code></p>\n          )}\n        </div>\n\n        <div className=\"md:col-span-2\">\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\n            카테고리 선택 📂 (다중 선택 가능)\n          </label>\n\n          {/* 선택된 카테고리 태그 표시 */}\n          {formData.categoryIds && formData.categoryIds.length > 0 && (\n            <div className=\"flex flex-wrap gap-2 mb-3 p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n              {formData.categoryIds.map((catId) => {\n                const category = categories.find(c => c._id === catId)\n                return category ? (\n                  <span\n                    key={catId}\n                    className=\"inline-flex items-center gap-1 px-3 py-1 bg-blue-600 text-white rounded-full text-sm\"\n                  >\n                    {category.name}\n                    <button\n                      type=\"button\"\n                      onClick={() => handleCategoryToggle(catId)}\n                      className=\"hover:bg-blue-700 rounded-full p-0.5\"\n                    >\n                      <FaTimes className=\"text-xs\" />\n                    </button>\n                  </span>\n                ) : null\n              })}\n            </div>\n          )}\n\n          {/* 카테고리 체크박스 목록 */}\n          {categoriesLoading ? (\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">카테고리 로딩 중...</p>\n          ) : categories.length > 0 ? (\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2\">\n              {categories.map((category) => {\n                const isSelected = (formData.categoryIds || []).includes(category._id)\n                return (\n                  <label\n                    key={category._id}\n                    className={`flex items-center gap-2 p-3 border-2 rounded-lg cursor-pointer transition-all ${\n                      isSelected\n                        ? 'border-primary-600 bg-primary-50 dark:bg-primary-900/20'\n                        : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600'\n                    }`}\n                  >\n                    <input\n                      type=\"checkbox\"\n                      checked={isSelected}\n                      onChange={() => handleCategoryToggle(category._id)}\n                      className=\"w-4 h-4\"\n                    />\n                    <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      {category.name}\n                    </span>\n                  </label>\n                )\n              })}\n            </div>\n          ) : (\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n              등록된 카테고리가 없습니다. 관리자 메뉴의 \"카테고리 관리\"에서 추가하세요.\n            </p>\n          )}\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            시청 날짜\n          </label>\n          <input\n            type=\"date\"\n            value={formData.watchDate}\n            onChange={(e) => setFormData({ ...formData, watchDate: e.target.value })}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n          />\n        </div>\n\n        <div className=\"md:col-span-2\">\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            평점\n          </label>\n          <div className=\"flex items-center gap-2\">\n            {renderRatingStars()}\n            <span className=\"ml-3 text-gray-600 dark:text-gray-400\">{formData.rating}/5</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"space-y-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            시청 목적\n          </label>\n          <textarea\n            value={formData.purpose}\n            onChange={(e) => setFormData({ ...formData, purpose: e.target.value })}\n            className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-vertical\"\n            rows={3}\n            placeholder=\"이 재생 목록을 왜 시청했는지 작성하세요...\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            핵심 배움\n          </label>\n          <LexicalEditor\n            value={formData.keyTakeaways}\n            onChange={(value) => setFormData({ ...formData, keyTakeaways: value })}\n            placeholder=\"이 재생 목록에서 얻은 핵심 지식을 정리하세요...\"\n            className=\"min-h-[300px]\"\n          />\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n            텍스트, 이미지, 리스트로 정리할 수 있습니다\n          </p>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            통합 적용 계획 (마크다운 지원)\n          </label>\n          <textarea\n            value={formData.application}\n            onChange={(e) => setFormData({ ...formData, application: e.target.value })}\n            className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-vertical font-mono text-sm\"\n            rows={5}\n            placeholder=\"이 지식을 어떻게 활용할 계획인지 작성하세요...\"\n          />\n        </div>\n      </div>\n\n      {/* 스킬 연결 (VideoLearningForm과 동일한 UI) */}\n      <div className=\"md:col-span-2\">\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          관련 기술 연동 🔗\n        </label>\n        {skillsLoading ? (\n          <div className=\"text-sm text-gray-500 dark:text-gray-400 py-2\">\n            스킬 목록을 불러오는 중입니다...\n          </div>\n        ) : (\n          <>\n            {(formData.skillIds || []).length > 0 && (\n              <div className=\"mb-3 px-3 py-2 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n                <span className=\"text-sm text-blue-700 dark:text-blue-300 font-medium\">\n                  ✓ {(formData.skillIds || []).length}개 선택됨\n                </span>\n              </div>\n            )}\n            \n            <div className=\"border border-gray-300 dark:border-gray-600 rounded-lg p-4 max-h-[300px] overflow-y-auto bg-gray-50 dark:bg-gray-800/50\">\n              {skillCategories.map((category) => (\n                <div key={category._id} className=\"mb-3 last:mb-0\">\n                  <label \n                    className=\"font-bold text-sm block mb-2\"\n                    style={{ color: category.color || '#3B82F6' }}\n                  >\n                    {category.title}\n                  </label>\n                  <div className=\"ml-4 space-y-1\">\n                    {(category.skills || []).map((skill) => {\n                      const isSelected = (formData.skillIds || []).includes(skill._id!)\n                      return (\n                        <div\n                          key={skill._id}\n                          onClick={() => handleSkillToggle(skill._id!)}\n                          className={`flex items-center gap-2 p-2 rounded cursor-pointer transition-all ${\n                            isSelected\n                              ? 'bg-blue-100 dark:bg-blue-900/30 font-medium'\n                              : 'hover:bg-gray-100 dark:hover:bg-gray-600'\n                          }`}\n                        >\n                          <input\n                            type=\"checkbox\"\n                            checked={isSelected}\n                            onChange={() => {}}\n                            className=\"w-4 h-4\"\n                          />\n                          <span className=\"text-sm\">{skill.name}</span>\n                        </div>\n                      )\n                    })}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <div className=\"flex gap-4 pt-4\">\n        <button\n          type=\"submit\"\n          disabled={isSaving || !isFormValid || !isValidUrl}\n          className=\"flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors font-medium\"\n        >\n          <FaSave /> {isSaving ? '저장 중...' : '저장'}\n        </button>\n        <button\n          type=\"button\"\n          onClick={onCancel}\n          className=\"px-6 py-3 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors font-medium\"\n        >\n          취소\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default VideoPlaylistForm\n\n","import React, { useState, useMemo } from 'react'\nimport { FaSave } from 'react-icons/fa'\nimport { PlaylistVideo, PlaylistVideoFormData } from '../../types'\nimport { extractYouTubeId, getYouTubeThumbnail } from '../../utils/videoUtils'\n\ninterface FormProps {\n  playlistId: string\n  data?: PlaylistVideo\n  onSave: (data: PlaylistVideoFormData) => void\n  onCancel: () => void\n  isSaving?: boolean\n}\n\nconst PlaylistVideoForm: React.FC<FormProps> = ({ \n  playlistId,\n  data, \n  onSave, \n  onCancel, \n  isSaving = false \n}) => {\n  // 🌟 영상 URL 입력 (videoId 자동 추출)\n  const [videoUrlInput, setVideoUrlInput] = useState<string>(() => {\n    if (data?.videoId) return `https://www.youtube.com/watch?v=${data.videoId}`\n    return ''\n  })\n\n  const [formData, setFormData] = useState<Omit<PlaylistVideoFormData, 'playlistId' | 'videoId'>>(\n    data\n      ? { \n          title: data.title,\n          keyTakeaways: data.keyTakeaways || '',\n          order: data.order || 0,\n        } \n      : {\n          title: '',\n          keyTakeaways: '',\n          order: 0,\n        }\n  )\n\n  const videoId = useMemo(() => extractYouTubeId(videoUrlInput), [videoUrlInput])\n  const thumbnailUrl = useMemo(() => videoId ? getYouTubeThumbnail(videoId) : null, [videoId])\n  const isValidUrl = useMemo(() => videoId !== null, [videoId])\n\n  const handleFormSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!formData.title.trim() || !videoUrlInput.trim()) {\n      alert('필수 필드(제목, 영상 URL)를 모두 입력해주세요.')\n      return\n    }\n\n    if (!isValidUrl || !videoId) {\n      alert('❌ 올바른 유튜브 영상 URL을 입력해주세요.')\n      return\n    }\n    \n    onSave({ \n      playlistId,\n      videoId: videoId!,\n      title: formData.title,\n      keyTakeaways: formData.keyTakeaways || '',\n      order: formData.order || 0,\n    })\n  }\n\n  const isFormValid = formData.title.trim() && videoUrlInput.trim() && isValidUrl\n\n  return (\n    <form onSubmit={handleFormSubmit} className=\"space-y-4\">\n      <div className=\"grid gap-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            영상 URL <span className=\"text-red-500\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            value={videoUrlInput}\n            onChange={(e) => setVideoUrlInput(e.target.value)}\n            className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white ${\n              videoUrlInput && !isValidUrl\n                ? 'border-red-500'\n                : 'border-gray-300 dark:border-gray-600'\n            }`}\n            placeholder=\"https://www.youtube.com/watch?v=...\"\n            required\n          />\n          {videoUrlInput && !isValidUrl && (\n            <p className=\"text-red-500 text-sm mt-1\">올바른 유튜브 URL을 입력해주세요</p>\n          )}\n          {videoId && (\n            <p className=\"text-green-600 text-sm mt-1\">✅ 영상 ID: <code className=\"bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded\">{videoId}</code></p>\n          )}\n          {/* 🌟 썸네일 미리보기 */}\n          {thumbnailUrl && isValidUrl && (\n            <div className=\"mt-3\">\n              <img \n                src={thumbnailUrl} \n                alt=\"영상 썸네일\" \n                className=\"w-full max-w-xs rounded-lg shadow-md\"\n              />\n            </div>\n          )}\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            영상 제목 <span className=\"text-red-500\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            value={formData.title}\n            onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            placeholder=\"영상 제목을 입력하세요\"\n            required\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            핵심 배움 (마크다운 지원)\n          </label>\n          <textarea\n            value={formData.keyTakeaways}\n            onChange={(e) => setFormData({ ...formData, keyTakeaways: e.target.value })}\n            className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-vertical font-mono text-sm\"\n            rows={6}\n            placeholder=\"예시:&#10;- [2:30] React Query의 staleTime 이해&#10;- [5:15] 캐시 무효화 전략&#10;- [8:45] Optimistic Updates\"\n          />\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n            타임스탬프 형식: [MM:SS] 또는 [H:MM:SS]\n          </p>\n        </div>\n      </div>\n\n      <div className=\"flex gap-4 pt-4\">\n        <button\n          type=\"submit\"\n          disabled={isSaving || !isFormValid}\n          className=\"flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors font-medium\"\n        >\n          <FaSave /> {isSaving ? '저장 중...' : '저장'}\n        </button>\n        <button\n          type=\"button\"\n          onClick={onCancel}\n          className=\"px-6 py-3 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors font-medium\"\n        >\n          취소\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default PlaylistVideoForm\n\n","import React, { useState } from 'react'\nimport { \n  FaSave, \n  FaPlus, \n  FaTrash, \n  FaBriefcase, \n  FaCoffee, \n  FaGraduationCap, \n  FaChartLine, \n  FaCode, \n  FaCog, \n  FaRobot,\n  FaCar,           // 🚗 자동차\n  FaShieldAlt,     // 🛡️ 군인\n  FaLaptopCode,    // 💻 프로그래밍\n  FaBars           // 🌟 드래그 핸들 아이콘\n} from 'react-icons/fa'\nimport { Experience, ExperienceFormData, ExperienceDetail, Skill, SkillCategory } from '../../types'\nimport RichTextEditor from '../RichTextEditor'\nimport { DndContext, closestCenter, DragEndEvent } from '@dnd-kit/core'\nimport { SortableContext, verticalListSortingStrategy, useSortable } from '@dnd-kit/sortable'\nimport { CSS } from '@dnd-kit/utilities'\nimport { useSkills } from '../../hooks/useSkills'\nimport LanguageTabs, { AdminLanguage } from '../common/LanguageTabs'\n\n// 🌟 아이콘 옵션 정의\nconst iconOptions = [\n  { key: 'FaBriefcase', icon: FaBriefcase, label: '💼 일반 업무' },\n  { key: 'FaCoffee', icon: FaCoffee, label: '☕ 서비스/카페' },\n  { key: 'FaGraduationCap', icon: FaGraduationCap, label: '🎓 교육/학습' },\n  { key: 'FaChartLine', icon: FaChartLine, label: '📈 성장/분석' },\n  { key: 'FaLaptopCode', icon: FaLaptopCode, label: '💻 프로그래밍' },\n  { key: 'FaCode', icon: FaCode, label: '⌨️ 개발/코딩' },\n  { key: 'FaCog', icon: FaCog, label: '⚙️ 기술/엔지니어링' },\n  { key: 'FaRobot', icon: FaRobot, label: '🤖 자동화/AI' },\n  { key: 'FaCar', icon: FaCar, label: '🚗 자동차/운전' },\n  { key: 'FaShieldAlt', icon: FaShieldAlt, label: '🛡️ 군대/보안' },\n]\n\n// 🌟 Sortable 카테고리 아이템 컴포넌트\ninterface SortableCategoryItemProps {\n  detail: ExperienceDetail\n  index: number\n  editingCategoryIndex: number | null\n  onEdit: (index: number) => void\n  onRemove: (index: number) => void\n}\n\nconst SortableCategoryItem: React.FC<SortableCategoryItemProps> = ({ \n  detail, \n  index, \n  editingCategoryIndex,\n  onEdit,\n  onRemove\n}) => {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({ id: index })\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.5 : 1,\n    zIndex: isDragging ? 1000 : 'auto',\n  }\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style}\n      className=\"bg-white dark:bg-gray-800 p-4 rounded-lg border-2 border-gray-300 dark:border-gray-600 hover:border-blue-400 dark:hover:border-blue-600 transition-colors\"\n    >\n      <div className=\"flex items-center justify-between mb-2\">\n        <div className=\"flex items-center gap-2\">\n          {/* 🌟 드래그 핸들 */}\n          <div\n            {...attributes}\n            {...listeners}\n            className=\"cursor-grab active:cursor-grabbing text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 p-1\"\n            title=\"드래그하여 순서 변경\"\n          >\n            <FaBars />\n          </div>\n          <div className=\"w-2 h-2 rounded-full bg-blue-600\"></div>\n          <h5 className=\"font-bold text-gray-900 dark:text-white\">{detail.category}</h5>\n          <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n            ({detail.items.length}개 항목)\n          </span>\n        </div>\n        <div className=\"flex gap-2\">\n          <button\n            type=\"button\"\n            onClick={() => onEdit(index)}\n            disabled={editingCategoryIndex !== null}\n            className={`px-3 py-1 text-xs bg-blue-600 hover:bg-blue-700 text-white rounded transition-colors ${\n              editingCategoryIndex !== null ? 'opacity-50 cursor-not-allowed' : ''\n            }`}\n          >\n            수정\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => onRemove(index)}\n            disabled={editingCategoryIndex !== null}\n            className={`p-1.5 text-red-600 hover:bg-red-100 dark:hover:bg-red-900/30 rounded transition-colors ${\n              editingCategoryIndex !== null ? 'opacity-50 cursor-not-allowed' : ''\n            }`}\n            title=\"카테고리 삭제\"\n          >\n            <FaTrash className=\"text-xs\" />\n          </button>\n        </div>\n      </div>\n      <ul className=\"text-sm text-gray-700 dark:text-gray-300 pl-4\">\n        {detail.items.slice(0, 3).map((item, i) => (\n          <li key={i} className=\"list-disc\">{item}</li>\n        ))}\n        {detail.items.length > 3 && (\n          <li className=\"text-gray-500 dark:text-gray-400 italic\">\n            외 {detail.items.length - 3}개 항목...\n          </li>\n        )}\n      </ul>\n    </div>\n  )\n}\n\n// 폼 컴포넌트의 Props 타입 정의\ninterface FormProps {\n  data: Experience | null\n  onSave: (data: ExperienceFormData) => Promise<void>\n  onCancel: () => void\n  isSaving?: boolean\n}\n\nconst ExperienceForm: React.FC<FormProps> = ({ data, onSave, onCancel, isSaving = false }) => {\n  const [currentLang, setCurrentLang] = useState<AdminLanguage>('ko')\n  \n  // 🌟 스킬 목록 가져오기\n  const { skillCategories, loading: skillsLoading } = useSkills()\n  \n  // 🌟 skillIds 초기값 처리 (객체 또는 문자열 모두 처리)\n  const initialSkillIds = data?.skillIds \n    ? (data.skillIds as any[]).map((skillIdOrObj: any) => \n        typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj?._id\n      ).filter(Boolean) as string[]\n    : []\n  \n  // 초기 formData 설정 (iconKey 포함, details에 order 호환성 처리)\n  const initialFormData: ExperienceFormData = data ? {\n    ...data,\n    iconKey: data.iconKey || 'FaBriefcase',\n    // 🌟 기존 데이터 호환성: details에 order가 없으면 인덱스를 기본값으로 설정\n    details: (data.details || []).map((detail, index) => ({\n      ...detail,\n      order: detail.order ?? index\n    })),\n    skills: data.skills || [],\n    skillsEn: data.skillsEn || [],\n    skillsJa: data.skillsJa || [],\n    skillIds: initialSkillIds  // 🌟 스킬 ID 문자열 배열로 초기화\n  } : {\n    period: '',\n    title: '',\n    company: '',\n    description: '',\n    details: [],\n    skills: [],\n    skillsEn: [],\n    skillsJa: [],\n    skillIds: [],  // 🌟 스킬 ID 초기값\n    order: 0,\n    iconKey: 'FaBriefcase'\n  }\n  \n  const [formData, setFormData] = useState<ExperienceFormData>(initialFormData)\n  \n  // 기술 입력을 위한 별도 상태 (입력 중에는 문자열로 유지)\n  const [skillsInput, setSkillsInput] = useState<string>(\n    Array.isArray(formData.skills) ? formData.skills.join(', ') : ''\n  )\n  \n  // 🌟 카테고리별 상세 내용 관리 상태\n  const [editingCategoryIndex, setEditingCategoryIndex] = useState<number | null>(null)\n  const [categoryFormData, setCategoryFormData] = useState<{ \n    category: string\n    categoryEn: string\n    categoryJa: string\n    content: string\n    contentEn: string\n    contentJa: string\n  }>({\n    category: '',\n    categoryEn: '',\n    categoryJa: '',\n    content: '',\n    contentEn: '',\n    contentJa: ''\n  })\n  \n  // 🌟 스킬 선택/해제 핸들러 (체크박스용)\n  const handleSkillToggle = (skillId: string) => {\n    const currentSkillIds = formData.skillIds || []\n    const isSelected = currentSkillIds.includes(skillId)\n    \n    const newSkillIds = isSelected\n      ? currentSkillIds.filter((id: string) => id !== skillId)\n      : [...currentSkillIds, skillId]\n    \n    setFormData({ \n      ...formData, \n      skillIds: newSkillIds \n    })\n  }\n  \n  // 🌟 스킬 카테고리 전체 선택/해제 핸들러\n  const handleSkillCategoryToggle = (category: SkillCategory) => {\n    const categorySkillIds = (category.skills || []).map(skill => skill._id!).filter(Boolean)\n    const currentSkillIds = formData.skillIds || []\n    \n    const allSelected = categorySkillIds.every((id: string) => currentSkillIds.includes(id))\n    \n    let newSkillIds: string[]\n    if (allSelected) {\n      newSkillIds = currentSkillIds.filter((id: string) => !categorySkillIds.includes(id))\n    } else {\n      const uniqueIds = new Set([...currentSkillIds, ...categorySkillIds])\n      newSkillIds = Array.from(uniqueIds)\n    }\n    \n    setFormData({ \n      ...formData, \n      skillIds: newSkillIds \n    })\n  }\n  \n  // 🌟 카테고리별 상세 내용 관리 함수들\n  const addDetailCategory = () => {\n    setEditingCategoryIndex((formData.details || []).length)\n    setCategoryFormData({ \n      category: '', \n      categoryEn: '', \n      categoryJa: '', \n      content: '', \n      contentEn: '', \n      contentJa: '' \n    })\n  }\n  \n  const editDetailCategory = (index: number) => {\n    const detail = (formData.details || [])[index]\n    if (detail) {\n      setEditingCategoryIndex(index)\n      setCategoryFormData({\n        category: detail.category,\n        categoryEn: detail.categoryEn || '',\n        categoryJa: detail.categoryJa || '',\n        content: detail.items.join('\\n'),\n        contentEn: detail.itemsEn?.join('\\n') || '',\n        contentJa: detail.itemsJa?.join('\\n') || ''\n      })\n    }\n  }\n  \n  const saveDetailCategory = () => {\n    if (!categoryFormData.category.trim() || !categoryFormData.content.trim()) {\n      alert('카테고리 이름과 내용을 모두 입력해주세요.')\n      return\n    }\n    \n    const items = categoryFormData.content.split('\\n').map(s => s.trim()).filter(s => s.length > 0)\n    const itemsEn = categoryFormData.contentEn.split('\\n').map(s => s.trim()).filter(s => s.length > 0)\n    const itemsJa = categoryFormData.contentJa.split('\\n').map(s => s.trim()).filter(s => s.length > 0)\n    \n    const newDetail: ExperienceDetail = {\n      category: categoryFormData.category.trim(),\n      categoryEn: categoryFormData.categoryEn.trim() || undefined,\n      categoryJa: categoryFormData.categoryJa.trim() || undefined,\n      items,\n      itemsEn: itemsEn.length > 0 ? itemsEn : undefined,\n      itemsJa: itemsJa.length > 0 ? itemsJa : undefined\n    }\n    \n    const newDetails = [...(formData.details || [])]\n    if (editingCategoryIndex !== null) {\n      newDetails[editingCategoryIndex] = newDetail\n    }\n    \n    setFormData({ ...formData, details: newDetails })\n    setEditingCategoryIndex(null)\n    setCategoryFormData({ \n      category: '', \n      categoryEn: '', \n      categoryJa: '', \n      content: '', \n      contentEn: '', \n      contentJa: '' \n    })\n  }\n  \n  const cancelDetailCategory = () => {\n    setEditingCategoryIndex(null)\n    setCategoryFormData({ \n      category: '', \n      categoryEn: '', \n      categoryJa: '', \n      content: '', \n      contentEn: '', \n      contentJa: '' \n    })\n  }\n  \n  const removeDetailCategory = (index: number) => {\n    if (!confirm('이 카테고리를 삭제하시겠습니까?')) return\n    const newDetails = [...(formData.details || [])]\n    newDetails.splice(index, 1)\n    setFormData({ ...formData, details: newDetails })\n  }\n  \n  // 🌟 드래그 앤 드롭 핸들러\n  const handleDragEnd = (event: DragEndEvent) => {\n    const { active, over } = event\n    \n    if (!over || active.id === over.id) return\n    \n    const oldIndex = (formData.details || []).findIndex((_, i) => i === active.id)\n    const newIndex = (formData.details || []).findIndex((_, i) => i === over.id)\n    \n    if (oldIndex === -1 || newIndex === -1) return\n    \n    // 배열 순서 변경\n    const newDetails = [...(formData.details || [])]\n    const [movedItem] = newDetails.splice(oldIndex, 1)\n    \n    if (!movedItem) return  // 안전성 체크\n    \n    newDetails.splice(newIndex, 0, movedItem)\n    \n    // 🌟 순서 변경 후 각 항목에 새로운 order 값 할당\n    const reorderedDetails = newDetails.map((detail, index) => ({\n      ...detail,\n      order: index\n    }))\n    \n    setFormData({ ...formData, details: reorderedDetails })\n  }\n\n  // 필수 필드 검증\n  const isFormValid = formData.title.trim() !== '' && \n                     formData.company.trim() !== '' && \n                     formData.period.trim() !== ''\n\n  const handleFormSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!isFormValid) {\n      alert('필수 필드(기간, 직책, 회사/기관)를 모두 입력해주세요.')\n      return\n    }\n    \n    // 제출 시 최신 기술 배열을 포함하여 저장 (호환성 유지)\n    const skillsArray = skillsInput.split(',').map((s) => s.trim()).filter(s => s.length > 0)\n    \n    // 🌟 skillIds를 문자열 배열로 확실하게 변환 + 중복 제거\n    const skillIds = Array.from(new Set(\n      (formData.skillIds || []).map((skillIdOrObj: any) => \n        typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj?._id\n      ).filter(Boolean)\n    ))\n    \n    // 🌟 details 배열의 각 항목에 order 값 할당 (현재 배열 순서 기준)\n    const orderedDetails = (formData.details || []).map((detail, index) => ({\n      ...detail,\n      order: detail.order ?? index  // 기존 order가 있으면 유지, 없으면 인덱스 사용\n    }))\n    \n    const finalFormData = { \n      ...formData, \n      skills: skillsArray,  // 🔄 호환성 유지\n      skillIds,  // 🌟 스킬 ID 배열\n      details: orderedDetails\n    }\n    \n    console.log('📤 경력 저장 데이터:', finalFormData)\n    onSave(finalFormData)\n  }\n\n  return (\n    <form onSubmit={handleFormSubmit} className=\"space-y-4\">\n      <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">\n        {data ? '경력 수정' : '경력 추가'}\n      </h3>\n      <div className=\"grid md:grid-cols-2 gap-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            기간\n          </label>\n          <input\n            type=\"text\"\n            value={formData.period}\n            onChange={(e) => setFormData({ ...formData, period: e.target.value })}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            placeholder=\"2018 - 2023\"\n          />\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            직책\n          </label>\n          <input\n            type=\"text\"\n            value={formData.title}\n            onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n          />\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            회사/기관\n          </label>\n          <input\n            type=\"text\"\n            value={formData.company}\n            onChange={(e) => setFormData({ ...formData, company: e.target.value })}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n          />\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            순서\n          </label>\n          <input\n            type=\"number\"\n            value={formData.order}\n            onChange={(e) => {\n              const value = parseInt(e.target.value)\n              setFormData({ ...formData, order: isNaN(value) ? 0 : value })\n            }}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            min=\"0\"\n            placeholder=\"표시 순서 (숫자가 작을수록 먼저 표시)\"\n          />\n        </div>\n        {/* 🌟 아이콘 선택 필드 (신규) */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            아이콘\n          </label>\n          <select\n            value={formData.iconKey || 'FaBriefcase'}\n            onChange={(e) => setFormData({ ...formData, iconKey: e.target.value })}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n          >\n            {iconOptions.map((option) => (\n              <option key={option.key} value={option.key}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n          {/* 미리보기 */}\n          <div className=\"mt-2 flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400\">\n            <span>미리보기:</span>\n            {React.createElement(\n              iconOptions.find(opt => opt.key === (formData.iconKey || 'FaBriefcase'))?.icon || FaBriefcase,\n              { className: 'text-xl' }\n            )}\n          </div>\n        </div>\n      </div>\n      {/* 🌟 카테고리별 상세 내용 입력 (신규) */}\n      <div className=\"bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg border-2 border-blue-200 dark:border-blue-800\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <div>\n            <h4 className=\"text-md font-bold text-gray-900 dark:text-white\">\n              📋 카테고리별 상세 내용\n            </h4>\n            <p className=\"text-xs text-gray-600 dark:text-gray-400 mt-1\">\n              근무경험, 교육, 근무매장 등 카테고리별로 구체적인 내용을 정리하세요\n            </p>\n          </div>\n          <button\n            type=\"button\"\n            onClick={addDetailCategory}\n            disabled={editingCategoryIndex !== null}\n            className={`px-3 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg transition-colors flex items-center gap-2 text-sm ${\n              editingCategoryIndex !== null ? 'opacity-50 cursor-not-allowed' : ''\n            }`}\n          >\n            <FaPlus className=\"text-xs\" />\n            카테고리 추가\n          </button>\n        </div>\n        \n        {/* 저장된 카테고리 목록 - 🌟 드래그 앤 드롭 적용 */}\n        {formData.details && formData.details.length > 0 && (\n          <DndContext collisionDetection={closestCenter} onDragEnd={handleDragEnd}>\n            <SortableContext items={formData.details.map((_, i) => i)} strategy={verticalListSortingStrategy}>\n              <div className=\"space-y-3 mb-4\">\n                {formData.details.map((detail, index) => (\n                  <SortableCategoryItem\n                    key={index}\n                    detail={detail}\n                    index={index}\n                    editingCategoryIndex={editingCategoryIndex}\n                    onEdit={editDetailCategory}\n                    onRemove={removeDetailCategory}\n                  />\n                ))}\n              </div>\n            </SortableContext>\n          </DndContext>\n        )}\n        \n        {/* 카테고리 추가/수정 폼 */}\n        {editingCategoryIndex !== null && (\n          <div className=\"bg-white dark:bg-gray-800 p-5 rounded-lg border-2 border-blue-400 dark:border-blue-600 shadow-lg\">\n            <h5 className=\"font-bold text-gray-900 dark:text-white mb-4\">\n              {editingCategoryIndex < (formData.details || []).length ? '카테고리 수정' : '카테고리 추가'}\n            </h5>\n            \n            {/* Language Tabs for Detail Category */}\n            <div className=\"mb-4\">\n              <LanguageTabs activeLanguage={currentLang} onChange={setCurrentLang} />\n            </div>\n            \n            <div className=\"space-y-4\">\n              {/* Category Name (Multilingual) */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  카테고리 이름 {currentLang === 'ko' && <span className=\"text-red-500\">*</span>}\n                  <span className=\"text-xs text-gray-500 ml-2\">\n                    ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\n                  </span>\n                </label>\n                {currentLang === 'ko' && (\n                  <input\n                    type=\"text\"\n                    value={categoryFormData.category}\n                    onChange={(e) => setCategoryFormData({ ...categoryFormData, category: e.target.value })}\n                    placeholder=\"예: 근무경험, 교육, 근무매장\"\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white font-semibold\"\n                  />\n                )}\n                {currentLang === 'en' && (\n                  <input\n                    type=\"text\"\n                    value={categoryFormData.categoryEn}\n                    onChange={(e) => setCategoryFormData({ ...categoryFormData, categoryEn: e.target.value })}\n                    placeholder=\"e.g., Work Experience, Education, Store\"\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white font-semibold\"\n                  />\n                )}\n                {currentLang === 'ja' && (\n                  <input\n                    type=\"text\"\n                    value={categoryFormData.categoryJa}\n                    onChange={(e) => setCategoryFormData({ ...categoryFormData, categoryJa: e.target.value })}\n                    placeholder=\"例: 職務経験、教育、店舗\"\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white font-semibold\"\n                  />\n                )}\n              </div>\n              \n              {/* Category Content (Multilingual) */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  카테고리 내용 {currentLang === 'ko' && <span className=\"text-red-500\">*</span>}\n                  <span className=\"text-xs text-gray-500 ml-2\">\n                    ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\n                  </span>\n                </label>\n                {currentLang === 'ko' && (\n                  <>\n                    <RichTextEditor\n                      value={categoryFormData.content}\n                      onChange={(value) => setCategoryFormData({ ...categoryFormData, content: value })}\n                      placeholder=\"항목들을 한 줄씩 입력하세요&#10;예:&#10;매장인원 관리&#10;신규파트너 교육&#10;라떼아트 교육\"\n                      rows={8}\n                      className=\"min-h-[200px]\"\n                    />\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\n                      💡 한 줄에 하나씩 항목을 입력하세요 (Enter로 구분)\n                    </p>\n                  </>\n                )}\n                {currentLang === 'en' && (\n                  <>\n                    <RichTextEditor\n                      value={categoryFormData.contentEn}\n                      onChange={(value) => setCategoryFormData({ ...categoryFormData, contentEn: value })}\n                      placeholder=\"Enter items one per line&#10;e.g.&#10;Store Staff Management&#10;New Partner Training&#10;Latte Art Education\"\n                      rows={8}\n                      className=\"min-h-[200px]\"\n                    />\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\n                      💡 Enter one item per line (separated by Enter)\n                    </p>\n                  </>\n                )}\n                {currentLang === 'ja' && (\n                  <>\n                    <RichTextEditor\n                      value={categoryFormData.contentJa}\n                      onChange={(value) => setCategoryFormData({ ...categoryFormData, contentJa: value })}\n                      placeholder=\"1行に1項目を入力してください&#10;例:&#10;店舗スタッフ管理&#10;新規パートナー教育&#10;ラテアート教育\"\n                      rows={8}\n                      className=\"min-h-[200px]\"\n                    />\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\n                      💡 1行に1項目を入力してください (Enterで区切る)\n                    </p>\n                  </>\n                )}\n              </div>\n              \n              <div className=\"flex gap-3\">\n                <button\n                  type=\"button\"\n                  onClick={saveDetailCategory}\n                  className=\"flex-1 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors flex items-center justify-center gap-2\"\n                >\n                  <FaSave />\n                  저장\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={cancelDetailCategory}\n                  className=\"px-4 py-2 bg-gray-500 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                >\n                  취소\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {/* 빈 상태 */}\n        {(!formData.details || formData.details.length === 0) && editingCategoryIndex === null && (\n          <div className=\"text-center py-6 bg-white dark:bg-gray-800 rounded-lg border-2 border-dashed border-gray-300 dark:border-gray-600\">\n            <p className=\"text-gray-500 dark:text-gray-400 text-sm mb-2\">\n              아직 카테고리가 없습니다\n            </p>\n            <p className=\"text-xs text-gray-400 dark:text-gray-500\">\n              상단의 \"카테고리 추가\" 버튼을 눌러 시작하세요\n            </p>\n          </div>\n        )}\n      </div>\n      \n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          설명 (리치텍스트 에디터) - 선택사항\n        </label>\n        <p className=\"text-xs text-gray-500 dark:text-gray-400 mb-2\">\n          💡 위의 \"카테고리별 상세 내용\"을 사용하면 더 체계적으로 정리됩니다. 이 필드는 하위 호환성을 위해 유지됩니다.\n        </p>\n        <RichTextEditor\n          value={formData.description || ''}\n          onChange={(value) => setFormData({ ...formData, description: value })}\n          placeholder=\"(선택사항) 전체적인 설명을 작성하거나, 위의 카테고리별 입력을 사용하세요.\"\n          rows={4}\n          className=\"min-h-[150px]\"\n        />\n      </div>\n      {/* 🌟 스킬 연결 (체크박스) */}\n      <div className=\"md:col-span-2\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n            이 경력에서 사용한 스킬 🔗\n          </label>\n          {formData.skillIds && formData.skillIds.length > 0 && (\n            <span className=\"text-xs font-semibold text-blue-600 dark:text-blue-400 bg-blue-100 dark:bg-blue-900/30 px-2 py-1 rounded\">\n              ✓ {formData.skillIds.length}개 선택됨\n            </span>\n          )}\n        </div>\n        \n        {skillsLoading ? (\n          <div className=\"text-sm text-gray-500 dark:text-gray-400 py-2\">\n            스킬 목록을 불러오는 중입니다...\n          </div>\n        ) : skillCategories.length === 0 ? (\n          <div className=\"text-sm text-gray-500 dark:text-gray-400 py-4 text-center border border-gray-300 dark:border-gray-600 rounded-lg\">\n            등록된 스킬이 없습니다. 먼저 스킬을 추가해주세요.\n          </div>\n        ) : (\n          <div className=\"border border-gray-300 dark:border-gray-600 rounded-lg p-4 bg-gray-50 dark:bg-gray-800 max-h-[400px] overflow-y-auto\">\n            {skillCategories.map((category: SkillCategory) => {\n              const categorySkillIds = (category.skills || []).map(skill => skill._id!).filter(Boolean)\n              const currentSkillIds = formData.skillIds || []\n              const selectedCount = categorySkillIds.filter(id => currentSkillIds.includes(id)).length\n              const allSelected = categorySkillIds.length > 0 && selectedCount === categorySkillIds.length\n              const someSelected = selectedCount > 0 && selectedCount < categorySkillIds.length\n              \n              return (\n                <div key={category._id} className=\"mb-4 last:mb-0\">\n                  {/* 카테고리 헤더 (전체 선택/해제) */}\n                  <div \n                    className=\"flex items-center gap-2 mb-2 pb-2 border-b border-gray-300 dark:border-gray-600 cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700 p-2 rounded\"\n                    onClick={() => handleSkillCategoryToggle(category)}\n                  >\n                    <input\n                      type=\"checkbox\"\n                      checked={allSelected}\n                      ref={el => {\n                        if (el) {\n                          el.indeterminate = someSelected\n                        }\n                      }}\n                      onChange={() => handleSkillCategoryToggle(category)}\n                      className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n                      onClick={(e) => e.stopPropagation()}\n                    />\n                    <label \n                      className=\"font-semibold text-gray-900 dark:text-white flex-1 cursor-pointer\"\n                      style={{ color: category.color || '#3B82F6' }}\n                    >\n                      {category.title}\n                      {selectedCount > 0 && (\n                        <span className=\"ml-2 text-xs font-normal text-gray-500 dark:text-gray-400\">\n                          ({selectedCount}/{categorySkillIds.length})\n                        </span>\n                      )}\n                    </label>\n                  </div>\n                  \n                  {/* 스킬 목록 */}\n                  <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2 pl-6\">\n                    {(category.skills || []).map((skill: Skill) => {\n                      const isSelected = (formData.skillIds || []).includes(skill._id!)\n                      \n                      return (\n                        <label\n                          key={skill._id}\n                          className={`flex items-center gap-2 p-2 rounded cursor-pointer transition-colors ${\n                            isSelected \n                              ? 'bg-blue-50 dark:bg-blue-900/20 border border-blue-300 dark:border-blue-700' \n                              : 'hover:bg-gray-100 dark:hover:bg-gray-700 border border-transparent'\n                          }`}\n                        >\n                          <input\n                            type=\"checkbox\"\n                            checked={isSelected}\n                            onChange={() => handleSkillToggle(skill._id!)}\n                            className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n                          />\n                          <span className={`text-sm ${isSelected ? 'font-semibold text-blue-700 dark:text-blue-300' : 'text-gray-700 dark:text-gray-300'}`}>\n                            {skill.name}\n                          </span>\n                        </label>\n                      )\n                    })}\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        )}\n        \n        <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\n          💡 체크박스를 클릭하여 경력에서 사용한 스킬을 선택하세요. 카테고리 제목을 클릭하면 전체 선택/해제할 수 있습니다.\n        </p>\n      </div>\n      \n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          기술 (쉼표로 구분) - 선택사항\n        </label>\n        <input\n          type=\"text\"\n          value={skillsInput}\n          onChange={(e) => setSkillsInput(e.target.value)}\n          onBlur={() => {\n            // 포커스를 잃을 때 배열로 변환하여 formData에 저장\n            const skillsArray = skillsInput.split(',').map((s) => s.trim()).filter(s => s.length > 0)\n            setFormData({ ...formData, skills: skillsArray })\n          }}\n          className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n          placeholder=\"PLC 프로그래밍, Python, 데이터 분석\"\n        />\n        <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n          💡 위의 스킬 체크박스를 사용하는 것을 권장합니다. 이 필드는 하위 호환성을 위해 유지됩니다.\n        </p>\n      </div>\n      {/* 🌟 최종 저장 안내 (카테고리 입력 중일 때) */}\n      {editingCategoryIndex !== null && (\n        <div className=\"bg-yellow-50 dark:bg-yellow-900/20 p-4 rounded-lg border-2 border-yellow-300 dark:border-yellow-700\">\n          <p className=\"text-sm text-yellow-800 dark:text-yellow-300 font-medium\">\n            ⚠️ 카테고리 입력 중입니다. 위의 \"저장\" 버튼을 먼저 눌러 카테고리를 저장하세요.\n          </p>\n        </div>\n      )}\n      \n      {/* 🌟 저장된 카테고리 요약 */}\n      {formData.details && formData.details.length > 0 && editingCategoryIndex === null && (\n        <div className=\"bg-green-50 dark:bg-green-900/20 p-4 rounded-lg border-2 border-green-300 dark:border-green-700\">\n          <p className=\"text-sm text-green-800 dark:text-green-300 font-medium mb-2\">\n            ✅ {formData.details.length}개의 카테고리가 준비되었습니다\n          </p>\n          <p className=\"text-xs text-green-700 dark:text-green-400\">\n            아래 \"저장\" 버튼을 눌러 경력 데이터를 최종 저장하세요\n          </p>\n        </div>\n      )}\n      \n      <div className=\"flex gap-3 pt-4 border-t-2 border-gray-300 dark:border-gray-600\">\n        <button\n          type=\"submit\"\n          disabled={isSaving || !isFormValid || editingCategoryIndex !== null}\n          className={`flex-1 flex items-center justify-center gap-2 bg-primary-600 hover:bg-primary-700 text-white font-bold py-3 rounded-lg transition-colors text-lg ${\n            isSaving || !isFormValid || editingCategoryIndex !== null ? 'opacity-50 cursor-not-allowed' : 'shadow-lg'\n          }`}\n          title={editingCategoryIndex !== null ? '카테고리 입력을 먼저 완료하세요' : ''}\n        >\n          {isSaving ? (\n            <>\n              <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n              저장 중...\n            </>\n          ) : (\n            <>\n              <FaSave className=\"text-xl\" /> 최종 저장\n            </>\n          )}\n        </button>\n        <button\n          type=\"button\"\n          onClick={onCancel}\n          disabled={isSaving}\n          className={`flex-1 bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-900 dark:text-white font-medium py-3 rounded-lg transition-colors ${\n            isSaving ? 'opacity-50 cursor-not-allowed' : ''\n          }`}\n        >\n          취소\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default ExperienceForm\n","import React from 'react'\nimport { FaSave, FaPlus, FaTrash, FaVideo, FaTimes } from 'react-icons/fa'\nimport { Project, ProjectFormData, Skill, SkillCategory } from '../../types'\nimport RichTextEditor from '../RichTextEditor'\nimport { useSkills } from '../../hooks/useSkills'\nimport { useCategories } from '../../hooks/useCategories'\nimport LanguageTabs from '../common/LanguageTabs'\nimport { useProjectForm } from '../../hooks/useProjectForm'\n\n// 폼 컴포넌트의 Props 타입 정의\ninterface FormProps {\n  data: Project | null\n  onSave: (data: ProjectFormData) => Promise<void>\n  onCancel: () => void\n  isSaving?: boolean\n}\n\nconst ProjectForm: React.FC<FormProps> = ({ data, onSave, onCancel, isSaving = false }) => {\n  // Use custom hook for form logic\n  const {\n    formData,\n    videoItems,\n    currentLang,\n    setCurrentLang,\n    setFormData,\n    handleVideoUrlChange,\n    handleVideoDescriptionChange,\n    handleAddVideo,\n    handleRemoveVideo,\n    prepareDataForSubmit\n  } = useProjectForm(data)\n  \n  // 🌟 모든 스킬 목록을 가져옵니다\n  const { skillCategories, loading: skillsLoading } = useSkills()\n  \n  // 🌟 카테고리 데이터 가져오기\n  const { data: categoriesData, isLoading: categoriesLoading } = useCategories()\n  // categories가 배열이 아닌 경우를 대비한 안전 처리\n  const categories = Array.isArray(categoriesData) ? categoriesData : []\n\n  // 🌟 카테고리 선택/해제 핸들러 (체크박스용)\n  const handleCategoryToggle = (categoryId: string) => {\n    const currentCategoryIds = formData.categoryIds || []\n    const isSelected = currentCategoryIds.includes(categoryId)\n    \n    const newCategoryIds = isSelected\n      ? currentCategoryIds.filter((id: string) => id !== categoryId)\n      : [...currentCategoryIds, categoryId]\n    \n    setFormData({ \n      ...formData, \n      categoryIds: newCategoryIds \n    })\n  }\n\n  // 🌟 스킬 선택/해제 핸들러 (체크박스용)\n  const handleSkillToggle = (skillId: string) => {\n    const currentSkillIds = formData.skillIds || []\n    const isSelected = currentSkillIds.includes(skillId)\n    \n    const newSkillIds = isSelected\n      ? currentSkillIds.filter((id: string) => id !== skillId) // 선택 해제\n      : [...currentSkillIds, skillId] // 선택 추가\n    \n    console.log('🔧 스킬 변경:', { skillId, isSelected: !isSelected, newSkillIds })\n    setFormData({ \n      ...formData, \n      skillIds: newSkillIds \n    })\n  }\n  \n  // 🌟 스킬 카테고리 전체 선택/해제 핸들러\n  const handleSkillCategoryToggle = (category: SkillCategory) => {\n    const categorySkillIds = (category.skills || []).map(skill => skill._id!).filter(Boolean)\n    const currentSkillIds = formData.skillIds || []\n    \n    // 카테고리의 모든 스킬이 선택되어 있는지 확인\n    const allSelected = categorySkillIds.every((id: string) => currentSkillIds.includes(id))\n    \n    let newSkillIds: string[]\n    if (allSelected) {\n      // 모두 선택되어 있으면 전체 해제\n      newSkillIds = currentSkillIds.filter((id: string) => !categorySkillIds.includes(id))\n    } else {\n      // 일부만 선택되어 있거나 없으면 전체 선택\n      const uniqueIds = new Set([...currentSkillIds, ...categorySkillIds])\n      newSkillIds = Array.from(uniqueIds)\n    }\n    \n    console.log('📁 카테고리 전체 변경:', { category: category.title, allSelected: !allSelected, newSkillIds })\n    setFormData({ \n      ...formData, \n      skillIds: newSkillIds \n    })\n  }\n\n  const handleSaveClick = () => {\n    try {\n      console.log('💾 저장 시작 - videoItems:', videoItems)\n      console.log('🔗 선택된 스킬 IDs:', formData.skillIds)\n      \n      // Use hook's prepare function to process all data\n      const processedData = prepareDataForSubmit()\n      \n      console.log('✅ 최종 processedData:', processedData)\n      console.log('✅ 최종 skillIds:', processedData.skillIds)\n      onSave(processedData)\n    } catch (error: any) {\n      console.error('❌ 저장 중 오류 발생:', error)\n      alert(error.message || '저장 중 오류가 발생했습니다. 콘솔을 확인해주세요.')\n    }\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">\n        {data ? '프로젝트 수정' : '프로젝트 추가'}\n      </h3>\n      \n      {/* Language Tabs */}\n      <LanguageTabs activeLanguage={currentLang} onChange={setCurrentLang} />\n\n      <div className=\"grid md:grid-cols-2 gap-4\">\n        {/* Title Field (Multilingual) */}\n        <div className=\"md:col-span-2\">\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            제목 {currentLang === 'ko' && <span className=\"text-red-500\">*</span>}\n            <span className=\"text-xs text-gray-500 ml-2\">\n              ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\n            </span>\n          </label>\n          {currentLang === 'ko' && (\n            <input\n              type=\"text\"\n              value={formData.title}\n              onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n              className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              placeholder=\"프로젝트 제목\"\n              required\n            />\n          )}\n          {currentLang === 'en' && (\n            <input\n              type=\"text\"\n              value={formData.titleEn || ''}\n              onChange={(e) => setFormData({ ...formData, titleEn: e.target.value })}\n              className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              placeholder=\"Project Title\"\n            />\n          )}\n          {currentLang === 'ja' && (\n            <input\n              type=\"text\"\n              value={formData.titleJa || ''}\n              onChange={(e) => setFormData({ ...formData, titleJa: e.target.value })}\n              className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              placeholder=\"プロジェクトタイトル\"\n            />\n          )}\n        </div>\n        <div className=\"md:col-span-2\">\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\n            카테고리 선택 📂 (다중 선택 가능)\n          </label>\n\n          {/* 선택된 카테고리 태그 표시 */}\n          {formData.categoryIds && formData.categoryIds.length > 0 && (\n            <div className=\"flex flex-wrap gap-2 mb-3 p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n              {formData.categoryIds.map((catId: string) => {\n                const category = categories.find(c => c._id === catId)\n                return category ? (\n                  <span\n                    key={catId}\n                    className=\"inline-flex items-center gap-1 px-3 py-1 bg-blue-600 text-white rounded-full text-sm\"\n                  >\n                    {category.name}\n                    <button\n                      type=\"button\"\n                      onClick={() => handleCategoryToggle(catId)}\n                      className=\"hover:bg-blue-700 rounded-full p-0.5\"\n                    >\n                      <FaTimes className=\"text-xs\" />\n                    </button>\n                  </span>\n                ) : null\n              })}\n            </div>\n          )}\n\n          {/* 카테고리 체크박스 목록 */}\n          {categoriesLoading ? (\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">카테고리 로딩 중...</p>\n          ) : categories.length > 0 ? (\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2\">\n              {categories.map((category) => {\n                const isSelected = (formData.categoryIds || []).includes(category._id)\n                return (\n                  <label\n                    key={category._id}\n                    className={`flex items-center gap-2 p-3 border-2 rounded-lg cursor-pointer transition-all ${\n                      isSelected\n                        ? 'border-primary-600 bg-primary-50 dark:bg-primary-900/20'\n                        : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600'\n                    }`}\n                  >\n                    <input\n                      type=\"checkbox\"\n                      checked={isSelected}\n                      onChange={() => handleCategoryToggle(category._id)}\n                      className=\"w-4 h-4\"\n                    />\n                    <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      {category.name}\n                    </span>\n                  </label>\n                )\n              })}\n            </div>\n          ) : (\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n              등록된 카테고리가 없습니다. 관리자 메뉴의 \"카테고리 관리\"에서 추가하세요.\n            </p>\n          )}\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            상태\n          </label>\n          <select\n            value={formData.status}\n            onChange={(e) => setFormData({ ...formData, status: e.target.value as 'preparing' | 'planning' | 'completed' })}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n          >\n            <option value=\"preparing\">준비 중</option>\n            <option value=\"planning\">계획 중</option>\n            <option value=\"completed\">완료</option>\n          </select>\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            GitHub URL\n          </label>\n          <input\n            type=\"text\"\n            value={formData.githubLink || ''}\n            onChange={(e) => setFormData({ ...formData, githubLink: e.target.value })}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            placeholder=\"https://github.com/...\"\n          />\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            Live URL\n          </label>\n          <input\n            type=\"text\"\n            value={formData.liveLink || ''}\n            onChange={(e) => setFormData({ ...formData, liveLink: e.target.value })}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            placeholder=\"https://...\"\n          />\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            이미지 URL\n          </label>\n          <input\n            type=\"text\"\n            value={formData.image}\n            onChange={(e) => setFormData({ ...formData, image: e.target.value })}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            placeholder=\"https://...\"\n          />\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            순서\n          </label>\n          <input\n            type=\"number\"\n            value={formData.order}\n            onChange={(e) => setFormData({ ...formData, order: parseInt(e.target.value) })}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n          />\n        </div>\n\n        {/* 🌟 개선: 사용된 스킬 - 체크박스 UI */}\n        <div className=\"md:col-span-2\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n              사용된 스킬 (프로젝트 연동) 🔗\n            </label>\n            {formData.skillIds && formData.skillIds.length > 0 && (\n              <span className=\"text-xs font-semibold text-blue-600 dark:text-blue-400 bg-blue-100 dark:bg-blue-900/30 px-2 py-1 rounded\">\n                ✓ {formData.skillIds.length}개 선택됨\n              </span>\n            )}\n          </div>\n          \n          {skillsLoading ? (\n            <div className=\"text-sm text-gray-500 dark:text-gray-400 py-2\">\n              스킬 목록을 불러오는 중입니다...\n            </div>\n          ) : skillCategories.length === 0 ? (\n            <div className=\"text-sm text-gray-500 dark:text-gray-400 py-4 text-center border border-gray-300 dark:border-gray-600 rounded-lg\">\n              등록된 스킬이 없습니다. 먼저 스킬을 추가해주세요.\n            </div>\n          ) : (\n            <div className=\"border border-gray-300 dark:border-gray-600 rounded-lg p-4 bg-gray-50 dark:bg-gray-800 max-h-[400px] overflow-y-auto\">\n              {skillCategories.map((category: SkillCategory) => {\n                const categorySkillIds = (category.skills || []).map(skill => skill._id!).filter(Boolean)\n                const selectedCount = categorySkillIds.filter(id => (formData.skillIds || []).includes(id)).length\n                const allSelected = categorySkillIds.length > 0 && selectedCount === categorySkillIds.length\n                const someSelected = selectedCount > 0 && selectedCount < categorySkillIds.length\n                \n                return (\n                  <div key={category._id} className=\"mb-4 last:mb-0\">\n                    {/* 카테고리 헤더 (전체 선택/해제) */}\n                    <div \n                      className=\"flex items-center gap-2 mb-2 pb-2 border-b border-gray-300 dark:border-gray-600 cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700 p-2 rounded\"\n                      onClick={() => handleSkillCategoryToggle(category)}\n                    >\n                      <input\n                        type=\"checkbox\"\n                        checked={allSelected}\n                        ref={el => {\n                          if (el) {\n                            el.indeterminate = someSelected\n                          }\n                        }}\n                        onChange={() => handleSkillCategoryToggle(category)}\n                        className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n                        onClick={(e) => e.stopPropagation()}\n                      />\n                      <label \n                        className=\"font-semibold text-gray-900 dark:text-white flex-1 cursor-pointer\"\n                        style={{ color: category.color || '#3B82F6' }}\n                      >\n                        {category.title}\n                        {selectedCount > 0 && (\n                          <span className=\"ml-2 text-xs font-normal text-gray-500 dark:text-gray-400\">\n                            ({selectedCount}/{categorySkillIds.length})\n                          </span>\n                        )}\n                      </label>\n                    </div>\n                    \n                    {/* 스킬 목록 */}\n                    <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2 pl-6\">\n                      {(category.skills || []).map((skill: Skill) => {\n                        const isSelected = (formData.skillIds || []).includes(skill._id!)\n                        \n                        return (\n                          <label\n                            key={skill._id}\n                            className={`flex items-center gap-2 p-2 rounded cursor-pointer transition-colors ${\n                              isSelected \n                                ? 'bg-blue-50 dark:bg-blue-900/20 border border-blue-300 dark:border-blue-700' \n                                : 'hover:bg-gray-100 dark:hover:bg-gray-700 border border-transparent'\n                            }`}\n                          >\n                            <input\n                              type=\"checkbox\"\n                              checked={isSelected}\n                              onChange={() => handleSkillToggle(skill._id!)}\n                              className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n                            />\n                            <span className={`text-sm ${isSelected ? 'font-semibold text-blue-700 dark:text-blue-300' : 'text-gray-700 dark:text-gray-300'}`}>\n                              {skill.name}\n                            </span>\n                          </label>\n                        )\n                      })}\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n          )}\n          \n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\n            💡 체크박스를 클릭하여 프로젝트에서 사용한 스킬을 선택하세요. 카테고리 제목을 클릭하면 전체 선택/해제할 수 있습니다.\n          </p>\n        </div>\n      </div>\n      {/* Description Field (Multilingual) */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          설명 (리치텍스트 에디터)\n          <span className=\"text-xs text-gray-500 ml-2\">\n            ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\n          </span>\n        </label>\n        {currentLang === 'ko' && (\n          <RichTextEditor\n            value={formData.description || ''}\n            onChange={(value) => setFormData({ ...formData, description: value })}\n            placeholder=\"프로젝트에 대한 간단한 설명을 작성하세요.\"\n            rows={4}\n            className=\"min-h-[150px]\"\n          />\n        )}\n        {currentLang === 'en' && (\n          <RichTextEditor\n            value={formData.descriptionEn || ''}\n            onChange={(value) => setFormData({ ...formData, descriptionEn: value })}\n            placeholder=\"Write a brief description of the project.\"\n            rows={4}\n            className=\"min-h-[150px]\"\n          />\n        )}\n        {currentLang === 'ja' && (\n          <RichTextEditor\n            value={formData.descriptionJa || ''}\n            onChange={(value) => setFormData({ ...formData, descriptionJa: value })}\n            placeholder=\"プロジェクトの簡単な説明を書いてください。\"\n            rows={4}\n            className=\"min-h-[150px]\"\n          />\n        )}\n      </div>\n      {/* Technologies Field (Multilingual) */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          기술 스택 (쉼표 또는 줄바꿈으로 구분)\n          <span className=\"text-xs text-gray-500 ml-2\">\n            ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\n          </span>\n        </label>\n        {currentLang === 'ko' && (\n          <textarea\n            value={typeof formData.technologies === 'string' ? formData.technologies : (Array.isArray(formData.technologies) ? formData.technologies.join('\\n') : '')}\n            onChange={(e) => setFormData({ ...formData, technologies: e.target.value })}\n            rows={3}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\n            placeholder=\"PLC, Python, Arduino\"\n          />\n        )}\n        {currentLang === 'en' && (\n          <textarea\n            value={typeof formData.technologiesEn === 'string' ? formData.technologiesEn : (Array.isArray(formData.technologiesEn) ? formData.technologiesEn.join('\\n') : '')}\n            onChange={(e) => setFormData({ ...formData, technologiesEn: e.target.value })}\n            rows={3}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\n            placeholder=\"PLC, Python, Arduino\"\n          />\n        )}\n        {currentLang === 'ja' && (\n          <textarea\n            value={typeof formData.technologiesJa === 'string' ? formData.technologiesJa : (Array.isArray(formData.technologiesJa) ? formData.technologiesJa.join('\\n') : '')}\n            onChange={(e) => setFormData({ ...formData, technologiesJa: e.target.value })}\n            rows={3}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\n            placeholder=\"PLC, Python, Arduino\"\n          />\n        )}\n      </div>\n      \n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          추가 이미지 URLs (줄바꿈으로 구분)\n        </label>\n        <textarea\n          value={typeof formData.images === 'string' ? formData.images : (Array.isArray(formData.images) ? formData.images.join('\\n') : '')}\n          onChange={(e) => {\n            const value = e.target.value\n            setFormData({\n              ...formData,\n              images: value, // 원본 텍스트를 그대로 저장\n            })\n          }}\n          rows={3}\n          className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\n          placeholder=\"https://example.com/image1.jpg\nhttps://example.com/image2.jpg\"\n        />\n      </div>\n\n      {/* 🌟 영상 관리 섹션 (개선된 UI) */}\n      <div className=\"border border-gray-300 dark:border-gray-600 rounded-lg p-6 space-y-4 bg-gray-50 dark:bg-gray-800\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <label className=\"block text-lg font-semibold text-gray-900 dark:text-white flex items-center gap-2\">\n            <FaVideo className=\"text-blue-600 dark:text-blue-400\" />\n            동영상 관리\n          </label>\n          <button\n            type=\"button\"\n            onClick={handleAddVideo}\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors text-sm font-medium\"\n          >\n            <FaPlus /> 영상 추가\n          </button>\n        </div>\n\n        {videoItems.length === 0 ? (\n          <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\n            <FaVideo className=\"text-4xl mx-auto mb-2 opacity-50\" />\n            <p>아직 추가된 영상이 없습니다.</p>\n            <p className=\"text-sm mt-1\">위의 \"영상 추가\" 버튼을 클릭하여 영상을 추가하세요.</p>\n          </div>\n        ) : (\n          <div className=\"space-y-6\">\n            {videoItems.map((item, index) => (\n              <div key={index} className=\"border border-gray-200 dark:border-gray-700 rounded-lg p-4 bg-white dark:bg-gray-900 space-y-4\">\n                {/* 헤더 */}\n                <div className=\"flex items-center justify-between\">\n                  <h4 className=\"text-md font-semibold text-gray-900 dark:text-white flex items-center gap-2\">\n                    <span className=\"flex items-center justify-center w-8 h-8 bg-blue-100 dark:bg-blue-900 text-blue-600 dark:text-blue-300 rounded-full text-sm font-bold\">\n                      {index + 1}\n                    </span>\n                    영상 {index + 1}\n                  </h4>\n                  <button\n                    type=\"button\"\n                    onClick={() => handleRemoveVideo(index)}\n                    className=\"flex items-center gap-1 px-3 py-1 text-red-600 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-lg transition-colors text-sm\"\n                  >\n                    <FaTrash /> 삭제\n                  </button>\n                </div>\n\n                {/* 영상 URL 입력 */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    영상 URL *\n                  </label>\n                  <input\n                    type=\"url\"\n                    value={item.url}\n                    onChange={(e) => handleVideoUrlChange(index, e.target.value)}\n                    placeholder=\"https://youtube.com/watch?v=... 또는 https://youtube.com/shorts/...\"\n                    className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                  />\n                </div>\n\n                {/* 영상 설명 (RichTextEditor - 다국어) */}\n                <div>\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n                      영상 설명 (리치텍스트)\n                      <span className=\"text-xs text-gray-500 ml-2\">\n                        ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\n                      </span>\n                    </label>\n                    <span className={`text-xs ${\n                      (currentLang === 'ko' ? item.description.length : currentLang === 'en' ? item.descriptionEn.length : item.descriptionJa.length) > 5000 \n                        ? 'text-red-600 dark:text-red-400 font-bold' \n                        : (currentLang === 'ko' ? item.description.length : currentLang === 'en' ? item.descriptionEn.length : item.descriptionJa.length) > 4000\n                        ? 'text-orange-600 dark:text-orange-400'\n                        : 'text-gray-500 dark:text-gray-400'\n                    }`}>\n                      {currentLang === 'ko' ? item.description.length : currentLang === 'en' ? item.descriptionEn.length : item.descriptionJa.length} / 5000자\n                    </span>\n                  </div>\n                  \n                  {currentLang === 'ko' && (\n                    <RichTextEditor\n                      value={item.description}\n                      onChange={(value) => handleVideoDescriptionChange(index, value, 'ko')}\n                      placeholder=\"이 영상에 대한 상세한 설명을 작성하세요. 굵게, 기울임, 리스트 등 다양한 서식을 사용할 수 있습니다.\"\n                      rows={4}\n                      className=\"min-h-[150px]\"\n                    />\n                  )}\n                  \n                  {currentLang === 'en' && (\n                    <RichTextEditor\n                      value={item.descriptionEn}\n                      onChange={(value) => handleVideoDescriptionChange(index, value, 'en')}\n                      placeholder=\"Write a detailed description of this video. You can use bold, italic, lists, and other formatting.\"\n                      rows={4}\n                      className=\"min-h-[150px]\"\n                    />\n                  )}\n                  \n                  {currentLang === 'ja' && (\n                    <RichTextEditor\n                      value={item.descriptionJa}\n                      onChange={(value) => handleVideoDescriptionChange(index, value, 'ja')}\n                      placeholder=\"この動画の詳細な説明を書いてください。太字、斜体、リストなどの書式を使用できます。\"\n                      rows={4}\n                      className=\"min-h-[150px]\"\n                    />\n                  )}\n                  \n                  <div className=\"flex items-center justify-between mt-1\">\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      💡 이 설명은 프로젝트 상세 페이지에서 영상 하단에 표시됩니다.\n                    </p>\n                    {(currentLang === 'ko' ? item.description.length : currentLang === 'en' ? item.descriptionEn.length : item.descriptionJa.length) > 4000 && (\n                      <p className=\"text-xs text-orange-600 dark:text-orange-400\">\n                        ⚠️ 글자 수가 많습니다. 간결하게 작성해주세요.\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Detailed Description Field (Multilingual) */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          상세 설명 (리치텍스트 에디터)\n          <span className=\"text-xs text-gray-500 ml-2\">\n            ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\n          </span>\n        </label>\n        {currentLang === 'ko' && (\n          <RichTextEditor\n            value={formData.detailedDescription || ''}\n            onChange={(value) => setFormData({ ...formData, detailedDescription: value })}\n            placeholder=\"프로젝트의 상세한 설명을 작성해주세요.\"\n            rows={6}\n            className=\"min-h-[200px]\"\n          />\n        )}\n        {currentLang === 'en' && (\n          <RichTextEditor\n            value={formData.detailedDescriptionEn || ''}\n            onChange={(value) => setFormData({ ...formData, detailedDescriptionEn: value })}\n            placeholder=\"Write a detailed description of the project.\"\n            rows={6}\n            className=\"min-h-[200px]\"\n          />\n        )}\n        {currentLang === 'ja' && (\n          <RichTextEditor\n            value={formData.detailedDescriptionJa || ''}\n            onChange={(value) => setFormData({ ...formData, detailedDescriptionJa: value })}\n            placeholder=\"プロジェクトの詳細な説明を書いてください。\"\n            rows={6}\n            className=\"min-h-[200px]\"\n          />\n        )}\n      </div>\n\n      {/* Features Field (Multilingual) */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          주요 기능 (줄바꿈으로 구분)\n          <span className=\"text-xs text-gray-500 ml-2\">\n            ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\n          </span>\n        </label>\n        {currentLang === 'ko' && (\n          <textarea\n            value={typeof formData.features === 'string' ? formData.features : (Array.isArray(formData.features) ? formData.features.join('\\n') : '')}\n            onChange={(e) => setFormData({ ...formData, features: e.target.value })}\n            rows={4}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\n            placeholder=\"실시간 모니터링&#10;데이터 수집 및 분석&#10;알림 시스템\"\n          />\n        )}\n        {currentLang === 'en' && (\n          <textarea\n            value={typeof formData.featuresEn === 'string' ? formData.featuresEn : (Array.isArray(formData.featuresEn) ? formData.featuresEn.join('\\n') : '')}\n            onChange={(e) => setFormData({ ...formData, featuresEn: e.target.value })}\n            rows={4}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\n            placeholder=\"Real-time monitoring&#10;Data collection and analysis&#10;Alert system\"\n          />\n        )}\n        {currentLang === 'ja' && (\n          <textarea\n            value={typeof formData.featuresJa === 'string' ? formData.featuresJa : (Array.isArray(formData.featuresJa) ? formData.featuresJa.join('\\n') : '')}\n            onChange={(e) => setFormData({ ...formData, featuresJa: e.target.value })}\n            rows={4}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\n            placeholder=\"リアルタイム監視&#10;データ収集と分析&#10;通知システム\"\n          />\n        )}\n      </div>\n\n      {/* Learnings Field (Multilingual) */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          학습 내용 (줄바꿈으로 구분)\n          <span className=\"text-xs text-gray-500 ml-2\">\n            ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\n          </span>\n        </label>\n        {currentLang === 'ko' && (\n          <textarea\n            value={typeof formData.learnings === 'string' ? formData.learnings : (Array.isArray(formData.learnings) ? formData.learnings.join('\\n') : '')}\n            onChange={(e) => setFormData({ ...formData, learnings: e.target.value })}\n            rows={4}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\n            placeholder=\"PLC 프로그래밍 기법&#10;실시간 데이터 처리&#10;웹 기반 대시보드 구축\"\n          />\n        )}\n        {currentLang === 'en' && (\n          <textarea\n            value={typeof formData.learningsEn === 'string' ? formData.learningsEn : (Array.isArray(formData.learningsEn) ? formData.learningsEn.join('\\n') : '')}\n            onChange={(e) => setFormData({ ...formData, learningsEn: e.target.value })}\n            rows={4}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\n            placeholder=\"PLC programming techniques&#10;Real-time data processing&#10;Web-based dashboard development\"\n          />\n        )}\n        {currentLang === 'ja' && (\n          <textarea\n            value={typeof formData.learningsJa === 'string' ? formData.learningsJa : (Array.isArray(formData.learningsJa) ? formData.learningsJa.join('\\n') : '')}\n            onChange={(e) => setFormData({ ...formData, learningsJa: e.target.value })}\n            rows={4}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-y\"\n            placeholder=\"PLCプログラミング技術&#10;リアルタイムデータ処理&#10;Webベースダッシュボード開発\"\n          />\n        )}\n      </div>\n      <div className=\"flex gap-3 pt-4\">\n        <button\n          type=\"button\"\n          onClick={handleSaveClick}\n          disabled={isSaving}\n          className={`flex-1 flex items-center justify-center gap-2 bg-primary-600 hover:bg-primary-700 text-white font-medium py-2 rounded-lg transition-colors ${\n            isSaving ? 'opacity-50 cursor-not-allowed' : ''\n          }`}\n        >\n          {isSaving ? (\n            <>\n              <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n              저장 중...\n            </>\n          ) : (\n            <>\n              <FaSave /> 저장\n            </>\n          )}\n        </button>\n        <button\n          type=\"button\"\n          onClick={onCancel}\n          className=\"flex-1 bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-900 dark:text-white font-medium py-2 rounded-lg transition-colors\"\n        >\n          취소\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectForm\n","import React, { useState, useEffect } from 'react'\nimport { SkillCategory, SkillCategoryFormData } from '../../types'\nimport LanguageTabs, { AdminLanguage } from '../common/LanguageTabs'\n\ninterface SkillCategoryFormProps {\n  initialData?: SkillCategory | null\n  onSave: (data: SkillCategoryFormData) => void\n  onCancel: () => void\n  isSaving?: boolean\n}\n\nconst SkillCategoryForm: React.FC<SkillCategoryFormProps> = ({\n  initialData,\n  onSave,\n  onCancel,\n  isSaving = false\n}) => {\n  const [currentLang, setCurrentLang] = useState<AdminLanguage>('ko')\n  const [formData, setFormData] = useState<SkillCategoryFormData>({\n    title: '',\n    titleEn: '',\n    titleJa: '',\n    description: '',\n    descriptionEn: '',\n    descriptionJa: '',\n    color: '#3B82F6',\n    order: 0\n  })\n\n  useEffect(() => {\n    if (initialData) {\n      setFormData({\n        title: initialData.title,\n        titleEn: initialData.titleEn || '',\n        titleJa: initialData.titleJa || '',\n        description: initialData.description || '',\n        descriptionEn: initialData.descriptionEn || '',\n        descriptionJa: initialData.descriptionJa || '',\n        color: initialData.color,\n        order: initialData.order\n      })\n    }\n  }, [initialData])\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n    console.log('📋 폼 제출:', formData)\n    onSave(formData)\n  }\n\n  const handleChange = (field: keyof SkillCategoryFormData, value: string | number) => {\n    setFormData(prev => ({ ...prev, [field]: value }))\n  }\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg border border-gray-200 dark:border-gray-700 mb-6\">\n      <h3 className=\"text-lg font-semibold mb-4\">\n        {initialData ? '카테고리 수정' : '새 카테고리 추가'}\n      </h3>\n      \n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        {/* Language Tabs */}\n        <LanguageTabs activeLanguage={currentLang} onChange={setCurrentLang} />\n\n        {/* Title Field (Multilingual) */}\n        <div>\n          <label className=\"block text-sm font-medium mb-2\">\n            제목 {currentLang === 'ko' && <span className=\"text-red-500\">*</span>}\n            <span className=\"text-xs text-gray-500 ml-2\">\n              ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\n            </span>\n          </label>\n          {currentLang === 'ko' && (\n            <input\n              type=\"text\"\n              value={formData.title}\n              onChange={(e) => handleChange('title', e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              placeholder=\"예: 프로그래밍 언어\"\n              required\n            />\n          )}\n          {currentLang === 'en' && (\n            <input\n              type=\"text\"\n              value={formData.titleEn || ''}\n              onChange={(e) => handleChange('titleEn', e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              placeholder=\"e.g., Programming Languages\"\n            />\n          )}\n          {currentLang === 'ja' && (\n            <input\n              type=\"text\"\n              value={formData.titleJa || ''}\n              onChange={(e) => handleChange('titleJa', e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              placeholder=\"例: プログラミング言語\"\n            />\n          )}\n        </div>\n        \n        {/* Description Field (Multilingual) */}\n        <div>\n          <label className=\"block text-sm font-medium mb-2\">\n            설명\n            <span className=\"text-xs text-gray-500 ml-2\">\n              ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\n            </span>\n          </label>\n          {currentLang === 'ko' && (\n            <textarea\n              value={formData.description}\n              onChange={(e) => handleChange('description', e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              rows={3}\n              placeholder=\"카테고리에 대한 설명을 입력하세요\"\n            />\n          )}\n          {currentLang === 'en' && (\n            <textarea\n              value={formData.descriptionEn || ''}\n              onChange={(e) => handleChange('descriptionEn', e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              rows={3}\n              placeholder=\"Enter description for this category\"\n            />\n          )}\n          {currentLang === 'ja' && (\n            <textarea\n              value={formData.descriptionJa || ''}\n              onChange={(e) => handleChange('descriptionJa', e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              rows={3}\n              placeholder=\"このカテゴリの説明を入力してください\"\n            />\n          )}\n        </div>\n        \n        <div>\n          <label className=\"block text-sm font-medium mb-2\">색상</label>\n          <input\n            type=\"color\"\n            value={formData.color}\n            onChange={(e) => handleChange('color', e.target.value)}\n            className=\"w-12 h-10 border border-gray-300 dark:border-gray-600 rounded-md\"\n          />\n        </div>\n        \n        <div>\n          <label className=\"block text-sm font-medium mb-2\">순서 (고급 옵션)</label>\n          <input\n            type=\"number\"\n            value={formData.order}\n            onChange={(e) => handleChange('order', parseInt(e.target.value) || 0)}\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            min=\"0\"\n          />\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n            💡 카테고리 목록에서 드래그하여 순서를 변경할 수 있습니다\n          </p>\n        </div>\n        \n        <div className=\"flex gap-2\">\n          <button\n            type=\"submit\"\n            disabled={isSaving}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50\"\n          >\n            {isSaving ? '저장 중...' : '저장'}\n          </button>\n          <button\n            type=\"button\"\n            onClick={onCancel}\n            className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\n          >\n            취소\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default SkillCategoryForm\n","import React, { useState, useEffect } from 'react'\nimport { Skill, SkillFormData } from '../../types'\nimport DynamicIcon from '../common/DynamicIcon'\nimport LanguageTabs, { AdminLanguage } from '../common/LanguageTabs'\n\ninterface SkillFormProps {\n  initialData?: Skill | null\n  categoryId?: string | undefined\n  onSave: (data: SkillFormData) => void\n  onCancel: () => void\n  isSaving?: boolean\n}\n\nconst SkillForm: React.FC<SkillFormProps> = ({\n  initialData,\n  onSave,\n  onCancel,\n  isSaving = false\n}) => {\n  const [currentLang, setCurrentLang] = useState<AdminLanguage>('ko')\n  const [formData, setFormData] = useState<SkillFormData>({\n    name: '',\n    nameEn: '',\n    nameJa: '',\n    level: 50, // 새 스킬 생성 시 기본 숙련도\n    icon: 'FaMicrochip',\n    description: '',\n    descriptionEn: '',\n    descriptionJa: '',\n    order: 0\n  })\n\n  useEffect(() => {\n    if (initialData) {\n      setFormData({\n        name: initialData.name,\n        nameEn: initialData.nameEn || '',\n        nameJa: initialData.nameJa || '',\n        level: initialData.level, // 기존 스킬의 숙련도 유지 (목록에서 조절)\n        icon: initialData.icon,\n        description: initialData.description || '',\n        descriptionEn: initialData.descriptionEn || '',\n        descriptionJa: initialData.descriptionJa || '',\n        order: initialData.order\n      })\n    }\n  }, [initialData])\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n    onSave(formData)\n  }\n\n  const handleChange = (field: keyof SkillFormData, value: string | number) => {\n    setFormData(prev => ({ ...prev, [field]: value }))\n  }\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg border border-gray-200 dark:border-gray-700 mb-6\">\n      <h3 className=\"text-lg font-semibold mb-4\">\n        {initialData ? '스킬 수정' : '새 스킬 추가'}\n      </h3>\n      \n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        {/* Language Tabs */}\n        <LanguageTabs activeLanguage={currentLang} onChange={setCurrentLang} />\n\n        {/* Name Field (Multilingual) */}\n        <div>\n          <label className=\"block text-sm font-medium mb-2\">\n            이름 {currentLang === 'ko' && <span className=\"text-red-500\">*</span>}\n            <span className=\"text-xs text-gray-500 ml-2\">\n              ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\n            </span>\n          </label>\n          {currentLang === 'ko' && (\n            <input\n              type=\"text\"\n              value={formData.name}\n              onChange={(e) => handleChange('name', e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              placeholder=\"예: Python, React, PLC\"\n              required\n            />\n          )}\n          {currentLang === 'en' && (\n            <input\n              type=\"text\"\n              value={formData.nameEn || ''}\n              onChange={(e) => handleChange('nameEn', e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              placeholder=\"e.g., Python, React, PLC\"\n            />\n          )}\n          {currentLang === 'ja' && (\n            <input\n              type=\"text\"\n              value={formData.nameJa || ''}\n              onChange={(e) => handleChange('nameJa', e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              placeholder=\"例: Python, React, PLC\"\n            />\n          )}\n        </div>\n\n        {/* Description Field (Multilingual) */}\n        <div>\n          <label className=\"block text-sm font-medium mb-2\">\n            설명 (선택사항)\n            <span className=\"text-xs text-gray-500 ml-2\">\n              ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\n            </span>\n          </label>\n          {currentLang === 'ko' && (\n            <textarea\n              value={formData.description || ''}\n              onChange={(e) => handleChange('description', e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              rows={3}\n              placeholder=\"스킬에 대한 간단한 설명\"\n            />\n          )}\n          {currentLang === 'en' && (\n            <textarea\n              value={formData.descriptionEn || ''}\n              onChange={(e) => handleChange('descriptionEn', e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              rows={3}\n              placeholder=\"Brief description of this skill\"\n            />\n          )}\n          {currentLang === 'ja' && (\n            <textarea\n              value={formData.descriptionJa || ''}\n              onChange={(e) => handleChange('descriptionJa', e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              rows={3}\n              placeholder=\"このスキルの簡単な説明\"\n            />\n          )}\n        </div>\n        \n        {/* 🌟 숙련도는 기술 관리 목록의 인라인 슬라이더로 조절합니다 */}\n        \n        <div>\n          <label className=\"block text-sm font-medium mb-2\">아이콘</label>\n          <div className=\"flex items-center gap-3 mb-2\">\n            <div className=\"text-lg text-blue-600 dark:text-blue-400\">\n              <DynamicIcon iconName={formData.icon} size={20} />\n            </div>\n            <span className=\"text-sm text-gray-600 dark:text-gray-400\">미리보기</span>\n          </div>\n          <select\n            value={formData.icon}\n            onChange={(e) => handleChange('icon', e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n          >\n            <optgroup label=\"프로그래밍 언어\">\n              <option value=\"FaPython\">Python</option>\n              <option value=\"SiJavascript\">JavaScript</option>\n              <option value=\"SiTypescript\">TypeScript</option>\n              <option value=\"SiC\">C</option>\n              <option value=\"SiCplusplus\">C++</option>\n              <option value=\"SiCsharp\">C#</option>\n              <option value=\"SiGo\">Go</option>\n              <option value=\"SiRust\">Rust</option>\n              <option value=\"SiJava\">Java</option>\n              <option value=\"SiPhp\">PHP</option>\n              <option value=\"SiRuby\">Ruby</option>\n              <option value=\"SiSwift\">Swift</option>\n              <option value=\"SiKotlin\">Kotlin</option>\n            </optgroup>\n            <optgroup label=\"프레임워크 & 라이브러리\">\n              <option value=\"SiReact\">React</option>\n              <option value=\"SiNodedotjs\">Node.js</option>\n              <option value=\"SiVuedotjs\">Vue.js</option>\n              <option value=\"SiAngular\">Angular</option>\n              <option value=\"SiNextdotjs\">Next.js</option>\n              <option value=\"SiExpress\">Express</option>\n              <option value=\"SiDjango\">Django</option>\n              <option value=\"SiFlask\">Flask</option>\n              <option value=\"SiSpring\">Spring</option>\n            </optgroup>\n            <optgroup label=\"데이터베이스\">\n              <option value=\"FaDatabase\">Database</option>\n              <option value=\"SiMysql\">MySQL</option>\n              <option value=\"SiMongodb\">MongoDB</option>\n              <option value=\"SiPostgresql\">PostgreSQL</option>\n              <option value=\"SiRedis\">Redis</option>\n              <option value=\"SiSqlite\">SQLite</option>\n            </optgroup>\n            <optgroup label=\"자동화 & 하드웨어\">\n              <option value=\"FaMicrochip\">Microchip</option>\n              <option value=\"FaRobot\">Robot</option>\n              <option value=\"SiArduino\">Arduino</option>\n              <option value=\"SiRaspberrypi\">Raspberry Pi</option>\n              <option value=\"SiSiemens\">Siemens</option>\n              <option value=\"SiMitsubishi\">Mitsubishi</option>\n            </optgroup>\n            <optgroup label=\"개발 도구\">\n              <option value=\"FaCode\">Code</option>\n              <option value=\"FaServer\">Server</option>\n              <option value=\"SiDocker\">Docker</option>\n              <option value=\"SiGit\">Git</option>\n              <option value=\"SiLinux\">Linux</option>\n              <option value=\"SiGithub\">GitHub</option>\n              <option value=\"SiGitlab\">GitLab</option>\n              <option value=\"SiVisualstudiocode\">VS Code</option>\n            </optgroup>\n            <optgroup label=\"언어\">\n              <option value=\"FaLanguage\">언어 일반</option>\n              <option value=\"FaGlobeAsia\">일본어</option>\n              <option value=\"FaGlobeEurope\">독일어</option>\n              <option value=\"FaFlag\">러시아어</option>\n              <option value=\"FaFlagCheckered\">한국어</option>\n              <option value=\"FaGlobe\">에스토니아어</option>\n              <option value=\"FaFont\">중국어</option>\n              <option value=\"FaComment\">영어</option>\n            </optgroup>\n            <optgroup label=\"학문 & 전공\">\n              <option value=\"FaLaptopCode\">컴퓨터공학</option>\n              <option value=\"FaChartBar\">통계학</option>\n              <option value=\"FaCalculator\">수학</option>\n              <option value=\"FaSquareRootAlt\">수학 (고급)</option>\n              <option value=\"FaUniversity\">대학/학술</option>\n              <option value=\"FaGraduationCap\">졸업/학위</option>\n            </optgroup>\n            <optgroup label=\"공학\">\n              <option value=\"FaCogs\">공학 일반</option>\n              <option value=\"FaTools\">기계공학</option>\n              <option value=\"FaWrench\">기계설계</option>\n              <option value=\"FaBolt\">전기공학</option>\n              <option value=\"FaPlug\">전력공학</option>\n              <option value=\"FaMicrochip\">전자공학</option>\n              <option value=\"FaHardHat\">토목공학</option>\n              <option value=\"FaBuilding\">건축공학</option>\n              <option value=\"FaIndustry\">산업공학</option>\n              <option value=\"FaChartLine\">경영공학</option>\n              <option value=\"FaFlask\">화학공학</option>\n              <option value=\"FaCubes\">재료공학</option>\n              <option value=\"FaPlane\">항공공학</option>\n              <option value=\"FaRocket\">우주공학</option>\n              <option value=\"FaLeaf\">환경공학</option>\n              <option value=\"FaRecycle\">자원공학</option>\n              <option value=\"FaDna\">생명공학</option>\n              <option value=\"FaOilCan\">석유공학</option>\n              <option value=\"FaFire\">에너지공학</option>\n              <option value=\"FaShieldAlt\">안전공학</option>\n            </optgroup>\n            <optgroup label=\"과학\">\n              <option value=\"FaAtom\">원자/물리학</option>\n              <option value=\"FaFlask\">화학/실험</option>\n              <option value=\"FaMicroscope\">생물학/연구</option>\n              <option value=\"FaDna\">DNA/유전학</option>\n              <option value=\"FaRocket\">우주/항공</option>\n              <option value=\"FaSatellite\">위성/통신</option>\n              <option value=\"FaBrain\">뇌과학/심리학</option>\n              <option value=\"FaLightbulb\">발명/혁신</option>\n              <option value=\"FaWaveSquare\">전자/전기공학</option>\n              <option value=\"FaMagnet\">자기학/물리</option>\n            </optgroup>\n            <optgroup label=\"예술 & 취미\">\n              <option value=\"FaPalette\">미술</option>\n              <option value=\"FaPaintBrush\">그림</option>\n              <option value=\"FaCamera\">사진</option>\n              <option value=\"FaCameraRetro\">사진 (레트로)</option>\n              <option value=\"FaCoffee\">커피</option>\n              <option value=\"FaMugHot\">커피 (머그)</option>\n              <option value=\"FaMusic\">음악</option>\n              <option value=\"FaGuitar\">악기</option>\n              <option value=\"FaFilm\">영화/영상</option>\n            </optgroup>\n            <optgroup label=\"경력 & 경험\">\n              <option value=\"FaUserShield\">군인</option>\n              <option value=\"FaShieldAlt\">방어/보안</option>\n              <option value=\"FaCar\">운전</option>\n              <option value=\"FaTruck\">트럭 운전</option>\n              <option value=\"FaShippingFast\">물류</option>\n              <option value=\"FaBriefcase\">비즈니스</option>\n              <option value=\"FaHandshake\">협업</option>\n            </optgroup>\n            <optgroup label=\"기타\">\n              <option value=\"FaChartLine\">Chart</option>\n              <option value=\"FaCubes\">Cubes</option>\n              <option value=\"FaCog\">Settings</option>\n              <option value=\"FaMobile\">Mobile</option>\n              <option value=\"FaDesktop\">Desktop</option>\n              <option value=\"FaCloud\">Cloud</option>\n              <option value=\"FaNetworkWired\">Network</option>\n            </optgroup>\n          </select>\n        </div>\n        \n        <div>\n          <label className=\"block text-sm font-medium mb-2\">순서 (고급 옵션)</label>\n          <input\n            type=\"number\"\n            value={formData.order}\n            onChange={(e) => handleChange('order', parseInt(e.target.value) || 0)}\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            min=\"0\"\n          />\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n            💡 스킬 목록에서 드래그하여 순서를 변경할 수 있습니다\n          </p>\n        </div>\n        \n        <div className=\"flex gap-2\">\n          <button\n            type=\"submit\"\n            disabled={isSaving}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50\"\n          >\n            {isSaving ? '저장 중...' : '저장'}\n          </button>\n          <button\n            type=\"button\"\n            onClick={onCancel}\n            className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\n          >\n            취소\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default SkillForm\n","import React, { useState } from 'react'\nimport { FaSave } from 'react-icons/fa'\nimport { Category, CategoryFormData } from '../../types'\nimport LanguageTabs, { AdminLanguage } from '../common/LanguageTabs'\n\ninterface FormProps {\n  data?: Category\n  onSave: (data: CategoryFormData) => void\n  onCancel: () => void\n  isSaving?: boolean\n}\n\nconst CategoryForm: React.FC<FormProps> = ({ \n  data, \n  onSave, \n  onCancel, \n  isSaving = false \n}) => {\n  const [currentLang, setCurrentLang] = useState<AdminLanguage>('ko')\n  const [formData, setFormData] = useState<CategoryFormData>(\n    data\n      ? { \n          name: data.name,\n          nameEn: data.nameEn,\n          nameJa: data.nameJa,\n          order: data.order || 0,\n        } \n      : {\n          name: '',\n          nameEn: '',\n          nameJa: '',\n          order: 0,\n        }\n  )\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!formData.name.trim()) {\n      alert('카테고리 이름을 입력해주세요')\n      return\n    }\n\n    onSave(formData)\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      {/* Language Tabs */}\n      <LanguageTabs activeLanguage={currentLang} onChange={setCurrentLang} />\n\n      {/* Name Field (Multilingual) */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          카테고리 이름 {currentLang === 'ko' && <span className=\"text-red-500\">*</span>}\n          <span className=\"text-xs text-gray-500 ml-2\">\n            ({currentLang === 'ko' ? '🇰🇷 한국어' : currentLang === 'en' ? '🇺🇸 English' : '🇯🇵 日本語'})\n          </span>\n        </label>\n        {currentLang === 'ko' && (\n          <input\n            type=\"text\"\n            value={formData.name}\n            onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            placeholder=\"예: PLC, 웹개발, AI/ML\"\n            required\n          />\n        )}\n        {currentLang === 'en' && (\n          <input\n            type=\"text\"\n            value={formData.nameEn || ''}\n            onChange={(e) => setFormData({ ...formData, nameEn: e.target.value })}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            placeholder=\"e.g., PLC, Web Development, AI/ML\"\n          />\n        )}\n        {currentLang === 'ja' && (\n          <input\n            type=\"text\"\n            value={formData.nameJa || ''}\n            onChange={(e) => setFormData({ ...formData, nameJa: e.target.value })}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            placeholder=\"例: PLC, ウェブ開発, AI/ML\"\n          />\n        )}\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          순서 (고급 옵션)\n        </label>\n        <input\n          type=\"number\"\n          value={formData.order}\n          onChange={(e) => setFormData({ ...formData, order: parseInt(e.target.value) || 0 })}\n          className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n          min=\"0\"\n        />\n        <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n          💡 카테고리 목록에서 드래그 앤 드롭으로 순서를 변경할 수 있습니다\n        </p>\n      </div>\n\n      <div className=\"flex gap-3 pt-4\">\n        <button\n          type=\"submit\"\n          disabled={isSaving || !formData.name.trim()}\n          className=\"flex-1 flex items-center justify-center gap-2 px-6 py-3 bg-primary-600 text-white rounded-lg hover:bg-primary-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors font-medium\"\n        >\n          <FaSave />\n          {isSaving ? '저장 중...' : '저장'}\n        </button>\n        <button\n          type=\"button\"\n          onClick={onCancel}\n          disabled={isSaving}\n          className=\"px-6 py-3 bg-gray-500 text-white rounded-lg hover:bg-gray-600 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors font-medium\"\n        >\n          취소\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default CategoryForm\n"],"names":["extractYouTubeId","url","patterns","pattern","match","getYouTubeThumbnail","videoId","quality","BookForm","data","onSave","onCancel","isSaving","availableCategories","skillCategories","loading","skillsLoading","useSkills","categoriesData","isLoading","categoriesLoading","useCategories","categories","Array","isArray","initialReadDate","readDate","isNaN","Date","getTime","toISOString","split","initialCategoryIds","categoryIds","map","catIdOrObj","_id","filter","Boolean","initialSkillIds","skillIds","skillIdOrObj","formData","setFormData","useState","title","author","category","coverImage","rating","handleCategoryToggle","categoryId","currentCategoryIds","newCategoryIds","includes","id","handleSkillCategoryToggle","categorySkillIds","skills","skill","currentSkillIds","newSkillIds","every","uniqueIds","Set","from","isFormValid","trim","jsxs","onSubmit","e","preventDefault","alert","className","children","jsx","jsxRuntimeExports","type","value","onChange","target","length","catId","find","c","name","onClick","FaTimes","isSelected","checked","star","FaStar","min","max","step","newRating","parseFloat","Math","placeholder","selectedCount","allSelected","someSelected","ref","el","indeterminate","stopPropagation","style","color","skillId","handleSkillToggle","disabled","Fragment","FaSave","ChapterForm","chapter","maxOrder","setTitle","order","setOrder","setIsSaving","useEffect","async","error","htmlFor","required","parseInt","LearningForm","learning","topic","setTopic","content","setContent","stripHtml","html","tmp","document","createElement","innerHTML","textContent","innerText","ReactQuill","theme","modules","toolbar","header","list","indent","background","formats","VideoLearningForm","initialWatchDate","watchDate","videoUrlInput","setVideoUrlInput","videoUrl","purpose","keyTakeaways","root","direction","format","version","parsed","JSON","parse","parseKeyTakeaways","application","blocks","useMemo","thumbnailUrl","isValidUrl","stringify","src","alt","onError","_","i","starValue","rows","LexicalEditor","categorySkills","s","selectedInCategory","input","VideoPlaylistForm","playlistUrlInput","setPlaylistUrlInput","playlistId","extractYouTubePlaylistId","reactExports","saveData","PlaylistVideoForm","iconOptions","key","icon","FaBriefcase","label","FaCoffee","FaGraduationCap","FaChartLine","FaLaptopCode","FaCode","FaCog","FaRobot","FaCar","FaShieldAlt","SortableCategoryItem","detail","index","editingCategoryIndex","onEdit","onRemove","attributes","listeners","setNodeRef","transform","transition","isDragging","useSortable","CSS","Transform","toString","opacity","zIndex","FaBars","items","FaTrash","slice","item","ExperienceForm","currentLang","setCurrentLang","initialFormData","iconKey","details","skillsEn","skillsJa","period","company","description","skillsInput","setSkillsInput","join","setEditingCategoryIndex","categoryFormData","setCategoryFormData","categoryEn","categoryJa","contentEn","contentJa","editDetailCategory","_a","itemsEn","_b","itemsJa","removeDetailCategory","confirm","newDetails","splice","skillsArray","orderedDetails","finalFormData","option","React","opt","FaPlus","DndContext","collisionDetection","closestCenter","onDragEnd","event","active","over","oldIndex","findIndex","newIndex","movedItem","reorderedDetails","SortableContext","strategy","verticalListSortingStrategy","LanguageTabs","activeLanguage","RichTextEditor","newDetail","onBlur","ProjectForm","videoItems","handleVideoUrlChange","handleVideoDescriptionChange","handleAddVideo","handleRemoveVideo","prepareDataForSubmit","useProjectForm","titleEn","titleJa","status","githubLink","liveLink","image","descriptionEn","descriptionJa","technologies","technologiesEn","technologiesJa","images","FaVideo","detailedDescription","detailedDescriptionEn","detailedDescriptionJa","features","featuresEn","featuresJa","learnings","learningsEn","learningsJa","processedData","message","SkillCategoryForm","initialData","handleChange","field","prev","SkillForm","nameEn","nameJa","level","DynamicIcon","iconName","size","CategoryForm"],"mappings":"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"}