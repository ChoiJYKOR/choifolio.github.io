{"version":3,"file":"chunk-94664749.js","sources":["../../src/components/ProtectedRoute.tsx","../../src/components/LoadScene.tsx","../../src/components/common/DynamicIcon.tsx","../../src/components/LanguageSwitcher.tsx","../../src/utils/i18nUtils.ts","../../src/components/Sidebar.tsx","../../src/components/LoginModal.tsx","../../src/components/AppLayout.tsx","../../src/components/Hero.tsx","../../src/utils/dateUtils.ts","../../src/components/BookCoverImage.tsx","../../src/components/common/ScrollToTopButton.tsx","../../src/utils/textUtils.ts","../../src/components/RichTextEditor.tsx","../../src/components/common/LearningItem.tsx","../../src/components/BookDetail.tsx","../../src/components/lexical/nodes/CollapsibleNode.tsx","../../src/components/lexical/plugins/ToolbarPlugin.tsx","../../src/components/lexical/nodes/ImageNode.tsx","../../src/components/lexical/plugins/ImageUploadPlugin.tsx","../../src/components/lexical/theme/EditorTheme.ts","../../src/components/lexical/LexicalEditor.tsx","../../src/components/VideoLearningDetail.tsx","../../src/components/VideoPlaylistDetail.tsx","../../src/components/ProjectCard.tsx","../../src/components/ProjectDetail.tsx","../../src/components/ExperienceItem.tsx","../../src/components/admin/DashboardHome.tsx","../../src/components/common/ChapterLearningList.tsx","../../src/components/common/Toast.tsx","../../src/components/admin/BookManager.tsx","../../src/components/admin/VideoLearningManager.tsx","../../src/utils/categoryUtils.ts","../../src/components/admin/VideoPlaylistManager.tsx","../../src/components/common/LanguageTabs.tsx","../../src/components/admin/ExperienceManager.tsx","../../src/components/admin/ProjectManager.tsx","../../src/components/admin/MessageDetail.tsx","../../src/components/admin/MessageManager.tsx","../../src/components/admin/SortableCategoryCard.tsx","../../src/components/admin/SortableSkillItem.tsx","../../src/components/admin/SkillsManager.tsx","../../src/components/admin/CategoryManager.tsx","../../src/components/common/NotificationDropdown.tsx","../../src/components/common/BookFilterMenu.tsx","../../src/components/common/ExperienceFilterMenu.tsx","../../src/components/common/ProjectFilterMenu.tsx","../../src/components/common/SettingsMenu.tsx","../../src/components/common/RightSidebar.tsx","../../src/admin/settings/constants.ts","../../src/admin/settings/utils.ts","../../src/admin/settings/components/SettingField.tsx","../../src/admin/settings/components/SettingsSection.tsx"],"sourcesContent":["import React from 'react'\nimport { Navigate } from 'react-router-dom'\nimport { useAuth } from '../contexts/AuthContext'\n\ninterface ProtectedRouteProps {\n  element: React.ComponentType\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ element: Component }) => {\n  const { isAuthenticated, isLoading } = useAuth()\n\n  // 로딩 중일 때는 로딩 스피너 표시\n  if (isLoading) {\n    return (\n      <div style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        backgroundColor: '#f8fafc'\n      }}>\n        <div style={{\n          width: '32px',\n          height: '32px',\n          border: '4px solid #3b82f6',\n          borderTop: '4px solid transparent',\n          borderRadius: '50%',\n          animation: 'spin 1s linear infinite'\n        }}></div>\n        <span style={{\n          marginLeft: '12px',\n          color: '#6b7280',\n          fontSize: '16px'\n        }}>인증 확인 중...</span>\n      </div>\n    )\n  }\n\n  // 인증되지 않은 경우 로그인 페이지로 리디렉션\n  if (!isAuthenticated) {\n    return <Navigate to=\"/\" replace />\n  }\n\n  // 인증된 경우 해당 컴포넌트 렌더링\n  return <Component />\n}\n\nexport default ProtectedRoute\n","import React, { useState, useEffect, useRef } from 'react'\nimport { motion } from 'framer-motion'\nimport { useNavigate } from 'react-router-dom'\nimport * as THREE from 'three'\nimport { gsap } from 'gsap'\n\ninterface LoadSceneProps {\n  onFirstVisitComplete?: () => void\n}\n\nconst LoadScene: React.FC<LoadSceneProps> = ({ onFirstVisitComplete }) => {\n  const [progress, setProgress] = useState(0)\n  const navigate = useNavigate()\n\n  // 해시 URL이 있는 경우 바로 홈으로 리다이렉트 (로딩 애니메이션 없음)\n  useEffect(() => {\n    const hash = window.location.hash\n    if (hash) {\n      navigate('/home', { replace: true })\n    }\n  }, [navigate])\n  const sceneRef = useRef<HTMLDivElement>(null)\n  const animationRef = useRef<number>()\n  const tlRef = useRef<gsap.core.Timeline>()\n  const textMeshesRef = useRef<THREE.Mesh[]>([])\n  const sceneInstanceRef = useRef<THREE.Scene>()\n  const cameraRef = useRef<THREE.PerspectiveCamera>()\n  const rendererRef = useRef<THREE.WebGLRenderer>()\n\n  useEffect(() => {\n    // 3D 씬 초기화\n    initThreeScene()\n    \n    // 애니메이션 타임라인 설정\n    setupAnimation()\n    \n    return () => {\n      cleanup()\n    }\n  }, [])\n\n  // Loading 완료 후 자동으로 홈 화면으로 이동\n  useEffect(() => {\n    const autoNavigateTimer = setTimeout(() => {\n      // 첫 방문 완료 플래그 설정\n      localStorage.setItem('hasVisited', 'true')\n      onFirstVisitComplete?.()\n      navigate('/home')\n    }, 6000) // 총 6초 후 자동 이동 (Loading 3초 + 추가 3초)\n\n    return () => clearTimeout(autoNavigateTimer)\n  }, [navigate, onFirstVisitComplete])\n\n  const cleanup = () => {\n    if (animationRef.current) {\n      cancelAnimationFrame(animationRef.current)\n    }\n    if (tlRef.current) {\n      tlRef.current.kill()\n    }\n    if (rendererRef.current && sceneRef.current) {\n      const canvas = rendererRef.current.domElement\n      if (sceneRef.current.contains(canvas)) {\n        sceneRef.current.removeChild(canvas)\n      }\n      rendererRef.current.dispose()\n    }\n    textMeshesRef.current = []\n  }\n\n  const initThreeScene = () => {\n    if (!sceneRef.current) return\n\n    // Three.js 씬 설정\n    const scene = new THREE.Scene()\n    scene.background = new THREE.Color(0x0a0a0a) // 매우 어두운 배경 (Eric 스타일)\n    \n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n    const renderer = new THREE.WebGLRenderer({ alpha: false, antialias: true })\n    \n    renderer.setSize(window.innerWidth, window.innerHeight)\n    renderer.setClearColor(0x0a0a0a, 1)\n    renderer.shadowMap.enabled = true\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap\n    \n    sceneRef.current.appendChild(renderer.domElement)\n\n    // 조명 설정\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.3)\n    scene.add(ambientLight)\n    \n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8)\n    directionalLight.position.set(10, 10, 5)\n    directionalLight.castShadow = true\n    directionalLight.shadow.mapSize.width = 2048\n    directionalLight.shadow.mapSize.height = 2048\n    scene.add(directionalLight)\n    \n    // 포인트 라이트 추가 (텍스트에 더 나은 조명)\n    const pointLight = new THREE.PointLight(0x00ffff, 0.5, 100)\n    pointLight.position.set(-10, 0, 10)\n    scene.add(pointLight)\n    \n    const pointLight2 = new THREE.PointLight(0xff00ff, 0.5, 100)\n    pointLight2.position.set(10, 0, 10)\n    scene.add(pointLight2)\n\n    // 3D 텍스트 생성\n    create3DText(scene)\n    \n    // 카메라 위치\n    camera.position.z = 20\n    camera.lookAt(0, 0, 0)\n    \n    // 참조 저장\n    sceneInstanceRef.current = scene\n    cameraRef.current = camera\n    rendererRef.current = renderer\n    \n    // 렌더링 루프\n    const animate = () => {\n      animationRef.current = requestAnimationFrame(animate)\n      \n      // 텍스트 회전 애니메이션\n      textMeshesRef.current.forEach((mesh, index) => {\n        if (mesh) {\n          mesh.rotation.y += 0.008 + (index * 0.002)\n          mesh.rotation.x = Math.sin(Date.now() * 0.001 + index) * 0.1\n          mesh.position.y = Math.sin(Date.now() * 0.002 + index) * 0.5\n        }\n      })\n      \n      // 카메라 약간의 움직임 (Eric 스타일)\n      if (cameraRef.current) {\n        cameraRef.current.position.x = Math.sin(Date.now() * 0.0005) * 2\n        cameraRef.current.position.y = Math.cos(Date.now() * 0.0003) * 1\n        cameraRef.current.lookAt(0, 0, 0)\n      }\n      \n      renderer.render(scene, camera)\n    }\n    animate()\n\n    // 윈도우 리사이즈 처리\n    const handleResize = () => {\n      if (cameraRef.current && rendererRef.current) {\n        cameraRef.current.aspect = window.innerWidth / window.innerHeight\n        cameraRef.current.updateProjectionMatrix()\n        rendererRef.current.setSize(window.innerWidth, window.innerHeight)\n      }\n    }\n    window.addEventListener('resize', handleResize)\n    \n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  }\n\n  const create3DText = (scene: THREE.Scene) => {\n    // \"LOADING\" 텍스트를 기본 지오메트리로 생성\n    const loadingLetters = ['L', 'O', 'A', 'D', 'I', 'N', 'G']\n    \n    loadingLetters.forEach((letter, index) => {\n      // 각 글자를 위한 지오메트리 생성\n      let geometry: THREE.BufferGeometry\n      \n      // 글자별로 다른 지오메트리 사용\n      switch(letter) {\n        case 'L':\n          geometry = createLGeometry()\n          break\n        case 'O':\n          geometry = new THREE.TorusGeometry(1.2, 0.4, 16, 32)\n          break\n        case 'A':\n          geometry = new THREE.ConeGeometry(1.8, 4, 3)\n          break\n        case 'D':\n          geometry = createDGeometry()\n          break\n        case 'I':\n          geometry = new THREE.BoxGeometry(0.4, 4, 0.4)\n          break\n        case 'N':\n          geometry = createNGeometry()\n          break\n        case 'G':\n          geometry = createGGeometry()\n          break\n        default:\n          geometry = new THREE.BoxGeometry(1, 4, 0.5)\n      }\n      \n      // 재질 생성 (그라데이션 효과를 위한 색상)\n      const hue = (index / loadingLetters.length) * 360\n      const material = new THREE.MeshPhongMaterial({ \n        color: new THREE.Color().setHSL(hue / 360, 0.8, 0.6),\n        shininess: 100,\n        specular: 0x333333,\n        emissive: new THREE.Color().setHSL(hue / 360, 0.3, 0.1)\n      })\n      \n      const mesh = new THREE.Mesh(geometry, material)\n      mesh.castShadow = true\n      mesh.receiveShadow = true\n      \n      // 위치 설정\n      const spacing = 3.5\n      const startX = -(loadingLetters.length - 1) * spacing / 2\n      mesh.position.set(startX + index * spacing, 0, 0)\n      \n      // 초기 애니메이션 상태\n      mesh.scale.set(0.01, 0.01, 0.01)\n      mesh.rotation.x = Math.PI\n      mesh.rotation.z = Math.PI\n      \n      scene.add(mesh)\n      textMeshesRef.current.push(mesh)\n      \n      // GSAP으로 나타나는 애니메이션\n      gsap.to(mesh.scale, {\n        x: 1,\n        y: 1,\n        z: 1,\n        duration: 1.2,\n        delay: index * 0.15,\n        ease: \"back.out(2)\"\n      })\n      \n      gsap.to(mesh.rotation, {\n        x: 0,\n        z: 0,\n        duration: 1.2,\n        delay: index * 0.15,\n        ease: \"power2.out\"\n      })\n    })\n  }\n\n  // 커스텀 지오메트리 생성 함수들\n  const createLGeometry = () => {\n    const geometry = new THREE.BufferGeometry()\n    const vertices = []\n    \n    // L 모양 생성\n    vertices.push(-1, -2, 0, -1, 2, 0, -0.3, 2, 0) // 왼쪽 세로선\n    vertices.push(-1, -2, 0, -0.3, 2, 0, -0.3, -2, 0)\n    vertices.push(-0.3, -1.5, 0, 1, -1.5, 0, 1, -2, 0) // 아래 가로선\n    vertices.push(-0.3, -1.5, 0, 1, -2, 0, -0.3, -2, 0)\n    \n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3))\n    geometry.computeVertexNormals()\n    return geometry\n  }\n\n  const createDGeometry = () => {\n    const geometry = new THREE.BufferGeometry()\n    const vertices = []\n    \n    // D 모양 생성 (반원 + 직선)\n    for (let i = 0; i <= 16; i++) {\n      const angle = (i / 16) * Math.PI\n      const x = Math.cos(angle) * 1.5\n      const y = Math.sin(angle) * 2\n      vertices.push(x, y, 0, x, y, 0.5)\n    }\n    \n    // 왼쪽 직선 추가\n    vertices.push(-1.5, -2, 0, -1.5, 2, 0, -1.5, 2, 0.5)\n    vertices.push(-1.5, -2, 0, -1.5, 2, 0.5, -1.5, -2, 0.5)\n    \n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3))\n    geometry.computeVertexNormals()\n    return geometry\n  }\n\n  const createNGeometry = () => {\n    const geometry = new THREE.BufferGeometry()\n    const vertices = []\n    \n    // N 모양 생성\n    vertices.push(-1, -2, 0, -1, 2, 0, -0.3, 2, 0) // 왼쪽 세로선\n    vertices.push(-1, -2, 0, -0.3, 2, 0, -0.3, -2, 0)\n    vertices.push(-0.3, 1.5, 0, 1, -2, 0, 1, -1.5, 0) // 대각선\n    vertices.push(-0.3, 1.5, 0, 1, -1.5, 0, -0.3, -2, 0)\n    vertices.push(0.7, -2, 0, 0.7, 2, 0, 1, 2, 0) // 오른쪽 세로선\n    vertices.push(0.7, -2, 0, 1, 2, 0, 1, -2, 0)\n    \n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3))\n    geometry.computeVertexNormals()\n    return geometry\n  }\n\n  const createGGeometry = () => {\n    const geometry = new THREE.BufferGeometry()\n    const vertices = []\n    \n    // G 모양 생성 (불완전한 원 + 직선)\n    for (let i = 0; i <= 20; i++) {\n      const angle = (i / 20) * Math.PI * 1.8 // 거의 완전한 원\n      const x = Math.cos(angle) * 1.5\n      const y = Math.sin(angle) * 2\n      vertices.push(x, y, 0, x, y, 0.5)\n    }\n    \n    // 가로선 추가\n    vertices.push(-1.5, -2, 0, 0, -2, 0, 0, -1.5, 0)\n    vertices.push(-1.5, -2, 0, 0, -1.5, 0, -1.5, -1.5, 0)\n    \n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3))\n    geometry.computeVertexNormals()\n    return geometry\n  }\n\n\n  const setupAnimation = () => {\n    const tl = gsap.timeline()\n    tlRef.current = tl\n    \n    // 3초간 Loading 애니메이션\n    tl.to({}, {\n      duration: 3,\n      onUpdate: function() {\n        setProgress((this['progress']() * 100))\n      }\n    })\n  }\n\n\n\n  return (\n    <div className=\"fixed inset-0 z-50 bg-black overflow-hidden\">\n      {/* 3D 씬 컨테이너 */}\n      <div ref={sceneRef} className=\"absolute inset-0\" />\n      \n      {/* UI 오버레이 */}\n      <div className=\"absolute inset-0 flex flex-col items-center justify-center pointer-events-none\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"text-center\"\n        >\n          <h2 className=\"text-5xl font-bold text-white mb-12 tracking-wider\">\n            Loading...\n          </h2>\n          \n          {/* 로딩 바 */}\n          <div className=\"w-96 h-3 bg-gray-800 rounded-full overflow-hidden\">\n            <motion.div\n              className=\"h-full bg-gradient-to-r from-cyan-500 via-blue-500 to-purple-600 rounded-full\"\n              style={{ width: `${progress}%` }}\n              transition={{ duration: 0.1 }}\n            />\n          </div>\n          <p className=\"text-lg text-gray-400 mt-6 font-mono\">\n            {Math.round(progress)}%\n          </p>\n        </motion.div>\n      </div>\n      \n      \n    </div>\n  )\n}\n\nexport default LoadScene","import React from 'react'\nimport * as FaIcons from 'react-icons/fa'\nimport * as SiIcons from 'react-icons/si'\n\n// 모든 아이콘을 하나의 객체로 매핑\nconst IconMap: { [key: string]: React.ElementType } = {\n  ...FaIcons,\n  ...SiIcons,\n}\n\ninterface DynamicIconProps {\n  iconName: string\n  size?: number\n  className?: string\n}\n\nconst DynamicIcon: React.FC<DynamicIconProps> = ({ \n  iconName, \n  size = 16, \n  className = '' \n}) => {\n  const IconComponent = IconMap[iconName]\n\n  if (!IconComponent) {\n    // 유효하지 않은 아이콘 이름일 경우 기본 아이콘 표시\n    return <FaIcons.FaMicrochip size={size} className={className} />\n  }\n\n  return React.createElement(IconComponent, { size, className })\n}\n\nexport default DynamicIcon\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { FaGlobe } from 'react-icons/fa'\n\ninterface LanguageSwitcherProps {\n  variant?: 'default' | 'compact'\n}\n\ntype Language = 'ko' | 'en' | 'ja'\n\nconst LanguageSwitcher: React.FC<LanguageSwitcherProps> = ({ variant = 'default' }) => {\n  const { i18n } = useTranslation()\n\n  const changeLanguage = (lang: Language) => {\n    i18n.changeLanguage(lang)\n    localStorage.setItem('language', lang)\n  }\n\n  const languages = [\n    { code: 'ko' as Language, short: 'KOR', full: '한국어' },\n    { code: 'en' as Language, short: 'ENG', full: 'English' },\n    { code: 'ja' as Language, short: 'JPN', full: '日本語' }\n  ]\n\n  if (variant === 'compact') {\n    return (\n      <div className=\"flex flex-col gap-2\">\n        <div className=\"flex items-center gap-2 mb-1\">\n          <FaGlobe className=\"text-base text-gray-600 dark:text-gray-400\" />\n          <span className=\"text-xs text-gray-600 dark:text-gray-400 font-medium\">Language</span>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          {languages.map((lang) => {\n            const isActive = i18n.language === lang.code\n            return (\n              <button\n                key={lang.code}\n                onClick={() => changeLanguage(lang.code)}\n                className={`px-3 py-2 rounded-lg text-xs font-semibold transition-all duration-200 ${\n                  isActive\n                    ? 'bg-blue-600 text-white shadow-md'\n                    : 'bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700'\n                }`}\n                aria-label={`${lang.full}로 변경`}\n                aria-current={isActive ? 'true' : 'false'}\n              >\n                {lang.short}\n              </button>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"flex flex-col gap-3\">\n      <div className=\"flex items-center gap-2\">\n        <FaGlobe className=\"text-primary-600 dark:text-primary-400\" />\n        <span className=\"text-sm text-gray-700 dark:text-gray-300 font-medium\">언어 선택</span>\n      </div>\n      <div className=\"flex flex-wrap gap-2\">\n        {languages.map((lang) => {\n          const isActive = i18n.language === lang.code\n          return (\n            <button\n              key={lang.code}\n              onClick={() => changeLanguage(lang.code)}\n              className={`px-4 py-2 rounded-lg text-sm font-semibold transition-all duration-200 ${\n                isActive\n                  ? 'bg-primary-600 text-white shadow-lg'\n                  : 'bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-primary-100 dark:hover:bg-primary-900 hover:text-primary-700 dark:hover:text-primary-300'\n              }`}\n              aria-label={`${lang.full}로 변경`}\n              aria-current={isActive ? 'true' : 'false'}\n            >\n              {lang.full}\n            </button>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default LanguageSwitcher\n\n","/**\n * 다국어 필드 선택 유틸리티\n * 현재 언어에 맞는 값을 반환하고, 없으면 한국어로 폴백\n */\n\nexport type Language = 'ko' | 'en' | 'ja'\n\n/**\n * 단일 필드에서 현재 언어에 맞는 값 추출\n */\nexport const getLocalizedField = (\n  currentLang: Language,\n  koValue: string | undefined,\n  enValue?: string,\n  jaValue?: string\n): string => {\n  if (currentLang === 'en' && enValue) return enValue\n  if (currentLang === 'ja' && jaValue) return jaValue\n  return koValue || ''\n}\n\n/**\n * 배열 필드에서 현재 언어에 맞는 값 추출\n */\nexport const getLocalizedArrayField = (\n  currentLang: Language,\n  koArray: string[] | undefined,\n  enArray?: string[],\n  jaArray?: string[]\n): string[] => {\n  if (currentLang === 'en' && enArray && enArray.length > 0) return enArray\n  if (currentLang === 'ja' && jaArray && jaArray.length > 0) return jaArray\n  return koArray || []\n}\n\n/**\n * 객체의 다국어 필드들을 현재 언어에 맞게 변환\n * 예: { title, titleEn, titleJa } -> 현재 언어에 맞는 title 반환\n */\nexport const getLocalizedObject = <T extends Record<string, any>>(\n  obj: T,\n  currentLang: Language,\n  fields: string[]\n): Partial<T> => {\n  const result: any = { ...obj }\n  \n  fields.forEach(field => {\n    const koValue = obj[field]\n    const enValue = obj[`${field}En`]\n    const jaValue = obj[`${field}Ja`]\n    \n    result[field] = getLocalizedField(currentLang, koValue, enValue, jaValue)\n  })\n  \n  return result\n}\n\n// =================================================================\n// Resource-Specific Localization Helpers\n// =================================================================\n\n/**\n * Get localized skill name\n * @param currentLang - Current language ('ko', 'en', 'ja')\n * @param skill - Skill object\n * @returns Localized skill name\n */\nexport const getLocalizedSkillName = (\n  currentLang: Language,\n  skill: { name: string; nameEn?: string; nameJa?: string }\n): string => {\n  return getLocalizedField(currentLang, skill.name, skill.nameEn, skill.nameJa)\n}\n\n/**\n * Get localized skill description\n * @param currentLang - Current language ('ko', 'en', 'ja')\n * @param skill - Skill object\n * @returns Localized skill description or empty string\n */\nexport const getLocalizedSkillDescription = (\n  currentLang: Language,\n  skill: { description?: string; descriptionEn?: string; descriptionJa?: string }\n): string => {\n  return getLocalizedField(currentLang, skill.description, skill.descriptionEn, skill.descriptionJa)\n}\n\n/**\n * Get localized category name\n * @param currentLang - Current language ('ko', 'en', 'ja')\n * @param category - Category object\n * @returns Localized category name\n */\nexport const getLocalizedCategoryName = (\n  currentLang: Language,\n  category: { name: string; nameEn?: string; nameJa?: string }\n): string => {\n  return getLocalizedField(currentLang, category.name, category.nameEn, category.nameJa)\n}\n\n/**\n * Get localized skill category title\n * @param currentLang - Current language ('ko', 'en', 'ja')\n * @param skillCategory - SkillCategory object\n * @returns Localized skill category title\n */\nexport const getLocalizedSkillCategoryTitle = (\n  currentLang: Language,\n  skillCategory: { title: string; titleEn?: string; titleJa?: string }\n): string => {\n  return getLocalizedField(currentLang, skillCategory.title, skillCategory.titleEn, skillCategory.titleJa)\n}\n\n","import React, { useState, useMemo, useCallback } from 'react'\nimport { motion } from 'framer-motion'\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\nimport { FaSun, FaMoon, FaBars, FaTimes, FaGithub, FaLinkedin, FaEnvelope, FaCode, FaBook, FaVideo, FaSignInAlt, FaUserShield, FaHome, FaUser, FaBriefcase, FaLaptopCode, FaWrench, FaCommentDots } from 'react-icons/fa'\nimport { IconType } from 'react-icons'\nimport { useAuth } from '../contexts/AuthContext'\nimport { useScrollSpy, scrollToSection, SectionId } from '../hooks/useScrollSpy'\nimport { useSidebarSkills } from '../hooks/useSidebarSkills'\nimport DynamicIcon from './common/DynamicIcon'\nimport LanguageSwitcher from './LanguageSwitcher'\nimport { useTranslation } from 'react-i18next'\nimport { useSiteSettings } from '../hooks/useSiteSettings'\nimport { getLocalizedField, getLocalizedSkillName } from '../utils/i18nUtils'\n\n// AuthContext 타입 정의 (실제 AuthContext와 일치해야 함)\n// interface AuthContextType {\n//   isAuthenticated: boolean\n//   logout: () => void\n//   // 기타 인증 관련 상태/함수들...\n// }\n\n// 타입 정의\ninterface NavItem {\n  name: string\n  href: string\n  path: string\n  icon: IconType\n}\n\ninterface SidebarProps {\n  darkMode: boolean\n  toggleDarkMode: () => void\n  onLoginClick: () => void\n}\n\n// 네비게이션 항목 컴포넌트 분리\ninterface SidebarNavItemProps {\n  item: NavItem\n  location: ReturnType<typeof useLocation>\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>\n  activeSection: SectionId\n}\n\nconst SidebarNavItem: React.FC<SidebarNavItemProps> = ({ item, location, setIsOpen, activeSection }) => {\n  const navigate = useNavigate()\n  \n  // 간소화된 활성화 상태 로직\n  const isActive = useMemo(() => {\n    // 1. 홈 링크인 경우: 메인 페이지에서 hero 섹션이 활성화되었을 때\n    if (item.path === '/') {\n      return location.pathname === '/' && activeSection === 'hero'\n    }\n    \n    // 2. 별도 라우트인 경우: 경로 일치 (상세 페이지도 활성화하기 위해 startsWith 사용)\n    if (item.path !== '/') {\n      return location.pathname.startsWith(item.path)\n    }\n    \n    return false\n  }, [location.pathname, item.path, activeSection])\n\n  const IconComponent = item.icon\n  \n  const baseClasses = `flex items-center gap-2 px-4 py-3 rounded-xl transition-colors duration-200 font-medium`\n  const activeClasses = 'bg-coffee-100 dark:bg-dark-700 text-coffee-600 dark:text-coffee-400'\n  const inactiveClasses = 'text-dark-700 dark:text-dark-300 hover:bg-coffee-100 dark:hover:bg-dark-700 hover:text-coffee-600 dark:hover:text-coffee-400'\n\n  const classes = `${baseClasses} ${isActive ? activeClasses : inactiveClasses}`\n\n  // 개선된 네비게이션 핸들러\n  const handleNavigation = useCallback(() => {\n    // 홈 링크인 경우: 메인 페이지로 이동 후 hero 섹션으로 스크롤\n    if (item.path === '/') {\n      if (location.pathname === '/') {\n        // 이미 메인 페이지에 있으면 hero 섹션으로 스크롤\n        scrollToSection('hero', 80)\n      } else {\n        // 다른 페이지에 있으면 메인 페이지로 이동 후 스크롤\n        navigate('/#hero')\n      }\n    }\n    // 별도 라우트 이동 (예: /about, /experience, /skills, /projects, /books, /contact)\n    else {\n      navigate(item.href)\n    }\n    \n    setIsOpen(false)\n  }, [item.path, item.href, location.pathname, navigate, setIsOpen])\n\n  // 별도 라우트 (Link)\n  if (item.path !== '/') {\n    return (\n      <button\n        onClick={handleNavigation}\n        className={classes}\n      >\n        <IconComponent size={18} />\n        {item.name}\n      </button>\n    )\n  }\n\n  // 메인 페이지 섹션 링크 (button 태그와 네비게이션 핸들러)\n  return (\n    <button\n      onClick={handleNavigation}\n      className={classes}\n      aria-current={isActive ? 'page' : undefined}\n    >\n      <IconComponent size={18} />\n      {item.name}\n    </button>\n  )\n}\n\nconst Sidebar: React.FC<SidebarProps> = ({ darkMode, toggleDarkMode, onLoginClick }) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const location = useLocation()\n  const { isAuthenticated, logout } = useAuth()\n  const { t, i18n } = useTranslation()\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\n  const { settings: siteSettings } = useSiteSettings()\n  // 스크롤 스파이 훅 사용 (기본 옵션 적용)\n  const activeSection = useScrollSpy()\n  \n  // =================================================================\n  // 🔄 페이지 변경 감지 및 네비게이션 활성화\n  // =================================================================\n  \n  const navItems: NavItem[] = [\n    // 💡 메인 페이지 홈 링크만 남기고 나머지는 모두 별도 라우트로 분리\n    { name: t('nav.home'), href: '/', path: '/', icon: FaHome },\n    \n    // 💡 별도 라우트 링크: path와 href가 동일\n    { name: t('nav.about'), href: '/about', path: '/about', icon: FaUser },\n    { name: t('nav.experience'), href: '/experience', path: '/experience', icon: FaBriefcase },\n    { name: t('nav.skills'), href: '/skills', path: '/skills', icon: FaWrench },\n    { name: t('nav.projects'), href: '/projects', path: '/projects', icon: FaLaptopCode },\n    { name: t('nav.books'), href: '/books', path: '/books', icon: FaBook },\n    { name: t('nav.videoLearnings'), href: '/video-learnings', path: '/video-learnings', icon: FaVideo },\n    { name: t('nav.contact'), href: '/contact', path: '/contact', icon: FaCommentDots },\n  ]\n\n  // 커스텀 훅을 사용하여 스킬 데이터 가져오기\n  const { coreSkills, languageSkills, isLoadingSkills } = useSidebarSkills()\n\n  const socialLinks = [\n    { icon: FaGithub, href: '#', label: 'GitHub' },\n    { icon: FaLinkedin, href: '#', label: 'LinkedIn' },\n    { icon: FaEnvelope, href: 'mailto:juyeong_choi@naver.com', label: 'Email' },\n  ]\n\n\n\n  return (\n    <>\n      {/* Mobile Menu Button */}\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"lg:hidden fixed top-4 left-4 z-50 p-3 bg-coffee-600 text-white rounded-xl shadow-lg hover:bg-coffee-700 transition-colors\"\n        aria-label={isOpen ? \"사이드바 닫기\" : \"사이드바 열기\"}\n      >\n        {isOpen ? <FaTimes size={20} /> : <FaBars size={20} />}\n      </button>\n\n      {/* Overlay for mobile */}\n      {isOpen && (\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          className=\"lg:hidden fixed inset-0 bg-black bg-opacity-50 z-40\"\n          onClick={() => setIsOpen(false)}\n          aria-label=\"사이드바 닫기\"\n        />\n      )}\n\n      {/* Sidebar */}\n      <aside\n        className={`fixed top-0 left-0 h-screen w-80 bg-white dark:bg-dark-800 border-r border-cream-200 dark:border-dark-700 z-40 transition-transform duration-300 lg:translate-x-0 ${\n          isOpen ? 'translate-x-0' : '-translate-x-full'\n        } overflow-y-auto custom-scrollbar`}\n        aria-label=\"주요 네비게이션\"\n      >\n        <div className=\"p-8 space-y-8\">\n          {/* Profile Section */}\n          <div className=\"text-center\">\n            <div className=\"relative w-32 h-32 mx-auto mb-6\">\n              <div className=\"w-full h-full rounded-full bg-coffee-600 flex items-center justify-center text-white text-4xl font-bold shadow-xl\">\n                {getLocalizedField(currentLang, siteSettings?.firstName, siteSettings?.firstNameEn, siteSettings?.firstNameJa) || '주영'}\n              </div>\n              <div \n                className=\"absolute bottom-0 right-0 w-10 h-10 bg-caramel-500 rounded-full flex items-center justify-center border-4 border-white dark:border-dark-800\"\n                aria-label=\"프로필 이미지\"\n              >\n                <FaCode className=\"text-white\" size={18} />\n              </div>\n            </div>\n            <h1 className=\"text-2xl font-bold text-dark-900 dark:text-cream-100 mb-2\">\n              {getLocalizedField(currentLang, siteSettings?.fullName, siteSettings?.fullNameEn, siteSettings?.fullNameJa) || '최주영'}\n            </h1>\n            <p className=\"text-coffee-600 dark:text-coffee-400 font-medium mb-1\">\n              {getLocalizedField(currentLang, siteSettings?.role, siteSettings?.roleEn, siteSettings?.roleJa) || '공장자동화 전문가'}\n            </p>\n            <p className=\"text-sm text-dark-600 dark:text-dark-400\">\n              {getLocalizedField(currentLang, siteSettings?.subtitle, siteSettings?.subtitleEn, siteSettings?.subtitleJa) || '바리스타 → 자동화 엔지니어'}\n            </p>\n          </div>\n\n          {/* Info Cards */}\n          <div className=\"space-y-4\">\n            <div className=\"bg-cream-100 dark:bg-dark-700 rounded-xl p-4\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <span className=\"text-dark-700 dark:text-dark-300 text-sm\">{t('about.location')}</span>\n                <span className=\"text-dark-900 dark:text-cream-100 font-medium\">\n                  {getLocalizedField(currentLang, siteSettings?.location, siteSettings?.locationEn, siteSettings?.locationJa) || '부산'}\n                </span>\n              </div>\n              <div className=\"flex justify-between items-center mb-2\">\n                <span className=\"text-dark-700 dark:text-dark-300 text-sm\">{t('about.education')}</span>\n                <span className=\"text-dark-900 dark:text-cream-100 font-medium text-right text-xs\">\n                  {getLocalizedField(currentLang, siteSettings?.education, siteSettings?.educationEn, siteSettings?.educationJa) || '부산인력개발원'}\n                </span>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-dark-700 dark:text-dark-300 text-sm\">{t('about.yearsOfExperience')}</span>\n                <span className=\"text-dark-900 dark:text-cream-100 font-medium\">\n                  {getLocalizedField(currentLang, siteSettings?.yearsOfExperience, siteSettings?.yearsOfExperienceEn, siteSettings?.yearsOfExperienceJa) || '5년'}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          {/* Language Skills - Circular Progress */}\n          {languageSkills.length > 0 && (\n            <div>\n              <div className=\"flex justify-around items-center gap-2\">\n                {isLoadingSkills ? (\n                  [1, 2, 3].map((i) => (\n                    <div key={i} className=\"flex flex-col items-center\">\n                      <div className=\"w-16 h-16 rounded-full bg-gray-200 dark:bg-gray-700 animate-pulse\"></div>\n                      <div className=\"h-3 bg-gray-200 dark:bg-gray-700 rounded animate-pulse w-12 mt-2\"></div>\n                    </div>\n                  ))\n                ) : (\n                  languageSkills.map((skill) => {\n                    // 🌟 한국어이고 100%면 \"모국어\"로 표시\n                    const skillName = getLocalizedSkillName(currentLang, skill)\n                    const isNative = skillName.includes('한국어') && skill.level === 100\n                    \n                    return (\n                      <div key={skill._id} className=\"flex flex-col items-center\">\n                        <div className=\"relative w-16 h-16\">\n                          {/* Background Circle */}\n                          <svg className=\"w-16 h-16 transform -rotate-90\">\n                            <circle\n                              cx=\"32\"\n                              cy=\"32\"\n                              r=\"28\"\n                              stroke=\"currentColor\"\n                              strokeWidth=\"4\"\n                              fill=\"none\"\n                              className=\"text-cream-200 dark:text-dark-700\"\n                            />\n                            {/* Progress Circle */}\n                            <circle\n                              cx=\"32\"\n                              cy=\"32\"\n                              r=\"28\"\n                              stroke={skill.color || '#8B4513'}\n                              strokeWidth=\"4\"\n                              fill=\"none\"\n                              strokeDasharray={`${(skill.level / 100) * 176} 176`}\n                              className=\"transition-all duration-1000 ease-out\"\n                              strokeLinecap=\"round\"\n                            />\n                          </svg>\n                          {/* Icon in Center */}\n                          <div className=\"absolute inset-0 flex items-center justify-center\">\n                            <DynamicIcon \n                              iconName={skill.icon} \n                              size={20} \n                              className=\"text-coffee-600 dark:text-coffee-400\"\n                            />\n                          </div>\n                        </div>\n                        <span className=\"text-xs font-medium text-dark-700 dark:text-dark-300 mt-1 text-center\">\n                          {skillName}\n                        </span>\n                        <span className=\"text-xs font-bold text-coffee-600 dark:text-coffee-400\">\n                          {isNative ? '모국어' : `${skill.level}%`}\n                        </span>\n                      </div>\n                    )\n                  })\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* Core Skills Progress */}\n          <div>\n            <h3 className=\"text-lg font-bold text-dark-900 dark:text-cream-100 mb-4\">\n              핵심 기술\n            </h3>\n            <div className=\"space-y-4\">\n              {isLoadingSkills ? (\n                // 로딩 상태\n                <div className=\"space-y-4\">\n                  {[1, 2, 3, 4].map((i) => (\n                    <div key={i}>\n                      <div className=\"flex justify-between mb-2\">\n                        <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded animate-pulse w-16\"></div>\n                        <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded animate-pulse w-8\"></div>\n                      </div>\n                      <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 animate-pulse\"></div>\n                    </div>\n                  ))}\n                </div>\n              ) : coreSkills.length > 0 ? (\n                // 스킬 데이터 표시\n                coreSkills.map((skill) => (\n                  <div key={skill._id}>\n                    <div className=\"flex justify-between mb-2\">\n                      <span className=\"text-sm font-medium text-dark-700 dark:text-dark-300\">\n                        {getLocalizedSkillName(currentLang, skill)}\n                      </span>\n                      <span className=\"text-sm font-bold text-coffee-600 dark:text-coffee-400\">\n                        {skill.level}%\n                      </span>\n                    </div>\n                    <div className=\"w-full bg-cream-200 dark:bg-dark-700 rounded-full h-2\">\n                      <motion.div\n                        initial={{ width: 0 }}\n                        animate={{ width: `${skill.level}%` }}\n                        transition={{ duration: 1, delay: 0.2 }}\n                        className=\"bg-coffee-600 h-2 rounded-full\"\n                      />\n                    </div>\n                  </div>\n                ))\n              ) : (\n                // 데이터가 없을 때\n                <div className=\"text-center py-8\">\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    스킬 데이터가 없습니다.\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Navigation */}\n          <nav>\n            <h3 className=\"text-lg font-bold text-dark-900 dark:text-cream-100 mb-4\">\n              메뉴\n            </h3>\n            <ul className=\"space-y-2\">\n              {navItems.map((item) => (\n                <li key={item.name}>\n                  <SidebarNavItem \n                    item={item} \n                    location={location} \n                    setIsOpen={setIsOpen}\n                    activeSection={activeSection}\n                  />\n                </li>\n              ))}\n            </ul>\n          </nav>\n\n          {/* Admin Section */}\n          {isAuthenticated && (\n            <motion.div\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.3 }}\n            >\n              <Link\n                to=\"/admin\"\n                className=\"block px-4 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-xl transition-colors duration-200 font-medium text-center flex items-center justify-center gap-2\"\n                onClick={() => setIsOpen(false)}\n              >\n                <FaUserShield size={18} /> 관리자 대시보드\n              </Link>\n            </motion.div>\n          )}\n\n          {/* Social Links */}\n          <div>\n            <h3 className=\"text-lg font-bold text-dark-900 dark:text-cream-100 mb-4\">\n              소셜\n            </h3>\n            <div className=\"flex space-x-3\">\n              {socialLinks.map(({ icon: Icon, href, label }) => (\n                <a\n                  key={label}\n                  href={href}\n                  className=\"p-3 bg-cream-100 dark:bg-dark-700 rounded-xl hover:bg-coffee-100 dark:hover:bg-dark-600 text-dark-700 dark:text-dark-300 hover:text-coffee-600 dark:hover:text-coffee-400 transition-all duration-200\"\n                  aria-label={label}\n                >\n                  <Icon size={20} />\n                </a>\n              ))}\n            </div>\n          </div>\n\n          {/* Language Switcher */}\n          <div className=\"mb-4\">\n            <LanguageSwitcher variant=\"compact\" />\n          </div>\n\n          {/* Dark Mode Toggle & Auth */}\n          <div className=\"space-y-2\">\n            <button\n              onClick={toggleDarkMode}\n              className=\"w-full py-3 px-4 bg-coffee-600 hover:bg-coffee-700 text-white rounded-xl transition-colors duration-200 flex items-center justify-center space-x-2 font-medium\"\n              aria-label={darkMode ? \"라이트 모드로 전환\" : \"다크 모드로 전환\"}\n            >\n              {darkMode ? (\n                <>\n                  <FaSun size={18} />\n                  <span>라이트 모드</span>\n                </>\n              ) : (\n                <>\n                  <FaMoon size={18} />\n                  <span>다크 모드</span>\n                </>\n              )}\n            </button>\n\n            {isAuthenticated ? (\n              <button\n                onClick={() => {\n                  logout()\n                  setIsOpen(false)\n                }}\n                className=\"w-full py-3 px-4 bg-red-600 hover:bg-red-700 text-white rounded-xl transition-colors duration-200 flex items-center justify-center space-x-2 font-medium\"\n                aria-label=\"관리자 로그아웃\"\n              >\n                <FaSignInAlt size={18} />\n                <span>로그아웃</span>\n              </button>\n            ) : (\n              <button\n                onClick={() => {\n                  onLoginClick()\n                  setIsOpen(false)\n                }}\n                className=\"w-full py-3 px-4 bg-green-600 hover:bg-green-700 text-white rounded-xl transition-colors duration-200 flex items-center justify-center space-x-2 font-medium\"\n                aria-label=\"관리자 로그인\"\n              >\n                <FaSignInAlt size={18} />\n                <span>관리자 로그인</span>\n              </button>\n            )}\n          </div>\n\n        </div>\n      </aside>\n    </>\n  )\n}\n\nexport default Sidebar\n","import React, { useState } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { FaTimes, FaUser, FaLock, FaCircleNotch } from 'react-icons/fa'\nimport { useAuth } from '../contexts/AuthContext'\nimport { useNavigate } from 'react-router-dom'\n\ninterface LoginModalProps {\n  isOpen: boolean\n  onClose: () => void\n}\n\nconst LoginModal: React.FC<LoginModalProps> = ({ isOpen, onClose }) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const { login } = useAuth()\n  const navigate = useNavigate()\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setError('')\n    setIsLoading(true)\n\n    try {\n      await login(username, password)\n      onClose()\n      navigate('/admin')\n      setUsername('')\n      setPassword('')\n    } catch (err: any) {\n      // 에러 메시지가 객체라면 문자열로 변환\n      const errorMessage = err.message || '로그인 중 알 수 없는 오류가 발생했습니다.'\n      setError(errorMessage)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleClose = () => {\n    setUsername('')\n    setPassword('')\n    setError('')\n    onClose()\n  }\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <>\n          {/* Backdrop */}\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            onClick={handleClose}\n            className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50\"\n          />\n\n          {/* Modal */}\n          <div className=\"fixed inset-0 flex items-center justify-center z-50 p-4\">\n            <motion.div\n              initial={{ opacity: 0, scale: 0.9, y: 20 }}\n              animate={{ opacity: 1, scale: 1, y: 0 }}\n              exit={{ opacity: 0, scale: 0.9, y: 20 }}\n              role=\"dialog\"\n              aria-modal=\"true\"\n              aria-labelledby=\"login-title\"\n              className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-2xl w-full max-w-md p-8 relative\"\n            >\n              {/* Close button */}\n              <button\n                onClick={handleClose}\n                className=\"absolute top-4 right-4 p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\n                aria-label=\"닫기\"\n              >\n                <FaTimes className=\"text-gray-600 dark:text-gray-300\" />\n              </button>\n\n              {/* Header */}\n              <div className=\"text-center mb-8\">\n                <div className=\"w-16 h-16 bg-gradient-to-r from-blue-500 to-blue-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <FaUser className=\"text-white text-2xl\" />\n                </div>\n                <h2 id=\"login-title\" className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\n                  관리자 로그인\n                </h2>\n                <p className=\"text-gray-600 dark:text-gray-400\">\n                  포트폴리오 관리를 위해 로그인하세요\n                </p>\n              </div>\n\n              {/* Form */}\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\n                {error && (\n                  <motion.div\n                    initial={{ opacity: 0, y: -10 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    className=\"bg-red-100 dark:bg-red-900/30 border border-red-400 dark:border-red-700 text-red-700 dark:text-red-300 px-4 py-3 rounded-lg text-sm\"\n                    role=\"alert\"\n                  >\n                    {error}\n                  </motion.div>\n                )}\n\n                <div>\n                  <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    아이디\n                  </label>\n                  <div className=\"relative\">\n                    <FaUser className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-400\" />\n                    <input\n                      type=\"text\"\n                      id=\"username\"\n                      value={username}\n                      onChange={(e) => setUsername(e.target.value)}\n                      className=\"w-full pl-10 pr-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                      placeholder=\"아이디를 입력하세요\"\n                      required\n                      autoComplete=\"username\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    비밀번호\n                  </label>\n                  <div className=\"relative\">\n                    <FaLock className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-400\" />\n                    <input\n                      type=\"password\"\n                      id=\"password\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                      className=\"w-full pl-10 pr-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                      placeholder=\"비밀번호를 입력하세요\"\n                      required\n                      autoComplete=\"current-password\"\n                    />\n                  </div>\n                </div>\n\n                <motion.button\n                  type=\"submit\"\n                  disabled={isLoading}\n                  className=\"w-full bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white font-semibold py-3 rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2\"\n                  whileHover={{ scale: 1.02 }}\n                  whileTap={{ scale: 0.98 }}\n                >\n                  {isLoading ? (\n                    <>\n                      <FaCircleNotch className=\"animate-spin\" />\n                      로그인 중...\n                    </>\n                  ) : (\n                    '로그인'\n                  )}\n                </motion.button>\n              </form>\n            </motion.div>\n          </div>\n        </>\n      )}\n    </AnimatePresence>\n  )\n}\n\nexport default LoginModal\n\n\n","import React, { Suspense } from 'react'\nimport { Outlet } from 'react-router-dom'\nimport Sidebar from './Sidebar'\nimport LoginModal from './LoginModal'\nimport LoadScene from './LoadScene'\n\ninterface AppLayoutProps {\n  darkMode: boolean\n  toggleDarkMode: () => void\n  showLoginModal: boolean\n  setShowLoginModal: (show: boolean) => void\n  isFirstVisit: boolean\n}\n\nconst AppLayout: React.FC<AppLayoutProps> = ({\n  darkMode,\n  toggleDarkMode,\n  showLoginModal,\n  setShowLoginModal,\n  isFirstVisit\n}) => {\n\n  // 간단한 로딩 스피너 컴포넌트\n  const SimpleLoadingSpinner = () => (\n    <div className=\"flex items-center justify-center h-64\">\n      <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n    </div>\n  )\n\n  return (\n    <div className=\"flex min-h-screen bg-cream-50 dark:bg-dark-900 transition-colors duration-300\">\n      {/* 고정된 왼쪽 사이드바 */}\n      <Sidebar \n        darkMode={darkMode} \n        toggleDarkMode={toggleDarkMode}\n        onLoginClick={() => setShowLoginModal(true)}\n      />\n      \n      {/* 오른쪽 스크롤 가능한 콘텐츠 */}\n      <main className=\"flex-1 ml-0 lg:ml-80 overflow-y-auto\">\n        <Suspense fallback={isFirstVisit ? <LoadScene /> : <SimpleLoadingSpinner />}>\n          <Outlet />\n        </Suspense>\n      </main>\n      \n      {/* 로그인 모달 */}\n      <LoginModal \n        isOpen={showLoginModal} \n        onClose={() => setShowLoginModal(false)} \n      />\n    </div>\n  )\n}\n\nexport default AppLayout\n","import React from 'react'\nimport { motion, useScroll, useTransform } from 'framer-motion'\nimport { FaDownload, FaArrowRight, FaCoffee, FaCog, FaCode } from 'react-icons/fa'\nimport { useSiteSettings } from '../hooks/useSiteSettings'\nimport { useTranslation } from 'react-i18next'\nimport { getLocalizedField } from '../utils/i18nUtils'\n\nconst Hero: React.FC = () => {\n  const { settings, loading } = useSiteSettings()\n  const { t, i18n } = useTranslation()\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\n\n  // 패럴랙스 효과를 위한 스크롤 훅\n  const { scrollYProgress } = useScroll()\n  \n  // 스크롤 위치에 따라 요소의 Y축 위치를 변환\n  const yTop = useTransform(scrollYProgress, [0, 1], [0, 100])\n  const yBottom = useTransform(scrollYProgress, [0, 1], [0, -100])\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.3,\n      },\n    },\n  }\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 30 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.8,\n        ease: 'easeOut',\n      },\n    },\n  }\n\n  // 로딩 중일 때\n  if (loading) {\n    return (\n      <section id=\"home\" className=\"min-h-screen flex items-center justify-center bg-cream-50 dark:bg-dark-900\">\n        <div className=\"w-12 h-12 border-4 border-coffee-600 border-t-transparent rounded-full animate-spin\"></div>\n      </section>\n    )\n  }\n\n  const stats = [\n    { \n      number: settings?.stat1Number || '5+', \n      label: getLocalizedField(currentLang, settings?.stat1Label, settings?.stat1LabelEn, settings?.stat1LabelJa) || '년 경력', \n      icon: FaCoffee \n    },\n    { \n      number: settings?.stat2Number || '3+', \n      label: getLocalizedField(currentLang, settings?.stat2Label, settings?.stat2LabelEn, settings?.stat2LabelJa) || '완료 프로젝트', \n      icon: FaCode \n    },\n    { \n      number: settings?.stat3Number || '10+', \n      label: getLocalizedField(currentLang, settings?.stat3Label, settings?.stat3LabelEn, settings?.stat3LabelJa) || '기술 스택', \n      icon: FaCog \n    },\n  ]\n\n  return (\n    <section id=\"home\" className=\"min-h-screen flex items-center justify-center bg-cream-50 dark:bg-dark-900 relative overflow-hidden\">\n      {/* Background decoration (패럴랙스 적용) */}\n      <div className=\"absolute inset-0 overflow-hidden\">\n        {/* 윗부분 장식: 스크롤 시 아래로 이동 */}\n        <motion.div \n          style={{ y: yTop }}\n          className=\"absolute -top-40 -right-40 w-80 h-80 bg-coffee-200 dark:bg-coffee-900 rounded-full opacity-20 blur-3xl\"\n        ></motion.div>\n        {/* 아랫부분 장식: 스크롤 시 위로 이동 */}\n        <motion.div \n          style={{ y: yBottom }}\n          className=\"absolute -bottom-40 -left-40 w-80 h-80 bg-caramel-200 dark:bg-caramel-900 rounded-full opacity-20 blur-3xl\"\n        ></motion.div>\n      </div>\n\n      <div className=\"section-padding w-full relative z-10\">\n        <motion.div\n          variants={containerVariants}\n          initial=\"hidden\"\n          animate=\"visible\"\n          className=\"max-w-4xl mx-auto\"\n        >\n          <motion.div\n            variants={itemVariants}\n            className=\"mb-8\"\n          >\n            <span className=\"inline-block px-4 py-2 bg-coffee-100 dark:bg-coffee-900 text-coffee-700 dark:text-coffee-300 rounded-full text-sm font-medium mb-6\">\n              {getLocalizedField(currentLang, settings?.heroTag, settings?.heroTagEn, settings?.heroTagJa) || '🎯 취업 준비 중'}\n            </span>\n          </motion.div>\n\n          <motion.h1\n            variants={itemVariants}\n            className=\"text-5xl md:text-7xl font-bold text-dark-900 dark:text-cream-100 mb-8 leading-tight\"\n          >\n            {getLocalizedField(currentLang, settings?.heroTitle, settings?.heroTitleEn, settings?.heroTitleJa) || '공장자동화 전문가'}\n          </motion.h1>\n\n          <motion.p\n            variants={itemVariants}\n            className=\"text-xl md:text-2xl text-dark-600 dark:text-dark-300 mb-12 leading-relaxed max-w-3xl whitespace-pre-line\"\n          >\n            {getLocalizedField(currentLang, settings?.heroSubtitle, settings?.heroSubtitleEn, settings?.heroSubtitleJa) || 'PLC 프로그래밍부터 데이터 분석까지, 스마트 팩토리의 미래를 만들어갑니다.'}\n          </motion.p>\n\n          <motion.div\n            variants={itemVariants}\n            className=\"flex flex-col sm:flex-row gap-4 mb-16\"\n          >\n            <motion.a \n              href=\"/projects\"\n              aria-label={t('hero.viewProjects')}\n              variants={itemVariants}\n              className=\"btn-primary text-lg px-8 py-4 flex items-center justify-center gap-2 group\"\n            >\n              {t('hero.viewProjects')}\n              <FaArrowRight className=\"group-hover:translate-x-1 transition-transform\" />\n            </motion.a>\n            <motion.a \n              href={settings?.heroCtaLink2 || '/resume.pdf'}\n              download={settings?.heroCtaLink2 ? true : false}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label={t('hero.contactMe')}\n              variants={itemVariants}\n              className=\"btn-secondary text-lg px-8 py-4 flex items-center justify-center gap-2\"\n            >\n              <FaDownload />\n              {t('hero.contactMe')}\n            </motion.a>\n          </motion.div>\n\n          {/* Stats */}\n          <motion.div\n            variants={itemVariants}\n            className=\"grid grid-cols-1 sm:grid-cols-3 gap-6\"\n          >\n            {stats.map((stat) => (\n              <motion.div\n                key={stat.label}\n                className=\"bg-white dark:bg-dark-800 rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 border border-cream-200 dark:border-dark-700\"\n                whileHover={{ y: -5 }}\n                role=\"status\"\n                aria-label={`${stat.label} 통계: ${stat.number}`}\n              >\n                <div className=\"flex items-center gap-4\">\n                  <div className=\"p-3 bg-coffee-100 dark:bg-coffee-900 rounded-xl\">\n                    <stat.icon className=\"text-coffee-600 dark:text-coffee-400\" size={24} />\n                  </div>\n                  <div>\n                    <div className=\"text-3xl font-bold text-coffee-600 dark:text-coffee-400\">\n                      {stat.number}\n                    </div>\n                    <div className=\"text-sm text-dark-600 dark:text-dark-400\">\n                      {stat.label}\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </motion.div>\n        </motion.div>\n      </div>\n    </section>\n  )\n}\n\nexport default Hero","/**\n * 날짜 관련 유틸리티 함수들\n */\n\n/**\n * 날짜 문자열을 한국어 형식으로 포맷팅\n * @param dateString - 포맷팅할 날짜 문자열\n * @returns 한국어 형식의 날짜 문자열 (예: \"2024. 1. 15.\")\n */\nexport const formatDate = (dateString: string): string => {\n  try {\n    const date = new Date(dateString)\n    return date.toLocaleDateString('ko-KR')\n  } catch (error) {\n    console.error('날짜 포맷팅 오류:', error)\n    return '날짜 정보 없음'\n  }\n}\n\n/**\n * 날짜 문자열을 상대적 시간으로 포맷팅 (예: \"3분 전\", \"2시간 전\", \"3일 전\")\n * @param dateString - 포맷팅할 날짜 문자열\n * @returns 상대적 시간 문자열\n */\nexport const formatRelativeDate = (dateString: string): string => {\n  try {\n    const date = new Date(dateString)\n    const now = new Date()\n    const diffInMs = now.getTime() - date.getTime()\n    \n    // 음수인 경우 미래 날짜 (방금 전으로 처리)\n    if (diffInMs < 0) return '방금 전'\n    \n    // 분 단위 계산\n    const diffInMinutes = Math.floor(diffInMs / (1000 * 60))\n    if (diffInMinutes < 1) return '방금 전'\n    if (diffInMinutes < 60) return `${diffInMinutes}분 전`\n    \n    // 시간 단위 계산\n    const diffInHours = Math.floor(diffInMs / (1000 * 60 * 60))\n    if (diffInHours < 24) return `${diffInHours}시간 전`\n    \n    // 일 단위 계산\n    const diffInDays = Math.floor(diffInMs / (1000 * 60 * 60 * 24))\n    if (diffInDays === 1) return '어제'\n    if (diffInDays < 7) return `${diffInDays}일 전`\n    \n    // 주 단위 계산\n    const diffInWeeks = Math.floor(diffInDays / 7)\n    if (diffInWeeks < 4) return `${diffInWeeks}주 전`\n    \n    // 월 단위 계산 (30일 기준)\n    const diffInMonths = Math.floor(diffInDays / 30)\n    if (diffInMonths < 12) return `${diffInMonths}개월 전`\n    \n    // 년 단위 계산\n    const diffInYears = Math.floor(diffInDays / 365)\n    return `${diffInYears}년 전`\n  } catch (error) {\n    console.error('상대적 날짜 포맷팅 오류:', error)\n    return '날짜 정보 없음'\n  }\n}\n\n/**\n * 모던한 Intl.RelativeTimeFormat API를 사용한 상대적 시간 포맷팅\n * @param dateString - 포맷팅할 날짜 문자열\n * @param locale - 로케일 (기본값: 'ko-KR')\n * @returns 상대적 시간 문자열\n */\nexport const formatRelativeDateModern = (dateString: string, locale: string = 'ko-KR'): string => {\n  try {\n    const date = new Date(dateString)\n    const now = new Date()\n    const diffInSeconds = (now.getTime() - date.getTime()) / 1000\n    \n    // 음수인 경우 미래 날짜\n    if (diffInSeconds < 0) return '방금 전'\n    \n    const formatter = new Intl.RelativeTimeFormat(locale, { numeric: 'auto' })\n    \n    // 초 단위\n    if (diffInSeconds < 60) {\n      return '방금 전'\n    }\n    \n    // 분 단위\n    if (diffInSeconds < 3600) {\n      return formatter.format(Math.floor(-diffInSeconds / 60), 'minute')\n    }\n    \n    // 시간 단위\n    if (diffInSeconds < 86400) {\n      return formatter.format(Math.floor(-diffInSeconds / 3600), 'hour')\n    }\n    \n    // 일 단위\n    if (diffInSeconds < 2592000) { // 30일 미만\n      return formatter.format(Math.floor(-diffInSeconds / 86400), 'day')\n    }\n    \n    // 월 단위\n    if (diffInSeconds < 31536000) { // 365일 미만\n      return formatter.format(Math.floor(-diffInSeconds / 2592000), 'month')\n    }\n    \n    // 년 단위\n    return formatter.format(Math.floor(-diffInSeconds / 31536000), 'year')\n  } catch (error) {\n    console.error('모던 상대적 날짜 포맷팅 오류:', error)\n    return '날짜 정보 없음'\n  }\n}\n\n/**\n * 날짜가 유효한지 확인\n * @param dateString - 확인할 날짜 문자열\n * @returns 유효한 날짜인지 여부\n */\nexport const isValidDate = (dateString: string): boolean => {\n  try {\n    const date = new Date(dateString)\n    return !isNaN(date.getTime())\n  } catch {\n    return false\n  }\n}\n\n/**\n * 두 날짜 사이의 차이를 계산\n * @param startDate - 시작 날짜 문자열\n * @param endDate - 종료 날짜 문자열 (기본값: 현재 시간)\n * @returns 차이 정보 객체\n */\nexport const getDateDifference = (\n  startDate: string, \n  endDate: string = new Date().toISOString()\n): {\n  days: number\n  hours: number\n  minutes: number\n  totalMs: number\n} => {\n  try {\n    const start = new Date(startDate)\n    const end = new Date(endDate)\n    const diffInMs = Math.abs(end.getTime() - start.getTime())\n    \n    const days = Math.floor(diffInMs / (1000 * 60 * 60 * 24))\n    const hours = Math.floor((diffInMs % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n    const minutes = Math.floor((diffInMs % (1000 * 60 * 60)) / (1000 * 60))\n    \n    return {\n      days,\n      hours,\n      minutes,\n      totalMs: diffInMs\n    }\n  } catch (error) {\n    console.error('날짜 차이 계산 오류:', error)\n    return {\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      totalMs: 0\n    }\n  }\n}\n\n/**\n * 날짜를 다양한 형식으로 포맷팅\n * @param dateString - 포맷팅할 날짜 문자열\n * @param format - 포맷 타입 ('short', 'long', 'time', 'datetime')\n * @returns 포맷팅된 날짜 문자열\n */\nexport const formatDateByType = (\n  dateString: string, \n  format: 'short' | 'long' | 'time' | 'datetime' = 'short'\n): string => {\n  try {\n    const date = new Date(dateString)\n    \n    switch (format) {\n      case 'short':\n        return date.toLocaleDateString('ko-KR', {\n          year: 'numeric',\n          month: 'numeric',\n          day: 'numeric'\n        })\n      case 'long':\n        return date.toLocaleDateString('ko-KR', {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric',\n          weekday: 'long'\n        })\n      case 'time':\n        return date.toLocaleTimeString('ko-KR', {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      case 'datetime':\n        return date.toLocaleString('ko-KR', {\n          year: 'numeric',\n          month: 'numeric',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      default:\n        return date.toLocaleDateString('ko-KR')\n    }\n  } catch (error) {\n    console.error('날짜 타입별 포맷팅 오류:', error)\n    return '날짜 정보 없음'\n  }\n}\n\n/**\n * 날짜가 오늘인지 확인\n * @param dateString - 확인할 날짜 문자열\n * @returns 오늘인지 여부\n */\nexport const isToday = (dateString: string): boolean => {\n  try {\n    const date = new Date(dateString)\n    const today = new Date()\n    \n    return date.getDate() === today.getDate() &&\n           date.getMonth() === today.getMonth() &&\n           date.getFullYear() === today.getFullYear()\n  } catch {\n    return false\n  }\n}\n\n/**\n * 날짜가 최근 N일 이내인지 확인\n * @param dateString - 확인할 날짜 문자열\n * @param days - 기준 일수 (기본값: 7)\n * @returns 최근 N일 이내인지 여부\n */\nexport const isRecent = (dateString: string, days: number = 7): boolean => {\n  try {\n    const date = new Date(dateString)\n    const now = new Date()\n    const diffInMs = now.getTime() - date.getTime()\n    const diffInDays = Math.floor(diffInMs / (1000 * 60 * 60 * 24))\n    \n    return diffInDays <= days && diffInDays >= 0\n  } catch {\n    return false\n  }\n}\n","import React, { useState } from 'react'\nimport { FaBook, FaImage } from 'react-icons/fa'\n\ninterface BookCoverImageProps {\n  src?: string\n  alt: string\n  className?: string\n  fallbackIcon?: React.ReactNode\n}\n\n/**\n * 책 커버 이미지 컴포넌트\n * - 지연 로딩 지원\n * - 로딩 상태 표시\n * - 오류 시 대체 아이콘 표시\n */\nconst BookCoverImage: React.FC<BookCoverImageProps> = ({\n  src,\n  alt,\n  className = \"w-full h-64 object-cover group-hover:scale-105 transition-transform duration-300\",\n  fallbackIcon\n}) => {\n  const [imageState, setImageState] = useState<'loading' | 'loaded' | 'error'>('loading')\n  const [imageSrc, setImageSrc] = useState(src)\n\n  const handleImageLoad = () => {\n    setImageState('loaded')\n  }\n\n  const handleImageError = () => {\n    setImageState('error')\n    setImageSrc(undefined)\n  }\n\n  // 이미지가 없거나 오류가 발생한 경우 대체 아이콘 표시\n  if (!imageSrc || imageState === 'error') {\n    return (\n      <div className=\"w-full h-64 bg-gradient-to-br from-primary-400 to-primary-600 flex items-center justify-center\">\n        {fallbackIcon || <FaBook className=\"text-white text-6xl\" />}\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"relative overflow-hidden\">\n      {/* 로딩 상태 스켈레톤 */}\n      {imageState === 'loading' && (\n        <div className=\"absolute inset-0 bg-gray-200 dark:bg-gray-700 animate-pulse flex items-center justify-center\">\n          <FaImage className=\"text-gray-400 text-4xl\" />\n        </div>\n      )}\n      \n      {/* 실제 이미지 */}\n      <img\n        src={imageSrc}\n        alt={alt}\n        className={`${className} ${imageState === 'loading' ? 'opacity-0' : 'opacity-100'} transition-opacity duration-300`}\n        loading=\"lazy\"\n        decoding=\"async\"\n        width=\"400\"\n        height=\"256\"\n        onLoad={handleImageLoad}\n        onError={handleImageError}\n      />\n    </div>\n  )\n}\n\nexport default BookCoverImage\n","import React, { useState, useEffect } from 'react'\nimport { FaArrowUp } from 'react-icons/fa'\nimport { motion, AnimatePresence } from 'framer-motion'\n\nconst ScrollToTopButton: React.FC = () => {\n  const [isVisible, setIsVisible] = useState(false)\n\n  // 스크롤 위치에 따라 버튼 표시/숨김\n  useEffect(() => {\n    const toggleVisibility = () => {\n      // 300px 이상 스크롤하면 버튼 표시\n      if (window.scrollY > 300) {\n        setIsVisible(true)\n      } else {\n        setIsVisible(false)\n      }\n    }\n\n    window.addEventListener('scroll', toggleVisibility)\n\n    return () => {\n      window.removeEventListener('scroll', toggleVisibility)\n    }\n  }, [])\n\n  // 최상단으로 스크롤\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    })\n  }\n\n  return (\n    <AnimatePresence>\n      {isVisible && (\n        <motion.button\n          initial={{ opacity: 0, scale: 0.8 }}\n          animate={{ opacity: 1, scale: 1 }}\n          exit={{ opacity: 0, scale: 0.8 }}\n          transition={{ duration: 0.2 }}\n          onClick={scrollToTop}\n          className=\"fixed bottom-8 right-8 z-50 p-4 bg-primary-600 hover:bg-primary-700 text-white rounded-full shadow-lg hover:shadow-xl transition-all duration-300 group\"\n          aria-label=\"맨 위로 스크롤\"\n          title=\"맨 위로\"\n        >\n          <FaArrowUp className=\"text-xl group-hover:transform group-hover:-translate-y-1 transition-transform\" />\n        </motion.button>\n      )}\n    </AnimatePresence>\n  )\n}\n\nexport default ScrollToTopButton\n\n","/**\n * 텍스트 포맷팅 및 마크다운 관련 유틸리티 함수들\n */\nimport React from 'react'\n\n/**\n * 마크다운 스타일 텍스트를 HTML로 변환 (정밀한 버전)\n * @param text - 마크다운 스타일의 텍스트\n * @returns HTML 문자열\n */\nexport const parseMarkdown = (text: string): string => {\n  if (!text) return ''\n  \n  return text\n    // 코드 블록: ```code``` (먼저 처리하여 다른 마크다운과 충돌 방지)\n    .replace(/```([\\s\\S]*?)```/g, '<pre class=\"bg-gray-100 dark:bg-gray-800 p-4 rounded-lg overflow-x-auto my-4\"><code class=\"text-sm font-mono\">$1</code></pre>')\n    \n    // 인라인 코드: `code` (코드 블록 처리 후)\n    .replace(/`([^`]+)`/g, '<code class=\"bg-gray-100 dark:bg-gray-800 px-1 py-0.5 rounded text-sm font-mono\">$1</code>')\n    \n    // 볼드체: **text** 또는 __text__ (이탤릭체보다 먼저 처리)\n    .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n    .replace(/__(.*?)__/g, '<strong>$1</strong>')\n    \n    // 이탤릭체: *text* 또는 _text_ (볼드체 처리 후, 경계 명확화)\n    .replace(/(^|[^*])\\*([^*\\s][^*]*[^*\\s]|[^*\\s])\\*([^*]|$)/g, '$1<em>$2</em>$3')\n    .replace(/(^|[^_])\\_([^_\\s][^_]*[^_\\s]|[^_\\s])\\_([^_]|$)/g, '$1<em>$2</em>$3')\n    \n    // 링크: [text](url)\n    .replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<a href=\"$2\" class=\"text-primary-600 hover:text-primary-700 underline\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>')\n    \n    // 헤더: # ## ###\n    .replace(/^### (.*$)/gm, '<h3 class=\"text-lg font-semibold text-gray-900 dark:text-white mt-4 mb-2\">$1</h3>')\n    .replace(/^## (.*$)/gm, '<h2 class=\"text-xl font-semibold text-gray-900 dark:text-white mt-4 mb-2\">$1</h2>')\n    .replace(/^# (.*$)/gm, '<h1 class=\"text-2xl font-bold text-gray-900 dark:text-white mt-4 mb-2\">$1</h1>')\n    \n    // 목록: - item 또는 * item\n    .replace(/^[\\s]*[-*] (.*$)/gm, '<li class=\"ml-4\">$1</li>')\n    .replace(/(<li class=\"ml-4\">.*<\\/li>)/s, '<ul class=\"list-disc list-inside my-2\">$1</ul>')\n    \n    // 블록 인용: > quote\n    .replace(/^> (.*$)/gm, '<blockquote class=\"border-l-4 border-primary-500 pl-4 italic text-gray-600 dark:text-gray-400 my-2\">$1</blockquote>')\n    \n    // 수평선: ---\n    .replace(/^---$/gm, '<hr class=\"border-gray-300 dark:border-gray-600 my-4\">')\n    \n    // 줄바꿈을 <br>로 변환 (마지막에 처리)\n    .replace(/\\n/g, '<br>')\n}\n\n/**\n * 텍스트를 안전하게 HTML로 렌더링하기 위한 함수\n * @param text - 변환할 텍스트\n * @returns JSX 요소\n */\nexport const renderFormattedText = (text: string): React.ReactElement => {\n  const htmlContent = parseMarkdown(text)\n  \n  return React.createElement('div', {\n    className: \"text-gray-600 dark:text-gray-300 leading-relaxed\",\n    dangerouslySetInnerHTML: { __html: htmlContent }\n  })\n}\n\n/**\n * 텍스트 길이에 따라 요약본 생성\n * @param text - 원본 텍스트\n * @param maxLength - 최대 길이\n * @returns 요약된 텍스트\n */\nexport const truncateText = (text: string, maxLength: number = 100): string => {\n  if (!text) return ''\n  if (text.length <= maxLength) return text\n  \n  return text.substring(0, maxLength).trim() + '...'\n}\n\n/**\n * 텍스트에서 해시태그 추출\n * @param text - 검색할 텍스트\n * @returns 해시태그 배열\n */\nexport const extractHashtags = (text: string): string[] => {\n  if (!text) return []\n  \n  const hashtagRegex = /#[\\w가-힣]+/g\n  const matches = text.match(hashtagRegex)\n  \n  return matches ? matches.map(tag => tag.substring(1)) : []\n}\n\n/**\n * 텍스트에서 멘션(@username) 추출\n * @param text - 검색할 텍스트\n * @returns 멘션 배열\n */\nexport const extractMentions = (text: string): string[] => {\n  if (!text) return []\n  \n  const mentionRegex = /@[\\w가-힣]+/g\n  const matches = text.match(mentionRegex)\n  \n  return matches ? matches.map(mention => mention.substring(1)) : []\n}\n\n/**\n * 텍스트를 읽기 시간으로 변환 (분 단위)\n * @param text - 텍스트\n * @param wordsPerMinute - 분당 읽는 단어 수 (기본값: 200)\n * @returns 읽기 시간 (분)\n */\nexport const calculateReadingTime = (text: string, wordsPerMinute: number = 200): number => {\n  if (!text) return 0\n  \n  const words = text.trim().split(/\\s+/).length\n  const minutes = Math.ceil(words / wordsPerMinute)\n  \n  return Math.max(1, minutes) // 최소 1분\n}\n\n/**\n * 읽기 시간을 포맷팅하여 표시 문자열로 변환\n * @param minutes - 읽기 시간 (분)\n * @returns 표시 문자열 (예: \"5분 읽기\")\n */\nexport const formatReadingTime = (minutes: number): string => {\n  if (minutes === 0) return '읽기 시간 없음'\n  if (minutes === 1) return '1분 읽기'\n  return `${minutes}분 읽기`\n}\n\n/**\n * 텍스트에서 읽기 시간을 계산하고 포맷팅\n * @param text - 텍스트\n * @param wordsPerMinute - 분당 읽는 단어 수 (기본값: 200)\n * @returns 포맷팅된 읽기 시간 문자열\n */\nexport const getFormattedReadingTime = (text: string, wordsPerMinute: number = 200): string => {\n  const minutes = calculateReadingTime(text, wordsPerMinute)\n  return formatReadingTime(minutes)\n}\n\n/**\n * 텍스트에서 단어 수를 계산\n * @param text - 텍스트\n * @returns 단어 수\n */\nexport const getWordCount = (text: string): number => {\n  if (!text) return 0\n  return text.trim().split(/\\s+/).length\n}\n\n/**\n * 텍스트에서 문자 수를 계산 (공백 포함/제외)\n * @param text - 텍스트\n * @param includeSpaces - 공백 포함 여부 (기본값: true)\n * @returns 문자 수\n */\nexport const getCharacterCount = (text: string, includeSpaces: boolean = true): number => {\n  if (!text) return 0\n  return includeSpaces ? text.length : text.replace(/\\s/g, '').length\n}\n\n/**\n * 텍스트에서 문장 수를 계산\n * @param text - 텍스트\n * @returns 문장 수\n */\nexport const getSentenceCount = (text: string): number => {\n  if (!text) return 0\n  const sentences = text.split(/[.!?]+/).filter(sentence => sentence.trim().length > 0)\n  return sentences.length\n}\n\n/**\n * 텍스트의 가독성 점수를 계산 (간단한 버전)\n * @param text - 텍스트\n * @returns 가독성 점수 (0-100, 높을수록 읽기 쉬움)\n */\nexport const calculateReadabilityScore = (text: string): number => {\n  if (!text) return 0\n  \n  const words = getWordCount(text)\n  const sentences = getSentenceCount(text)\n  const characters = getCharacterCount(text, false)\n  \n  if (words === 0 || sentences === 0) return 0\n  \n  // 간단한 가독성 공식 (Flesch Reading Ease 기반)\n  const avgWordsPerSentence = words / sentences\n  const avgSyllablesPerWord = characters / words * 0.5 // 근사치\n  \n  const score = 206.835 - (1.015 * avgWordsPerSentence) - (84.6 * avgSyllablesPerWord)\n  \n  return Math.max(0, Math.min(100, Math.round(score)))\n}\n\n/**\n * 텍스트를 안전하게 HTML 이스케이프 처리\n * @param text - 이스케이프할 텍스트\n * @returns 이스케이프된 HTML 문자열\n */\nexport const escapeHtml = (text: string | any): string => {\n  if (!text) return ''\n  \n  // 문자열이 아니면 문자열로 변환\n  const textStr = typeof text === 'string' ? text : String(text)\n  \n  return textStr\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;')\n}\n\n/**\n * 텍스트에서 URL을 자동으로 링크로 변환\n * @param text - 텍스트\n * @returns URL이 링크로 변환된 텍스트\n */\nexport const autoLinkUrls = (text: string): string => {\n  if (!text) return ''\n  \n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g\n  return text.replace(urlRegex, '<a href=\"$1\" class=\"text-primary-600 hover:text-primary-700 underline\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>')\n}\n\n/**\n * 텍스트에서 이메일 주소를 자동으로 링크로 변환\n * @param text - 텍스트\n * @returns 이메일이 링크로 변환된 텍스트\n */\nexport const autoLinkEmails = (text: string): string => {\n  if (!text) return ''\n  \n  const emailRegex = /([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,})/g\n  return text.replace(emailRegex, '<a href=\"mailto:$1\" class=\"text-primary-600 hover:text-primary-700 underline\">$1</a>')\n}\n\n/**\n * 텍스트를 완전히 포맷팅 (마크다운 + 자동 링크)\n * @param text - 포맷팅할 텍스트\n * @returns 완전히 포맷팅된 HTML 문자열\n */\nexport const formatTextCompletely = (text: string): string => {\n  if (!text) return ''\n  \n  // 마크다운 파싱\n  let formatted = parseMarkdown(text)\n  // 자동 URL 링크\n  formatted = autoLinkUrls(formatted)\n  // 자동 이메일 링크\n  formatted = autoLinkEmails(formatted)\n  \n  return formatted\n}\n\n/**\n * Editor.js OutputData를 HTML로 렌더링\n * @param data - OutputData 또는 JSON 문자열\n * @returns HTML 문자열\n */\nexport const renderEditorJSData = (data: string | any): string => {\n  if (!data) return ''\n  \n  let outputData: any\n  if (typeof data === 'string') {\n    try {\n      outputData = JSON.parse(data)\n    } catch {\n      // 파싱 실패 시 빈 문자열 반환\n      return ''\n    }\n  } else {\n    outputData = data\n  }\n  \n  if (!outputData.blocks || !Array.isArray(outputData.blocks)) {\n    return ''\n  }\n  \n  let html = ''\n  for (const block of outputData.blocks) {\n    switch (block.type) {\n      case 'paragraph':\n        const paragraphText = block.data?.text || ''\n        // <br> 태그를 실제 줄바꿈으로 변환\n        const processedText = paragraphText.replace(/<br\\s*\\/?>/gi, '\\n')\n        // 줄바꿈을 <br>로 변환\n        const finalText = processedText.split('\\n').map(line => escapeHtml(line)).join('<br>')\n        html += `<p class=\"mb-4\">${finalText}</p>`\n        break\n      case 'header':\n        const level = block.data?.level || 2\n        let headerText = block.data?.text || ''\n        // <br> 태그를 실제 줄바꿈으로 변환\n        headerText = headerText.replace(/<br\\s*\\/?>/gi, '\\n')\n        // 줄바꿈을 <br>로 변환\n        const finalHeaderText = headerText.split('\\n').map(line => escapeHtml(line)).join('<br>')\n        html += `<h${level} class=\"font-bold text-gray-900 dark:text-white mb-2 mt-4\">${finalHeaderText}</h${level}>`\n        break\n      case 'list':\n        const items = block.data?.items || []\n        const listClass = block.data?.style === 'ordered' ? 'list-decimal' : 'list-disc'\n        html += `<ul class=\"${listClass} ml-6 mb-4\">`\n        for (const item of items) {\n          // Editor.js list format 확인\n          let itemText: string\n          if (typeof item === 'string') {\n            itemText = item\n          } else if (typeof item === 'object' && item !== null) {\n            // 다양한 객체 형태 체크\n            if ((item as any).text) {\n              itemText = (item as any).text\n            } else if ((item as any).content) {\n              itemText = (item as any).content\n            } else if (Array.isArray(item)) {\n              itemText = item.join(', ')\n            } else {\n              itemText = JSON.stringify(item)\n            }\n          } else {\n            itemText = String(item)\n          }\n          // <br> 태그를 실제 줄바꿈으로 변환\n          itemText = itemText.replace(/<br\\s*\\/?>/gi, '\\n')\n          // 줄바꿈을 <br>로 변환\n          itemText = itemText.split('\\n').map(line => escapeHtml(line)).join('<br>')\n          html += `<li class=\"mb-2\">${itemText}</li>`\n        }\n        html += `</ul>`\n        break\n      case 'code':\n        html += `<pre class=\"bg-gray-100 dark:bg-gray-800 p-4 rounded-lg overflow-x-auto my-4\"><code class=\"text-sm font-mono\">${escapeHtml(block.data?.code || '')}</code></pre>`\n        break\n      case 'toggle':\n        const toggleTitle = escapeHtml(block.data?.title || '제목 없음')\n        let toggleContent = block.data?.content || ''\n        \n        // editorjs-toggle-block의 content는 블록 배열로 저장됨\n        if (Array.isArray(toggleContent) && toggleContent.length > 0) {\n          // toggle 내부의 블록들을 렌더링\n          const toggleOutputData = { blocks: toggleContent }\n          toggleContent = renderEditorJSData(toggleOutputData)\n        } else if (typeof toggleContent === 'string') {\n          // 문자열인 경우도 처리\n          toggleContent = toggleContent.replace(/<br\\s*\\/?>/gi, '\\n')\n          toggleContent = toggleContent.split('\\n').map(line => escapeHtml(line)).join('<br>')\n        } else if (typeof toggleContent === 'object' && toggleContent !== null && toggleContent.blocks) {\n          // block.data.content가 이미 OutputData 형태인 경우\n          toggleContent = renderEditorJSData(toggleContent)\n        } else {\n          toggleContent = ''\n        }\n        \n        // toggle block의 content는 이미 HTML로 저장되어 있으므로 그대로 사용\n        // toggle data에 isCollapsed가 있으면 closed 상태로 시작\n        const isCollapsed = block.data?.isCollapsed === true\n        const openAttr = isCollapsed ? '' : ' open'\n        html += `<details${openAttr} class=\"my-4 border border-gray-300 dark:border-gray-600 rounded-lg\">\n          <summary class=\"px-4 py-2 cursor-pointer font-semibold text-gray-900 dark:text-white bg-gray-50 dark:bg-gray-800 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\">\n            <span class=\"flex items-center gap-2\">${toggleTitle}</span>\n          </summary>\n          <div class=\"px-4 py-3 prose dark:prose-invert max-w-none text-gray-700 dark:text-gray-300\">\n            ${toggleContent}\n          </div>\n        </details>`\n        break\n      case 'image':\n        const url = block.data?.file?.url || block.data?.url || ''\n        const caption = block.data?.caption || ''\n        html += `<div class=\"my-4\">\n          <img src=\"${url}\" alt=\"${escapeHtml(caption)}\" class=\"max-w-full rounded-lg\" />\n          ${caption ? `<p class=\"text-sm text-gray-600 dark:text-gray-400 mt-2\">${escapeHtml(caption)}</p>` : ''}\n        </div>`\n        break\n      default:\n        // 알 수 없는 블록 타입은 무시\n        break\n    }\n  }\n  \n  return html\n}\n\n/**\n * Lexical EditorState를 HTML로 렌더링\n * @param data - Lexical의 SerializedEditorState 또는 JSON 문자열\n * @returns HTML 문자열\n */\nexport const renderLexicalData = (data: string | any): string => {\n  if (!data) return ''\n  \n  let lexicalData: any\n  if (typeof data === 'string') {\n    try {\n      lexicalData = JSON.parse(data)\n    } catch {\n      return ''\n    }\n  } else {\n    lexicalData = data\n  }\n  \n  if (!lexicalData?.root || !Array.isArray(lexicalData.root.children)) {\n    return ''\n  }\n  \n  let html = ''\n  \n  const renderNode = (node: any): string => {\n    switch (node.type) {\n      case 'paragraph':\n        const text = node.children?.map((child: any) => {\n          if (child.type === 'text') {\n            let textContent = child.text || ''\n            // <br> 태그를 실제 줄바꿈으로 변환\n            textContent = textContent.replace(/<br\\s*\\/?>/gi, '\\n')\n            // 줄바꿈을 <br>로 변환\n            return textContent.split('\\n').map(line => escapeHtml(line)).join('<br>')\n          }\n          if (child.type === 'link') {\n            const href = child.url || ''\n            const content = child.children?.map((c: any) => c.text).join('') || ''\n            return `<a href=\"${escapeHtml(href)}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"text-blue-600 hover:underline\">${escapeHtml(content)}</a>`\n          }\n          return ''\n        }).join('') || ''\n        return `<p class=\"mb-4\">${text}</p>`\n        \n      case 'heading':\n        const level = node.tag || 'h2'\n        const headingText = node.children?.map((child: any) => {\n          if (child.type === 'text') {\n            let textContent = child.text || ''\n            textContent = textContent.replace(/<br\\s*\\/?>/gi, '\\n')\n            return textContent.split('\\n').map(line => escapeHtml(line)).join('<br>')\n          }\n          return ''\n        }).join('') || ''\n        return `<h${level.slice(1)} class=\"font-bold text-gray-900 dark:text-white mb-2 mt-4\">${headingText}</h${level.slice(1)}>`\n        \n      case 'list':\n        const listType = node.listType === 'number' ? 'ol' : 'ul'\n        const items = node.children || []\n        let listHtml = `<${listType} class=\"${listType === 'ol' ? 'list-decimal' : 'list-disc'} ml-6 mb-4\">`\n        for (const item of items) {\n          const itemText = item.children?.map((child: any) => {\n            if (child.type === 'text') {\n              let textContent = child.text || ''\n              textContent = textContent.replace(/<br\\s*\\/?>/gi, '\\n')\n              return textContent.split('\\n').map(line => escapeHtml(line)).join('<br>')\n            }\n            return ''\n          }).join('') || ''\n          listHtml += `<li class=\"mb-2\">${itemText}</li>`\n        }\n        listHtml += `</${listType}>`\n        return listHtml\n        \n      case 'quote':\n        const quoteText = node.children?.map((child: any) => {\n          if (child.type === 'text') {\n            let textContent = child.text || ''\n            textContent = textContent.replace(/<br\\s*\\/?>/gi, '\\n')\n            return textContent.split('\\n').map(line => escapeHtml(line)).join('<br>')\n          }\n          return ''\n        }).join('') || ''\n        return `<blockquote class=\"border-l-4 border-gray-300 dark:border-gray-600 pl-4 italic my-4 text-gray-700 dark:text-gray-300\">${quoteText}</blockquote>`\n        \n      case 'code':\n        const codeText = node.text || ''\n        return `<pre class=\"bg-gray-100 dark:bg-gray-800 p-4 rounded-lg overflow-x-auto my-4\"><code class=\"text-sm font-mono\">${escapeHtml(codeText)}</code></pre>`\n        \n      case 'collapsible':\n        const title = node.title || '제목 없음'\n        const isOpen = node.open || false\n        const content = node.children?.map(renderNode).join('') || ''\n        const openAttr = isOpen ? ' open' : ''\n        return `<details${openAttr} class=\"my-4 border border-gray-300 dark:border-gray-600 rounded-lg\">\n          <summary class=\"px-4 py-2 cursor-pointer font-semibold text-gray-900 dark:text-white bg-gray-50 dark:bg-gray-800 hover:bg-gray-100 dark:hover:bg-gray-700\">\n            ${escapeHtml(title)}\n          </summary>\n          <div class=\"px-4 py-3 prose dark:prose-invert max-w-none text-gray-700 dark:text-gray-300\">\n            ${content}\n          </div>\n        </details>`\n        \n      case 'image':\n        const src = node.src || ''\n        const alt = node.altText || ''\n        return `<div class=\"my-4\">\n          <img src=\"${escapeHtml(src)}\" alt=\"${escapeHtml(alt)}\" class=\"max-w-full rounded-lg\" />\n        </div>`\n        \n      default:\n        return ''\n    }\n  }\n  \n  for (const child of lexicalData.root.children) {\n    html += renderNode(child)\n  }\n  \n  return html\n}\n\n/**\n * 데이터가 Lexical 형식인지 확인\n */\nexport const isLexicalData = (data: any): boolean => {\n  return data?.root && Array.isArray(data?.root?.children)\n}\n","import React, { useState, useRef } from 'react'\nimport { FaBold, FaItalic, FaUnderline, FaListUl, FaListOl, FaIndent, FaOutdent, FaChevronDown } from 'react-icons/fa'\nimport { MdCode } from 'react-icons/md' // 코드 블록 아이콘 추가\n\ninterface RichTextEditorProps {\n  value: string\n  onChange: (value: string) => void\n  placeholder?: string\n  rows?: number\n  className?: string\n}\n\nconst RichTextEditor: React.FC<RichTextEditorProps> = ({\n  value,\n  onChange,\n  placeholder = \"내용을 입력하세요\",\n  rows = 8,\n  className = \"\"\n}) => {\n  const textareaRef = useRef<HTMLTextAreaElement>(null)\n  const [cursorPosition, setCursorPosition] = useState(0)\n\n  // 커서 위치 업데이트\n  const updateCursorPosition = () => {\n    if (textareaRef.current) {\n      setCursorPosition(textareaRef.current.selectionStart)\n    }\n  }\n\n  // 현재 줄의 텍스트와 시작 위치 가져오기 (커서 조정 오류 수정)\n  const getCurrentLine = () => {\n    const lines = value.split('\\n')\n    let currentLineIndex = 0\n    let lineStart = 0 // 현재 줄의 시작 위치\n\n    for (let i = 0; i < lines.length; i++) {\n      const lineLengthWithNewline = (lines[i]?.length || 0) + 1 // 줄 길이 + \\n (마지막 줄은 \\n이 없으므로 주의)\n      \n      // 커서 위치가 현재 줄 범위 내에 있거나, 마지막 줄인 경우\n      if (cursorPosition >= lineStart && (cursorPosition < lineStart + lineLengthWithNewline || i === lines.length - 1)) {\n        currentLineIndex = i\n        break\n      }\n      \n      lineStart += lineLengthWithNewline\n    }\n    \n    return {\n      lineIndex: currentLineIndex,\n      line: lines[currentLineIndex] || '',\n      lines: lines,\n      lineStart: lineStart, // 현재 줄의 절대 시작 위치\n    }\n  }\n\n  // 텍스트 삽입 함수 제거됨 - applyTextStyle 사용\n\n  // 줄 바꿈과 함께 텍스트 삽입 함수 제거됨 - 사용하지 않음\n\n  // 제목 스타일 적용\n  const applyHeading = (level: number) => {\n    const { lineIndex, line, lines } = getCurrentLine()\n    const prefix = '#'.repeat(level) + ' '\n    \n    // 이미 제목인 경우 제목 레벨 변경\n    if (line.match(/^#+\\s/)) {\n      lines[lineIndex] = prefix + line.replace(/^#+\\s/, '')\n    } else {\n      lines[lineIndex] = prefix + line\n    }\n    \n    onChange(lines.join('\\n'))\n  }\n\n  // 리스트 스타일 적용\n  const applyListStyle = (type: 'bullet' | 'number') => {\n    const { lineIndex, line, lines } = getCurrentLine()\n    \n    // 이미 리스트인 경우 리스트 해제\n    if (line?.match(/^[\\s]*[-*+]\\s/) || line?.match(/^[\\s]*\\d+\\.\\s/)) {\n      lines[lineIndex] = line?.replace(/^[\\s]*[-*+\\d\\.]\\s/, '').trim() || ''\n    } else {\n      // 새로운 리스트 항목 추가\n      const indent = line?.match(/^[\\s]*/)?.[0] || ''\n      const prefix = type === 'bullet' ? '- ' : '1. '\n      lines[lineIndex] = indent + prefix + (line?.trim() || '')\n    }\n    \n    onChange(lines.join('\\n'))\n  }\n\n  // 들여쓰기/내어쓰기\n  const adjustIndent = (direction: 'in' | 'out') => {\n    const { lineIndex, lines } = getCurrentLine()\n    const line = lines[lineIndex] || ''\n    \n    if (direction === 'in') {\n      lines[lineIndex] = '  ' + line\n    } else {\n      lines[lineIndex] = line.replace(/^[\\s]{0,2}/, '')\n    }\n    \n    onChange(lines.join('\\n'))\n  }\n\n  // 토글 블록 생성\n  const insertToggle = () => {\n    const { lineIndex, lines, lineStart } = getCurrentLine()\n    const newLine = '▶ 토글 제목'\n    lines.splice(lineIndex + 1, 0, newLine, '  토글 내용을 입력하세요') // 공백 2개 들여쓰기\n    onChange(lines.join('\\n'))\n    \n    // 커서를 토글 내용 (두 번째 삽입된 줄)으로 이동\n    setTimeout(() => {\n      if (textareaRef.current) {\n        // 커서 위치: 현재 줄 시작 위치 + 현재 줄 길이 + \\n + 첫 번째 삽입된 줄 길이 + \\n + 2 (들여쓰기)\n        const newPosition = lineStart + (lines[lineIndex]?.length || 0) + 1 + newLine.length + 1 + 2\n        textareaRef.current.setSelectionRange(newPosition, newPosition)\n        textareaRef.current.focus()\n      }\n    }, 0)\n  }\n\n  // === 새로 추가된 코드 블록 삽입 함수 ===\n  const insertCodeBlock = () => {\n    const { lineIndex, lines, lineStart } = getCurrentLine()\n    \n    const codeBlockLines = [\n      '```javascript', // 기본 언어\n      '// 여기에 코드를 작성하세요',\n      '```',\n    ]\n\n    // 현재 줄의 바로 아래에 세 줄을 삽입\n    lines.splice(lineIndex + 1, 0, ...codeBlockLines)\n    const newValue = lines.join('\\n')\n    onChange(newValue)\n    \n    // 커서를 코드 블록의 내용 줄로 이동\n    setTimeout(() => {\n      if (textareaRef.current) {\n        // 커서 위치: (현재 줄의 끝) + (첫 번째 백틱 줄 길이 + \\n) + (내용 줄 시작)\n        const positionToMove = \n          lineStart + (lines[lineIndex]?.length || 0) + 1  // 현재 줄 끝 + \\n\n          + (codeBlockLines[0]?.length || 0) + 1          // 첫 번째 백틱 줄 + \\n\n          + 2                                     // '//' 위치까지 이동\n        \n        textareaRef.current.setSelectionRange(positionToMove, positionToMove)\n        textareaRef.current.focus()\n      }\n    }, 0)\n  }\n  // ===================================\n\n  // 텍스트 스타일 적용 (간단한 마크다운)\n  const applyTextStyle = (style: 'bold' | 'italic' | 'underline') => {\n    const textarea = textareaRef.current\n    if (!textarea) return\n    \n    const start = textarea.selectionStart\n    const end = textarea.selectionEnd\n    const selectedText = value.substring(start, end)\n    \n    let wrap = ''\n    switch (style) {\n      case 'bold': wrap = '**'; break\n      case 'italic': wrap = '*'; break\n      case 'underline': wrap = '__'; break\n    }\n    \n    const wrappedText = `${wrap}${selectedText}${wrap}`\n    \n    const newValue = value.substring(0, start) + wrappedText + value.substring(end)\n    onChange(newValue)\n    \n    // 커서 위치 조정\n    setTimeout(() => {\n      // 선택된 텍스트가 없으면, 랩퍼 안에 커서를 위치시킵니다.\n      if (start === end) {\n        textarea.setSelectionRange(start + wrap.length, end + wrap.length)\n      } \n      // 선택된 텍스트가 있으면, 전체 랩퍼 뒤에 커서를 위치시킵니다.\n      else {\n        textarea.setSelectionRange(end + 2 * wrap.length, end + 2 * wrap.length)\n      }\n      textarea.focus()\n    }, 0)\n  }\n\n  // 렌더링된 텍스트 (마크다운 → HTML)\n  const renderMarkdown = (text: string) => {\n    return text\n      // 제목\n      .replace(/^### (.*$)/gim, '<h3 class=\"text-lg font-semibold mt-4 mb-2 text-gray-900 dark:text-white\">$1</h3>')\n      .replace(/^## (.*$)/gim, '<h2 class=\"text-xl font-semibold mt-4 mb-2 text-gray-900 dark:text-white\">$1</h2>')\n      .replace(/^# (.*$)/gim, '<h1 class=\"text-2xl font-bold mt-4 mb-2 text-gray-900 dark:text-white\">$1</h1>')\n      // 볼드\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong class=\"font-bold\">$1</strong>')\n      // 이탤릭\n      .replace(/\\*(.*?)\\*/g, '<em class=\"italic\">$1</em>')\n      // 밑줄\n      .replace(/__(.*?)__/g, '<u class=\"underline\">$1</u>')\n      // 인라인 코드 추가\n      .replace(/`(.*?)`/g, '<code class=\"bg-gray-200 dark:bg-gray-600 text-red-600 dark:text-red-400 px-1 rounded text-sm\">$1</code>')\n      // 토글\n      .replace(/^▶ (.*$)/gim, '<div class=\"flex items-center mt-2 mb-1\"><span class=\"mr-2\">▶</span><span class=\"font-medium text-gray-900 dark:text-white\">$1</span></div>')\n      // 불릿 리스트\n      .replace(/^[\\s]*[-*+]\\s(.*$)/gim, '<div class=\"ml-4 mb-1\"><span class=\"mr-2\">•</span>$1</div>')\n      // 숫자 리스트\n      .replace(/^[\\s]*\\d+\\.\\s(.*$)/gim, '<div class=\"ml-4 mb-1\"><span class=\"mr-2\">1.</span>$1</div>')\n      // 코드 블록\n      .replace(/```(.*?)\\n([\\s\\S]*?)\\n```/gim, (_match, p1, p2) => {\n        const lang = p1 ? `language-${p1.trim()}` : ''\n        return `<pre class=\"bg-gray-800 p-3 rounded-lg overflow-x-auto my-3\"><code class=\"${lang} text-sm text-gray-100\">${p2.trim()}</code></pre>`\n      })\n      // 줄바꿈\n      .replace(/\\n/g, '<br>')\n  }\n\n  return (\n    <div className={`border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 ${className}`}>\n      {/* 툴바 */}\n      <div className=\"flex items-center gap-1 p-2 border-b border-gray-200 dark:border-gray-600 bg-gray-50 dark:bg-gray-800 rounded-t-lg\">\n        {/* 제목 버튼들 */}\n        <div className=\"flex items-center gap-1 mr-2\">\n          <button\n            type=\"button\"\n            onClick={() => applyHeading(1)}\n            className=\"px-2 py-1 text-xs font-bold text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\n            title=\"제목 1\"\n          >\n            H1\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => applyHeading(2)}\n            className=\"px-2 py-1 text-xs font-semibold text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\n            title=\"제목 2\"\n          >\n            H2\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => applyHeading(3)}\n            className=\"px-2 py-1 text-xs font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\n            title=\"제목 3\"\n          >\n            H3\n          </button>\n        </div>\n\n        <div className=\"w-px h-4 bg-gray-300 dark:bg-gray-600\"></div>\n\n        {/* 텍스트 스타일 */}\n        <div className=\"flex items-center gap-1 mx-2\">\n          <button\n            type=\"button\"\n            onClick={() => applyTextStyle('bold')}\n            className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\n            title=\"굵게\"\n          >\n            <FaBold className=\"text-xs\" />\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => applyTextStyle('italic')}\n            className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\n            title=\"기울임\"\n          >\n            <FaItalic className=\"text-xs\" />\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => applyTextStyle('underline')}\n            className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\n            title=\"밑줄\"\n          >\n            <FaUnderline className=\"text-xs\" />\n          </button>\n        </div>\n\n        <div className=\"w-px h-4 bg-gray-300 dark:bg-gray-600\"></div>\n\n        {/* 리스트 */}\n        <div className=\"flex items-center gap-1 mx-2\">\n          <button\n            type=\"button\"\n            onClick={() => applyListStyle('bullet')}\n            className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\n            title=\"불릿 리스트\"\n          >\n            <FaListUl className=\"text-xs\" />\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => applyListStyle('number')}\n            className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\n            title=\"번호 리스트\"\n          >\n            <FaListOl className=\"text-xs\" />\n          </button>\n        </div>\n\n        <div className=\"w-px h-4 bg-gray-300 dark:bg-gray-600\"></div>\n\n        {/* 들여쓰기 */}\n        <div className=\"flex items-center gap-1 mx-2\">\n          <button\n            type=\"button\"\n            onClick={() => adjustIndent('out')}\n            className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\n            title=\"내어쓰기\"\n          >\n            <FaOutdent className=\"text-xs\" />\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => adjustIndent('in')}\n            className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\n            title=\"들여쓰기\"\n          >\n            <FaIndent className=\"text-xs\" />\n          </button>\n        </div>\n\n        <div className=\"w-px h-4 bg-gray-300 dark:bg-gray-600\"></div>\n\n        {/* 토글 및 코드 블록 */}\n        <button\n          type=\"button\"\n          onClick={insertToggle}\n          className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors mx-2\"\n          title=\"토글 블록\"\n        >\n          <FaChevronDown className=\"text-xs\" />\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={insertCodeBlock}\n          className=\"p-1 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 rounded transition-colors\"\n          title=\"코드 블록\"\n        >\n          <MdCode className=\"text-sm\" />\n        </button>\n      </div>\n\n      {/* 편집 영역 */}\n      <div className=\"relative\">\n        <textarea\n          ref={textareaRef}\n          value={value}\n          onChange={(e) => onChange(e.target.value)}\n          onSelect={updateCursorPosition}\n          onKeyUp={updateCursorPosition}\n          onMouseUp={updateCursorPosition}\n          placeholder={placeholder}\n          rows={rows}\n          className=\"w-full p-3 bg-transparent text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none resize-y\"\n        />\n        \n        {/* 미리보기 영역 (선택사항) */}\n        {value && (\n          <div className=\"absolute inset-0 pointer-events-none opacity-0\">\n            <div \n              className=\"p-3 text-gray-900 dark:text-white whitespace-pre-wrap\"\n              dangerouslySetInnerHTML={{ __html: renderMarkdown(value) }}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default RichTextEditor\n","import React, { useMemo } from 'react'\nimport { motion } from 'framer-motion'\nimport { FaEdit, FaTrash, FaTag } from 'react-icons/fa'\nimport { Link } from 'react-router-dom'\nimport { Learning, Skill } from '../../types'\nimport { formatDate, formatRelativeDate } from '../../utils/dateUtils'\nimport { parseMarkdown, getFormattedReadingTime } from '../../utils/textUtils'\nimport RichTextEditor from '../RichTextEditor'\n\n// 🌟 BookDetail.tsx에서 전달받는 Skill Map의 값 타입\ninterface SkillWithLevel extends Skill {\n  levelText: string\n}\n\ninterface LearningItemProps {\n  learning: Learning\n  index: number\n  isAuthenticated: boolean\n  isEditing: boolean\n  currentFormData: { topic: string; content: string }\n  setCurrentFormData: React.Dispatch<React.SetStateAction<{ topic: string; content: string }>>\n  onStartEdit: (learning: Learning, chapterId?: string) => void\n  onSaveEdit: () => void\n  onCancelEdit: () => void\n  onDelete: (learningId: string, chapterId?: string) => void\n  isSaving?: boolean\n  // 🌟 NEW PROP 1: 전체 스킬 목록 맵 (ID로 스킬 정보를 찾는 용도)\n  allSkillsMap?: Map<string, SkillWithLevel>\n  // 🌟 NEW PROP 2: 스킬 연결/해제 핸들러 (useLearningManager에 구현 필요)\n  onSkillLinkChange?: (learningId: string, skillId: string, isLinked: boolean) => void\n  // 🌟 NEW PROP 3: 목차 ID (목차 기반 학습 내용인 경우)\n  chapterId?: string\n}\n\n/**\n * 개별 학습 내용 아이템 컴포넌트\n * 학습 내용의 표시, 수정, 삭제 기능을 제공합니다.\n */\nconst LearningItem: React.FC<LearningItemProps> = ({\n  learning,\n  index,\n  isAuthenticated,\n  isEditing,\n  currentFormData,\n  setCurrentFormData,\n  onStartEdit,\n  onSaveEdit,\n  onCancelEdit,\n  onDelete,\n  isSaving = false,\n  allSkillsMap,\n  onSkillLinkChange,\n  chapterId,\n}) => {\n  \n  // 🌟 1. 현재 학습 내용에 연결된 스킬 목록 추출 (기본 보기용)\n  const linkedSkills = useMemo(() => {\n    if (!allSkillsMap) return []\n    return (learning.skillIds || [])\n      .map(skillId => allSkillsMap.get(skillId))\n      .filter((skill): skill is SkillWithLevel => !!skill)\n  }, [learning.skillIds, allSkillsMap])\n  \n  // 🌟 2. 관리자 수정 모드에서 스킬 연결/해제 토글 핸들러\n  const handleSkillToggle = (skillId: string) => {\n    if (!onSkillLinkChange) return\n    const isLinked = learning.skillIds?.includes(skillId) || false\n    // 부모 컴포넌트(BookDetail)의 핸들러를 호출하여 LearningManager를 통해 상태 업데이트\n    onSkillLinkChange(learning._id, skillId, !isLinked)\n  }\n\n  // 🌟 3. 편집 모드에서 사용할 수 있는 전체 스킬 목록 (Map의 값을 배열로 변환)\n  const availableSkills = useMemo(() => {\n    if (!allSkillsMap) return []\n    return Array.from(allSkillsMap.values())\n  }, [allSkillsMap])\n\n  // 🌟 4. 색상을 동적으로 적용하는 스타일 생성 함수 (배지용)\n  const getBadgeStyle = (colorCode: string) => {\n    // 배경색에 10%의 투명도를 적용하여 은은하게 표시\n    const bgColor = `${colorCode}1A`\n    const textColor = colorCode\n    \n    return {\n      backgroundColor: bgColor,\n      color: textColor,\n    } as React.CSSProperties\n  }\n  \n  // 🌟 5. 색상을 동적으로 적용하는 스타일 생성 함수 (버튼용)\n  const getButtonStyle = (colorCode: string) => {\n    return {\n      backgroundColor: colorCode,\n      color: '#FFFFFF',\n    } as React.CSSProperties\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ delay: 0.1 * index }}\n      className={`card p-6 ${isEditing ? 'border-2 border-primary-500 shadow-xl' : ''}`}\n    >\n      {isEditing ? (\n        // 🌟 [수정 폼 렌더링]\n        <div className=\"space-y-4\">\n          <div>\n            <label htmlFor=\"topic\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              학습 주제\n            </label>\n            <input\n              type=\"text\"\n              id=\"topic\"\n              value={currentFormData.topic}\n              onChange={(e) => setCurrentFormData(prev => ({ ...prev, topic: e.target.value }))}\n              placeholder=\"학습 주제를 입력하세요\"\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"content\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              학습 내용\n            </label>\n            <RichTextEditor\n              value={currentFormData.content}\n              onChange={(value) => setCurrentFormData(prev => ({ ...prev, content: value }))}\n              placeholder=\"학습 내용을 입력하세요. 리치텍스트 에디터를 사용하여 다양한 서식을 적용할 수 있습니다.\"\n              rows={8}\n              className=\"min-h-[200px]\"\n            />\n          </div>\n\n          {/* 🌟 [추가] 스킬 연결 섹션 (관리자용) */}\n          {isAuthenticated && allSkillsMap && availableSkills.length > 0 && (\n            <div className=\"pt-4 border-t border-gray-200 dark:border-gray-700\">\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3 flex items-center gap-2\">\n                <FaTag size={14} className=\"text-primary-600\" /> 관련 스킬 연결 ({learning.skillIds?.length || 0}개 연결됨)\n              </label>\n              {/* 스킬 선택 버튼 목록 */}\n              <div className=\"flex flex-wrap gap-2 max-h-40 overflow-y-auto p-2 rounded-lg bg-gray-50 dark:bg-gray-700/50\">\n                {availableSkills.map(skill => {\n                  const isLinked = learning.skillIds?.includes(skill._id!)\n                  // 🌟 동적 스타일 적용\n                  const dynamicStyle = skill.color && isLinked ? getButtonStyle(skill.color) : undefined\n\n                  return (\n                    <button\n                      key={skill._id}\n                      onClick={() => handleSkillToggle(skill._id!)}\n                      type=\"button\"\n                      className={`px-3 py-1 text-xs font-medium rounded-full transition-all ${\n                        isLinked\n                          ? 'text-white hover:opacity-80'\n                          : 'bg-gray-200 text-gray-700 dark:bg-gray-600 dark:text-gray-200 hover:bg-gray-300 dark:hover:bg-gray-500'\n                      }`}\n                      style={dynamicStyle}\n                    >\n                      {isLinked ? '✔️' : '➕'} {skill.name}\n                    </button>\n                  )\n                })}\n              </div>\n            </div>\n          )}\n          {/* 🌟 스킬 연결 섹션 끝 */}\n\n          <div className=\"flex gap-3 pt-4\">\n            <button\n              onClick={() => onSaveEdit()}\n              disabled={isSaving || !currentFormData.topic.trim() || !currentFormData.content.trim()}\n              className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors flex items-center justify-center gap-2\"\n            >\n              {isSaving ? '저장 중...' : '수정'}\n            </button>\n            <button\n              onClick={onCancelEdit}\n              className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\n            >\n              취소\n            </button>\n          </div>\n        </div>\n      ) : (\n        // 🌟 [기본 보기 렌더링]\n        <>\n          <div className=\"flex items-start justify-between mb-3\">\n            <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n              {learning.topic}\n            </h3>\n            {isAuthenticated && (\n              <div className=\"flex gap-1\">\n                <button\n                  onClick={() => onStartEdit(learning, chapterId)}\n                  className=\"p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 text-blue-600 dark:text-blue-400\"\n                  aria-label=\"수정\"\n                >\n                  <FaEdit size={16} />\n                </button>\n                <button\n                  onClick={() => onDelete(learning._id, chapterId)}\n                  className=\"p-2 rounded-lg hover:bg-red-100 dark:hover:bg-red-900/30 text-red-600 dark:text-red-400\"\n                  aria-label=\"삭제\"\n                >\n                  <FaTrash size={16} />\n                </button>\n              </div>\n            )}\n          </div>\n          \n          {/* 🌟 [추가] 연결된 스킬 배지 목록 (기본 보기) */}\n          {linkedSkills.length > 0 && (\n            <div className=\"flex flex-wrap items-start gap-2 mb-4\">\n              <FaTag size={16} className=\"text-gray-500 dark:text-gray-400 mt-1 shrink-0\" title=\"관련 스킬\" />\n              {linkedSkills.map(skill => {\n                // 🌟 동적 스타일 적용\n                const badgeStyle = skill.color ? getBadgeStyle(skill.color) : undefined\n\n                return (\n                  <Link\n                    key={skill._id}\n                    to={`/projects?skillId=${skill._id}`}\n                    title={`${skill.name} 스킬이 사용된 프로젝트 보기`}\n                    className=\"inline-flex items-center px-3 py-1 rounded-full text-xs font-medium transition-all hover:opacity-80 hover:ring-2\"\n                    style={{\n                      ...badgeStyle,\n                      '--tw-ring-color': skill.color || '#3B82F6',\n                    } as React.CSSProperties}\n                  >\n                    {skill.name}\n                  </Link>\n                )\n              })}\n            </div>\n          )}\n          {/* 🌟 연결된 스킬 배지 목록 끝 */}\n\n          <div \n            className=\"text-gray-600 dark:text-gray-300 leading-relaxed prose prose-sm max-w-none dark:prose-invert\"\n            dangerouslySetInnerHTML={{ __html: parseMarkdown(learning.content) }}\n          />\n          <div className=\"mt-4 text-sm text-gray-500 dark:text-gray-500\">\n            작성일: {formatDate(learning.createdAt)} ({formatRelativeDate(learning.createdAt)}) • {getFormattedReadingTime(learning.content)}\n          </div>\n        </>\n      )}\n    </motion.div>\n  )\n}\n\nexport default LearningItem\n","import React, { useMemo, useState } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { useParams, Link, useNavigate, useLocation } from 'react-router-dom'\nimport { FaArrowLeft, FaBook, FaStar, FaCalendar, FaEdit, FaTrash, FaPlus, FaChevronRight, FaCubes } from 'react-icons/fa'\nimport { useAuth } from '../contexts/AuthContext'\nimport { formatDate } from '../utils/dateUtils'\nimport { Chapter, Skill } from '../types'\nimport { useBook, useDeleteBook } from '../hooks/useBooks'\nimport { useLearningManager } from '../hooks/useLearningManager'\n// 목차 관리 관련 import 제거됨 - 중복 출력 문제 해결\nimport LearningItem from './common/LearningItem'\nimport { useQuery } from '@tanstack/react-query'\nimport { chaptersAPI } from '../services/api'\nimport { useSkills } from '../hooks/useSkills'\nimport RichTextEditor from './RichTextEditor'\nimport { useTranslation } from 'react-i18next'\nimport { getLocalizedField } from '@/utils/i18nUtils'\n\nconst BookDetail: React.FC = () => {\n  const { id } = useParams<{ id: string }>()\n  const navigate = useNavigate()\n  const location = useLocation()\n  const { isAuthenticated } = useAuth()\n  const { i18n } = useTranslation()\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\n  \n  // 🌟 React Query로 서적 데이터 조회\n  const { data: book, isLoading: loading, isError, error } = useBook(id)\n  \n  // 🌟 React Query로 목차 데이터 조회\n  const { data: bookChapters = [] } = useQuery<Chapter[], Error>({\n    queryKey: ['chapters', id],\n    queryFn: async () => {\n      if (!id) return []\n      const response = await chaptersAPI.getByBook(id)\n      return response.data?.data || response.data || []\n    },\n    enabled: !!id,\n    staleTime: 5 * 60 * 1000,\n  })\n  \n  // 🌟 스킬 목록 가져오기\n  const { skillCategories } = useSkills()\n  \n  // 🌟 React Query로 서적 삭제\n  const deleteMutation = useDeleteBook()\n  \n  const bookApiError = isError ? (error?.message || '서적 정보를 불러오는 데 실패했습니다.') : null\n\n  // 목차 관리 관련 상태 제거됨 - 중복 출력 문제 해결\n\n  // 💡 커스텀 훅 사용: 학습 내용 상태와 핸들러를 가져옵니다.\n  const {\n    editingLearningId,\n    currentFormData,\n    setCurrentFormData,\n    showAddForm,\n    isSaving,\n    learningApiError,\n    handleToggleAddForm,\n    handleAddLearning,\n    handleDeleteLearning,\n    handleStartEdit,\n    handleSaveEdit,\n    handleCancelEdit,\n    handleSkillLinkChange,  // 🌟 스킬 연결 핸들러 추가\n  } = useLearningManager(id!)\n  \n  // 🌟 확장 상태 관리 (아코디언 UI)\n  const [expandedChapterId, setExpandedChapterId] = useState<string | null>(null)\n  \n  // 챕터 확장/축소 토글 함수\n  const toggleChapter = (chapterId: string) => {\n    setExpandedChapterId(prevId => (prevId === chapterId ? null : chapterId))\n  }\n\n  // =================================================================\n  // 📚 스킬 데이터 처리 로직 (useMemo로 최적화)\n  // =================================================================\n\n  // 🌟 전체 책에 연결된 스킬 목록 필터링 및 가공\n  const linkedBookSkills = useMemo<Array<Skill & { levelText: string }>>(() => {\n    if (!bookChapters || !skillCategories) return []\n\n    const allSkills = skillCategories.flatMap(category => category.skills || [])\n    \n    // 1. 모든 챕터의 모든 학습 내용에서 고유한 skillIds를 추출\n    const uniqueSkillIds = new Set<string>()\n    bookChapters.forEach(chapter => {\n      (chapter.learnings || []).forEach(learning => {\n        // 학습 내용에 skillIds 필드가 있다고 가정\n        (learning.skillIds || []).forEach((skillId: string) => {\n          uniqueSkillIds.add(skillId)\n        })\n      })\n    })\n    \n    if (uniqueSkillIds.size === 0) return []\n\n    // 2. Skills.tsx의 레벨 텍스트 로직 재사용\n    const getLevelText = (level: number) => {\n      if (level >= 90) return 'Expert'\n      if (level >= 70) return 'Proficient'\n      if (level >= 50) return 'Competent'\n      return 'Basic'\n    }\n\n    // 3. 필터링 및 가공\n    return allSkills\n      .filter(skill => skill._id && uniqueSkillIds.has(skill._id))\n      .map(skill => ({\n        ...skill,\n        levelText: getLevelText(skill.level || 0),\n      }))\n  }, [bookChapters, skillCategories])\n\n  // 🌟 개별 학습 내용에서 스킬 ID를 객체로 변환하기 위한 Map\n  const allSkillsMap = useMemo(() => {\n    const map = new Map<string, Skill & { levelText: string }>()\n    linkedBookSkills.forEach(skill => skill._id && map.set(skill._id, skill))\n    return map\n  }, [linkedBookSkills])\n\n  // 🌟 색상을 동적으로 적용하는 스타일 생성 함수 (배지용)\n  const getBadgeStyle = (colorCode: string) => {\n    // 배경색에 15%의 투명도를 적용하여 은은하게 표시\n    const bgColor = `${colorCode}26`\n    const textColor = colorCode\n    \n    return {\n      backgroundColor: bgColor,\n      color: textColor,\n    } as React.CSSProperties\n  }\n\n  // =================================================================\n  // 📚 서적 삭제 핸들러\n  // =================================================================\n\n  // 🌟 React Query Mutation을 사용한 서적 삭제\n  const handleDeleteBook = async () => {\n    if (!confirm('이 서적을 삭제하시겠습니까? 관련 학습 내용도 모두 사라집니다.')) return\n\n    try {\n      await deleteMutation.mutateAsync(id!)\n      navigate('/books')\n    } catch (error) {\n      console.error('Failed to delete book:', error)\n    }\n  }\n  \n  const isDeleting = deleteMutation.isPending\n\n  // 목차 관리 핸들러들 제거됨 - 중복 출력 문제 해결\n\n  // 💡 기존의 학습 내용 핸들러들은 useLearningManager 훅으로 이동하여 삭제됨\n\n  // 학습 내용 정렬 (useMemo 사용으로 성능 최적화)\n  const sortedLearnings = useMemo(() => {\n    if (!book?.learnings) return []\n    \n    return [...book.learnings].sort((a, b) => {\n      // 최신순(내림차순) 정렬\n      return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\n    })\n  }, [book?.learnings])\n\n  // =================================================================\n  // ⚙️ 렌더링 및 로딩/에러 처리\n  // =================================================================\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    )\n  }\n\n  if (!book) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <FaBook className=\"text-6xl text-gray-400 mx-auto mb-4\" />\n          <p className=\"text-xl text-gray-600 dark:text-gray-400\">서적을 찾을 수 없습니다</p>\n          <Link \n            to=\"/books\" \n            state={location.state}\n            className=\"text-primary-600 hover:text-primary-700 mt-4 inline-block\"\n          >\n            목록으로 돌아가기\n          </Link>\n        </div>\n      </div>\n    )\n  }\n\n  // 별점 렌더링 함수\n  const renderRatingStars = (rating: number) => {\n    return Array.from({ length: 5 }, (_, i) => (\n      <FaStar \n        key={i} \n        className={i < rating ? 'text-yellow-500' : 'text-gray-300 dark:text-gray-600'} \n      />\n    ))\n  }\n\n  return (\n    <section className=\"section-padding bg-white dark:bg-dark-900 min-h-screen\">\n      <div className=\"max-w-5xl mx-auto\">\n        {/* 에러 메시지: bookApiError와 learningApiError를 모두 표시 */}\n        {(bookApiError || learningApiError) && (\n          <motion.div \n            initial={{ opacity: 0, y: -20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"p-4 mb-4 text-sm text-red-800 rounded-lg bg-red-50 dark:bg-dark-800 dark:text-red-400\" \n            role=\"alert\"\n          >\n            {bookApiError || learningApiError}\n          </motion.div>\n        )}\n\n        {/* Header */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"mb-8\"\n        >\n          <Link\n            to=\"/books\"\n            state={location.state}\n            className=\"inline-flex items-center gap-2 text-primary-600 hover:text-primary-700 mb-6\"\n          >\n            <FaArrowLeft /> 목록으로 돌아가기\n          </Link>\n        </motion.div>\n\n        {/* Book Info */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"card p-8 mb-8\"\n        >\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            <div>\n              {book.coverImage ? (\n                <img\n                  src={book.coverImage}\n                  alt={book.title}\n                  className=\"w-full h-auto object-cover rounded-lg shadow-lg\"\n                  loading=\"eager\"\n                  decoding=\"async\"\n                  width=\"400\"\n                  height=\"533\"\n                />\n              ) : (\n                <div className=\"w-full aspect-[3/4] bg-gradient-to-br from-primary-400 to-blue-500 rounded-lg flex items-center justify-center\">\n                  <FaBook className=\"text-white text-6xl\" />\n                </div>\n              )}\n            </div>\n            <div className=\"md:col-span-2\">\n              <div className=\"flex items-start justify-between mb-4\">\n                <div className=\"flex flex-wrap gap-2\">\n                  {/* 카테고리 배지 (복수 표시) */}\n                  {book.categoryIds && book.categoryIds.length > 0 ? (\n                    (book.categoryIds as any[]).map((catIdOrObj: any) => {\n                      const catName = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?.name\n                      return catName ? (\n                        <span \n                          key={typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id}\n                          className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\"\n                        >\n                          {catName}\n                        </span>\n                      ) : null\n                    })\n                  ) : (\n                    // 호환성: categoryIds가 없으면 기존 category 표시\n                    book.category && (\n                      <span className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\">\n                        {book.category}\n                      </span>\n                    )\n                  )}\n                </div>\n                {isAuthenticated && (\n                  <div className=\"flex gap-2\">\n                    <Link\n                      to={`/admin`}\n                      state={{ tab: 'books', editId: book._id }}\n                      className=\"p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 text-blue-600 dark:text-blue-400\"\n                      aria-label=\"서적 수정\"\n                    >\n                      <FaEdit />\n                    </Link>\n                    <button\n                      onClick={handleDeleteBook}\n                      disabled={isDeleting}\n                      className={`p-2 rounded-lg text-red-600 dark:text-red-400 transition-colors ${\n                        isDeleting \n                          ? 'opacity-50 cursor-not-allowed' \n                          : 'hover:bg-gray-100 dark:hover:bg-gray-700'\n                      }`}\n                      aria-label=\"서적 삭제\"\n                    >\n                      {isDeleting ? (\n                        <div className=\"w-4 h-4 border-2 border-red-600 border-t-transparent rounded-full animate-spin\" />\n                      ) : (\n                        <FaTrash />\n                      )}\n                    </button>\n                  </div>\n                )}\n              </div>\n              <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-2\">\n                {getLocalizedField(currentLang, book.title, book.titleEn, book.titleJa)}\n              </h1>\n              <p className=\"text-xl text-gray-600 dark:text-gray-400 mb-6\">\n                {getLocalizedField(currentLang, book.author, book.authorEn, book.authorJa)}\n              </p>\n              <div className=\"flex flex-wrap gap-6 text-gray-600 dark:text-gray-400\">\n                <div className=\"flex items-center gap-2\">\n                  {renderRatingStars(book.rating)}\n                  <span className=\"font-medium ml-1\">{book.rating}/5</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <FaCalendar />\n                  <span>읽은 날짜: {formatDate(book.readDate)}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n\n        {/* 🌟 이 책을 통해 학습한 핵심 스킬 섹션 */}\n        {linkedBookSkills.length > 0 && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.1 }}\n            className=\"card p-6 mb-8\"\n          >\n            <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4 flex items-center gap-2\">\n              <FaCubes className=\"text-primary-600\" /> 이 책을 통해 학습한 핵심 스킬\n            </h3>\n            <div className=\"flex flex-wrap gap-2\">\n              {linkedBookSkills.map(skill => {\n                // 🌟 동적 스타일 적용\n                const badgeStyle = skill.color ? getBadgeStyle(skill.color) : undefined\n\n                return (\n                  <Link\n                    key={skill._id}\n                    to={`/projects?skillId=${skill._id}`}\n                    title={`${skill.name} 스킬이 사용된 모든 프로젝트 보기`}\n                    className=\"inline-flex items-center px-3 py-1 rounded-lg text-sm font-medium hover:ring-2 transition-all hover:opacity-80\"\n                    style={{\n                      ...badgeStyle,\n                      '--tw-ring-color': skill.color || '#3B82F6',\n                    } as React.CSSProperties}\n                  >\n                    {skill.name}\n                    <span \n                      className=\"ml-1 text-xs font-semibold\"\n                      style={{ color: skill.color || '#3B82F6' }}\n                    >\n                      [{skill.levelText}]\n                    </span>\n                  </Link>\n                )\n              })}\n            </div>\n          </motion.div>\n        )}\n\n        {/* Learnings Section */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.2 }}\n        >\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n              학습 내용\n            </h2>\n            {isAuthenticated && (!bookChapters || bookChapters.length === 0) && (\n              <button\n                onClick={handleToggleAddForm}\n                className=\"flex items-center gap-2 bg-primary-600 hover:bg-primary-700 text-white font-medium px-4 py-2 rounded-lg transition-colors\"\n              >\n                <FaPlus /> {showAddForm ? '추가 취소' : '새 내용 추가'}\n              </button>\n            )}\n          </div>\n\n          {/* Add Learning Form */}\n          <AnimatePresence>\n            {showAddForm && (\n              <motion.div\n                initial={{ opacity: 0, height: 0 }}\n                animate={{ opacity: 1, height: 'auto' }}\n                exit={{ opacity: 0, height: 0 }}\n                className=\"card p-6 mb-6 overflow-hidden\"\n              >\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                  새 학습 내용 추가\n                </h3>\n                <div className=\"space-y-4\">\n                  <div>\n                    <label htmlFor=\"topic\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                      학습 주제\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"topic\"\n                      value={currentFormData.topic}\n                      onChange={(e) => setCurrentFormData(prev => ({ ...prev, topic: e.target.value }))}\n                      placeholder=\"학습 주제를 입력하세요\"\n                      className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"content\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                      학습 내용\n                    </label>\n                    <RichTextEditor\n                      value={currentFormData.content}\n                      onChange={(value) => setCurrentFormData(prev => ({ ...prev, content: value }))}\n                      placeholder=\"학습 내용을 입력하세요. 리치텍스트 에디터를 사용하여 다양한 서식을 적용할 수 있습니다.\"\n                      rows={8}\n                      className=\"min-h-[200px]\"\n                    />\n                  </div>\n\n                  <div className=\"flex gap-3 pt-4\">\n                    <button\n                      onClick={handleAddLearning}\n                      disabled={isSaving || !currentFormData.topic.trim() || !currentFormData.content.trim()}\n                      className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors flex items-center justify-center gap-2\"\n                    >\n                      {isSaving ? '저장 중...' : '추가'}\n                    </button>\n                    <button\n                      onClick={handleToggleAddForm}\n                      className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\n                    >\n                      취소\n                    </button>\n                  </div>\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          {/* 학습 내용 리스트 - 아코디언 버전 */}\n          {(() => {\n            // 목차 기반 학습 내용이 있는 경우\n            if (bookChapters && bookChapters.length > 0) {\n              return (\n                <div className=\"space-y-4\">\n                  {bookChapters.map((chapter) => {\n                    // 🌟 현재 챕터가 확장되었는지 확인\n                    const isExpanded = expandedChapterId === chapter._id\n                    \n                    return (\n                      <div key={chapter._id} className=\"card p-6 border border-gray-200 dark:border-gray-700\">\n                        \n                        {/* 🌟 챕터 제목 (클릭 가능한 아코디언 헤더) */}\n                        <div \n                          className=\"flex items-center justify-between cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-800 -m-6 p-6 rounded-lg transition-colors\"\n                          onClick={() => toggleChapter(chapter._id!)}\n                        >\n                          <h3 className=\"text-xl font-bold text-gray-900 dark:text-white flex-1\">\n                            {chapter.title}\n                            <span className=\"ml-3 text-sm font-normal text-gray-500 dark:text-gray-400\">\n                              ({(chapter.learnings || []).length}개의 학습 내용)\n                            </span>\n                          </h3>\n                          {/* 🌟 확장/축소 아이콘 */}\n                          <motion.span\n                            animate={{ rotate: isExpanded ? 90 : 0 }}\n                            transition={{ duration: 0.3 }}\n                            className=\"text-primary-600 dark:text-primary-400 text-xl ml-4\"\n                          >\n                            <FaChevronRight />\n                          </motion.span>\n                        </div>\n\n                        {/* 🌟 학습 내용 (아코디언 바디) */}\n                        <AnimatePresence>\n                          {isExpanded && (\n                            <motion.div\n                              initial={{ opacity: 0, height: 0 }}\n                              animate={{ opacity: 1, height: 'auto' }}\n                              exit={{ opacity: 0, height: 0 }}\n                              transition={{ duration: 0.3, ease: \"easeInOut\" }}\n                              className=\"overflow-hidden\"\n                            >\n                              <div className=\"space-y-6 pt-6 mt-6 border-t border-gray-200 dark:border-gray-700\">\n                                {(chapter.learnings || []).map((learning, index: number) => (\n                                  <LearningItem \n                                    key={learning._id}\n                                    learning={learning}\n                                    index={index}\n                                    isAuthenticated={isAuthenticated}\n                                    isEditing={editingLearningId === learning._id}\n                                    currentFormData={currentFormData}\n                                    setCurrentFormData={setCurrentFormData}\n                                    onStartEdit={handleStartEdit}\n                                    onSaveEdit={handleSaveEdit}\n                                    onCancelEdit={handleCancelEdit}\n                                    onDelete={handleDeleteLearning}\n                                    isSaving={isSaving}\n                                    allSkillsMap={allSkillsMap}  // 🌟 스킬 맵 전달\n                                    onSkillLinkChange={handleSkillLinkChange}  // 🌟 스킬 연결 핸들러 전달\n                                    chapterId={chapter._id}  // 🌟 목차 ID 전달\n                                  />\n                                ))}\n                                {(!chapter.learnings || chapter.learnings.length === 0) && (\n                                  <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\n                                    이 목차에는 아직 학습 내용이 없습니다.\n                                  </div>\n                                )}\n                              </div>\n                            </motion.div>\n                          )}\n                        </AnimatePresence>\n                      </div>\n                    )\n                  })}\n                </div>\n              )\n            }\n            // 기존 학습 내용이 있는 경우\n            else if (sortedLearnings.length > 0) {\n              return (\n                <div className=\"space-y-6\">\n                  {sortedLearnings.map((learning, index) => (\n                    <LearningItem \n                      key={learning._id}\n                      learning={learning}\n                      index={index}\n                      isAuthenticated={isAuthenticated}\n                      isEditing={editingLearningId === learning._id}\n                      currentFormData={currentFormData}\n                      setCurrentFormData={setCurrentFormData}\n                      onStartEdit={handleStartEdit}\n                      onSaveEdit={handleSaveEdit}\n                      onCancelEdit={handleCancelEdit}\n                      onDelete={handleDeleteLearning}\n                      isSaving={isSaving}\n                      allSkillsMap={allSkillsMap}  // 🌟 스킬 맵 전달\n                      onSkillLinkChange={handleSkillLinkChange}  // 🌟 스킬 연결 핸들러 전달\n                    />\n                  ))}\n                </div>\n              )\n            }\n            // 학습 내용이 없는 경우\n            else {\n              return (\n                <div className=\"card p-12 text-center\">\n                  <FaBook className=\"text-6xl text-gray-400 mx-auto mb-4\" />\n                  <p className=\"text-xl text-gray-600 dark:text-gray-400\">\n                    아직 작성된 학습 내용이 없습니다\n                  </p>\n                </div>\n              )\n            }\n          })()}\n        </motion.div>\n      </div>\n    </section>\n  )\n}\n\nexport default BookDetail\n\n// 💡 LearningForm과 LearningItem 컴포넌트는 별도 파일로 분리됨\n","import {\n  $applyNodeReplacement,\n  DOMConversionMap,\n  DOMConversionOutput,\n  DOMExportOutput,\n  EditorConfig,\n  ElementNode,\n  LexicalNode,\n  NodeKey,\n  SerializedElementNode,\n  Spread,\n} from 'lexical'\n\nexport type SerializedCollapsibleNode = Spread<\n  {\n    title: string\n    open: boolean\n  },\n  SerializedElementNode\n>\n\nexport class CollapsibleNode extends ElementNode {\n  __title: string\n  __open: boolean\n\n  static getType(): string {\n    return 'collapsible'\n  }\n\n  static clone(node: CollapsibleNode): CollapsibleNode {\n    return new CollapsibleNode(node.__title, node.__open, node.__key)\n  }\n\n  constructor(title: string, open: boolean, key?: NodeKey) {\n    super(key)\n    this.__title = title\n    this.__open = open\n  }\n\n  createDOM(config: EditorConfig): HTMLElement {\n    const dom = document.createElement('div')\n    dom.setAttribute('data-lexical-collapsible', 'true')\n    dom.className = 'my-2 border border-gray-300 dark:border-gray-600 rounded-lg overflow-hidden'\n    \n    return dom\n  }\n\n  updateDOM(prevNode: CollapsibleNode, dom: HTMLElement, config: EditorConfig): boolean {\n    return false // Lexical이 자동으로 자식 업데이트\n  }\n  \n  static importDOM(): DOMConversionMap | null {\n    return {\n      details: (node: Node) => ({\n        conversion: convertCollapsibleElement,\n        priority: 3,\n      }),\n    }\n  }\n  \n  exportDOM(): DOMExportOutput {\n    const element = document.createElement('details')\n    element.open = this.__open\n    \n    const summary = document.createElement('summary')\n    summary.textContent = this.__title\n    summary.className = 'px-4 py-2 cursor-pointer font-semibold'\n    element.appendChild(summary)\n\n    return { element }\n  }\n\n  static importJSON(serializedNode: SerializedCollapsibleNode): CollapsibleNode {\n    const { title, open } = serializedNode\n    const node = $createCollapsibleNode(title, open)\n    \n    // importJSON이 호출될 때 비어있으므로, 여기서 자식 추가하면 안 됨\n    return node\n  }\n\n  exportJSON(): SerializedCollapsibleNode {\n    return {\n      ...super.exportJSON(),\n      title: this.getTitle(),\n      open: this.isOpen(),\n      type: 'collapsible',\n      version: 1,\n    }\n  }\n\n  getTitle(): string {\n    return this.getLatest().__title\n  }\n\n  setTitle(title: string): void {\n    const writable = this.getWritable()\n    writable.__title = title\n  }\n\n  isOpen(): boolean {\n    return this.getLatest().__open\n  }\n\n  setOpen(open: boolean): void {\n    const writable = this.getWritable()\n    writable.__open = open\n  }\n\n  toggle(): void {\n    this.setOpen(!this.isOpen())\n  }\n}\n\nfunction convertCollapsibleElement(domNode: Node): DOMConversionOutput {\n  const dom = domNode as HTMLDetailsElement\n  const summary = dom.querySelector('summary')\n  const title = summary ? summary.textContent || '' : ''\n  const open = dom.open\n  \n  const node = $createCollapsibleNode(title, open)\n  \n  return { node }\n}\n\nexport function $createCollapsibleNode(title: string, open: boolean): CollapsibleNode {\n  return $applyNodeReplacement(new CollapsibleNode(title, open))\n}\n\nexport function $isCollapsibleNode(\n  node: LexicalNode | null | undefined,\n): node is CollapsibleNode {\n  return node instanceof CollapsibleNode\n}\n","import { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext'\nimport {\n  $getSelection,\n  $isRangeSelection,\n  FORMAT_TEXT_COMMAND,\n  COMMAND_PRIORITY_EDITOR,\n  $insertNodes,\n} from 'lexical'\nimport { $createHeadingNode, $createQuoteNode } from '@lexical/rich-text'\nimport { INSERT_UNORDERED_LIST_COMMAND, INSERT_ORDERED_LIST_COMMAND } from '@lexical/list'\nimport { $createCodeNode } from '@lexical/code'\nimport { useCallback, useEffect } from 'react'\nimport { $createImageNode } from '../nodes/ImageNode'\nimport { $createCollapsibleNode } from '../nodes/CollapsibleNode'\n\nexport const INSERT_IMAGE_COMMAND_KEY = 'INSERT_IMAGE_COMMAND'\n\nexport const ToolbarPlugin = () => {\n  const [editor] = useLexicalComposerContext()\n\n  const handleBold = useCallback(() => {\n    editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'bold')\n  }, [editor])\n\n  const handleItalic = useCallback(() => {\n    editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'italic')\n  }, [editor])\n\n  const handleUnderline = useCallback(() => {\n    editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'underline')\n  }, [editor])\n\n  const handleHeading = useCallback((level: 1 | 2 | 3) => {\n    editor.update(() => {\n      const selection = $getSelection()\n      if ($isRangeSelection(selection)) {\n        const headingNode = $createHeadingNode(`h${level}`)\n        selection.insertNodes([headingNode])\n      }\n    })\n  }, [editor])\n\n  const handleCode = useCallback(() => {\n    editor.update(() => {\n      const codeNode = $createCodeNode('')\n      $insertNodes([codeNode])\n    })\n  }, [editor])\n\n  const handleInsertCollapsible = useCallback(() => {\n    editor.update(() => {\n      const collapsible = $createCollapsibleNode('제목 없음', true)\n      $insertNodes([collapsible])\n    })\n  }, [editor])\n\n  return (\n    <div className=\"flex flex-wrap gap-2 p-2 border-b border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800\">\n      <button\n        type=\"button\"\n        onClick={handleBold}\n        className=\"px-3 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-700\"\n        title=\"Bold\"\n      >\n        <strong>B</strong>\n      </button>\n      <button\n        type=\"button\"\n        onClick={handleItalic}\n        className=\"px-3 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-700 italic\"\n        title=\"Italic\"\n      >\n        <em>I</em>\n      </button>\n      <button\n        type=\"button\"\n        onClick={handleUnderline}\n        className=\"px-3 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-700 underline\"\n        title=\"Underline\"\n      >\n        <u>U</u>\n      </button>\n      <div className=\"border-l border-gray-300 dark:border-gray-600 mx-2\" />\n      <button\n        type=\"button\"\n        onClick={() => handleHeading(1)}\n        className=\"px-3 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-700\"\n        title=\"Heading 1\"\n      >\n        H1\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => handleHeading(2)}\n        className=\"px-3 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-700\"\n        title=\"Heading 2\"\n      >\n        H2\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => handleHeading(3)}\n        className=\"px-3 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-700\"\n        title=\"Heading 3\"\n      >\n        H3\n      </button>\n      <div className=\"border-l border-gray-300 dark:border-gray-600 mx-2\" />\n      <button\n        type=\"button\"\n        onClick={() => editor.dispatchCommand(INSERT_UNORDERED_LIST_COMMAND, undefined)}\n        className=\"px-3 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-700\"\n        title=\"Bullet List\"\n      >\n        •\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => editor.dispatchCommand(INSERT_ORDERED_LIST_COMMAND, undefined)}\n        className=\"px-3 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-700\"\n        title=\"Numbered List\"\n      >\n        1.\n      </button>\n      <button\n        type=\"button\"\n        onClick={handleCode}\n        className=\"px-3 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-700\"\n        title=\"Code Block\"\n      >\n        {'</>'}\n      </button>\n      <div className=\"border-l border-gray-300 dark:border-gray-600 mx-2\" />\n      <button\n        type=\"button\"\n        onClick={handleInsertCollapsible}\n        className=\"px-3 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-700\"\n        title=\"Toggle/Collapsible\"\n      >\n        ▼\n      </button>\n    </div>\n  )\n}\n","import {\n  $applyNodeReplacement,\n  DOMConversionMap,\n  DOMConversionOutput,\n  EditorConfig,\n  ElementNode,\n  LexicalNode,\n  NodeKey,\n  SerializedElementNode,\n  Spread,\n} from 'lexical'\n\nexport type SerializedImageNode = Spread<\n  {\n    src: string\n    altText: string\n    width?: number\n    height?: number\n  },\n  SerializedElementNode\n>\n\nexport class ImageNode extends ElementNode {\n  __src: string\n  __altText: string\n  __width?: number\n  __height?: number\n\n  static getType(): string {\n    return 'image'\n  }\n\n  static clone(node: ImageNode): ImageNode {\n    return new ImageNode(node.__src, node.__altText, node.__width, node.__height, node.__key)\n  }\n\n  constructor(src: string, altText: string, width?: number, height?: number, key?: NodeKey) {\n    super(key)\n    this.__src = src\n    this.__altText = altText\n    this.__width = width\n    this.__height = height\n  }\n\n  static importDOM(): DOMConversionMap | null {\n    return {\n      img: (node: Node) => ({\n        conversion: (domNode: Node) => {\n          const img = domNode as HTMLImageElement\n          const { src, alt, width, height } = img\n          const node = $createImageNode(src, alt || '', width || undefined, height || undefined)\n          return { node }\n        },\n        priority: 0,\n      }),\n    }\n  }\n\n  exportDOM(): HTMLElement {\n    const img = document.createElement('img')\n    img.src = this.__src\n    img.alt = this.__altText\n    if (this.__width) img.width = this.__width\n    if (this.__height) img.height = this.__height\n    img.className = 'max-w-full rounded-lg'\n    return img\n  }\n\n  static importJSON(serializedNode: SerializedImageNode): ImageNode {\n    const { src, altText, width, height } = serializedNode\n    const node = $createImageNode(src, altText, width, height)\n    return node\n  }\n\n  exportJSON(): SerializedImageNode {\n    return {\n      ...super.exportJSON(),\n      src: this.__src,\n      altText: this.__altText,\n      width: this.__width,\n      height: this.__height,\n      type: 'image',\n      version: 1,\n    }\n  }\n\n  getSrc(): string {\n    return this.getLatest().__src\n  }\n\n  setSrc(src: string): void {\n    const writable = this.getWritable()\n    writable.__src = src\n  }\n\n  getAltText(): string {\n    return this.getLatest().__altText\n  }\n\n  setAltText(altText: string): void {\n    const writable = this.getWritable()\n    writable.__altText = altText\n  }\n\n  createDOM(config: EditorConfig): HTMLElement {\n    const img = document.createElement('img')\n    img.src = this.__src\n    img.alt = this.__altText\n    if (this.__width) img.width = this.__width\n    if (this.__height) img.height = this.__height\n    img.className = 'max-w-full rounded-lg'\n    return img\n  }\n\n  updateDOM(prevNode: ImageNode, dom: HTMLElement, config: EditorConfig): boolean {\n    if (prevNode.__src !== this.__src) {\n      return true\n    }\n    if (prevNode.__altText !== this.__altText) {\n      return true\n    }\n    if (prevNode.__width !== this.__width || prevNode.__height !== this.__height) {\n      return true\n    }\n    return false\n  }\n}\n\nexport function $createImageNode(src: string, altText: string, width?: number, height?: number): ImageNode {\n  return $applyNodeReplacement(new ImageNode(src, altText, width, height))\n}\n\nexport function $isImageNode(node: LexicalNode | null | undefined): node is ImageNode {\n  return node instanceof ImageNode\n}\n\n","import { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext'\nimport { $insertNodes, $createParagraphNode, COMMAND_PRIORITY_EDITOR, createCommand } from 'lexical'\nimport { useEffect } from 'react'\nimport { $createImageNode } from '../nodes/ImageNode'\nimport api from '../../../services/api'\n\nexport const INSERT_IMAGE_COMMAND = createCommand('INSERT_IMAGE_COMMAND')\n\nexport const ImageUploadPlugin = () => {\n  const [editor] = useLexicalComposerContext()\n\n  useEffect(() => {\n    return editor.registerCommand(\n      INSERT_IMAGE_COMMAND,\n      async (payload: { file: File }) => {\n        const { file } = payload\n        \n        try {\n          // FormData 생성\n          const formData = new FormData()\n          formData.append('image', file)\n\n          // 업로드 요청\n          const response = await api.post('/upload/image', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n            },\n          })\n\n          if (response.data.success && response.data.url) {\n            // 성공: 이미지 노드 삽입\n            editor.update(() => {\n              const imageNode = $createImageNode(response.data.url, file.name)\n              $insertNodes([imageNode])\n            })\n          } else {\n            throw new Error('Upload failed')\n          }\n        } catch (error) {\n          console.error('Image upload failed:', error)\n        }\n\n        return true\n      },\n      COMMAND_PRIORITY_EDITOR\n    )\n  }, [editor])\n\n  return null\n}","export const theme = {\n  paragraph: 'mb-4 text-gray-900 dark:text-gray-100',\n  heading: {\n    h1: 'text-3xl font-bold mb-4 mt-6 text-gray-900 dark:text-white',\n    h2: 'text-2xl font-bold mb-3 mt-5 text-gray-900 dark:text-white',\n    h3: 'text-xl font-bold mb-2 mt-4 text-gray-900 dark:text-white',\n  },\n  list: {\n    ul: 'list-disc ml-6 mb-4 text-gray-900 dark:text-gray-100',\n    ol: 'list-decimal ml-6 mb-4 text-gray-900 dark:text-gray-100',\n    listitem: 'mb-2',\n  },\n  code: 'bg-gray-100 dark:bg-gray-800 p-4 rounded-lg overflow-x-auto text-sm font-mono my-4',\n  text: {\n    bold: 'font-bold',\n    italic: 'italic',\n    underline: 'underline',\n    strikethrough: 'line-through',\n    code: 'bg-gray-200 dark:bg-gray-700 px-1 py-0.5 rounded text-sm font-mono',\n  },\n  quote: 'border-l-4 border-gray-300 dark:border-gray-600 pl-4 italic my-4 text-gray-700 dark:text-gray-300',\n  collapsible: {\n    container: 'my-4 border border-gray-300 dark:border-gray-600 rounded-lg',\n    summary: 'px-4 py-2 cursor-pointer font-semibold text-gray-900 dark:text-white bg-gray-50 dark:bg-gray-800 hover:bg-gray-100 dark:hover:bg-gray-700',\n    content: 'px-4 py-3 text-gray-700 dark:text-gray-300',\n  },\n}\n\n","import { LexicalComposer } from '@lexical/react/LexicalComposer'\nimport { RichTextPlugin } from '@lexical/react/LexicalRichTextPlugin'\nimport { ContentEditable } from '@lexical/react/LexicalContentEditable'\nimport { HistoryPlugin } from '@lexical/react/LexicalHistoryPlugin'\nimport { OnChangePlugin } from '@lexical/react/LexicalOnChangePlugin'\nimport { ListPlugin } from '@lexical/react/LexicalListPlugin'\nimport { LinkPlugin } from '@lexical/react/LexicalLinkPlugin'\nimport { LexicalErrorBoundary } from '@lexical/react/LexicalErrorBoundary'\nimport { HeadingNode, QuoteNode } from '@lexical/rich-text'\nimport { TableCellNode, TableNode, TableRowNode } from '@lexical/table'\nimport { CodeHighlightNode, CodeNode } from '@lexical/code'\nimport { ListNode, ListItemNode } from '@lexical/list'\nimport { LinkNode } from '@lexical/link'\nimport { ParagraphNode, TextNode } from 'lexical'\nimport React, { useCallback, useMemo, useEffect } from 'react'\nimport { EditorState, SerializedEditorState } from 'lexical'\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext'\nimport { ToolbarPlugin } from './plugins/ToolbarPlugin'\nimport { ImageUploadPlugin } from './plugins/ImageUploadPlugin'\nimport { CollapsibleNode } from './nodes/CollapsibleNode'\nimport { ImageNode } from './nodes/ImageNode'\nimport { theme } from './theme/EditorTheme'\nimport './theme/index.css'\n\ninterface LexicalEditorProps {\n  value: string | SerializedEditorState | null\n  onChange: (value: SerializedEditorState) => void\n  placeholder?: string\n  className?: string\n}\n\n// value가 변경될 때 에디터 상태를 업데이트하는 플러그인\nconst UpdateStatePlugin = ({ value, forceUpdate }: { value: string | SerializedEditorState | null; forceUpdate: number }) => {\n  const [editor] = useLexicalComposerContext()\n  \n  useEffect(() => {\n    if (!value) return\n    \n    let parsedValue: any\n    if (typeof value === 'string') {\n      try {\n        parsedValue = JSON.parse(value)\n      } catch {\n        console.error('Failed to parse value:', value)\n        return\n      }\n    } else {\n      parsedValue = value\n    }\n    \n    if (parsedValue && parsedValue.root) {\n      console.log('🔄 에디터 상태 업데이트:', parsedValue)\n      const editorState = editor.parseEditorState(parsedValue)\n      editor.setEditorState(editorState)\n    }\n  }, [forceUpdate, editor]) // value 대신 forceUpdate를 dependency로 사용\n  \n  return null\n}\n\nconst LexicalEditor: React.FC<LexicalEditorProps> = ({\n  value,\n  onChange,\n  placeholder = '내용을 입력하세요...',\n  className = '',\n}) => {\n  // value가 실제로 변경될 때만 force update\n  const forceUpdateKey = React.useMemo(() => {\n    return JSON.stringify(value)\n  }, [value])\n  \n  const initialConfig = useMemo(() => {\n    return {\n      namespace: 'LexicalEditor',\n      theme,\n      onError: (error: Error) => {\n        console.error('Lexical error:', error)\n      },\n      nodes: [\n        HeadingNode,\n        QuoteNode,\n        ListNode,\n        ListItemNode,\n        CodeNode,\n        CodeHighlightNode,\n        LinkNode,\n        ParagraphNode,\n        TextNode,\n        CollapsibleNode,\n        ImageNode,\n        TableNode,\n        TableCellNode,\n        TableRowNode,\n      ],\n    }\n  }, [])\n\n  const handleChange = useCallback(\n    (editorState: EditorState) => {\n      const serialized = editorState.toJSON()\n      onChange(serialized as SerializedEditorState)\n    },\n    [onChange]\n  )\n\n  return (\n    <div className={`border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 ${className}`}>\n      <LexicalComposer initialConfig={initialConfig}>\n        <UpdateStatePlugin value={value} forceUpdate={forceUpdateKey} />\n        <ToolbarPlugin />\n        <div className=\"relative\">\n          <RichTextPlugin\n            contentEditable={<ContentEditable className=\"prose max-w-none p-4 min-h-[200px] outline-none\" />}\n            placeholder={<div className=\"absolute top-4 left-4 text-gray-400 pointer-events-none\">{placeholder}</div>}\n            ErrorBoundary={LexicalErrorBoundary}\n          />\n          <OnChangePlugin onChange={handleChange} />\n          <HistoryPlugin />\n          <ListPlugin />\n          <LinkPlugin />\n          <ImageUploadPlugin />\n        </div>\n      </LexicalComposer>\n    </div>\n  )\n}\n\nexport default LexicalEditor\n\n","import React, { useState, useMemo, useRef, useEffect } from 'react'\nimport { motion } from 'framer-motion'\nimport { useParams, Link, useNavigate, useLocation } from 'react-router-dom'\nimport { FaArrowLeft, FaVideo, FaStar, FaCalendar, FaEdit, FaTrash, FaCubes, FaBullseye, FaLightbulb, FaRocket, FaSave, FaTimes } from 'react-icons/fa'\nimport { useAuth } from '../contexts/AuthContext'\nimport { formatDate } from '../utils/dateUtils'\nimport { useVideoLearning, useDeleteVideoLearning, useUpdateVideoLearning } from '../hooks/useVideoLearnings'\nimport { useSkills } from '../hooks/useSkills'\nimport { extractYouTubeId, parseTimestamps, renderHtmlWithTimestamps } from '../utils/videoUtils'\nimport { renderEditorJSData, isLexicalData, renderLexicalData } from '../utils/textUtils'\nimport ReactMarkdown from 'react-markdown'\nimport LexicalEditor from './lexical/LexicalEditor'\nimport { useToastHelpers } from '../hooks/useToast'\nimport { useTranslation } from 'react-i18next'\nimport { getLocalizedField } from '@/utils/i18nUtils'\nimport { SerializedEditorState } from 'lexical'\n\n// 🌟 유튜브 IFrame Player API 타입 정의\ndeclare global {\n  interface Window {\n    YT: any\n    onYouTubeIframeAPIReady: () => void\n  }\n}\n\nconst VideoLearningDetail: React.FC = () => {\n  const { id } = useParams<{ id: string }>()\n  const navigate = useNavigate()\n  const location = useLocation()\n  const { isAuthenticated } = useAuth()\n  const { i18n } = useTranslation()\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\n  \n  const { data: video, isLoading: loading, isError, error } = useVideoLearning(id)\n  const deleteMutation = useDeleteVideoLearning()\n  const updateMutation = useUpdateVideoLearning()\n  const { skillCategories } = useSkills()\n  const { success, error: toastError } = useToastHelpers()\n\n  // 🌟 유튜브 플레이어 ref 및 상태\n  const playerRef = useRef<any>(null)\n  const playerContainerRef = useRef<HTMLDivElement>(null)\n  const [isPlayerReady, setIsPlayerReady] = useState(false)\n  \n  // 🌟 핵심 배움 편집 상태\n  const [isEditingKeyTakeaways, setIsEditingKeyTakeaways] = useState(false)\n  const [editingContent, setEditingContent] = useState<SerializedEditorState | null>(null)\n  \n  // keyTakeaways 문자열을 SerializedEditorState로 변환\n  const parseKeyTakeaways = (value: string | undefined): SerializedEditorState => {\n    if (!value) return { root: { children: [], direction: 'ltr', format: '', indent: 0, type: 'root', version: 1 } }\n    try {\n      const parsed = JSON.parse(value)\n      if (parsed && parsed.root) return parsed\n      // 레거시 Editor.js 데이터도 호환성 위해 처리\n      if (parsed && parsed.blocks) {\n        // Editor.js 데이터는 그대로 반환 (읽기 모드에서 renderEditorJSData 사용)\n        return parsed as any\n      }\n      return { root: { children: [], direction: 'ltr', format: '', indent: 0, type: 'root', version: 1 } }\n    } catch {\n      return { root: { children: [], direction: 'ltr', format: '', indent: 0, type: 'root', version: 1 } }\n    }\n  }\n  \n  const videoId = useMemo(() => {\n    if (video?.videoId) return video.videoId\n    // 호환성: videoUrl이 있으면 ID 추출\n    if ((video as any)?.videoUrl) return extractYouTubeId((video as any).videoUrl)\n    return null\n  }, [video])\n  \n  // 🌟 유튜브 IFrame API 스크립트 로드 및 플레이어 초기화\n  useEffect(() => {\n    if (!videoId) return\n    \n    // YouTube IFrame API 스크립트 로드\n    if (!window.YT) {\n      const tag = document.createElement('script')\n      tag.src = 'https://www.youtube.com/iframe_api'\n      const firstScriptTag = document.getElementsByTagName('script')[0]\n      firstScriptTag.parentNode?.insertBefore(tag, firstScriptTag)\n    }\n    \n    // API 준비 완료 후 플레이어 초기화\n    const initializePlayer = () => {\n      if (window.YT && window.YT.Player && playerContainerRef.current) {\n        playerRef.current = new window.YT.Player(playerContainerRef.current, {\n          videoId: videoId,\n          playerVars: {\n            enablejsapi: 1,\n            origin: window.location.origin,\n            rel: 0,  // 🌟 관련 영상 추천 비활성화 (전문성 유지)\n            modestbranding: 1,  // 🌟 유튜브 로고 최소화 & '동영상 더보기' 툴팁 제거\n            fs: 1,  // 전체 화면 버튼 표시\n            cc_load_policy: 0,  // 자막 자동 로드 비활성화\n            iv_load_policy: 3,  // 🌟 영상 주석(annotations) 비활성화\n            showinfo: 0,  // 🌟 영상 정보 표시 최소화 (구버전 지원)\n            controls: 1,  // 컨트롤러 표시\n          },\n          events: {\n            onReady: () => {\n              console.log('✅ 유튜브 플레이어 준비 완료')\n              setIsPlayerReady(true)\n            },\n          },\n        })\n      }\n    }\n    \n    if (window.YT && window.YT.Player) {\n      initializePlayer()\n    } else {\n      window.onYouTubeIframeAPIReady = initializePlayer\n    }\n    \n    // cleanup\n    return () => {\n      if (playerRef.current && typeof playerRef.current.destroy === 'function') {\n        playerRef.current.destroy()\n      }\n    }\n  }, [videoId])\n\n  // 🌟 연결된 스킬 필터링\n  const linkedSkills = useMemo(() => {\n    if (!video?.skillIds || !skillCategories) return []\n    const allSkills = skillCategories.flatMap(cat => cat.skills || [])\n    return allSkills.filter(skill => skill._id && video.skillIds?.includes(skill._id))\n  }, [video, skillCategories])\n\n  // 🌟 타임스탬프 클릭 핸들러 (유튜브 API 사용)\n  const handleTimestampClick = (seconds: number) => {\n    console.log(`⏰ 타임스탬프 클릭: ${seconds}초로 이동 + 자동 재생`)\n    \n    if (!playerRef.current || !isPlayerReady) {\n      console.warn('⚠️ 플레이어가 아직 준비되지 않았습니다')\n      return\n    }\n    \n    try {\n      // 1. 해당 시간으로 이동 (allowSeekAhead: true)\n      playerRef.current.seekTo(seconds, true)\n      \n      // 2. 즉시 재생 시작\n      playerRef.current.playVideo()\n      \n      console.log(`✅ ${seconds}초로 이동 후 재생 시작`)\n    } catch (error) {\n      console.error('플레이어 제어 오류:', error)\n    }\n  }\n\n  // 🌟 타임스탬프가 포함된 텍스트 렌더링\n  const renderTextWithTimestamps = (text: string) => {\n    if (!text) return null\n    \n    const timestamps = parseTimestamps(text)\n    if (timestamps.length === 0) {\n      return <ReactMarkdown>{text}</ReactMarkdown>\n    }\n\n    const result: (string | JSX.Element)[] = []\n    let lastIndex = 0\n\n    timestamps.forEach((ts, idx) => {\n      // 타임스탬프 이전 텍스트\n      if (ts.position > lastIndex) {\n        const beforeText = text.substring(lastIndex, ts.position)\n        result.push(\n          <span key={`text-${idx}`}>\n            <ReactMarkdown>{beforeText}</ReactMarkdown>\n          </span>\n        )\n      }\n\n      // 타임스탬프 버튼\n      result.push(\n        <button\n          key={`ts-${idx}`}\n          onClick={() => handleTimestampClick(ts.seconds)}\n          className=\"inline-flex items-center px-2 py-1 bg-blue-600 hover:bg-blue-700 text-white rounded font-mono text-xs font-bold transition-colors mx-1\"\n          title={`영상 ${ts.text} 위치로 이동`}\n        >\n          {ts.text}\n        </button>\n      )\n\n      lastIndex = ts.position + ts.text.length\n    })\n\n    // 마지막 텍스트\n    if (lastIndex < text.length) {\n      const afterText = text.substring(lastIndex)\n      result.push(\n        <span key=\"text-last\">\n          <ReactMarkdown>{afterText}</ReactMarkdown>\n        </span>\n      )\n    }\n\n    return <div className=\"space-y-2\">{result}</div>\n  }\n\n  // 삭제 핸들러\n  const handleDeleteVideo = async () => {\n    if (!confirm('이 영상 학습 기록을 삭제하시겠습니까?')) return\n\n    try {\n      await deleteMutation.mutateAsync(id!)\n      navigate('/video-learnings')\n    } catch (error) {\n      console.error('Failed to delete video learning:', error)\n    }\n  }\n\n  // 🌟 핵심 배움 편집 시작\n  const handleStartEdit = () => {\n    setIsEditingKeyTakeaways(true)\n    const parsed = parseKeyTakeaways(video?.keyTakeaways)\n    console.log('📥 편집 모드 진입 - 로드된 데이터:', parsed)\n    setEditingContent(parsed)\n  }\n\n  // 🌟 핵심 배움 편집 취소\n  const handleCancelEdit = () => {\n    setIsEditingKeyTakeaways(false)\n    setEditingContent(null)\n  }\n\n  // 🌟 핵심 배움 저장\n  const handleSaveEdit = async () => {\n    if (!video || !id) return\n\n    try {\n      // 🌟 skillIds와 categoryIds를 문자열 배열로 확실하게 변환\n      const skillIds = (video.skillIds || []).map((skillIdOrObj: any) => \n        typeof skillIdOrObj === 'string' ? skillIdOrObj : skillIdOrObj?._id\n      ).filter(Boolean)\n      \n      const categoryIds = (video.categoryIds || []).map((catIdOrObj: any) => \n        typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id\n      ).filter(Boolean)\n\n      // VideoLearningFormData 타입에 맞게 필요한 필드만 전달\n      const updateData = {\n        title: video.title,\n        videoId: video.videoId,\n        category: video.category,\n        categoryIds: categoryIds,\n        watchDate: video.watchDate,\n        purpose: video.purpose,\n        keyTakeaways: JSON.stringify(editingContent),\n        application: video.application,\n        skillIds: skillIds,\n        rating: video.rating,\n        order: video.order,\n      }\n      \n      console.log('📤 전송 데이터:', updateData)\n      \n      await updateMutation.mutateAsync({\n        id,\n        data: updateData\n      })\n      success('저장 완료', '핵심 배움이 저장되었습니다.')\n      setIsEditingKeyTakeaways(false)\n      setEditingContent(null)\n    } catch (err: any) {\n      console.error('핵심 배움 저장 실패:', err)\n      console.error('📋 서버 응답 상세:', err.response?.data)\n      toastError('저장 실패', err.response?.data?.message || '핵심 배움 저장 중 오류가 발생했습니다.')\n    }\n  }\n  \n  const isDeleting = deleteMutation.isPending\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    )\n  }\n\n  if (!video) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <FaVideo className=\"text-6xl text-gray-400 mx-auto mb-4\" />\n          <p className=\"text-xl text-gray-600 dark:text-gray-400\">영상 학습 기록을 찾을 수 없습니다</p>\n          <Link \n            to=\"/video-learnings\" \n            state={location.state}\n            className=\"text-primary-600 hover:text-primary-700 mt-4 inline-block\"\n          >\n            목록으로 돌아가기\n          </Link>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <section className=\"min-h-screen bg-white dark:bg-dark-900\">\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\n        {/* 뒤로가기 버튼 */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"mb-6\"\n        >\n          <Link\n            to=\"/video-learnings\"\n            state={location.state}\n            className=\"inline-flex items-center gap-2 text-primary-600 hover:text-primary-700\"\n          >\n            <FaArrowLeft /> 목록으로 돌아가기\n          </Link>\n        </motion.div>\n\n        {/* 2단 레이아웃 컨테이너 */}\n        <div className=\"flex flex-col lg:flex-row gap-6\">\n          \n          {/* ========== 왼쪽 영역: 플레이어 + 핵심 배움 ========== */}\n          <div className=\"w-full lg:w-7/12 space-y-6\">\n            \n            {/* 유튜브 플레이어 */}\n            {videoId && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                className=\"lg:sticky lg:top-8 self-start\"\n              >\n                <div className=\"aspect-video rounded-xl overflow-hidden shadow-2xl bg-black relative\">\n                  <div \n                    ref={playerContainerRef}\n                    className=\"w-full h-full\"\n                  />\n                  {!isPlayerReady && (\n                    <div className=\"absolute inset-0 flex items-center justify-center bg-gray-900 bg-opacity-75\">\n                      <div className=\"w-12 h-12 border-4 border-white border-t-transparent rounded-full animate-spin\"></div>\n                    </div>\n                  )}\n                </div>\n              </motion.div>\n            )}\n\n            {/* 핵심 배움 - 플레이어 바로 아래 */}\n            {(video.keyTakeaways || isAuthenticated) && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.2 }}\n                className=\"card p-6 bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 border-l-4 border-blue-600\"\n              >\n                <div className=\"mb-4\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <h3 className=\"text-xl font-bold text-gray-900 dark:text-white flex items-center gap-2\">\n                      <FaLightbulb className=\"text-yellow-500\" /> 핵심 배움\n                    </h3>\n                    {/* 🌟 편집 버튼 - 인증된 사용자에게만 표시 */}\n                    {isAuthenticated && !isEditingKeyTakeaways && (\n                      <button\n                        onClick={handleStartEdit}\n                        className=\"p-1.5 text-blue-600 hover:bg-blue-50 dark:hover:bg-blue-900/30 rounded transition-colors\"\n                        title=\"핵심 배움 편집\"\n                      >\n                        <FaEdit className=\"text-sm\" />\n                      </button>\n                    )}\n                  </div>\n                  {video.createdAt && (\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      기록 날짜: {formatDate(video.createdAt)}\n                    </p>\n                  )}\n                </div>\n\n                {/* 읽기 모드 */}\n                {!isEditingKeyTakeaways && (\n                  <>\n                    {video.keyTakeaways ? (\n                      <>\n                        <div \n                          className=\"prose dark:prose-invert max-w-none text-gray-700 dark:text-gray-300\"\n                          dangerouslySetInnerHTML={{ \n                            __html: video.keyTakeaways \n                              ? (isLexicalData(JSON.parse(video.keyTakeaways)) \n                                  ? renderLexicalData(video.keyTakeaways)\n                                  : renderEditorJSData(video.keyTakeaways))\n                              : ''\n                          }}\n                          onClick={(e) => {\n                            // 타임스탬프 버튼 클릭 처리\n                            const target = e.target as HTMLElement\n                            if (target.tagName === 'BUTTON' && target.dataset.timestamp) {\n                              const seconds = parseInt(target.dataset.timestamp, 10)\n                              handleTimestampClick(seconds)\n                            }\n                          }}\n                        />\n                      </>\n                    ) : (\n                      <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\n                        <p className=\"text-sm\">이 영상의 핵심 배움이 아직 기록되지 않았습니다</p>\n                        {isAuthenticated && (\n                          <p className=\"text-xs mt-2\">위의 연필 버튼을 클릭하여 학습 기록을 추가하세요</p>\n                        )}\n                      </div>\n                    )}\n                  </>\n                )}\n\n                {/* 🌟 편집 모드 */}\n                {isEditingKeyTakeaways && editingContent && (\n                  <div>\n                    <LexicalEditor\n                      value={editingContent}\n                      onChange={setEditingContent}\n                      placeholder=\"영상을 보면서 핵심 배움을 작성하세요. 다양한 서식을 적용할 수 있습니다.\"\n                      className=\"min-h-[250px]\"\n                    />\n                    <div className=\"flex gap-2 mt-4\">\n                      <button\n                        onClick={handleSaveEdit}\n                        disabled={updateMutation.isPending}\n                        className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors text-sm font-medium\"\n                      >\n                        <FaSave />\n                        {updateMutation.isPending ? '저장 중...' : '저장'}\n                      </button>\n                      <button\n                        onClick={handleCancelEdit}\n                        disabled={updateMutation.isPending}\n                        className=\"flex items-center gap-2 px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors text-sm font-medium\"\n                      >\n                        <FaTimes />\n                        취소\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </motion.div>\n            )}\n          </div>\n\n          {/* ========== 오른쪽 영역: 학습 기록 ========== */}\n          <div className=\"w-full lg:w-5/12 space-y-6\">\n\n            {/* 영상 정보 카드 */}\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.1 }}\n              className=\"card p-6\"\n            >\n              <div className=\"flex items-start justify-between mb-4\">\n                {/* 카테고리 배지 (복수 표시) */}\n                <div className=\"flex flex-wrap gap-2\">\n                  {video.categoryIds && video.categoryIds.length > 0 ? (\n                    (video.categoryIds as any[]).map((catIdOrObj: any) => {\n                      const catName = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?.name\n                      return catName ? (\n                        <span \n                          key={typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id}\n                          className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\"\n                        >\n                          {catName}\n                        </span>\n                      ) : null\n                    })\n                  ) : (\n                    // 호환성: categoryIds가 없으면 기존 category 표시\n                    video.category && (\n                      <span className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\">\n                        {video.category}\n                      </span>\n                    )\n                  )}\n                </div>\n                {isAuthenticated && (\n                  <div className=\"flex gap-2\">\n                    <Link\n                      to={`/admin`}\n                      state={{ tab: 'videoLearnings', editId: video._id }}\n                      className=\"p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 text-blue-600 dark:text-blue-400\"\n                      aria-label=\"영상 수정\"\n                    >\n                      <FaEdit />\n                    </Link>\n                    <button\n                      onClick={handleDeleteVideo}\n                      disabled={isDeleting}\n                      className={`p-2 rounded-lg text-red-600 dark:text-red-400 transition-colors ${\n                        isDeleting \n                          ? 'opacity-50 cursor-not-allowed' \n                          : 'hover:bg-gray-100 dark:hover:bg-gray-700'\n                      }`}\n                      aria-label=\"영상 삭제\"\n                    >\n                      {isDeleting ? (\n                        <div className=\"w-4 h-4 border-2 border-red-600 border-t-transparent rounded-full animate-spin\" />\n                      ) : (\n                        <FaTrash />\n                      )}\n                    </button>\n                  </div>\n                )}\n              </div>\n\n              <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">\n                {video.title}\n              </h1>\n\n              <div className=\"flex flex-wrap gap-4 text-sm text-gray-600 dark:text-gray-400\">\n                {video.rating && (\n                  <div className=\"flex items-center gap-2\">\n                    {Array.from({ length: 5 }, (_, i) => (\n                      <FaStar \n                        key={i} \n                        className={`text-sm ${i < video.rating! ? 'text-yellow-500' : 'text-gray-300 dark:text-gray-600'}`} \n                      />\n                    ))}\n                    <span className=\"font-medium\">{video.rating}/5</span>\n                  </div>\n                )}\n                <div className=\"flex items-center gap-2\">\n                  <FaCalendar />\n                  <span>{formatDate(video.watchDate)}</span>\n                </div>\n              </div>\n            </motion.div>\n\n            {/* 연결된 스킬 */}\n            {linkedSkills.length > 0 && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.2 }}\n                className=\"card p-6\"\n              >\n                <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4 flex items-center gap-2\">\n                  <FaCubes className=\"text-primary-600\" /> 학습한 기술\n                </h3>\n                <div className=\"flex flex-wrap gap-2\">\n                  {linkedSkills.map(skill => (\n                    <div\n                      key={skill._id}\n                      className=\"inline-flex items-center px-3 py-1 rounded-lg text-sm font-medium\"\n                      style={{\n                        backgroundColor: `${skill.color}26`,\n                        color: skill.color,\n                      }}\n                    >\n                      {skill.name}\n                    </div>\n                  ))}\n                </div>\n              </motion.div>\n            )}\n\n            {/* 시청 목적 */}\n            {video.purpose && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.3 }}\n                className=\"card p-6 mb-6\"\n              >\n                <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-3 flex items-center gap-2\">\n                  <FaBullseye className=\"text-blue-600\" /> 시청 목적\n                </h3>\n                <div className=\"prose dark:prose-invert max-w-none text-gray-700 dark:text-gray-300 text-sm\">\n                  <ReactMarkdown>{video.purpose}</ReactMarkdown>\n                </div>\n              </motion.div>\n            )}\n\n            {/* 통합 적용 계획 */}\n            {video.application && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.4 }}\n                className=\"card p-6 bg-gradient-to-br from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20 border-l-4 border-purple-600\"\n              >\n                <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-3 flex items-center gap-2\">\n                  <FaRocket className=\"text-purple-600\" /> 적용 계획\n                </h3>\n                <div className=\"prose dark:prose-invert max-w-none text-gray-700 dark:text-gray-300 text-sm\">\n                  <ReactMarkdown>{video.application}</ReactMarkdown>\n                </div>\n              </motion.div>\n            )}\n          </div>\n          {/* 오른쪽 영역 끝 */}\n          \n        </div>\n        {/* 2단 레이아웃 컨테이너 끝 */}\n      </div>\n    </section>\n  )\n}\n\nexport default VideoLearningDetail\n\n","import React, { useState, useMemo, useRef, useEffect } from 'react'\nimport { motion } from 'framer-motion'\nimport { useParams, Link, useNavigate, useLocation } from 'react-router-dom'\nimport { FaArrowLeft, FaList, FaStar, FaCalendar, FaEdit, FaTrash, FaCubes, FaBullseye, FaRocket, FaChevronDown, FaChevronUp, FaSave, FaTimes } from 'react-icons/fa'\nimport { useAuth } from '../contexts/AuthContext'\nimport { formatDate } from '../utils/dateUtils'\nimport { useVideoPlaylist, useDeleteVideoPlaylist, usePlaylistVideos, useUpdatePlaylistVideo } from '../hooks/useVideoPlaylists'\nimport { useSkills } from '../hooks/useSkills'\nimport ReactMarkdown from 'react-markdown'\nimport { renderTextWithTimestamps, renderHtmlWithTimestamps } from '../utils/videoUtils'\nimport { renderEditorJSData, isLexicalData, renderLexicalData } from '../utils/textUtils'\nimport LexicalEditor from './lexical/LexicalEditor'\nimport { useToastHelpers } from '../hooks/useToast'\nimport { useTranslation } from 'react-i18next'\nimport { getLocalizedField } from '@/utils/i18nUtils'\nimport { SerializedEditorState } from 'lexical'\n\n// 유튜브 IFrame Player API 타입 정의\ndeclare global {\n  interface Window {\n    YT: any\n    onYouTubeIframeAPIReady: () => void\n  }\n}\n\nconst VideoPlaylistDetail: React.FC = () => {\n  const { id } = useParams<{ id: string }>()\n  const navigate = useNavigate()\n  const location = useLocation()\n  const { isAuthenticated } = useAuth()\n  const { i18n } = useTranslation()\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\n  \n  const { data: playlist, isLoading: loading } = useVideoPlaylist(id)\n  const { data: playlistVideos = [] } = usePlaylistVideos(id)\n  const deleteMutation = useDeleteVideoPlaylist()\n  const updateVideoMutation = useUpdatePlaylistVideo()\n  const { skillCategories } = useSkills()\n  const { success, error } = useToastHelpers()\n\n  const playerRef = useRef<any>(null)\n  const playerContainerRef = useRef<HTMLDivElement>(null)\n  const [isPlayerReady, setIsPlayerReady] = useState(false)\n  const [activeVideoId, setActiveVideoId] = useState<string | null>(null)\n  const [expandedVideoId, setExpandedVideoId] = useState<string | null>(null)\n  const [activeVideoTab, setActiveVideoTab] = useState<string | null>(null)\n  const [showVideoTabs, setShowVideoTabs] = useState(true)\n  \n  // 🌟 핵심 배움 편집 상태\n  const [editingVideoId, setEditingVideoId] = useState<string | null>(null)\n  const [editingContent, setEditingContent] = useState<SerializedEditorState>({ root: { children: [], direction: 'ltr', format: '', indent: 0, type: 'root', version: 1 } })\n  \n  // keyTakeaways 문자열을 SerializedEditorState로 변환\n  const parseKeyTakeaways = (value: string | undefined): SerializedEditorState => {\n    if (!value) return { root: { children: [], direction: 'ltr', format: '', indent: 0, type: 'root', version: 1 } }\n    try {\n      const parsed = JSON.parse(value)\n      if (parsed && parsed.root) return parsed\n      // 레거시 Editor.js 데이터도 호환성 위해 처리\n      if (parsed && parsed.blocks) {\n        return parsed as any\n      }\n      return { root: { children: [], direction: 'ltr', format: '', indent: 0, type: 'root', version: 1 } }\n    } catch {\n      return { root: { children: [], direction: 'ltr', format: '', indent: 0, type: 'root', version: 1 } }\n    }\n  }\n\n\n  // 첫 번째 영상을 기본 활성 영상으로 설정\n  useEffect(() => {\n    if (playlistVideos.length > 0 && !activeVideoId) {\n      setActiveVideoId(playlistVideos[0].videoId)\n    }\n  }, [playlistVideos, activeVideoId])\n\n  // 유튜브 IFrame API 초기화\n  useEffect(() => {\n    if (!playlist?.playlistId) return\n    \n    if (!window.YT) {\n      const tag = document.createElement('script')\n      tag.src = 'https://www.youtube.com/iframe_api'\n      const firstScriptTag = document.getElementsByTagName('script')[0]\n      firstScriptTag.parentNode?.insertBefore(tag, firstScriptTag)\n    }\n    \n    const initializePlayer = () => {\n      if (window.YT && window.YT.Player && playerContainerRef.current) {\n        playerRef.current = new window.YT.Player(playerContainerRef.current, {\n          playerVars: {\n            listType: 'playlist',\n            list: playlist.playlistId,\n            enablejsapi: 1,\n            origin: window.location.origin,\n            rel: 0,\n            modestbranding: 1,\n            fs: 1,\n            cc_load_policy: 0,\n            iv_load_policy: 3,\n            showinfo: 0,\n          },\n          events: {\n            onReady: () => {\n              setIsPlayerReady(true)\n            },\n          },\n        })\n      }\n    }\n    \n    if (window.YT && window.YT.Player) {\n      initializePlayer()\n    } else {\n      window.onYouTubeIframeAPIReady = initializePlayer\n    }\n    \n    return () => {\n      if (playerRef.current && typeof playerRef.current.destroy === 'function') {\n        playerRef.current.destroy()\n      }\n    }\n  }, [playlist?.playlistId])\n\n  // 첫 번째 영상을 기본 활성 탭으로 설정\n  useEffect(() => {\n    if (playlistVideos.length > 0 && !activeVideoTab) {\n      setActiveVideoTab(playlistVideos[0]._id)\n    }\n  }, [playlistVideos, activeVideoTab])\n\n  // 연결된 스킬\n  const linkedSkills = useMemo(() => {\n    if (!playlist?.skillIds || !skillCategories) return []\n    const allSkills = skillCategories.flatMap(cat => cat.skills || [])\n    return allSkills.filter(skill => skill._id && playlist.skillIds?.includes(skill._id))\n  }, [playlist, skillCategories])\n\n  // 활성 영상\n  const activeVideo = useMemo(() => \n    playlistVideos.find(v => v._id === activeVideoTab),\n    [playlistVideos, activeVideoTab]\n  )\n\n  // 탭 클릭 시 영상 전환\n  const handleVideoTabClick = (video: any, index: number) => {\n    setActiveVideoTab(video._id)\n    handleTimestampClick(video.videoId, 0)\n  }\n\n  // 타임스탬프 클릭 핸들러 (영상 전환 + 시간 이동 + 자동 재생)\n  const handleTimestampClick = (targetVideoId: string, seconds: number) => {\n    if (!isPlayerReady || !playerRef.current) {\n      return\n    }\n\n    try {\n      const videoIndex = playlistVideos.findIndex(v => v.videoId === targetVideoId)\n      \n      if (videoIndex === -1) {\n        return\n      }\n\n      // 영상 전환\n      playerRef.current.playVideoAt(videoIndex)\n      setActiveVideoId(targetVideoId)\n      \n      // 시간 이동 + 자동 재생\n      setTimeout(() => {\n        playerRef.current.seekTo(seconds, true)\n        playerRef.current.playVideo()\n      }, 1000)\n      \n    } catch (error) {\n      console.error('타임스탬프 이동 실패:', error)\n    }\n  }\n\n\n  // 재생 목록 삭제 핸들러\n  const handleDelete = async () => {\n    if (!confirm('이 재생 목록을 삭제하시겠습니까?')) return\n\n    try {\n      await deleteMutation.mutateAsync(id!)\n      navigate('/video-learnings')\n    } catch (error) {\n      console.error('삭제 실패:', error)\n    }\n  }\n\n  // 🌟 핵심 배움 편집 시작\n  const handleStartEdit = (video: any) => {\n    setEditingVideoId(video._id)\n    setEditingContent(parseKeyTakeaways(video.keyTakeaways))\n  }\n\n  // 🌟 핵심 배움 편집 취소\n  const handleCancelEdit = () => {\n    setEditingVideoId(null)\n    setEditingContent({ root: { children: [], direction: 'ltr', format: '', indent: 0, type: 'root', version: 1 } })\n  }\n\n  // 🌟 핵심 배움 저장\n  const handleSaveEdit = async () => {\n    if (!editingVideoId || !activeVideo) return\n\n    try {\n      await updateVideoMutation.mutateAsync({\n        id: editingVideoId,\n        data: {\n          playlistId: id!,\n          videoId: activeVideo.videoId,\n          title: activeVideo.title,\n          keyTakeaways: JSON.stringify(editingContent),\n          order: activeVideo.order || 0,\n        }\n      })\n      success('저장 완료', '핵심 배움이 저장되었습니다.')\n      setEditingVideoId(null)\n      setEditingContent({ root: { children: [], direction: 'ltr', format: '', indent: 0, type: 'root', version: 1 } })\n    } catch (err) {\n      error('저장 실패', '핵심 배움 저장 중 오류가 발생했습니다.')\n      console.error('핵심 배움 저장 실패:', err)\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    )\n  }\n\n  if (!playlist) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <FaList className=\"text-6xl text-gray-400 mx-auto mb-4\" />\n          <p className=\"text-xl text-gray-600 dark:text-gray-400\">재생 목록을 찾을 수 없습니다</p>\n          <Link \n            to=\"/video-learnings\" \n            state={location.state}\n            className=\"text-primary-600 hover:text-primary-700 mt-4 inline-block\"\n          >\n            목록으로 돌아가기\n          </Link>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <section className=\"min-h-screen bg-white dark:bg-dark-900\">\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\n        {/* 뒤로가기 버튼 */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"mb-6\"\n        >\n          <Link\n            to=\"/video-learnings\"\n            state={location.state}\n            className=\"inline-flex items-center gap-2 text-primary-600 hover:text-primary-700\"\n          >\n            <FaArrowLeft /> 목록으로 돌아가기\n          </Link>\n        </motion.div>\n\n        {/* 2단 레이아웃 컨테이너 */}\n        <div className=\"flex flex-col lg:flex-row gap-6\">\n          \n          {/* ========== 왼쪽 영역: 플레이어 + 기본 정보 ========== */}\n          <div className=\"w-full lg:w-7/12 lg:sticky lg:top-8 self-start\">\n            \n            {/* 유튜브 재생 목록 플레이어 */}\n            {playlist.playlistId && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                className=\"mb-6\"\n              >\n                <div className=\"aspect-video rounded-xl overflow-hidden shadow-2xl bg-black relative\">\n                  <div \n                    ref={playerContainerRef}\n                    className=\"w-full h-full\"\n                  />\n                  {!isPlayerReady && (\n                    <div className=\"absolute inset-0 flex items-center justify-center bg-gray-900 bg-opacity-75\">\n                      <div className=\"w-12 h-12 border-4 border-white border-t-transparent rounded-full animate-spin\"></div>\n                    </div>\n                  )}\n                </div>\n              </motion.div>\n            )}\n\n            {/* 기본 정보 카드 */}\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.1 }}\n              className=\"card p-6 mb-6\"\n            >\n              <div className=\"flex items-start justify-between mb-4\">\n                {/* 카테고리 배지 (복수 표시) */}\n                <div className=\"flex flex-wrap gap-2\">\n                  {playlist.categoryIds && playlist.categoryIds.length > 0 ? (\n                    (playlist.categoryIds as any[]).map((catIdOrObj: any) => {\n                      const catName = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?.name\n                      return catName ? (\n                        <span \n                          key={typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id}\n                          className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\"\n                        >\n                          {catName}\n                        </span>\n                      ) : null\n                    })\n                  ) : (\n                    // 호환성: categoryIds가 없으면 기존 category 표시\n                    playlist.category && (\n                      <span className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\">\n                        {playlist.category}\n                      </span>\n                    )\n                  )}\n                </div>\n                {isAuthenticated && (\n                  <div className=\"flex gap-2\">\n                    <Link\n                      to={`/admin`}\n                      state={{ tab: 'videoPlaylists', editId: playlist._id }}\n                      className=\"p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 text-blue-600 dark:text-blue-400\"\n                      aria-label=\"재생 목록 수정\"\n                    >\n                      <FaEdit />\n                    </Link>\n                    <button\n                      onClick={handleDelete}\n                      disabled={deleteMutation.isPending}\n                      className=\"p-2 rounded-lg text-red-600 dark:text-red-400 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                      aria-label=\"재생 목록 삭제\"\n                    >\n                      <FaTrash />\n                    </button>\n                  </div>\n                )}\n              </div>\n\n              <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">\n                {playlist.title}\n              </h1>\n\n              <div className=\"flex flex-wrap gap-4 text-sm text-gray-600 dark:text-gray-400\">\n                {playlist.rating && (\n                  <div className=\"flex items-center gap-2\">\n                    {Array.from({ length: 5 }, (_, i) => (\n                      <FaStar \n                        key={i} \n                        className={`text-sm ${i < playlist.rating! ? 'text-yellow-500' : 'text-gray-300 dark:text-gray-600'}`} \n                      />\n                    ))}\n                    <span className=\"font-medium\">{playlist.rating}/5</span>\n                  </div>\n                )}\n                <div className=\"flex items-center gap-2\">\n                  <FaCalendar />\n                  <span>{formatDate(playlist.watchDate)}</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <FaList />\n                  <span>{playlistVideos.length}개 영상</span>\n                </div>\n              </div>\n            </motion.div>\n\n            {/* 시청 목적 */}\n            {playlist.purpose && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.2 }}\n                className=\"card p-6 mb-6\"\n              >\n                <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-3 flex items-center gap-2\">\n                  <FaBullseye className=\"text-blue-600\" /> 시청 목적\n                </h3>\n                <div className=\"prose dark:prose-invert max-w-none text-gray-700 dark:text-gray-300 text-sm\">\n                  <ReactMarkdown>{playlist.purpose}</ReactMarkdown>\n                </div>\n              </motion.div>\n            )}\n\n            {/* 통합 적용 계획 */}\n            {playlist.application && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.3 }}\n                className=\"card p-6 bg-gradient-to-br from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20 border-l-4 border-purple-600\"\n              >\n                <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-3 flex items-center gap-2\">\n                  <FaRocket className=\"text-purple-600\" /> 통합 적용 계획\n                </h3>\n                <div className=\"prose dark:prose-invert max-w-none text-gray-700 dark:text-gray-300 text-sm\">\n                  <ReactMarkdown>{playlist.application}</ReactMarkdown>\n                </div>\n              </motion.div>\n            )}\n          </div>\n\n          {/* ========== 오른쪽 영역: 학습 기록 ========== */}\n          <div className=\"w-full lg:w-5/12 space-y-6\">\n\n            {/* 연결된 스킬 */}\n            {linkedSkills.length > 0 && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.2 }}\n                className=\"card p-6 mb-6\"\n              >\n                <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4 flex items-center gap-2\">\n                  <FaCubes className=\"text-primary-600\" /> 학습한 기술\n                </h3>\n                <div className=\"flex flex-wrap gap-2\">\n                  {linkedSkills.map(skill => (\n                    <div\n                      key={skill._id}\n                      className=\"inline-flex items-center px-3 py-1 rounded-lg text-sm font-medium\"\n                      style={{\n                        backgroundColor: `${skill.color}26`,\n                        color: skill.color,\n                      }}\n                    >\n                      {skill.name}\n                    </div>\n                  ))}\n                </div>\n              </motion.div>\n            )}\n\n            {/* 영상별 학습 기록 - 탭 형태 */}\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.4 }}\n              className=\"card p-6\"\n            >\n          <div className=\"flex items-center justify-between mb-4\">\n            <button\n              onClick={() => setShowVideoTabs(!showVideoTabs)}\n              className=\"flex items-center gap-2 text-xl font-bold text-gray-900 dark:text-white hover:text-primary-600 dark:hover:text-primary-400 transition-colors\"\n            >\n              {showVideoTabs ? <FaChevronUp /> : <FaChevronDown />}\n              📹 영상별 학습 기록 ({playlistVideos.length}개)\n            </button>\n          </div>\n          \n          {/* 영상 탭 버튼들 - 토글 가능 */}\n          {showVideoTabs && playlistVideos.length > 0 && (\n            <div className=\"flex flex-wrap gap-2 mb-4\">\n              {playlistVideos.map((video, index) => (\n                <button\n                  key={video._id}\n                  onClick={() => handleVideoTabClick(video, index)}\n                  className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\n                    activeVideoTab === video._id\n                      ? 'bg-primary-600 text-white'\n                      : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\n                  }`}\n                >\n                  #{index + 1} {video.title}\n                </button>\n              ))}\n            </div>\n          )}\n\n          {/* 활성 영상의 학습 기록 */}\n          {playlistVideos.length > 0 && activeVideo ? (\n            <div className=\"border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden\">\n              {/* 영상 헤더 */}\n              <div className=\"p-4 bg-gray-50 dark:bg-gray-800\">\n                <h4 className=\"font-bold text-gray-900 dark:text-white mb-1\">\n                  {activeVideo.title}\n                </h4>\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      유튜브 영상 ID: {activeVideo.videoId}\n                    </p>\n                    {activeVideo.createdAt && (\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        기록 날짜: {formatDate(activeVideo.createdAt)}\n                      </p>\n                    )}\n                  </div>\n                  {/* 🌟 편집 버튼 - 인증된 사용자에게만 표시 */}\n                  {isAuthenticated && editingVideoId !== activeVideo._id && (\n                    <button\n                      onClick={() => handleStartEdit(activeVideo)}\n                      className=\"p-1.5 text-blue-600 hover:bg-blue-50 dark:hover:bg-blue-900/30 rounded transition-colors\"\n                      title=\"핵심 배움 편집\"\n                    >\n                      <FaEdit className=\"text-sm\" />\n                    </button>\n                  )}\n                </div>\n              </div>\n\n              {/* 핵심 배움 - 읽기 모드 */}\n              {editingVideoId !== activeVideo._id && (\n                <>\n                  {activeVideo.keyTakeaways ? (\n                    <div className=\"p-4 bg-white dark:bg-gray-900\">\n                      <h5 className=\"text-sm font-bold text-gray-700 dark:text-gray-300 mb-3\">\n                        🎯 핵심 배움\n                      </h5>\n                      <div \n                        className=\"prose dark:prose-invert max-w-none text-gray-700 dark:text-gray-300 leading-relaxed\"\n                        dangerouslySetInnerHTML={{ \n                          __html: activeVideo.keyTakeaways \n                            ? (isLexicalData(JSON.parse(activeVideo.keyTakeaways)) \n                                ? renderLexicalData(activeVideo.keyTakeaways)\n                                : renderEditorJSData(activeVideo.keyTakeaways))\n                            : ''\n                        }}\n                        onClick={(e) => {\n                          // 타임스탬프 버튼 클릭 처리\n                          const target = e.target as HTMLElement\n                          if (target.tagName === 'BUTTON' && target.dataset.timestamp) {\n                            const seconds = parseInt(target.dataset.timestamp, 10)\n                            handleTimestampClick(activeVideo.videoId, seconds)\n                          }\n                        }}\n                      />\n                    </div>\n                  ) : (\n                    <div className=\"p-4 bg-white dark:bg-gray-900 text-center text-gray-500 dark:text-gray-400\">\n                      <p className=\"text-sm\">이 영상의 핵심 배움이 아직 기록되지 않았습니다</p>\n                      {isAuthenticated && (\n                        <p className=\"text-xs mt-2\">위의 연필 버튼을 클릭하여 학습 기록을 추가하세요</p>\n                      )}\n                    </div>\n                  )}\n                </>\n              )}\n\n              {/* 🌟 핵심 배움 - 편집 모드 */}\n              {editingVideoId === activeVideo._id && (\n                <div className=\"p-4 bg-white dark:bg-gray-900\">\n                  <h5 className=\"text-sm font-bold text-gray-700 dark:text-gray-300 mb-3\">\n                    ✏️ 핵심 배움 편집\n                  </h5>\n                  <LexicalEditor\n                    value={editingContent}\n                    onChange={setEditingContent}\n                    placeholder=\"영상을 보면서 핵심 배움을 작성하세요. 다양한 서식을 적용할 수 있습니다.\"\n                    className=\"min-h-[250px]\"\n                  />\n                  <div className=\"flex gap-2 mt-4\">\n                    <button\n                      onClick={handleSaveEdit}\n                      disabled={updateVideoMutation.isPending}\n                      className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors text-sm font-medium\"\n                    >\n                      <FaSave />\n                      {updateVideoMutation.isPending ? '저장 중...' : '저장'}\n                    </button>\n                    <button\n                      onClick={handleCancelEdit}\n                      disabled={updateVideoMutation.isPending}\n                      className=\"flex items-center gap-2 px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors text-sm font-medium\"\n                    >\n                      <FaTimes />\n                      취소\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : playlistVideos.length === 0 ? (\n            <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\n              <p className=\"mb-4\">아직 등록된 영상 학습 기록이 없습니다</p>\n              {isAuthenticated && (\n                <p className=\"text-sm\">관리자 페이지의 재생 목록 수정에서 영상을 추가해주세요</p>\n              )}\n            </div>\n          ) : null}\n            </motion.div>\n          </div>\n          {/* 오른쪽 영역 끝 */}\n          \n        </div>\n        {/* 2단 레이아웃 컨테이너 끝 */}\n      </div>\n    </section>\n  )\n}\n\nexport default VideoPlaylistDetail\n\n","import React from 'react'\nimport { motion } from 'framer-motion'\nimport { Link } from 'react-router-dom'\nimport { FaGithub, FaExternalLinkAlt, FaImage } from 'react-icons/fa'\nimport { Project } from '../types'\nimport { useTranslation } from 'react-i18next'\nimport { getLocalizedField, getLocalizedArrayField } from '@/utils/i18nUtils'\n\ninterface ProjectCardProps {\n  project: Project\n  itemVariants: any // framer-motion variants 타입\n  getStatusColor: (status: string) => string\n  getStatusText: (status: string) => string\n}\n\n// 기술 스택 최대 표시 개수 상수\nconst MAX_TECH_DISPLAY = 5\n\nconst ProjectCard: React.FC<ProjectCardProps> = ({ project, itemVariants, getStatusColor, getStatusText }) => {\n  const { i18n } = useTranslation()\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\n  \n  // Get localized technologies\n  const technologies = getLocalizedArrayField(\n    currentLang,\n    project.technologies,\n    project.technologiesEn,\n    project.technologiesJa\n  )\n  \n  // 프로젝트 링크 존재 여부 확인\n  const hasLinks = project.githubLink || project.liveLink\n\n  return (\n    <motion.div\n      key={project._id}\n      variants={itemVariants}\n      // 레이아웃 변경 시 부드러운 전환을 위해 layout 속성 추가\n      layout\n      className=\"card overflow-hidden bg-white dark:bg-dark-800 rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 flex flex-col cursor-pointer group\"\n    >\n      <Link \n        to={`/projects/${project._id}`}\n        state={{ scrollPosition: window.scrollY }}\n        className=\"block flex flex-col h-full\"\n      >\n      <div className=\"h-48 bg-cream-200 dark:bg-dark-700 flex items-center justify-center relative flex-shrink-0\">\n        {project.image ? (\n          <img \n            src={project.image} \n            alt={`${project.title} 썸네일`} \n            className=\"w-full h-full object-cover\"\n            loading=\"lazy\"\n            decoding=\"async\"\n            width=\"640\"\n            height=\"192\"\n          />\n        ) : (\n          <FaImage className=\"text-dark-400 dark:text-dark-500 text-5xl\" />\n        )}\n        <div className=\"absolute top-4 right-4\">\n          <span className={`px-3 py-1 rounded-full text-sm font-medium ${getStatusColor(project.status)}`}>\n            {getStatusText(project.status)}\n          </span>\n        </div>\n      </div>\n      <div className=\"p-8 flex flex-col flex-grow\">\n        <h3 className=\"text-xl font-bold text-dark-900 dark:text-cream-100 mb-3 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors\">\n          {getLocalizedField(currentLang, project.title, project.titleEn, project.titleJa)}\n        </h3>\n        <p className=\"text-dark-600 dark:text-dark-300 mb-6 leading-relaxed flex-grow\">\n          {getLocalizedField(currentLang, project.description, project.descriptionEn, project.descriptionJa)}\n        </p>\n        <div className=\"flex flex-wrap gap-2 mb-4\">\n          {technologies.slice(0, MAX_TECH_DISPLAY).map((tech) => (\n            <span\n              key={tech}\n              className=\"px-3 py-1 bg-coffee-50 dark:bg-coffee-900 text-coffee-700 dark:text-coffee-300 rounded-lg text-sm font-medium\"\n            >\n              {tech}\n            </span>\n          ))}\n          {technologies.length > MAX_TECH_DISPLAY && (\n            <span className=\"px-3 py-1 bg-cream-200 dark:bg-dark-700 text-dark-500 dark:text-dark-400 rounded-lg text-sm font-medium\">\n              외 {technologies.length - MAX_TECH_DISPLAY}개\n            </span>\n          )}\n        </div>\n        <div \n          className=\"flex flex-wrap gap-4 pt-4 border-t border-cream-200 dark:border-dark-700\"\n          onClick={(e) => e.stopPropagation()}\n        >\n          {hasLinks ? (\n            <>\n              {project.liveLink && (\n                <a \n                  href={project.liveLink}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className={`px-4 py-2 rounded-xl font-bold transition-all duration-200 flex items-center gap-2 \n                    ${project.status === 'completed' \n                      ? 'bg-coffee-600 text-white hover:bg-coffee-700 shadow-md'\n                      : 'bg-cream-200 dark:bg-dark-700 text-dark-700 dark:text-dark-300 hover:bg-cream-300 dark:hover:bg-dark-600'\n                    }`}\n                  aria-label={`${project.title} 라이브 데모 보기`}\n                >\n                  <FaExternalLinkAlt size={16} />\n                  라이브 보기\n                </a>\n              )}\n              {project.githubLink && (\n                <a \n                  href={project.githubLink}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"px-4 py-2 rounded-xl font-medium transition-all duration-200 flex items-center gap-2 bg-white dark:bg-dark-900 text-dark-600 dark:text-dark-300 hover:bg-cream-100 dark:hover:bg-dark-700 border border-cream-200 dark:border-dark-700\"\n                  aria-label={`${project.title} GitHub 레포지토리`}\n                >\n                  <FaGithub size={20} />\n                  GitHub\n                </a>\n              )}\n            </>\n          ) : null}\n        </div>\n      </div>\n      </Link>\n    </motion.div>\n  )\n}\n\nexport default ProjectCard\n","import React, { useState } from 'react'\nimport { useParams, useNavigate, Link, useLocation } from 'react-router-dom'\nimport { motion } from 'framer-motion'\nimport { FaArrowLeft, FaGithub, FaExternalLinkAlt, FaPlay, FaImage, FaCode, FaChevronLeft, FaChevronRight } from 'react-icons/fa'\nimport { useTranslation } from 'react-i18next'\nimport { useProjectDetail } from '../hooks/useProjectDetail'\n\nconst ProjectDetail: React.FC = () => {\n  const { id } = useParams<{ id: string }>()\n  const navigate = useNavigate()\n  const location = useLocation()\n  const { i18n } = useTranslation()\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja'\n  \n  // Use custom hook for data fetching and i18n processing\n  const { loading, error, localizedProject, linkedSkills } = useProjectDetail(id, currentLang)\n  \n  // UI state management\n  const [selectedImage, setSelectedImage] = useState<string | null>(null)\n  const [currentVideoIndex, setCurrentVideoIndex] = useState(0)\n  const [currentShortsIndex, setCurrentShortsIndex] = useState(0)\n\n  // Utility function for skill badge styling\n  const getBadgeStyle = (colorCode: string) => {\n    const bgColor = `${colorCode}26`\n    const textColor = colorCode\n    \n    return {\n      backgroundColor: bgColor,\n      color: textColor,\n    } as React.CSSProperties\n  }\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    )\n  }\n\n  if (error || !localizedProject) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <p className=\"text-xl text-gray-600 dark:text-gray-400 mb-4\">{error || '프로젝트를 찾을 수 없습니다.'}</p>\n          <button\n            onClick={() => navigate('/projects', { state: location.state })}\n            className=\"text-primary-600 hover:text-primary-700\"\n          >\n            목록으로 돌아가기\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  const isYouTubeUrl = (url: string) => {\n    return url.includes('youtube.com') || url.includes('youtu.be')\n  }\n\n  // 🌟 유튜브 쇼츠 URL 판별 함수 추가\n  const isYouTubeShorts = (url: string) => {\n    return url.includes('youtube.com/shorts/')\n  }\n\n  const getYouTubeEmbedUrl = (url: string) => {\n    let videoId = ''\n    // 🌟 유튜브 쇼츠 지원 추가\n    if (url.includes('youtube.com/shorts/')) {\n      videoId = url.split('shorts/')[1]?.split('?')[0] || ''\n    } else if (url.includes('youtube.com/watch?v=')) {\n      videoId = url.split('v=')[1]?.split('&')[0] || ''\n    } else if (url.includes('youtu.be/')) {\n      videoId = url.split('youtu.be/')[1]?.split('?')[0] || ''\n    }\n    return videoId ? `https://www.youtube.com/embed/${videoId}?rel=0&modestbranding=1&showinfo=0` : ''\n  }\n\n  // 🌟 동영상 분류 (쇼츠 vs 일반)\n  const regularVideos = localizedProject.videos?.filter((video: string) => !isYouTubeShorts(video)) || []\n  const shortsVideos = localizedProject.videos?.filter((video: string) => isYouTubeShorts(video)) || []\n\n  return (\n    <section className=\"section-padding bg-gray-50 dark:bg-dark-900 min-h-screen\">\n      <div className=\"max-w-6xl mx-auto px-4\">\n        {/* Header */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"mb-8\"\n        >\n          <Link\n            to=\"/projects\"\n            state={location.state}\n            className=\"inline-flex items-center gap-2 text-primary-600 hover:text-primary-700 mb-6 dark:text-primary-400\"\n          >\n            <FaArrowLeft /> 목록으로 돌아가기\n          </Link>\n        </motion.div>\n\n        {/* Project Header */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8 mb-8\"\n        >\n          <div className=\"flex flex-col md:flex-row gap-8\">\n            {/* 🌟 Main Image - 왼쪽으로 이동 */}\n            {localizedProject.image && (\n              <div className=\"md:w-1/3\">\n                <img \n                  src={localizedProject.image}\n                  alt={localizedProject.title}\n                  className=\"w-full h-auto rounded-lg shadow-lg object-cover\"\n                  loading=\"eager\"\n                  decoding=\"async\"\n                  width=\"800\"\n                  height=\"600\"\n                />\n              </div>\n            )}\n\n            {/* 🌟 텍스트 내용 - 오른쪽 */}\n            <div className=\"flex-1\">\n              <div className=\"flex items-start gap-4 mb-4 flex-wrap\">\n                {/* 카테고리 배지 (복수 표시) */}\n                {localizedProject.categoryIds && localizedProject.categoryIds.length > 0 ? (\n                  (localizedProject.categoryIds as any[]).map((catIdOrObj: any) => {\n                    const catName = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?.name\n                    return catName ? (\n                      <span \n                        key={typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id}\n                        className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\"\n                      >\n                        {catName}\n                      </span>\n                    ) : null\n                  })\n                ) : (\n                  // 호환성: categoryIds가 없으면 기존 category 표시\n                  localizedProject.category && (\n                    <span className=\"px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full text-sm font-medium\">\n                      {localizedProject.category}\n                    </span>\n                  )\n                )}\n                <span className={`px-3 py-1 rounded-full text-sm font-medium ${\n                  localizedProject.status === 'completed' \n                    ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200'\n                    : localizedProject.status === 'planning'\n                    ? 'bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200'\n                    : 'bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200'\n                }`}>\n                  {localizedProject.status === 'completed' ? '완료' : localizedProject.status === 'planning' ? '기획중' : '준비중'}\n                </span>\n              </div>\n              <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4\">\n                {localizedProject.title}\n              </h1>\n              <p className=\"text-lg text-gray-600 dark:text-gray-300 mb-6 leading-relaxed\">\n                {localizedProject.description}\n              </p>\n              \n              {/* Technologies */}\n              {localizedProject.technologies.length > 0 && (\n                <div className=\"mb-6\">\n                  <h3 className=\"text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3 flex items-center gap-2\">\n                    <FaCode /> 사용 기술\n                  </h3>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {localizedProject.technologies.map((tech, index) => (\n                      <span\n                        key={index}\n                        className=\"px-3 py-1 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg text-sm font-medium\"\n                      >\n                        {tech}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* 🌟 Linked Skills (스킬 배지) */}\n              {linkedSkills.length > 0 && (\n                <div className=\"mb-6\">\n                  <h3 className=\"text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3 flex items-center gap-2\">\n                    <FaCode /> 사용된 핵심 스킬\n                  </h3>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {linkedSkills.map((skill) => {\n                      // 🌟 동적 스타일 적용\n                      const badgeStyle = skill.color ? getBadgeStyle(skill.color) : undefined\n\n                      return (\n                        <Link\n                          key={skill._id}\n                          to={`/projects?skillId=${skill._id}`}\n                          className=\"inline-flex items-center px-3 py-1 rounded-lg text-sm font-medium hover:ring-2 transition-all hover:opacity-80\"\n                          title={`${skill.name} 스킬이 사용된 모든 프로젝트 보기`}\n                          style={{\n                            ...badgeStyle,\n                            '--tw-ring-color': skill.color || '#3B82F6',\n                          } as React.CSSProperties}\n                        >\n                          <span className=\"font-semibold\">{skill.name}</span>\n                          <span \n                            className=\"text-xs font-semibold ml-1\"\n                            style={{ color: skill.color || '#3B82F6' }}\n                          >\n                            [{skill.levelText}]\n                          </span>\n                        </Link>\n                      )\n                    })}\n                  </div>\n                </div>\n              )}\n\n              {/* Links */}\n              <div className=\"flex flex-wrap gap-4\">\n                {localizedProject.githubLink && (\n                  <a\n                    href={localizedProject.githubLink}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"inline-flex items-center gap-2 px-4 py-2 bg-gray-900 dark:bg-gray-700 text-white rounded-lg hover:bg-gray-800 dark:hover:bg-gray-600 transition-colors\"\n                  >\n                    <FaGithub /> GitHub\n                  </a>\n                )}\n                {localizedProject.liveLink && (\n                  <a\n                    href={localizedProject.liveLink}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"inline-flex items-center gap-2 px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors\"\n                  >\n                    <FaExternalLinkAlt /> Live Demo\n                  </a>\n                )}\n              </div>\n            </div>\n          </div>\n        </motion.div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\">\n          {/* Additional Images - 전체 너비 */}\n          {localizedProject.images && localizedProject.images.length > 0 && (\n            <div className=\"lg:col-span-4 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8\">\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-6 flex items-center gap-2\">\n                <FaImage /> 프로젝트 이미지\n              </h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {localizedProject.images.map((image, index) => (\n                  <motion.div\n                    key={index}\n                    initial={{ opacity: 0, scale: 0.9 }}\n                    animate={{ opacity: 1, scale: 1 }}\n                    transition={{ delay: index * 0.1 }}\n                    className=\"cursor-pointer group\"\n                    onClick={() => setSelectedImage(image)}\n                  >\n                    <div className=\"aspect-video rounded-lg overflow-hidden shadow-md group-hover:shadow-xl transition-shadow\">\n                      <img\n                        src={image}\n                        alt={`${localizedProject.title} ${index + 1}`}\n                        className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n                        loading=\"lazy\"\n                        decoding=\"async\"\n                        width=\"640\"\n                        height=\"360\"\n                      />\n                    </div>\n                  </motion.div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* 🌟 영상 섹션 - 가로 배치 */}\n          {/* 🌟 일반 동영상 (가로형) - 왼쪽 (3/4) */}\n          {regularVideos.length > 0 && (\n            <div className=\"lg:col-span-3 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8\" data-video-section>\n              <div className=\"flex items-center justify-between mb-6\">\n                <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white flex items-center gap-2\">\n                  <FaPlay /> 프로젝트 동영상\n                </h3>\n                {regularVideos.length > 1 && (\n                  <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    {currentVideoIndex + 1} / {regularVideos.length}\n                  </span>\n                )}\n              </div>\n              \n              <div className=\"relative\">\n                {/* 영상 컨테이너 */}\n                <div className=\"relative group\">\n                  {(() => {\n                    const video = regularVideos[currentVideoIndex]\n                    if (!video) return null\n                    \n                    return (\n                      <div>\n                        {isYouTubeUrl(video) ? (\n                          <div className=\"relative w-full rounded-lg overflow-hidden shadow-lg bg-gray-100 dark:bg-gray-700\">\n                            <div className=\"aspect-video\">\n                              <iframe\n                                src={getYouTubeEmbedUrl(video)}\n                                title={`${localizedProject.title} 동영상 ${currentVideoIndex + 1}`}\n                                className=\"w-full h-full\"\n                                allowFullScreen\n                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                              />\n                            </div>\n                            {/* YouTube 링크 */}\n                            <div className=\"absolute bottom-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity z-10\">\n                              <a\n                                href={video}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm font-medium transition-colors\"\n                              >\n                                YouTube에서 보기\n                              </a>\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"relative w-full rounded-lg overflow-hidden shadow-lg bg-gray-100 dark:bg-gray-700\">\n                            <div className=\"aspect-video\">\n                              <video\n                                src={video}\n                                controls\n                                className=\"w-full h-full object-cover\"\n                                preload=\"metadata\"\n                              >\n                                <source src={video} type=\"video/mp4\" />\n                                <source src={video} type=\"video/webm\" />\n                                <source src={video} type=\"video/ogg\" />\n                                브라우저가 비디오를 지원하지 않습니다.\n                              </video>\n                            </div>\n                            {/* 직접 링크 */}\n                            <div className=\"absolute bottom-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity z-10\">\n                              <a\n                                href={video}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                className=\"bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded text-sm font-medium transition-colors\"\n                              >\n                                원본 보기\n                              </a>\n                            </div>\n                          </div>\n                        )}\n                        \n                        {/* 🌟 영상 설명 (HTML 렌더링) */}\n                        {localizedProject.videoDescriptions?.[currentVideoIndex] && (\n                          <div className=\"mt-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                            <div \n                              className=\"text-gray-700 dark:text-gray-300 text-sm leading-relaxed prose prose-sm dark:prose-invert max-w-none\"\n                              dangerouslySetInnerHTML={{ __html: localizedProject.videoDescriptions[currentVideoIndex] }}\n                            />\n                          </div>\n                        )}\n                      </div>\n                    )\n                  })()}\n                  \n                  {/* 🌟 좌우 화살표 (영상이 2개 이상일 때) */}\n                  {regularVideos.length > 1 && (\n                    <>\n                      <button\n                        onClick={() => setCurrentVideoIndex((prev) => (prev === 0 ? regularVideos.length - 1 : prev - 1))}\n                        className=\"absolute left-2 top-1/2 -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-all opacity-0 group-hover:opacity-100 z-10\"\n                        aria-label=\"이전 영상\"\n                      >\n                        <FaChevronLeft size={20} />\n                      </button>\n                      <button\n                        onClick={() => setCurrentVideoIndex((prev) => (prev === regularVideos.length - 1 ? 0 : prev + 1))}\n                        className=\"absolute right-2 top-1/2 -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-all opacity-0 group-hover:opacity-100 z-10\"\n                        aria-label=\"다음 영상\"\n                      >\n                        <FaChevronRight size={20} />\n                      </button>\n                    </>\n                  )}\n                </div>\n                \n                {/* 🌟 인디케이터 (영상이 2개 이상일 때) */}\n                {regularVideos.length > 1 && (\n                  <div className=\"flex justify-center gap-2 mt-4\">\n                    {regularVideos.map((_: string, index: number) => (\n                      <button\n                        key={index}\n                        onClick={() => setCurrentVideoIndex(index)}\n                        className={`h-2 rounded-full transition-all ${\n                          index === currentVideoIndex \n                            ? 'w-8 bg-blue-600 dark:bg-blue-400' \n                            : 'w-2 bg-gray-300 dark:bg-gray-600 hover:bg-gray-400 dark:hover:bg-gray-500'\n                        }`}\n                        aria-label={`${index + 1}번째 영상 보기`}\n                      />\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* 🌟 유튜브 쇼츠 (세로형) - 오른쪽 (1/4) */}\n          {shortsVideos.length > 0 && (\n            <div className=\"lg:col-span-1 bg-white dark:bg-gray-800 rounded-2xl shadow-lg px-4 py-8\" data-shorts-section>\n              {/* 🌟 쇼츠 컨테이너 - 완전 중앙 정렬 */}\n              <div className=\"flex justify-center items-center\">\n                <div className=\"relative group px-0\" style={{ maxWidth: '280px', width: '100%' }}>\n                  {/* 🌟 타이틀을 영상 컨테이너 안으로 이동 */}\n                  <div className=\"flex items-center justify-between mb-6\">\n                    <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white flex items-center gap-2\">\n                      <FaPlay /> Shorts\n                    </h3>\n                    {shortsVideos.length > 1 && (\n                      <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                        {currentShortsIndex + 1} / {shortsVideos.length}\n                      </span>\n                    )}\n                  </div>\n                  {(() => {\n                    const video = shortsVideos[currentShortsIndex]\n                    if (!video) return null\n                    \n                    const videoIndexInAll = localizedProject.videos?.indexOf(video) ?? -1\n                    \n                    return (\n                      <div className=\"w-full\">\n                        <div className=\"relative w-full rounded-lg overflow-hidden shadow-lg bg-black\">\n                          {/* 🌟 세로 형식 (9:16 비율) - 최대 높이 설정 */}\n                          <div className=\"aspect-[9/16] w-full\" style={{ maxHeight: '600px' }}>\n                            <iframe\n                              src={getYouTubeEmbedUrl(video)}\n                              title={`${localizedProject.title} Shorts ${currentShortsIndex + 1}`}\n                              className=\"w-full h-full\"\n                              allowFullScreen\n                              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                            />\n                          </div>\n                          {/* YouTube 쇼츠 링크 */}\n                          <div className=\"absolute bottom-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity z-10\">\n                            <a\n                              href={video}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm font-medium transition-colors flex items-center gap-1 shadow-lg\"\n                            >\n                              Shorts\n                            </a>\n                          </div>\n                        </div>\n                        \n                        {/* 🌟 영상 설명 (HTML 렌더링) */}\n                        {localizedProject.videoDescriptions?.[videoIndexInAll] && (\n                          <div className=\"mt-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\" style={{ maxWidth: '600px', margin: '1rem auto 0' }}>\n                            <div \n                              className=\"text-gray-700 dark:text-gray-300 text-sm leading-relaxed prose prose-sm dark:prose-invert max-w-none\"\n                              dangerouslySetInnerHTML={{ __html: localizedProject.videoDescriptions[videoIndexInAll] }}\n                            />\n                          </div>\n                        )}\n                      </div>\n                    )\n                  })()}\n                  \n                  {/* 🌟 좌우 화살표 (쇼츠가 2개 이상일 때) */}\n                  {shortsVideos.length > 1 && (\n                    <>\n                      <button\n                        onClick={() => setCurrentShortsIndex((prev) => (prev === 0 ? shortsVideos.length - 1 : prev - 1))}\n                        className=\"absolute left-2 top-1/2 -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-all opacity-0 group-hover:opacity-100 z-10\"\n                        aria-label=\"이전 쇼츠\"\n                      >\n                        <FaChevronLeft size={20} />\n                      </button>\n                      <button\n                        onClick={() => setCurrentShortsIndex((prev) => (prev === shortsVideos.length - 1 ? 0 : prev + 1))}\n                        className=\"absolute right-2 top-1/2 -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-all opacity-0 group-hover:opacity-100 z-10\"\n                        aria-label=\"다음 쇼츠\"\n                      >\n                        <FaChevronRight size={20} />\n                      </button>\n                    </>\n                  )}\n                </div>\n              </div>\n              \n              {/* 🌟 인디케이터 (쇼츠가 2개 이상일 때) */}\n              {shortsVideos.length > 1 && (\n                <div className=\"flex justify-center gap-2 mt-4\">\n                  {shortsVideos.map((_: string, index: number) => (\n                    <button\n                      key={index}\n                      onClick={() => setCurrentShortsIndex(index)}\n                      className={`h-2 rounded-full transition-all ${\n                        index === currentShortsIndex \n                          ? 'w-8 bg-red-600 dark:bg-red-400' \n                          : 'w-2 bg-gray-300 dark:bg-gray-600 hover:bg-gray-400 dark:hover:bg-gray-500'\n                      }`}\n                      aria-label={`${index + 1}번째 쇼츠 보기`}\n                    />\n                  ))}\n                </div>\n          )}\n          </div>\n          )}\n\n          {/* 프로젝트 설명 - 전체 너비 */}\n          {localizedProject.detailedDescription && (\n            <div className=\"lg:col-span-4 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8\">\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\n                상세 설명\n              </h3>\n              <div \n                className=\"prose prose-lg dark:prose-invert max-w-none text-gray-700 dark:text-gray-300\"\n                dangerouslySetInnerHTML={{ __html: localizedProject.detailedDescription }}\n              />\n            </div>\n          )}\n\n          {/* Features & Learnings - 가로 배치 */}\n          {/* Features */}\n          {localizedProject.features.length > 0 && (\n            <div className=\"lg:col-span-2 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8\">\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\n                주요 기능\n              </h3>\n              <ul className=\"space-y-3\">\n                {localizedProject.features.map((feature, index) => (\n                  <li key={index} className=\"flex items-start gap-3\">\n                    <span className=\"flex-shrink-0 w-6 h-6 rounded-full bg-primary-100 dark:bg-primary-900 text-primary-600 dark:text-primary-300 flex items-center justify-center text-sm font-medium mt-0.5\">\n                      {index + 1}\n                    </span>\n                    <span className=\"text-gray-700 dark:text-gray-300\">{feature}</span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n\n          {/* Learnings */}\n          {localizedProject.learnings.length > 0 && (\n            <div className=\"lg:col-span-2 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8\">\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\n                배운 점\n              </h3>\n              <ul className=\"space-y-3\">\n                {localizedProject.learnings.map((learning, index) => (\n                  <li key={index} className=\"flex items-start gap-3\">\n                    <span className=\"flex-shrink-0 w-2 h-2 rounded-full bg-primary-600 dark:bg-primary-400 mt-2\"></span>\n                    <span className=\"text-gray-700 dark:text-gray-300\">{learning}</span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Image Modal */}\n      {selectedImage && (\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          className=\"fixed inset-0 bg-black/90 z-50 flex items-center justify-center p-4\"\n          onClick={() => setSelectedImage(null)}\n        >\n          <button\n            onClick={() => setSelectedImage(null)}\n            className=\"absolute top-4 right-4 text-white hover:text-gray-300 text-3xl\"\n          >\n            ×\n          </button>\n          <img\n            src={selectedImage}\n            alt=\"확대 이미지\"\n            className=\"max-w-full max-h-full object-contain\"\n            loading=\"eager\"\n            decoding=\"async\"\n          />\n        </motion.div>\n      )}\n    </section>\n  )\n}\n\nexport default ProjectDetail\n","import React, { useState, useMemo } from 'react';\nimport { motion, Variants } from 'framer-motion';\nimport { \n  FaBriefcase, \n  FaCheckCircle, \n  FaCoffee, \n  FaGraduationCap, \n  FaChartLine, \n  FaCode, \n  FaCog, \n  FaRobot, \n  FaChevronDown, \n  FaChevronRight,\n  FaCar,           // 🚗 자동차\n  FaShieldAlt,     // 🛡️ 군인\n  FaLaptopCode     // 💻 프로그래밍\n} from 'react-icons/fa';\nimport { ExperienceItem as ExperienceItemType } from '../hooks/useExperiences';\nimport { ExperienceDetail } from '../types';\nimport { useSkills } from '../hooks/useSkills';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { getLocalizedField, getLocalizedArrayField } from '@/utils/i18nUtils';\n\ninterface ExperienceItemProps {\n  exp: ExperienceItemType;\n  variants: Variants;\n  isLast?: boolean;\n}\n\n// 아이콘 매핑\nconst iconMap = {\n  FaCoffee: FaCoffee,\n  FaGraduationCap: FaGraduationCap,\n  FaChartLine: FaChartLine,\n  FaBriefcase: FaBriefcase,\n  FaCode: FaCode,\n  FaCog: FaCog,\n  FaRobot: FaRobot,\n  FaCar: FaCar,               // 🚗 자동차\n  FaShieldAlt: FaShieldAlt,   // 🛡️ 군인\n  FaLaptopCode: FaLaptopCode, // 💻 프로그래밍\n} as const;\n\nconst ExperienceItem: React.FC<ExperienceItemProps> = ({ exp, variants, isLast = false }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const { skillCategories } = useSkills();\n  const { i18n } = useTranslation();\n  const currentLang = i18n.language as 'ko' | 'en' | 'ja';\n  \n  // 아이콘 매핑 및 대체 아이콘 설정\n  const IconComponent = exp.iconKey && iconMap[exp.iconKey as keyof typeof iconMap] \n    ? iconMap[exp.iconKey as keyof typeof iconMap] \n    : FaBriefcase;\n  \n  // 🌟 연결된 스킬 필터링\n  const linkedSkills = useMemo(() => {\n    if (!exp.skillIds || !skillCategories) return [];\n    const allSkills = skillCategories.flatMap(cat => cat.skills || []);\n    return allSkills.filter(skill => {\n      const skillId = skill._id;\n      return skillId && (exp.skillIds as any[]).some((idOrObj: any) => {\n        const id = typeof idOrObj === 'string' ? idOrObj : idOrObj?._id;\n        return id === skillId;\n      });\n    });\n  }, [exp.skillIds, skillCategories]);\n  \n  // description을 줄 바꿈 기준으로 분할하여 목록으로 사용\n  const descriptionItems = exp.description \n    ? exp.description.split('\\n').filter(line => line.trim() !== '') \n    : [];\n  \n  // 동적 색상 값 변수 설정 (CSS 변수 Fallback)\n  const iconColor = exp.color || '#8B4513';\n  const iconBgColor = exp.bgColor || '#F5DEB3';\n\n  return (\n    <div className=\"relative flex items-start gap-6\">\n      {/* 🌟 타임라인 라인 (세로선) */}\n      {!isLast && (\n        <div className=\"absolute left-8 top-20 bottom-0 w-0.5 bg-gradient-to-b from-primary-300 to-primary-100 dark:from-primary-700 dark:to-primary-900\" />\n      )}\n      \n      {/* 🌟 타임라인 아이콘 (원형 배지) */}\n      <div className=\"relative z-10 flex-shrink-0\">\n        <motion.div\n          variants={variants}\n          className=\"w-16 h-16 rounded-full flex items-center justify-center shadow-lg ring-4 ring-white dark:ring-gray-800\"\n          style={{ \n            backgroundColor: iconBgColor,\n          }}\n          whileHover={{ scale: 1.1, rotate: 5 }}\n          transition={{ type: 'spring', stiffness: 300 }}\n        >\n          <IconComponent \n            size={28}\n            style={{ color: iconColor }}\n          />\n        </motion.div>\n      </div>\n\n      {/* 🌟 콘텐츠 카드 */}\n      <motion.div\n        variants={variants}\n        className=\"flex-1 mb-12\"\n      >\n        <div className=\"card p-6 hover:shadow-xl transition-all duration-300\">\n          {/* 헤더 (클릭 가능) */}\n          <button\n            onClick={() => setIsExpanded(!isExpanded)}\n            className=\"w-full text-left\"\n          >\n            <div className=\"flex items-start justify-between mb-4\">\n              <div className=\"flex-1\">\n                {/* 회사명 (작게) */}\n                <p className=\"text-sm text-primary-600 dark:text-primary-400 font-semibold mb-1\">\n                  {getLocalizedField(currentLang, exp.company, exp.companyEn, exp.companyJa)}\n                </p>\n                {/* 직책 (크게) */}\n                <h3 className=\"text-2xl font-bold text-dark-900 dark:text-white mb-2 flex items-center gap-2\">\n                  {getLocalizedField(currentLang, exp.title, exp.titleEn, exp.titleJa)}\n                  {/* 🌟 토글 화살표 (항상 표시) */}\n                  <span className=\"text-sm\">\n                    {isExpanded ? (\n                      <FaChevronDown className=\"text-primary-600 dark:text-primary-400\" />\n                    ) : (\n                      <FaChevronRight className=\"text-gray-400\" />\n                    )}\n                  </span>\n                </h3>\n                {/* 기간 배지 */}\n                <span className=\"inline-flex items-center px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-700 dark:text-primary-300 rounded-full text-sm font-medium\">\n                  📅 {exp.period}\n                </span>\n              </div>\n            </div>\n          </button>\n\n          {/* 🌟 아코디언: 주요 내용 (펼쳤을 때만 표시) */}\n          {isExpanded && (\n            <motion.div\n              initial={{ opacity: 0, height: 0 }}\n              animate={{ opacity: 1, height: 'auto' }}\n              exit={{ opacity: 0, height: 0 }}\n              transition={{ duration: 0.3 }}\n              className=\"mb-6 pt-4 border-t border-gray-200 dark:border-gray-700\"\n            >\n              {/* 카테고리별 상세 내용 카드 (details가 있는 경우) */}\n              {exp.details && exp.details.length > 0 ? (\n                <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {exp.details.map((detail: ExperienceDetail, idx: number) => (\n                    <motion.div\n                      key={idx}\n                      initial={{ opacity: 0, y: 20 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      transition={{ delay: idx * 0.1 }}\n                      className=\"bg-gradient-to-br from-white to-gray-50 dark:from-gray-800 dark:to-gray-850 rounded-lg p-5 border-2 border-gray-200 dark:border-gray-700 hover:border-primary-400 dark:hover:border-primary-600 transition-all hover:shadow-lg\"\n                    >\n                      {/* 카테고리 헤더 */}\n                      <div className=\"flex items-center gap-2 mb-4 pb-3 border-b border-gray-200 dark:border-gray-700\">\n                        <div className=\"w-2 h-2 rounded-full\" style={{ backgroundColor: iconColor }}></div>\n                        <h4 className=\"text-base font-bold text-dark-900 dark:text-white\">\n                          {getLocalizedField(currentLang, detail.category, detail.categoryEn, detail.categoryJa)}\n                        </h4>\n                      </div>\n                      \n                      {/* 항목 리스트 */}\n                      <ul className=\"space-y-2.5\">\n                        {getLocalizedArrayField(currentLang, detail.items, detail.itemsEn, detail.itemsJa).map((item: string, itemIdx: number) => (\n                          <motion.li\n                            key={itemIdx}\n                            initial={{ opacity: 0, x: -10 }}\n                            animate={{ opacity: 1, x: 0 }}\n                            transition={{ delay: (idx * 0.1) + (itemIdx * 0.03) }}\n                            className=\"flex items-start gap-2 text-sm text-dark-700 dark:text-dark-300\"\n                          >\n                            <FaCheckCircle style={{ color: iconColor }} className=\"mt-0.5 flex-shrink-0 text-xs\" />\n                            <span className=\"flex-1 leading-relaxed\">{item}</span>\n                          </motion.li>\n                        ))}\n                      </ul>\n                    </motion.div>\n                  ))}\n                </div>\n              ) : (\n                // 기존 설명 방식 (하위 호환성)\n                descriptionItems.length > 0 && (\n                  <>\n                    <h4 className=\"text-sm font-semibold text-dark-900 dark:text-white mb-3 flex items-center gap-2\">\n                      <FaCheckCircle style={{ color: iconColor }} size={14} />\n                      주요 내용\n                    </h4>\n                    <ul className=\"space-y-2.5 pl-1\">\n                      {descriptionItems.map((item, i) => (\n                        <li key={i} className=\"flex items-start gap-3 text-dark-600 dark:text-dark-300\">\n                          <span className=\"flex-shrink-0 w-1.5 h-1.5 rounded-full mt-2\" style={{ backgroundColor: iconColor }} />\n                          <span className=\"flex-1\">{item}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </>\n                )\n              )}\n            </motion.div>\n          )}\n\n          {/* 🌟 연결된 스킬 배지 (skillIds 기반) */}\n          {linkedSkills.length > 0 && (\n            <div className=\"flex flex-wrap gap-2 mt-4\">\n              {linkedSkills.map((skill) => (\n                <Link\n                  key={skill._id}\n                  to={`/projects?skillId=${skill._id}`}\n                  className=\"inline-flex items-center px-3 py-1.5 rounded-lg text-sm font-medium transition-all hover:opacity-80 hover:ring-2\"\n                  style={{\n                    backgroundColor: `${skill.color}26`,\n                    color: skill.color,\n                    '--tw-ring-color': skill.color || '#3B82F6',\n                  } as React.CSSProperties}\n                  title={`${skill.name} 스킬이 사용된 프로젝트 보기`}\n                >\n                  {skill.name}\n                </Link>\n              ))}\n            </div>\n          )}\n          \n          {/* 🔄 호환성: 기존 skills 문자열 배열도 표시 (skillIds가 없을 때만) */}\n          {!linkedSkills.length && exp.skills && exp.skills.length > 0 && (\n            <div className=\"flex flex-wrap gap-2 mt-4\">\n              {exp.skills.map((skill) => (\n                <span\n                  key={skill}\n                  className=\"px-3 py-1.5 bg-secondary-100 dark:bg-secondary-900/50 text-secondary-700 dark:text-secondary-300 rounded-lg text-sm font-medium hover:bg-secondary-200 dark:hover:bg-secondary-800/50 transition-colors\"\n                >\n                  {skill}\n                </span>\n              ))}\n            </div>\n          )}\n\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default ExperienceItem;\n","import React from 'react'\nimport { FaBook, FaBriefcase, FaProjectDiagram, FaSync, FaCalendarAlt } from 'react-icons/fa'\n\ninterface DataCounts {\n  books: number\n  experiences: number\n  projects: number\n  messages: number\n  skills: number\n}\n\ninterface DashboardHomeProps {\n  counts: DataCounts\n}\n\nconst DashboardHome: React.FC<DashboardHomeProps> = ({ counts }) => {\n  // 사이트 활동 통계를 위한 가상 데이터 (실제로는 API에서 가져와야 함)\n  const siteActivityStats = {\n    recentUpdates: [\n      { type: 'book', typeName: '책', title: '최신 도서 추가', updatedAt: new Date() },\n      { type: 'project', typeName: '프로젝트', title: '새 프로젝트 완료', updatedAt: new Date() },\n      { type: 'experience', typeName: '경력', title: '경력 정보 업데이트', updatedAt: new Date() }\n    ],\n    weeklyStats: {\n      booksAdded: 2,\n      projectsCompleted: 1,\n      experiencesUpdated: 3\n    }\n  }\n\n  return (\n    <div>\n      <h2 className=\"text-2xl font-bold mb-6\">관리자 설정</h2>\n      \n      {/* 콘텐츠 통계 카드 */}\n      <div className=\"mb-8\">\n        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\n          📊 콘텐츠 통계\n        </h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <button className=\"bg-orange-50 dark:bg-orange-900/20 p-6 rounded-lg border border-orange-200 dark:border-orange-800 hover:bg-orange-100 dark:hover:bg-orange-900/30 transition-colors text-left w-full\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-orange-600 dark:text-orange-400\">등록된 책</p>\n                <p className=\"text-3xl font-bold text-orange-900 dark:text-orange-100\">{counts.books}</p>\n                <p className=\"text-xs text-orange-500 dark:text-orange-400 mt-1\">권</p>\n              </div>\n              <FaBook className=\"text-orange-500 text-3xl\" />\n            </div>\n          </button>\n\n          <button className=\"bg-blue-50 dark:bg-blue-900/20 p-6 rounded-lg border border-blue-200 dark:border-blue-800 hover:bg-blue-100 dark:hover:bg-blue-900/30 transition-colors text-left w-full\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-blue-600 dark:text-blue-400\">등록된 경력</p>\n                <p className=\"text-3xl font-bold text-blue-900 dark:text-blue-100\">{counts.experiences}</p>\n                <p className=\"text-xs text-blue-500 dark:text-blue-400 mt-1\">개</p>\n              </div>\n              <FaBriefcase className=\"text-blue-500 text-3xl\" />\n            </div>\n          </button>\n\n          <button className=\"bg-green-50 dark:bg-green-900/20 p-6 rounded-lg border border-green-200 dark:border-green-800 hover:bg-green-100 dark:hover:bg-green-900/30 transition-colors text-left w-full\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-green-600 dark:text-green-400\">등록된 프로젝트</p>\n                <p className=\"text-3xl font-bold text-green-900 dark:text-green-100\">{counts.projects}</p>\n                <p className=\"text-xs text-green-500 dark:text-green-400 mt-1\">개</p>\n              </div>\n              <FaProjectDiagram className=\"text-green-500 text-3xl\" />\n            </div>\n          </button>\n        </div>\n      </div>\n\n      {/* 사이트 활동 통계 카드 */}\n      <div className=\"mb-8\">\n        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\n          📊 사이트 활동\n        </h2>\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* 최근 업데이트된 콘텐츠 */}\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center gap-3 mb-4\">\n              <FaSync className=\"text-purple-500 text-xl\" />\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">최근 업데이트</h3>\n            </div>\n            <div className=\"space-y-3\">\n              {siteActivityStats.recentUpdates.length > 0 ? (\n                siteActivityStats.recentUpdates.map((item, index) => (\n                  <div key={`${item.type}-${index}`} className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                    <div className=\"flex items-center gap-3\">\n                      <div className={`w-2 h-2 rounded-full ${\n                        index === 0 ? 'bg-green-500' : index === 1 ? 'bg-yellow-500' : 'bg-blue-500'\n                      }`}></div>\n                      <div>\n                        <p className=\"text-sm font-medium text-gray-900 dark:text-white\">{item.title}</p>\n                        <p className=\"text-xs text-gray-500 dark:text-gray-400\">{item.typeName}</p>\n                      </div>\n                    </div>\n                    <div className=\"text-xs text-gray-400 dark:text-gray-500\">\n                      {item.updatedAt.toLocaleDateString('ko-KR')}\n                    </div>\n                  </div>\n                ))\n              ) : (\n                <p className=\"text-gray-500 dark:text-gray-400 text-sm\">최근 업데이트된 콘텐츠가 없습니다.</p>\n              )}\n            </div>\n          </div>\n\n          {/* 주간 통계 */}\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center gap-3 mb-4\">\n              <FaCalendarAlt className=\"text-indigo-500 text-xl\" />\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">이번 주 활동</h3>\n            </div>\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                <div className=\"flex items-center gap-3\">\n                  <FaBook className=\"text-orange-500\" />\n                  <span className=\"text-sm text-gray-900 dark:text-white\">새로 추가된 책</span>\n                </div>\n                <span className=\"text-lg font-bold text-orange-600 dark:text-orange-400\">\n                  {siteActivityStats.weeklyStats.booksAdded}\n                </span>\n              </div>\n              <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                <div className=\"flex items-center gap-3\">\n                  <FaProjectDiagram className=\"text-green-500\" />\n                  <span className=\"text-sm text-gray-900 dark:text-white\">완료된 프로젝트</span>\n                </div>\n                <span className=\"text-lg font-bold text-green-600 dark:text-green-400\">\n                  {siteActivityStats.weeklyStats.projectsCompleted}\n                </span>\n              </div>\n              <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                <div className=\"flex items-center gap-3\">\n                  <FaBriefcase className=\"text-blue-500\" />\n                  <span className=\"text-sm text-gray-900 dark:text-white\">업데이트된 경력</span>\n                </div>\n                <span className=\"text-lg font-bold text-blue-600 dark:text-blue-400\">\n                  {siteActivityStats.weeklyStats.experiencesUpdated}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\nexport default DashboardHome","import React, { useState } from 'react'\nimport { FaPlus, FaEdit, FaTrash, FaChevronDown, FaChevronRight, FaBook } from 'react-icons/fa'\nimport { Chapter, Learning } from '../../types'\nimport { formatDate } from '../../utils/dateUtils'\n\ninterface ChapterLearningListProps {\n  chapters: Chapter[]\n  onAddChapter: () => void\n  onEditChapter: (chapter: Chapter) => void\n  onDeleteChapter: (chapter: Chapter) => void\n  onAddLearning: (chapterId: string) => void\n  onEditLearning: (learning: Learning, chapterId: string) => void\n  onDeleteLearning: (learning: Learning, chapterId: string) => void\n  isAuthenticated?: boolean\n}\n\nconst ChapterLearningList: React.FC<ChapterLearningListProps> = ({\n  chapters,\n  onAddChapter,\n  onEditChapter,\n  onDeleteChapter,\n  onAddLearning,\n  onEditLearning,\n  onDeleteLearning,\n  isAuthenticated = true\n}) => {\n  const [expandedChapters, setExpandedChapters] = useState<Set<string>>(\n    new Set(chapters.map(ch => ch._id)) // 기본적으로 모두 펼쳐진 상태\n  )\n\n  const toggleChapter = (chapterId: string) => {\n    setExpandedChapters(prev => {\n      const newSet = new Set(prev)\n      if (newSet.has(chapterId)) {\n        newSet.delete(chapterId)\n      } else {\n        newSet.add(chapterId)\n      }\n      return newSet\n    })\n  }\n\n  const expandAll = () => {\n    setExpandedChapters(new Set(chapters.map(ch => ch._id)))\n  }\n\n  const collapseAll = () => {\n    setExpandedChapters(new Set())\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {/* 🌟 헤더 */}\n      <div className=\"flex items-center justify-between sticky top-0 bg-white dark:bg-gray-800 z-10 pb-4 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"flex items-center gap-4\">\n          <h3 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n            📚 목차별 학습 내용\n          </h3>\n          {chapters.length > 0 && (\n            <div className=\"flex gap-2 text-sm\">\n              <button\n                onClick={expandAll}\n                className=\"text-blue-600 hover:text-blue-700 dark:text-blue-400 hover:underline\"\n              >\n                모두 펼치기\n              </button>\n              <span className=\"text-gray-400\">|</span>\n              <button\n                onClick={collapseAll}\n                className=\"text-blue-600 hover:text-blue-700 dark:text-blue-400 hover:underline\"\n              >\n                모두 접기\n              </button>\n            </div>\n          )}\n        </div>\n        {isAuthenticated && (\n          <button\n            onClick={onAddChapter}\n            className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2 text-sm shadow-md\"\n          >\n            <FaPlus />\n            목차 추가\n          </button>\n        )}\n      </div>\n\n      {/* 🌟 목차 리스트 (아코디언) */}\n      {chapters.length > 0 ? (\n        <div className=\"space-y-3\">\n          {chapters\n            .sort((a, b) => a.order - b.order)\n            .map((chapter) => {\n              const isExpanded = expandedChapters.has(chapter._id)\n              const learningCount = chapter.learnings?.length || 0\n\n              return (\n                <div \n                  key={chapter._id} \n                  className=\"bg-white dark:bg-gray-800 rounded-lg border-2 border-gray-200 dark:border-gray-700 shadow-sm overflow-hidden transition-all hover:shadow-md\"\n                >\n                  {/* 🌟 목차 헤더 (클릭하여 펼치기/접기) */}\n                  <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-gray-700 dark:to-gray-700\">\n                    <div className=\"flex items-center justify-between p-4\">\n                      <button\n                        onClick={() => toggleChapter(chapter._id)}\n                        className=\"flex items-center gap-3 flex-1 text-left hover:opacity-80 transition-opacity\"\n                      >\n                        <div className=\"flex-shrink-0\">\n                          {isExpanded ? (\n                            <FaChevronDown className=\"text-blue-600 dark:text-blue-400 w-5 h-5\" />\n                          ) : (\n                            <FaChevronRight className=\"text-gray-400 w-5 h-5\" />\n                          )}\n                        </div>\n                        <div className=\"flex-1 min-w-0\">\n                          <div className=\"flex items-center gap-2 mb-1\">\n                            <span className=\"text-sm font-bold text-blue-600 dark:text-blue-400 bg-blue-100 dark:bg-blue-900/50 px-2 py-0.5 rounded\">\n                              Chapter {chapter.order + 1}\n                            </span>\n                            <h4 className=\"font-semibold text-gray-900 dark:text-white text-lg truncate\">\n                              {chapter.title}\n                            </h4>\n                          </div>\n                          <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                            📝 {learningCount}개의 학습 내용\n                          </p>\n                        </div>\n                      </button>\n                      \n                      {isAuthenticated && (\n                        <div className=\"flex gap-2 ml-3 flex-shrink-0\">\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation()\n                              onAddLearning(chapter._id)\n                            }}\n                            className=\"p-2 text-green-600 hover:bg-green-100 dark:hover:bg-green-900/30 rounded-lg transition-colors\"\n                            title=\"학습 내용 추가\"\n                          >\n                            <FaPlus className=\"w-4 h-4\" />\n                          </button>\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation()\n                              onEditChapter(chapter)\n                            }}\n                            className=\"p-2 text-blue-600 hover:bg-blue-100 dark:hover:bg-blue-900/30 rounded-lg transition-colors\"\n                            title=\"목차 수정\"\n                          >\n                            <FaEdit className=\"w-4 h-4\" />\n                          </button>\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation()\n                              if (confirm(`\"${chapter.title}\" 목차를 삭제하시겠습니까?\\n관련 학습 내용 ${learningCount}개도 모두 삭제됩니다.`)) {\n                                onDeleteChapter(chapter)\n                              }\n                            }}\n                            className=\"p-2 text-red-600 hover:bg-red-100 dark:hover:bg-red-900/30 rounded-lg transition-colors\"\n                            title=\"목차 삭제\"\n                          >\n                            <FaTrash className=\"w-4 h-4\" />\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  {/* 🌟 목차별 학습 내용 (아코디언 콘텐츠) */}\n                  {isExpanded && (\n                    <div className=\"p-5 bg-gray-50 dark:bg-gray-800/50 border-t border-gray-200 dark:border-gray-700\">\n                      {learningCount > 0 ? (\n                        <div className=\"space-y-4\">\n                          {(chapter.learnings || [])\n                            .sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())\n                            .map((learning, idx) => (\n                            <div \n                              key={learning._id} \n                              className=\"bg-white dark:bg-gray-800 p-5 rounded-lg border border-gray-200 dark:border-gray-600 shadow-sm hover:shadow-md transition-shadow\"\n                            >\n                              <div className=\"flex items-start justify-between mb-3\">\n                                <div className=\"flex items-center gap-2 flex-1\">\n                                  <span className=\"flex-shrink-0 text-xs font-bold text-white bg-blue-600 dark:bg-blue-500 px-2 py-1 rounded-full\">\n                                    #{idx + 1}\n                                  </span>\n                                  <h5 className=\"font-semibold text-gray-900 dark:text-white text-lg\">\n                                    {learning.topic}\n                                  </h5>\n                                </div>\n                                {isAuthenticated && (\n                                  <div className=\"flex gap-1 flex-shrink-0 ml-2\">\n                                    <button\n                                      onClick={() => onEditLearning(learning, chapter._id)}\n                                      className=\"p-1.5 text-blue-600 hover:bg-blue-100 dark:hover:bg-blue-900/30 rounded transition-colors\"\n                                      title=\"수정\"\n                                    >\n                                      <FaEdit className=\"w-3.5 h-3.5\" />\n                                    </button>\n                                    <button\n                                      onClick={() => {\n                                        if (confirm(`\"${learning.topic}\" 학습 내용을 삭제하시겠습니까?`)) {\n                                          onDeleteLearning(learning, chapter._id)\n                                        }\n                                      }}\n                                      className=\"p-1.5 text-red-600 hover:bg-red-100 dark:hover:bg-red-900/30 rounded transition-colors\"\n                                      title=\"삭제\"\n                                    >\n                                      <FaTrash className=\"w-3.5 h-3.5\" />\n                                    </button>\n                                  </div>\n                                )}\n                              </div>\n                              \n                              {/* 🌟 ReactQuill로 작성된 HTML 콘텐츠 렌더링 */}\n                              <div \n                                className=\"prose prose-sm max-w-none dark:prose-invert text-gray-700 dark:text-gray-300\n                                  prose-headings:text-gray-900 dark:prose-headings:text-white\n                                  prose-p:text-gray-700 dark:prose-p:text-gray-300\n                                  prose-code:bg-gray-200 dark:prose-code:bg-gray-700 prose-code:text-red-600 dark:prose-code:text-red-400 prose-code:px-1 prose-code:rounded\n                                  prose-pre:bg-gray-900 dark:prose-pre:bg-gray-950 prose-pre:text-gray-100\n                                  prose-a:text-blue-600 dark:prose-a:text-blue-400\"\n                                dangerouslySetInnerHTML={{ __html: learning.content }}\n                              />\n                              \n                              <div className=\"mt-4 pt-3 border-t border-gray-200 dark:border-gray-700 flex items-center justify-between text-xs text-gray-500 dark:text-gray-400\">\n                                <span>📅 작성일: {formatDate(learning.createdAt)}</span>\n                                {learning.updatedAt && learning.updatedAt !== learning.createdAt && (\n                                  <span>✏️ 수정일: {formatDate(learning.updatedAt)}</span>\n                                )}\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      ) : (\n                        <div className=\"text-center py-10 bg-white dark:bg-gray-800 rounded-lg border border-dashed border-gray-300 dark:border-gray-600\">\n                          <FaBook className=\"mx-auto text-3xl mb-3 text-gray-400 opacity-50\" />\n                          <p className=\"text-gray-500 dark:text-gray-400 mb-3\">\n                            이 목차에 아직 학습 내용이 없습니다.\n                          </p>\n                          {isAuthenticated && (\n                            <button\n                              onClick={() => onAddLearning(chapter._id)}\n                              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors inline-flex items-center gap-2\"\n                            >\n                              <FaPlus />\n                              첫 번째 학습 내용 추가하기\n                            </button>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              )\n            })}\n        </div>\n      ) : (\n        <div className=\"text-center py-16 bg-gray-50 dark:bg-gray-800 rounded-lg border-2 border-dashed border-gray-300 dark:border-gray-600\">\n          <FaBook className=\"mx-auto text-5xl mb-4 text-gray-400\" />\n          <p className=\"text-lg text-gray-600 dark:text-gray-400 mb-2 font-medium\">\n            아직 목차가 없습니다.\n          </p>\n          <p className=\"text-sm text-gray-500 dark:text-gray-500 mb-6\">\n            먼저 목차를 추가하고, 각 목차에 학습 내용을 기록하세요.\n          </p>\n          {isAuthenticated && (\n            <button\n              onClick={onAddChapter}\n              className=\"px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors inline-flex items-center gap-2 shadow-md\"\n            >\n              <FaPlus />\n              첫 번째 목차 추가하기\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ChapterLearningList\n","import React, { useEffect } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { FaCheck, FaExclamationTriangle, FaInfo, FaTimes } from 'react-icons/fa'\nimport { Toast as ToastType } from '../../hooks/useToast'\n\ninterface ToastProps {\n  toast: ToastType\n  onClose: (id: string) => void\n}\n\nconst Toast: React.FC<ToastProps> = ({ toast, onClose }) => {\n  const getIcon = () => {\n    switch (toast.type) {\n      case 'success':\n        return <FaCheck className=\"text-green-500\" />\n      case 'error':\n        return <FaExclamationTriangle className=\"text-red-500\" />\n      case 'warning':\n        return <FaExclamationTriangle className=\"text-yellow-500\" />\n      case 'info':\n        return <FaInfo className=\"text-blue-500\" />\n      default:\n        return <FaInfo className=\"text-blue-500\" />\n    }\n  }\n\n  const getBgColor = () => {\n    switch (toast.type) {\n      case 'success':\n        return 'bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-800'\n      case 'error':\n        return 'bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-800'\n      case 'warning':\n        return 'bg-yellow-50 dark:bg-yellow-900/20 border-yellow-200 dark:border-yellow-800'\n      case 'info':\n        return 'bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-800'\n      default:\n        return 'bg-gray-50 dark:bg-gray-900/20 border-gray-200 dark:border-gray-800'\n    }\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: -50, scale: 0.95 }}\n      animate={{ opacity: 1, y: 0, scale: 1 }}\n      exit={{ opacity: 0, y: -20, scale: 0.95 }}\n      transition={{ duration: 0.2 }}\n      className={`\n        relative flex items-start gap-3 p-4 rounded-lg border shadow-lg\n        ${getBgColor()}\n        max-w-md w-full\n      `}\n    >\n      <div className=\"flex-shrink-0 mt-0.5\">\n        {getIcon()}\n      </div>\n      \n      <div className=\"flex-1 min-w-0\">\n        <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">\n          {toast.title}\n        </h4>\n        {toast.message && (\n          <p className=\"mt-1 text-sm text-gray-600 dark:text-gray-300\">\n            {toast.message}\n          </p>\n        )}\n      </div>\n\n      <button\n        onClick={() => onClose(toast.id)}\n        className=\"flex-shrink-0 p-1 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-full transition-colors\"\n      >\n        <FaTimes className=\"w-3 h-3 text-gray-400\" />\n      </button>\n    </motion.div>\n  )\n}\n\ninterface ToastContainerProps {\n  toasts: ToastType[]\n  onClose: (id: string) => void\n}\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onClose }) => {\n  return (\n    <div className=\"fixed top-4 right-4 z-50 space-y-2\">\n      <AnimatePresence>\n        {toasts.map((toast) => (\n          <Toast\n            key={toast.id}\n            toast={toast}\n            onClose={onClose}\n          />\n        ))}\n      </AnimatePresence>\n    </div>\n  )\n}\n\nexport default ToastContainer\nexport { Toast }\n","import React, { useState, useMemo, useCallback, useEffect } from 'react'\nimport { FaPlus, FaEdit, FaTrash, FaEye, FaTimes, FaBook, FaStar } from 'react-icons/fa'\nimport { Book, BookFormData, Learning, Chapter } from '../../types'\nimport BookForm from '../forms/BookForm'\nimport ChapterForm from '../forms/ChapterForm'\nimport LearningForm from '../forms/LearningForm'\nimport ChapterLearningList from '../common/ChapterLearningList'\nimport ToastContainer from '../common/Toast'\nimport { useBookManagerData } from '../../hooks/useBookManagerData'\nimport { useCRUDManager } from '../../hooks/useCRUDManager'\nimport { useOptimisticArrayUpdate } from '../../hooks/useOptimisticUpdate'\nimport { useAbortController } from '../../hooks/useAbortController'\nimport { useToastHelpers } from '../../hooks/useToast'\nimport { chaptersAPI, learningsAPI } from '../../services/api'\nimport { formatDate } from '../../utils/dateUtils'\n\ninterface BookManagerProps {\n  bookFilter?: 'all' | 'five-star' | 'category'\n  bookSearchTerm?: string\n  selectedBookCategory?: string\n  initialEditId?: string  // 🌟 URL state로 전달된 수정 대상 ID\n}\n\nconst BookManager: React.FC<BookManagerProps> = ({ \n  bookFilter = 'all', \n  bookSearchTerm = '', \n  selectedBookCategory = '',\n  initialEditId  // 🌟 초기 수정 ID 받기\n}) => {\n  const { books, isLoading, createBook, updateBook, deleteBook } = useBookManagerData()\n  const { success, error } = useToastHelpers()\n  const { createAbortController } = useAbortController()\n  \n  // Toast 상태\n  const { toasts, hideToast } = useToastHelpers()\n  \n  // 서적 CRUD 관리\n  const [bookState, bookActions] = useCRUDManager<Book>({\n    onSave: async (data: BookFormData, editingItem) => {\n      console.log('📚 BookManager - 저장 시작:', data)\n      console.log('🔗 skillIds:', data.skillIds)\n      \n      if (editingItem) {\n        console.log('✏️ 서적 수정 모드:', editingItem._id)\n        const result = await updateBook(editingItem._id, data)\n        console.log('✅ 수정 결과:', result)\n        success('서적 수정 완료', '서적 정보가 성공적으로 수정되었습니다.')\n      } else {\n        console.log('➕ 서적 생성 모드')\n        const result = await createBook(data)\n        console.log('✅ 생성 결과:', result)\n        success('서적 추가 완료', '새로운 서적이 성공적으로 추가되었습니다.')\n      }\n    },\n    onDelete: async (book: Book) => {\n      await deleteBook(book._id)\n      success('서적 삭제 완료', `${book.title}이(가) 삭제되었습니다.`)\n    },\n    onError: (err) => {\n      console.error('❌ 서적 저장 실패:', err)\n      error('작업 실패', err.message || '알 수 없는 오류가 발생했습니다.')\n    }\n  })\n\n  // 목차 낙관적 업데이트\n  const {\n    data: chapters,\n    optimisticAdd: optimisticAddChapter,\n    optimisticUpdateItem: optimisticUpdateChapter,\n    optimisticDelete: optimisticDeleteChapter,\n    resetData: resetChapters\n  } = useOptimisticArrayUpdate<Chapter>([])\n\n  // 학습 내용 낙관적 업데이트 (현재는 사용하지 않지만 향후 확장을 위해 유지)\n  // const {\n  //   data: learnings,\n  //   optimisticAdd: optimisticAddLearning,\n  //   optimisticUpdateItem: optimisticUpdateLearning,\n  //   optimisticDelete: optimisticDeleteLearning,\n  //   resetData: resetLearnings\n  // } = useOptimisticArrayUpdate<Learning>([])\n\n  // 서적 상세보기 모달 상태\n  const [showBookDetailModal, setShowBookDetailModal] = useState(false)\n  const [selectedBook, setSelectedBook] = useState<Book | null>(null)\n  const [selectedChapterId, setSelectedChapterId] = useState<string | null>(null)\n\n  // 폼 상태\n  const [showChapterForm, setShowChapterForm] = useState(false)\n  const [editingChapter, setEditingChapter] = useState<Chapter | null>(null)\n  const [showLearningForm, setShowLearningForm] = useState(false)\n  const [editingLearning, setEditingLearning] = useState<Learning | null>(null)\n  const [hasAutoOpened, setHasAutoOpened] = useState(false)  // 🌟 자동 열림 추적\n\n  // 🌟 initialEditId가 전달되면 자동으로 해당 서적 수정 모드로 전환 (한 번만)\n  useEffect(() => {\n    if (initialEditId && books.length > 0 && !hasAutoOpened) {\n      const bookToEdit = books.find(book => book._id === initialEditId)\n      if (bookToEdit) {\n        console.log('🎯 자동 수정 모드 활성화:', bookToEdit.title)\n        bookActions.handleEdit(bookToEdit)\n        setHasAutoOpened(true)  // 🌟 한 번만 실행되도록 표시\n      }\n    }\n  }, [initialEditId, books, hasAutoOpened, bookActions])\n\n  // 필터링된 서적 목록 계산\n  const filteredBooks = useMemo(() => {\n    let filtered = [...books]\n\n    // 필터 적용\n    if (bookFilter === 'five-star') {\n      filtered = filtered.filter(book => book.rating === 5)\n    } else if (bookFilter === 'category' && selectedBookCategory) {\n      filtered = filtered.filter(book => book.category === selectedBookCategory)\n    }\n\n    // 검색어 적용\n    if (bookSearchTerm) {\n      const searchLower = bookSearchTerm.toLowerCase()\n      filtered = filtered.filter(book => \n        book.title.toLowerCase().includes(searchLower) ||\n        book.author.toLowerCase().includes(searchLower) ||\n        book.category.toLowerCase().includes(searchLower)\n      )\n    }\n\n    return filtered.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())\n  }, [books, bookFilter, bookSearchTerm, selectedBookCategory])\n\n  // 서적 상세보기 모달 열기\n  const handleBookDetailClick = useCallback(async (book: Book) => {\n    setSelectedBook(book)\n    setShowBookDetailModal(true)\n    setSelectedChapterId(null)\n\n    try {\n      const abortController = createAbortController()\n      \n      // 목차만 가져오기 (학습 내용은 populate되어 있음)\n      const chaptersResponse = await chaptersAPI.getByBook(book._id)\n\n      if (!abortController.signal.aborted) {\n        resetChapters(chaptersResponse.data || [])\n      }\n    } catch (err) {\n      if (!(err as Error).name?.includes('AbortError')) {\n        error('데이터 로드 실패', '서적 정보를 불러오는데 실패했습니다.')\n      }\n    }\n  }, [createAbortController, resetChapters, error])\n\n  // 목차 관리 핸들러들\n  const handleSaveChapter = useCallback(async (chapterData: { title: string; order: number }) => {\n    if (!selectedBook) return\n\n    try {\n      if (editingChapter) {\n        // 수정\n        await optimisticUpdateChapter(\n          editingChapter._id,\n          chapterData,\n          () => chaptersAPI.update(selectedBook._id, editingChapter._id, chapterData).then(res => res.data)\n        )\n        success('목차 수정 완료', '목차가 성공적으로 수정되었습니다.')\n        setShowChapterForm(false)\n        setEditingChapter(null)\n      } else {\n        // 추가\n        await optimisticAddChapter(\n          { ...chapterData, _id: '', learnings: [], createdAt: new Date().toISOString(), updatedAt: new Date().toISOString() } as Chapter,\n          () => chaptersAPI.create(selectedBook._id, chapterData).then(res => res.data)\n        )\n        success('목차 추가 완료', '새로운 목차가 추가되었습니다.')\n        setShowChapterForm(false)\n      }\n    } catch (err) {\n      error('목차 작업 실패', '목차 작업에 실패했습니다.')\n    }\n  }, [selectedBook, editingChapter, optimisticAddChapter, optimisticUpdateChapter, success, error])\n\n  const handleDeleteChapter = useCallback(async (chapter: Chapter) => {\n    if (!selectedBook) return\n\n    try {\n      await optimisticDeleteChapter(\n        chapter._id,\n        () => chaptersAPI.delete(selectedBook._id, chapter._id).then(() => {})\n      )\n      success('목차 삭제 완료', '목차가 삭제되었습니다.')\n    } catch (err) {\n      error('목차 삭제 실패', '목차 삭제에 실패했습니다.')\n    }\n  }, [selectedBook, optimisticDeleteChapter, success, error])\n\n  // 학습 내용 관리 핸들러들\n  const handleAddLearningClick = useCallback((chapterId: string) => {\n    setSelectedChapterId(chapterId)\n    setShowLearningForm(true)\n    setEditingLearning(null)\n  }, [])\n\n  const handleEditLearningClick = useCallback((learning: Learning, chapterId: string) => {\n    setSelectedChapterId(chapterId)\n    setEditingLearning(learning)\n    setShowLearningForm(true)\n  }, [])\n\n  const handleDeleteLearningClick = useCallback(async (learning: Learning, chapterId: string) => {\n    if (!selectedBook) return\n\n    try {\n      await learningsAPI.deleteForChapter(selectedBook._id, chapterId, learning._id)\n      \n      // 목차 데이터 새로고침 (학습 내용이 populate되어 있음)\n      const chaptersResponse = await chaptersAPI.getByBook(selectedBook._id)\n      resetChapters(chaptersResponse.data || [])\n      \n      success('학습 내용 삭제 완료', '학습 내용이 삭제되었습니다.')\n    } catch (err) {\n      error('학습 내용 삭제 실패', '학습 내용 삭제에 실패했습니다.')\n    }\n  }, [selectedBook, resetChapters, success, error])\n\n  const handleSaveLearning = useCallback(async (learningData: { topic: string; content: string }) => {\n    if (!selectedBook || !selectedChapterId) return\n\n    try {\n      if (editingLearning) {\n        // 수정\n        await learningsAPI.updateForChapter(selectedBook._id, selectedChapterId, editingLearning._id, learningData)\n        success('학습 내용 수정 완료', '학습 내용이 성공적으로 수정되었습니다.')\n      } else {\n        // 추가\n        await learningsAPI.createForChapter(selectedBook._id, selectedChapterId, learningData)\n        success('학습 내용 추가 완료', '새로운 학습 내용이 추가되었습니다.')\n      }\n      \n      // 목차 데이터 새로고침\n      const chaptersResponse = await chaptersAPI.getByBook(selectedBook._id)\n      resetChapters(chaptersResponse.data || [])\n      \n      setShowLearningForm(false)\n      setEditingLearning(null)\n      setSelectedChapterId(null)\n    } catch (err) {\n      error('작업 실패', '학습 내용 저장에 실패했습니다.')\n    }\n  }, [selectedBook, selectedChapterId, editingLearning, resetChapters, success, error])\n\n  // 별점 렌더링\n  const renderRating = (rating: number) => {\n    return (\n      <div className=\"flex items-center gap-0.5\">\n        {Array.from({ length: 5 }, (_, i) => (\n          <FaStar \n            key={i} \n            className={`text-sm ${i < rating ? 'text-yellow-500' : 'text-gray-300 dark:text-gray-600'}`}\n          />\n        ))}\n      </div>\n    )\n  }\n\n  // 로딩 상태\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      {/* Toast 알림 */}\n      <ToastContainer toasts={toasts} onClose={hideToast} />\n\n      <div className=\"space-y-6\">\n        {/* 🌟 헤더 및 서적 추가 버튼 */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">서적 관리</h2>\n            <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n              총 {filteredBooks.length}권의 서적\n            </p>\n          </div>\n          <button\n            onClick={bookActions.handleCreate}\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors shadow-md\"\n          >\n            <FaPlus />\n            서적 추가\n          </button>\n        </div>\n\n        {/* 🌟 서적 리스트 (테이블 형식) */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden\">\n          {filteredBooks.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <FaBook className=\"text-6xl text-gray-400 mx-auto mb-4\" />\n              <p className=\"text-xl text-gray-600 dark:text-gray-400 mb-2\">\n                등록된 서적이 없습니다\n              </p>\n              <p className=\"text-sm text-gray-500 dark:text-gray-500\">\n                상단의 '서적 추가' 버튼을 눌러 새로운 서적을 등록하세요\n              </p>\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead>\n                  <tr className=\"bg-gray-50 dark:bg-gray-700 border-b border-gray-200 dark:border-gray-600\">\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                      서적 정보\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                      저자\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                      카테고리\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                      평점\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                      읽은 날짜\n                    </th>\n                    <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                      관리\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                  {filteredBooks.map((book) => (\n                    <tr \n                      key={book._id} \n                      onClick={() => handleBookDetailClick(book)}\n                      className=\"hover:bg-gray-50 dark:hover:bg-gray-700 cursor-pointer transition-colors\"\n                    >\n                      <td className=\"px-6 py-4\">\n                        <div className=\"flex items-center gap-3\">\n                          {book.coverImage ? (\n                            <img \n                              src={book.coverImage} \n                              alt={book.title}\n                              className=\"w-12 h-16 object-cover rounded shadow-sm\"\n                            />\n                          ) : (\n                            <div className=\"w-12 h-16 bg-gradient-to-br from-blue-400 to-blue-600 rounded flex items-center justify-center shadow-sm\">\n                              <FaBook className=\"text-white text-lg\" />\n                            </div>\n                          )}\n                          <div>\n                            <p className=\"font-semibold text-gray-900 dark:text-white\">\n                              {book.title}\n                            </p>\n                            <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-0.5\">\n                              {book.learnings?.length || 0}개의 학습 내용\n                            </p>\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4\">\n                        <p className=\"text-sm text-gray-900 dark:text-gray-300\">\n                          {book.author}\n                        </p>\n                      </td>\n                      <td className=\"px-6 py-4\">\n                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\">\n                          {book.category}\n                        </span>\n                      </td>\n                      <td className=\"px-6 py-4\">\n                        {renderRating(book.rating)}\n                      </td>\n                      <td className=\"px-6 py-4\">\n                        <p className=\"text-sm text-gray-900 dark:text-gray-300\">\n                          {formatDate(book.readDate)}\n                        </p>\n                      </td>\n                      <td className=\"px-6 py-4\">\n                        <div className=\"flex items-center justify-end gap-2\">\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation()\n                              handleBookDetailClick(book)\n                            }}\n                            className=\"p-2 text-blue-600 hover:bg-blue-100 dark:hover:bg-blue-900 rounded-lg transition-colors\"\n                            title=\"상세보기\"\n                          >\n                            <FaEye />\n                          </button>\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation()\n                              bookActions.handleEdit(book)\n                            }}\n                            className=\"p-2 text-yellow-600 hover:bg-yellow-100 dark:hover:bg-yellow-900 rounded-lg transition-colors\"\n                            title=\"수정\"\n                          >\n                            <FaEdit />\n                          </button>\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation()\n                              bookActions.handleDelete(book)\n                            }}\n                            disabled={bookState.isDeleting}\n                            className=\"p-2 text-red-600 hover:bg-red-100 dark:hover:bg-red-900 rounded-lg transition-colors disabled:opacity-50\"\n                            title=\"삭제\"\n                          >\n                            <FaTrash />\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n\n        {/* 서적 폼 모달 */}\n        {bookState.showForm && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\n              <div className=\"p-6\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                    {bookState.editingItem ? '서적 수정' : '서적 추가'}\n                  </h2>\n                  <button\n                    onClick={bookActions.handleCancel}\n                    className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\n                  >\n                    <FaTimes />\n                  </button>\n                </div>\n                <BookForm\n                  data={bookState.editingItem}\n                  onSave={bookActions.handleSave}\n                  onCancel={bookActions.handleCancel}\n                  isSaving={bookState.isSaving}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* 🌟 서적 상세보기 모달 */}\n        {showBookDetailModal && selectedBook && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-6xl w-full max-h-[90vh] flex flex-col shadow-2xl\">\n              {/* 🌟 고정 헤더 */}\n              <div className=\"flex-shrink-0 border-b border-gray-200 dark:border-gray-700 p-6\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex items-start gap-4 flex-1\">\n                    {selectedBook.coverImage ? (\n                      <img \n                        src={selectedBook.coverImage} \n                        alt={selectedBook.title}\n                        className=\"w-20 h-28 object-cover rounded shadow-lg flex-shrink-0\"\n                      />\n                    ) : (\n                      <div className=\"w-20 h-28 bg-gradient-to-br from-blue-400 to-blue-600 rounded flex items-center justify-center shadow-lg flex-shrink-0\">\n                        <FaBook className=\"text-white text-2xl\" />\n                      </div>\n                    )}\n                    <div className=\"flex-1 min-w-0\">\n                      <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2 truncate\">\n                        {selectedBook.title}\n                      </h2>\n                      <p className=\"text-gray-600 dark:text-gray-400 mb-3\">\n                        저자: {selectedBook.author}\n                      </p>\n                      <div className=\"flex items-center gap-3 flex-wrap\">\n                        <span className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\">\n                          {selectedBook.category}\n                        </span>\n                        {renderRating(selectedBook.rating)}\n                      </div>\n                    </div>\n                  </div>\n                  <button\n                    onClick={() => {\n                      setShowBookDetailModal(false)\n                      setSelectedChapterId(null)\n                    }}\n                    className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors flex-shrink-0\"\n                  >\n                    <FaTimes className=\"text-xl\" />\n                  </button>\n                </div>\n              </div>\n\n              {/* 🌟 스크롤 가능한 콘텐츠 영역 */}\n              <div className=\"flex-1 overflow-y-auto p-6\">\n                <ChapterLearningList\n                  chapters={chapters}\n                  onAddChapter={() => {\n                    setShowChapterForm(true)\n                    setEditingChapter(null)\n                  }}\n                  onEditChapter={(chapter) => {\n                    setEditingChapter(chapter)\n                    setShowChapterForm(true)\n                  }}\n                  onDeleteChapter={handleDeleteChapter}\n                  onAddLearning={handleAddLearningClick}\n                  onEditLearning={handleEditLearningClick}\n                  onDeleteLearning={handleDeleteLearningClick}\n                  isAuthenticated={true}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* 🌟 목차 폼 모달 */}\n        {showChapterForm && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-[60]\">\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-md w-full mx-4 shadow-2xl\">\n              <ChapterForm\n                chapter={editingChapter}\n                onSave={handleSaveChapter}\n                onCancel={() => {\n                  setShowChapterForm(false)\n                  setEditingChapter(null)\n                }}\n              />\n            </div>\n          </div>\n        )}\n\n        {/* 🌟 학습 내용 폼 모달 */}\n        {showLearningForm && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-[60] p-4\">\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto shadow-2xl\">\n              <LearningForm\n                learning={editingLearning}\n                onSave={handleSaveLearning}\n                onCancel={() => {\n                  setShowLearningForm(false)\n                  setEditingLearning(null)\n                  setSelectedChapterId(null)\n                }}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default BookManager\n","import React, { useState, useMemo, useEffect } from 'react'\nimport { FaPlus, FaEdit, FaTrash, FaVideo, FaStar } from 'react-icons/fa'\nimport { VideoLearning, VideoLearningFormData } from '../../types'\nimport { useVideoLearningManagerData } from '../../hooks/useVideoLearnings'\nimport { useCRUDManager } from '../../hooks/useCRUDManager'\nimport { useToastHelpers } from '../../hooks/useToast'\nimport VideoLearningForm from '../forms/VideoLearningForm'\nimport { formatDate } from '../../utils/dateUtils'\nimport { extractUniqueCategories } from '../../utils/categoryUtils'\nimport { extractYouTubeId, getYouTubeThumbnail } from '../../utils/videoUtils'\n\ninterface VideoLearningManagerProps {\n  initialEditId?: string  // 🌟 URL state로 전달된 수정 대상 ID\n}\n\nconst VideoLearningManager: React.FC<VideoLearningManagerProps> = ({ initialEditId }) => {\n  const { success, error } = useToastHelpers()\n  const { \n    videoLearnings, \n    isLoading, \n    createVideoLearning, \n    updateVideoLearning, \n    deleteVideoLearning \n  } = useVideoLearningManagerData()\n\n  // 영상 학습 CRUD 관리\n  const [videoState, videoActions] = useCRUDManager<VideoLearning>({\n    onSave: async (data: VideoLearningFormData, editingItem) => {\n      console.log('📹 VideoLearningManager - 저장 시작:', data)\n      console.log('🔗 skillIds:', data.skillIds)\n      \n      if (editingItem) {\n        console.log('✏️ 영상 학습 수정 모드:', editingItem._id)\n        const result = await updateVideoLearning(editingItem._id, data)\n        console.log('✅ 수정 결과:', result)\n        if (result.success) {\n          success('영상 학습 수정 완료', '영상 학습 정보가 성공적으로 수정되었습니다.')\n        }\n      } else {\n        console.log('➕ 영상 학습 생성 모드')\n        const result = await createVideoLearning(data)\n        console.log('✅ 생성 결과:', result)\n        if (result.success) {\n          success('영상 학습 추가 완료', '새로운 영상 학습이 성공적으로 추가되었습니다.')\n        }\n      }\n    },\n    onDelete: async (video: VideoLearning) => {\n      await deleteVideoLearning(video._id)\n      success('영상 학습 삭제 완료', `${video.title}이(가) 삭제되었습니다.`)\n    },\n    onError: (err) => {\n      error('작업 실패', err.message || '알 수 없는 오류가 발생했습니다.')\n    }\n  })\n\n  // 카테고리 필터\n  const [categoryFilter, setCategoryFilter] = useState<string>('all')\n  const [hasAutoOpened, setHasAutoOpened] = useState(false)  // 🌟 자동 열림 추적\n  \n  // 동적 카테고리 추출\n  const availableCategories = useMemo(() => \n    extractUniqueCategories(videoLearnings), \n    [videoLearnings]\n  )\n\n  // 필터링된 영상 목록\n  const filteredVideos = useMemo(() => {\n    if (categoryFilter === 'all') return videoLearnings\n    return videoLearnings.filter(video => video.category === categoryFilter)\n  }, [videoLearnings, categoryFilter])\n\n  // 🌟 initialEditId가 전달되면 자동으로 해당 영상 수정 모드로 전환 (한 번만)\n  useEffect(() => {\n    if (initialEditId && videoLearnings.length > 0 && !hasAutoOpened) {\n      const videoToEdit = videoLearnings.find(video => video._id === initialEditId)\n      if (videoToEdit) {\n        console.log('🎯 자동 수정 모드 활성화:', videoToEdit.title)\n        videoActions.handleEdit(videoToEdit)\n        setHasAutoOpened(true)  // 🌟 한 번만 실행되도록 표시\n      }\n    }\n  }, [initialEditId, videoLearnings, hasAutoOpened, videoActions])\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center py-12\">\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* 헤더 */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white flex items-center gap-2\">\n            <FaVideo className=\"text-red-600\" /> 영상 학습 관리\n          </h2>\n          <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n            유튜브 영상을 통한 학습 기록을 관리합니다\n          </p>\n        </div>\n        {!videoState.showForm && (\n          <button\n            onClick={videoActions.handleCreate}\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors font-medium\"\n          >\n            <FaPlus /> 새 영상 추가\n          </button>\n        )}\n      </div>\n\n      {/* 카테고리 필터 */}\n      {!videoState.showForm && availableCategories.length > 0 && (\n        <div className=\"flex gap-2 flex-wrap\">\n          <button\n            onClick={() => setCategoryFilter('all')}\n            className={`px-4 py-2 rounded-lg transition-colors font-medium ${\n              categoryFilter === 'all'\n                ? 'bg-primary-600 text-white'\n                : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600'\n            }`}\n          >\n            전체 ({videoLearnings.length})\n          </button>\n          {availableCategories.map((cat) => {\n            const count = videoLearnings.filter(v => v.category === cat).length\n            return (\n              <button\n                key={cat}\n                onClick={() => setCategoryFilter(cat)}\n                className={`px-4 py-2 rounded-lg transition-colors font-medium ${\n                  categoryFilter === cat\n                    ? 'bg-primary-600 text-white'\n                    : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600'\n                }`}\n              >\n                {cat} ({count})\n              </button>\n            )\n          })}\n        </div>\n      )}\n\n      {/* 폼 */}\n      {videoState.showForm && (\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md border border-gray-200 dark:border-gray-700\">\n          <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-6\">\n            {videoState.editingItem ? '영상 학습 수정' : '새 영상 학습 추가'}\n          </h3>\n          <VideoLearningForm\n            data={videoState.editingItem || undefined}\n            onSave={videoActions.handleSave}\n            onCancel={videoActions.handleCancelEdit}\n            isSaving={videoState.isSaving}\n            availableCategories={availableCategories}\n          />\n        </div>\n      )}\n\n      {/* 영상 목록 */}\n      {!videoState.showForm && (\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {filteredVideos.map((video) => {\n            const videoId = extractYouTubeId(video.videoUrl)\n            const thumbnailUrl = videoId ? getYouTubeThumbnail(videoId, 'hqdefault') : null\n\n            return (\n              <div\n                key={video._id}\n                className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden border border-gray-200 dark:border-gray-700 hover:shadow-lg transition-shadow\"\n              >\n                {/* 썸네일 */}\n                {thumbnailUrl && (\n                  <div className=\"relative aspect-video bg-gray-200 dark:bg-gray-700\">\n                    <img\n                      src={thumbnailUrl}\n                      alt={video.title}\n                      className=\"w-full h-full object-cover\"\n                    />\n                    <div className=\"absolute top-2 right-2 bg-black/70 px-2 py-1 rounded text-white text-xs font-medium\">\n                      YouTube\n                    </div>\n                  </div>\n                )}\n\n                {/* 내용 */}\n                <div className=\"p-4\">\n                  <div className=\"flex items-start justify-between mb-2\">\n                    <span className=\"px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded text-xs font-medium\">\n                      {video.category}\n                    </span>\n                    {video.rating && (\n                      <div className=\"flex items-center gap-1\">\n                        {Array.from({ length: 5 }, (_, i) => (\n                          <FaStar\n                            key={i}\n                            className={`text-xs ${\n                              i < video.rating! ? 'text-yellow-500' : 'text-gray-300 dark:text-gray-600'\n                            }`}\n                          />\n                        ))}\n                      </div>\n                    )}\n                  </div>\n\n                  <h4 className=\"font-bold text-gray-900 dark:text-white mb-2 line-clamp-2\">\n                    {video.title}\n                  </h4>\n\n                  {video.purpose && (\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-3 line-clamp-2\">\n                      {video.purpose}\n                    </p>\n                  )}\n\n                  <div className=\"flex items-center gap-2 text-xs text-gray-500 dark:text-gray-400 mb-4\">\n                    <span>{formatDate(video.watchDate)}</span>\n                    {video.skillIds && video.skillIds.length > 0 && (\n                      <>\n                        <span>•</span>\n                        <span>스킬 {video.skillIds.length}개</span>\n                      </>\n                    )}\n                  </div>\n\n                  {/* 액션 버튼 */}\n                  <div className=\"flex gap-2\">\n                    <button\n                      onClick={() => videoActions.handleEdit(video)}\n                      className=\"flex-1 flex items-center justify-center gap-2 px-3 py-2 bg-yellow-500 hover:bg-yellow-600 text-white rounded-lg transition-colors text-sm font-medium\"\n                    >\n                      <FaEdit /> 수정\n                    </button>\n                    <button\n                      onClick={() => videoActions.handleDelete(video)}\n                      className=\"flex-1 flex items-center justify-center gap-2 px-3 py-2 bg-red-500 hover:bg-red-600 text-white rounded-lg transition-colors text-sm font-medium\"\n                    >\n                      <FaTrash /> 삭제\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      )}\n\n      {/* 빈 상태 */}\n      {!videoState.showForm && filteredVideos.length === 0 && (\n        <div className=\"text-center py-12\">\n          <FaVideo className=\"text-6xl text-gray-400 mx-auto mb-4\" />\n          <p className=\"text-xl text-gray-600 dark:text-gray-400 mb-4\">\n            {categoryFilter === 'all' \n              ? '아직 등록된 영상 학습이 없습니다' \n              : `${categoryFilter} 카테고리에 영상 학습이 없습니다`}\n          </p>\n          <button\n            onClick={videoActions.handleAdd}\n            className=\"inline-flex items-center gap-2 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors font-medium\"\n          >\n            <FaPlus /> 첫 영상 추가하기\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default VideoLearningManager\n\n","/**\n * 카테고리 관련 유틸리티 함수들\n */\n\n/**\n * 카테고리 문자열의 첫 글자를 대문자로 변환하여 표시명 생성\n * @param category - 카테고리 문자열\n * @returns 표시용 카테고리 이름\n */\nexport const formatCategoryDisplayName = (category: string): string => {\n  if (!category) return '기타'\n  \n  // 특별한 경우 처리\n  const specialCases: { [key: string]: string } = {\n    'plc': 'PLC',\n    'iot': 'IoT',\n    '데이터분석': '데이터 분석',\n    '로봇공학': '로봇 공학',\n    '기타': '기타',\n    'all': '전체'\n  }\n  \n  const lowerCategory = category.toLowerCase()\n  if (specialCases[lowerCategory]) {\n    return specialCases[lowerCategory]\n  }\n  \n  // 일반적인 경우: 첫 글자만 대문자로 변환\n  return category.charAt(0).toUpperCase() + category.slice(1)\n}\n\n/**\n * 책 목록에서 모든 고유 카테고리를 추출\n * @param books - 책 목록\n * @returns 고유 카테고리 배열 (소문자로 정규화)\n */\nexport const extractUniqueCategories = (books: any[]): string[] => {\n  const categories = new Set<string>()\n  \n  // 기본 카테고리 추가\n  categories.add('all')\n  \n  // 책에서 카테고리 추출\n  books.forEach(book => {\n    if (book.category) {\n      categories.add(book.category.toLowerCase())\n    }\n  })\n  \n  return Array.from(categories).sort()\n}\n\n/**\n * 카테고리별 표시명 매핑 객체 생성\n * @param categories - 카테고리 배열\n * @returns 카테고리 표시명 매핑 객체\n */\nexport const createCategoryDisplayNames = (categories: string[]): { [key: string]: string } => {\n  const displayNames: { [key: string]: string } = {}\n  \n  categories.forEach(category => {\n    displayNames[category] = formatCategoryDisplayName(category)\n  })\n  \n  return displayNames\n}\n","import React, { useState } from 'react'\nimport { FaPlus, FaEdit, FaTrash, FaList, FaStar, FaVideo, FaChevronDown, FaChevronUp } from 'react-icons/fa'\nimport { VideoPlaylist, VideoPlaylistFormData, PlaylistVideoFormData } from '../../types'\nimport { useVideoPlaylistManagerData, usePlaylistVideos, useCreatePlaylistVideo, useUpdatePlaylistVideo, useDeletePlaylistVideo } from '../../hooks/useVideoPlaylists'\nimport { useCRUDManager } from '../../hooks/useCRUDManager'\nimport { useToastHelpers } from '../../hooks/useToast'\nimport VideoPlaylistForm from '../forms/VideoPlaylistForm'\nimport PlaylistVideoForm from '../forms/PlaylistVideoForm'\nimport { formatDate } from '../../utils/dateUtils'\nimport { extractYouTubeId } from '../../utils/videoUtils'\n\nconst VideoPlaylistManager: React.FC = () => {\n  const { success, error } = useToastHelpers()\n  const { \n    playlists, \n    isLoading, \n    createPlaylist, \n    updatePlaylist, \n    deletePlaylist \n  } = useVideoPlaylistManagerData()\n\n  const [expandedPlaylistId, setExpandedPlaylistId] = useState<string | null>(null)\n  const [showVideoForm, setShowVideoForm] = useState(false)\n  const [editingVideo, setEditingVideo] = useState<any>(null)\n  const [showBulkAddForm, setShowBulkAddForm] = useState(false)\n  const [bulkVideoUrls, setBulkVideoUrls] = useState('')\n\n  const { data: playlistVideos = [] } = usePlaylistVideos(expandedPlaylistId || undefined)\n  const createVideoMutation = useCreatePlaylistVideo()\n  const updateVideoMutation = useUpdatePlaylistVideo()\n  const deleteVideoMutation = useDeletePlaylistVideo()\n\n  const [playlistState, playlistActions] = useCRUDManager<VideoPlaylist>({\n    onSave: async (data: VideoPlaylistFormData, editingItem) => {\n      if (editingItem) {\n        const result = await updatePlaylist(editingItem._id, data)\n        if (result.success) {\n          success('재생 목록 수정 완료', '재생 목록이 성공적으로 수정되었습니다.')\n        }\n      } else {\n        const result = await createPlaylist(data)\n        if (result.success) {\n          success('재생 목록 추가 완료', '새로운 재생 목록이 추가되었습니다.')\n        }\n      }\n    },\n    onDelete: async (playlist: VideoPlaylist) => {\n      await deletePlaylist(playlist._id)\n      success('재생 목록 삭제 완료', `${playlist.title}이(가) 삭제되었습니다.`)\n    },\n    onError: (err) => {\n      error('작업 실패', err.message || '알 수 없는 오류가 발생했습니다.')\n    }\n  })\n\n  // 영상 저장 핸들러\n  const handleSaveVideo = async (data: PlaylistVideoFormData) => {\n    try {\n      if (editingVideo) {\n        await updateVideoMutation.mutateAsync({ id: editingVideo._id, data })\n        success('영상 수정 완료', '영상 학습 기록이 수정되었습니다.')\n      } else {\n        await createVideoMutation.mutateAsync(data)\n        success('영상 추가 완료', '새로운 영상 학습 기록이 추가되었습니다.')\n      }\n      setShowVideoForm(false)\n      setEditingVideo(null)\n    } catch (err) {\n      error('영상 저장 실패', '영상 저장 중 오류가 발생했습니다.')\n    }\n  }\n\n  // 영상 삭제 핸들러\n  const handleDeleteVideo = async (videoId: string) => {\n    if (!confirm('이 영상 학습 기록을 삭제하시겠습니까?')) return\n    try {\n      await deleteVideoMutation.mutateAsync(videoId)\n      success('영상 삭제 완료', '영상 학습 기록이 삭제되었습니다.')\n    } catch (err) {\n      error('영상 삭제 실패', '영상 삭제 중 오류가 발생했습니다.')\n    }\n  }\n\n  // 영상 URL 일괄 추가 핸들러\n  const handleBulkAddVideos = async () => {\n    if (!bulkVideoUrls.trim() || !expandedPlaylistId) {\n      alert('영상 URL을 입력해주세요')\n      return\n    }\n\n    const urls = bulkVideoUrls.split('\\n').map(url => url.trim()).filter((url): url is string => Boolean(url))\n    \n    if (urls.length === 0) {\n      alert('유효한 URL이 없습니다')\n      return\n    }\n\n    try {\n      let successCount = 0\n      \n      for (const url of urls) {\n        if (!url) continue\n        \n        const videoId = extractYouTubeId(url)\n        \n        if (!videoId) {\n          console.warn(`유효하지 않은 URL: ${url}`)\n          continue\n        }\n\n        const videoData: PlaylistVideoFormData = {\n          playlistId: expandedPlaylistId!,\n          videoId: videoId,\n          title: `영상 ${playlistVideos.length + successCount + 1}`,\n          keyTakeaways: '',\n          order: playlistVideos.length + successCount,\n        }\n\n        await createVideoMutation.mutateAsync(videoData)\n        successCount++\n      }\n\n      setBulkVideoUrls('')\n      setShowBulkAddForm(false)\n      success('일괄 추가 완료', `${successCount}개의 영상이 추가되었습니다. 각 영상의 제목과 핵심 배움을 수정해주세요.`)\n    } catch (err) {\n      error('일괄 추가 실패', '영상 추가 중 오류가 발생했습니다.')\n    }\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center py-12\">\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white flex items-center gap-2\">\n          <FaList className=\"text-red-600\" />\n          재생 목록 관리\n        </h2>\n        <button\n          onClick={playlistActions.handleCreate}\n          className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors shadow-md\"\n        >\n          <FaPlus />\n          재생 목록 추가\n        </button>\n      </div>\n\n      {/* 재생 목록 폼 */}\n      {playlistState.showForm && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\n            <div className=\"p-6\">\n              <h2 className=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">\n                {playlistState.editingItem ? '재생 목록 수정' : '재생 목록 추가'}\n              </h2>\n              {playlistState.editingItem ? (\n                <VideoPlaylistForm\n                  data={playlistState.editingItem}\n                  onSave={playlistActions.handleSave}\n                  onCancel={playlistActions.handleCancel}\n                  isSaving={playlistState.isSaving}\n                />\n              ) : (\n                <VideoPlaylistForm\n                  onSave={playlistActions.handleSave}\n                  onCancel={playlistActions.handleCancel}\n                  isSaving={playlistState.isSaving}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 영상 폼 모달 */}\n      {showVideoForm && expandedPlaylistId && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\n            <div className=\"p-6\">\n              <h2 className=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">\n                {editingVideo ? '영상 학습 기록 수정' : '영상 학습 기록 추가'}\n              </h2>\n              <PlaylistVideoForm\n                playlistId={expandedPlaylistId}\n                data={editingVideo}\n                onSave={handleSaveVideo}\n                onCancel={() => {\n                  setShowVideoForm(false)\n                  setEditingVideo(null)\n                }}\n                isSaving={createVideoMutation.isPending || updateVideoMutation.isPending}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 재생 목록 목록 */}\n      <div className=\"grid gap-4\">\n        {playlists.map((playlist) => {\n          const isExpanded = expandedPlaylistId === playlist._id\n          const currentVideos = isExpanded ? playlistVideos : []\n          \n          return (\n            <div\n              key={playlist._id}\n              className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 overflow-hidden hover:shadow-lg transition-shadow\"\n            >\n              {/* 재생 목록 헤더 */}\n              <div className=\"p-6\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <h3 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n                        {playlist.title}\n                      </h3>\n                      <button\n                        onClick={() => setExpandedPlaylistId(isExpanded ? null : playlist._id)}\n                        className=\"p-1 hover:bg-gray-100 dark:hover:bg-gray-700 rounded\"\n                        title={isExpanded ? '영상 목록 접기' : '영상 목록 펼치기'}\n                      >\n                        {isExpanded ? <FaChevronUp /> : <FaChevronDown />}\n                      </button>\n                    </div>\n                    <div className=\"flex flex-wrap gap-3 text-sm text-gray-600 dark:text-gray-400 mb-2\">\n                      {/* 🌟 다중 카테고리 표시 */}\n                      {playlist.categoryIds && playlist.categoryIds.length > 0 ? (\n                        (playlist.categoryIds as any[]).map((catIdOrObj: any) => {\n                          const catName = typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?.name\n                          return catName ? (\n                            <span \n                              key={typeof catIdOrObj === 'string' ? catIdOrObj : catIdOrObj?._id}\n                              className=\"px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded\"\n                            >\n                              {catName}\n                            </span>\n                          ) : null\n                        })\n                      ) : (\n                        // 호환성: categoryIds가 없으면 기존 category 표시\n                        playlist.category && (\n                          <span className=\"px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded\">\n                            {playlist.category}\n                          </span>\n                        )\n                      )}\n                      {playlist.rating && (\n                        <div className=\"flex items-center gap-1\">\n                          {Array.from({ length: 5 }, (_, i) => (\n                            <FaStar\n                              key={i}\n                              className={`text-sm ${\n                                i < playlist.rating! ? 'text-yellow-500' : 'text-gray-300'\n                              }`}\n                            />\n                          ))}\n                        </div>\n                      )}\n                      <span>시청일: {formatDate(playlist.watchDate)}</span>\n                    </div>\n                    {playlist.purpose && (\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400 line-clamp-2\">{playlist.purpose}</p>\n                    )}\n                  </div>\n                  <div className=\"flex gap-2 ml-4\">\n                    <button\n                      onClick={() => playlistActions.handleEdit(playlist)}\n                      className=\"p-2 text-yellow-600 hover:bg-yellow-100 dark:hover:bg-yellow-900 rounded-lg transition-colors\"\n                      title=\"재생 목록 수정\"\n                    >\n                      <FaEdit />\n                    </button>\n                    <button\n                      onClick={() => playlistActions.handleDelete(playlist)}\n                      disabled={playlistState.isDeleting}\n                      className=\"p-2 text-red-600 hover:bg-red-100 dark:hover:bg-red-900 rounded-lg transition-colors\"\n                      title=\"재생 목록 삭제\"\n                    >\n                      <FaTrash />\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n              {/* 영상 관리 섹션 - 펼쳐진 경우에만 표시 */}\n              {isExpanded && (\n                <div className=\"border-t border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-900 p-6\">\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <h4 className=\"font-bold text-gray-900 dark:text-white flex items-center gap-2\">\n                      <FaVideo /> 영상 관리 ({currentVideos.length}개)\n                    </h4>\n                    <div className=\"flex gap-2\">\n                      <button\n                        onClick={() => setShowBulkAddForm(!showBulkAddForm)}\n                        className=\"flex items-center gap-2 px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors text-sm\"\n                      >\n                        <FaList /> 영상 일괄 추가\n                      </button>\n                      <button\n                        onClick={() => {\n                          setEditingVideo(null)\n                          setShowVideoForm(true)\n                        }}\n                        className=\"flex items-center gap-2 px-3 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm\"\n                      >\n                        <FaPlus /> 영상 추가\n                      </button>\n                    </div>\n                  </div>\n\n                  {/* 영상 URL 일괄 추가 폼 */}\n                  {showBulkAddForm && (\n                    <div className=\"mb-4 p-4 border-2 border-green-500 rounded-lg bg-white dark:bg-gray-800\">\n                      <h5 className=\"font-bold text-gray-900 dark:text-white mb-2\">\n                        📝 영상 URL 일괄 추가\n                      </h5>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-3\">\n                        재생 목록의 각 영상 URL을 한 줄에 하나씩 입력하세요. 위에서부터 순서대로 추가됩니다.\n                      </p>\n                      <textarea\n                        value={bulkVideoUrls}\n                        onChange={(e) => setBulkVideoUrls(e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white font-mono text-sm mb-3\"\n                        rows={6}\n                        placeholder=\"https://www.youtube.com/watch?v=VIDEO_ID_1&#10;https://www.youtube.com/watch?v=VIDEO_ID_2&#10;https://www.youtube.com/watch?v=VIDEO_ID_3\"\n                      />\n                      <div className=\"flex gap-2\">\n                        <button\n                          onClick={handleBulkAddVideos}\n                          disabled={createVideoMutation.isPending}\n                          className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors text-sm font-medium\"\n                        >\n                          {createVideoMutation.isPending ? '추가 중...' : '일괄 추가'}\n                        </button>\n                        <button\n                          onClick={() => {\n                            setShowBulkAddForm(false)\n                            setBulkVideoUrls('')\n                          }}\n                          className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors text-sm font-medium\"\n                        >\n                          취소\n                        </button>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* 영상 목록 */}\n                  {currentVideos.length > 0 ? (\n                    <div className=\"space-y-2\">\n                      {currentVideos.map((video, index) => (\n                        <div\n                          key={video._id}\n                          className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4\"\n                        >\n                          <div className=\"flex items-start justify-between\">\n                            <div className=\"flex-1\">\n                              <div className=\"flex items-center gap-2 mb-1\">\n                                <span className=\"text-sm font-bold text-primary-600 dark:text-primary-400\">\n                                  #{index + 1}\n                                </span>\n                                <h5 className=\"font-semibold text-gray-900 dark:text-white\">\n                                  {video.title}\n                                </h5>\n                              </div>\n                              <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                                ID: {video.videoId}\n                              </p>\n                              {video.keyTakeaways && (\n                                <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-2 line-clamp-2\">\n                                  {video.keyTakeaways}\n                                </p>\n                              )}\n                            </div>\n                            <div className=\"flex gap-2 ml-4\">\n                              <button\n                                onClick={() => {\n                                  setEditingVideo(video)\n                                  setShowVideoForm(true)\n                                }}\n                                className=\"p-2 text-yellow-600 hover:bg-yellow-100 dark:hover:bg-yellow-900 rounded transition-colors\"\n                                title=\"영상 수정\"\n                              >\n                                <FaEdit />\n                              </button>\n                              <button\n                                onClick={() => handleDeleteVideo(video._id)}\n                                className=\"p-2 text-red-600 hover:bg-red-100 dark:hover:bg-red-900 rounded transition-colors\"\n                                title=\"영상 삭제\"\n                              >\n                                <FaTrash />\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  ) : (\n                    <div className=\"text-center py-8 text-gray-500 dark:text-gray-400 bg-white dark:bg-gray-800 rounded-lg\">\n                      <FaVideo className=\"text-4xl mx-auto mb-2 opacity-30\" />\n                      <p className=\"text-sm\">이 재생 목록에 등록된 영상이 없습니다</p>\n                      <p className=\"text-xs mt-1\">위의 \"영상 일괄 추가\" 버튼을 사용하세요</p>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          )\n        })}\n\n        {playlists.length === 0 && (\n          <div className=\"text-center py-12 text-gray-500 dark:text-gray-400\">\n            <FaList className=\"text-6xl mx-auto mb-4 opacity-30\" />\n            <p>아직 등록된 재생 목록이 없습니다</p>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default VideoPlaylistManager\n\n","import React from 'react'\n\nexport type AdminLanguage = 'ko' | 'en' | 'ja'\n\ninterface LanguageTabsProps {\n  activeLanguage: AdminLanguage\n  onChange: (lang: AdminLanguage) => void\n}\n\nconst LanguageTabs: React.FC<LanguageTabsProps> = ({ activeLanguage, onChange }) => {\n  const languages: { code: AdminLanguage; flag: string; label: string }[] = [\n    { code: 'ko', flag: '🇰🇷', label: '한국어' },\n    { code: 'en', flag: '🇺🇸', label: 'English' },\n    { code: 'ja', flag: '🇯🇵', label: '日本語' }\n  ]\n\n  return (\n    <div className=\"flex gap-2 mb-6 border-b border-gray-200 dark:border-gray-700\">\n      {languages.map((lang) => {\n        const isActive = activeLanguage === lang.code\n        return (\n          <button\n            key={lang.code}\n            type=\"button\"\n            onClick={() => onChange(lang.code)}\n            className={`flex items-center gap-2 px-6 py-3 font-semibold transition-all duration-200 border-b-2 ${\n              isActive\n                ? 'border-blue-600 text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/20'\n                : 'border-transparent text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800'\n            }`}\n          >\n            <span className=\"text-xl\">{lang.flag}</span>\n            <span>{lang.label}</span>\n          </button>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default LanguageTabs\n\n","import React, { useState, useMemo } from 'react'\nimport { FaPlus, FaEdit, FaTrash } from 'react-icons/fa'\nimport { Experience, ExperienceFormData } from '../../types'\nimport ExperienceForm from '../forms/ExperienceForm'\nimport { useExperienceManagerData } from '../../hooks/useExperienceManagerData'\n\ninterface ExperienceManagerProps {\n  experienceFilter?: 'all' | 'company' | 'year'\n  experienceSearchTerm?: string\n  selectedExperienceCompany?: string\n  selectedExperienceYear?: string\n}\n\nconst ExperienceManager: React.FC<ExperienceManagerProps> = ({ \n  experienceFilter = 'all', \n  experienceSearchTerm = '', \n  selectedExperienceCompany = '',\n  selectedExperienceYear = ''\n}) => {\n  const { experiences, isLoading, createExperience, updateExperience, deleteExperience } = useExperienceManagerData()\n  const [showForm, setShowForm] = useState(false)\n  const [editingItem, setEditingItem] = useState<Experience | null>(null)\n  const [isSaving, setIsSaving] = useState(false)\n  const [isDeleting, setIsDeleting] = useState(false)\n\n  // 필터링된 경력 목록 계산\n  const filteredExperiences = useMemo(() => {\n    let filtered = [...experiences]\n\n    // 필터 적용\n    if (experienceFilter === 'company' && selectedExperienceCompany) {\n      filtered = filtered.filter(exp => exp.company === selectedExperienceCompany)\n    } else if (experienceFilter === 'year' && selectedExperienceYear) {\n      filtered = filtered.filter(exp => {\n        // period에서 연도 추출 (예: \"2023.01 - 2023.12\" 또는 \"2023 - 현재\")\n        const period = exp.period || ''\n        return period.includes(selectedExperienceYear)\n      })\n    }\n\n    // 검색어 적용\n    if (experienceSearchTerm) {\n      const searchLower = experienceSearchTerm.toLowerCase()\n      filtered = filtered.filter(exp => \n        exp.title.toLowerCase().includes(searchLower) ||\n        exp.company.toLowerCase().includes(searchLower) ||\n        (exp.description && exp.description.toLowerCase().includes(searchLower))\n      )\n    }\n\n    return filtered\n  }, [experiences, experienceFilter, experienceSearchTerm, selectedExperienceCompany, selectedExperienceYear])\n\n  // 회사 목록은 필요시 사용\n  // const experienceCompanies = useMemo(() => {\n  //   const companies = [...new Set(experiences.map(exp => exp.company))]\n  //   return companies.sort()\n  // }, [experiences])\n\n  // 연도 목록은 필요시 사용\n  // const experienceYears = useMemo(() => {\n  //   const years = new Set<string>()\n  //   experiences.forEach(exp => {\n  //     const period = exp.period || ''\n  //     const yearMatches = period.match(/\\b(20\\d{2})\\b/g)\n  //     if (yearMatches) {\n  //       yearMatches.forEach(year => years.add(year))\n  //     }\n  //   })\n  //   return Array.from(years).sort().reverse()\n  // }, [experiences])\n\n  const handleSave = async (data: ExperienceFormData) => {\n    try {\n      setIsSaving(true)\n      if (editingItem) {\n        const result = await updateExperience(editingItem._id!, data)\n        if (result.success) {\n          setShowForm(false)\n          setEditingItem(null)\n        }\n      } else {\n        const result = await createExperience(data)\n        if (result.success) {\n          setShowForm(false)\n        }\n      }\n    } catch (error) {\n      console.error('저장 실패:', error)\n    } finally {\n      setIsSaving(false)\n    }\n  }\n\n  const handleCancel = () => {\n    setShowForm(false)\n    setEditingItem(null)\n  }\n\n  const handleDelete = async (experience: Experience) => {\n    if (confirm('정말 삭제하시겠습니까?')) {\n      try {\n        setIsDeleting(true)\n        await deleteExperience(experience._id!)\n      } catch (error) {\n        console.error('삭제 실패:', error)\n      } finally {\n        setIsDeleting(false)\n      }\n    }\n  }\n\n  const handleAddNew = () => {\n    setEditingItem(null)\n    setShowForm(true)\n  }\n\n  const handleEdit = (experience: Experience) => {\n    setEditingItem(experience)\n    setShowForm(true)\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center py-8\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n        <span className=\"ml-2\">경력 데이터를 불러오는 중...</span>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-2xl font-bold\">경력 관리</h2>\n        <button\n          onClick={handleAddNew}\n          className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2\"\n        >\n          <FaPlus />\n          경력 추가\n        </button>\n      </div>\n\n      {/* 필터 정보 표시 */}\n      {(experienceFilter !== 'all' || experienceSearchTerm || selectedExperienceCompany || selectedExperienceYear) && (\n        <div className=\"mb-4 p-4 bg-gray-100 dark:bg-gray-700 rounded-lg\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n                현재 필터: \n                {experienceFilter === 'all' && !experienceSearchTerm && ' 💼 모든 경력'}\n                {experienceFilter === 'company' && selectedExperienceCompany && ` 🏢 ${selectedExperienceCompany} 회사`}\n                {experienceFilter === 'year' && selectedExperienceYear && ` 📅 ${selectedExperienceYear}년`}\n                {experienceSearchTerm && ` 🔍 \"${experienceSearchTerm}\" 검색`}\n              </h4>\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                {filteredExperiences.length}개 경력 표시 중 (전체 {experiences.length}개)\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {showForm && (\n        <div className=\"mb-6\">\n          <ExperienceForm\n            data={editingItem}\n            onSave={handleSave}\n            onCancel={handleCancel}\n          />\n        </div>\n      )}\n\n      {/* 경력 목록 */}\n      {filteredExperiences.length > 0 ? (\n        <div className=\"space-y-4\">\n          {filteredExperiences.map((experience) => (\n            <div key={experience._id} className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg border border-gray-200 dark:border-gray-600\">\n              <div className=\"flex justify-between items-start\">\n                <div className=\"flex-1\">\n                  <h3 className=\"font-semibold text-lg\">{experience.title}</h3>\n                  <p className=\"text-gray-600 dark:text-gray-400\">{experience.company}</p>\n                  <p className=\"text-sm text-gray-500 dark:text-gray-500\">\n                    {experience.period}\n                  </p>\n                  {experience.description && (\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-2 line-clamp-2\">\n                      {experience.description}\n                    </p>\n                  )}\n                </div>\n                <div className=\"flex gap-2 ml-4\">\n                  <button\n                    onClick={() => handleEdit(experience)}\n                    className=\"p-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\n                    disabled={isSaving || isDeleting}\n                  >\n                    <FaEdit />\n                  </button>\n                  <button\n                    onClick={() => handleDelete(experience)}\n                    className=\"p-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\n                    disabled={isSaving || isDeleting}\n                  >\n                    <FaTrash />\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div className=\"text-center py-12\">\n          <p className=\"text-gray-500 dark:text-gray-400 text-lg mb-4\">\n            {experienceFilter !== 'all' || experienceSearchTerm || selectedExperienceCompany || selectedExperienceYear\n              ? '필터 조건에 맞는 경력이 없습니다.'\n              : '등록된 경력이 없습니다.'\n            }\n          </p>\n          {(experienceFilter !== 'all' || experienceSearchTerm || selectedExperienceCompany || selectedExperienceYear) && (\n            <p className=\"text-sm text-gray-400 dark:text-gray-500\">\n              필터를 초기화하거나 다른 검색어를 시도해보세요.\n            </p>\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ExperienceManager","import React, { useState, useMemo } from 'react'\nimport { FaPlus, FaEdit, FaTrash } from 'react-icons/fa'\nimport { Project, ProjectFormData } from '../../types'\nimport ProjectForm from '../forms/ProjectForm'\nimport { useProjectManagerData } from '../../hooks/useProjectManagerData'\n\ninterface ProjectManagerProps {\n  projectFilter?: 'all' | 'category' | 'featured'\n  projectSearchTerm?: string\n  selectedProjectCategory?: string\n}\n\nconst ProjectManager: React.FC<ProjectManagerProps> = ({ \n  projectFilter = 'all', \n  projectSearchTerm = '', \n  selectedProjectCategory = ''\n}) => {\n  const { projects, isLoading, createProject, updateProject, deleteProject } = useProjectManagerData()\n  const [showForm, setShowForm] = useState(false)\n  const [editingItem, setEditingItem] = useState<Project | null>(null)\n  const [isSaving, setIsSaving] = useState(false)\n  const [isDeleting, setIsDeleting] = useState(false)\n\n  // 필터링된 프로젝트 목록 계산\n  const filteredProjects = useMemo(() => {\n    let filtered = [...projects]\n\n    // 필터 적용\n    if (projectFilter === 'category' && selectedProjectCategory) {\n      filtered = filtered.filter(project => project.category === selectedProjectCategory)\n    } else if (projectFilter === 'featured') {\n      // 주요 프로젝트: 완료된 프로젝트 중 상세 설명이 있는 것\n      filtered = filtered.filter(project => \n        project.status === 'completed' && \n        project.detailedDescription && \n        project.detailedDescription.trim().length > 0\n      )\n    }\n\n    // 검색어 적용\n    if (projectSearchTerm) {\n      const searchLower = projectSearchTerm.toLowerCase()\n      filtered = filtered.filter(project => \n        project.title.toLowerCase().includes(searchLower) ||\n        project.description.toLowerCase().includes(searchLower) ||\n        (project.technologies && project.technologies.some(tech => \n          tech.toLowerCase().includes(searchLower)\n        )) ||\n        (project.category && project.category.toLowerCase().includes(searchLower))\n      )\n    }\n\n    return filtered\n  }, [projects, projectFilter, projectSearchTerm, selectedProjectCategory])\n\n  // 카테고리 목록은 필요시 사용\n  // const projectCategories = useMemo(() => {\n  //   const categories = [...new Set(projects.map(project => project.category).filter(Boolean))]\n  //   return categories.sort()\n  // }, [projects])\n\n  // 주요 프로젝트 수 계산\n  const featuredProjectsCount = useMemo(() => {\n    return projects.filter(project => \n      project.status === 'completed' && \n      project.detailedDescription && \n      project.detailedDescription.trim().length > 0\n    ).length\n  }, [projects])\n\n  const handleSave = async (data: ProjectFormData) => {\n    console.log('🎯 ProjectManager handleSave 호출됨')\n    console.log('📦 받은 데이터:', data)\n    console.log('🔗 skillIds:', data.skillIds)\n    \n    try {\n      setIsSaving(true)\n      console.log('⏳ isSaving = true 설정됨')\n      \n      if (editingItem) {\n        console.log('✏️ 프로젝트 수정 모드:', editingItem._id)\n        const result = await updateProject(editingItem._id!, data)\n        console.log('✅ 수정 결과:', result)\n        if (result.success) {\n          setShowForm(false)\n          setEditingItem(null)\n          alert('✅ 프로젝트가 성공적으로 수정되었습니다!')\n        } else {\n          // 🌟 서버 오류 메시지 상세 출력\n          console.error('❌ 서버 거부 이유:', result.error)\n          const errorMsg = (result.error as any)?.response?.data?.message || '알 수 없는 오류'\n          alert(`❌ 프로젝트 수정 실패: ${errorMsg}`)\n          if ((result.error as any)?.response?.data) {\n            console.error('📋 서버 응답 상세:', (result.error as any).response.data)\n          }\n        }\n      } else {\n        console.log('➕ 프로젝트 생성 모드')\n        const result = await createProject(data)\n        console.log('✅ 생성 결과:', result)\n        if (result.success) {\n          setShowForm(false)\n          alert('✅ 프로젝트가 성공적으로 추가되었습니다!')\n        } else {\n          // 🌟 서버 오류 메시지 상세 출력\n          console.error('❌ 서버 거부 이유:', result.error)\n          const errorMsg = (result.error as any)?.response?.data?.message || '알 수 없는 오류'\n          alert(`❌ 프로젝트 추가 실패: ${errorMsg}`)\n          if ((result.error as any)?.response?.data) {\n            console.error('📋 서버 응답 상세:', (result.error as any).response.data)\n          }\n        }\n      }\n    } catch (error: any) {\n      console.error('❌ 저장 실패:', error)\n      // 🌟 Axios 오류 상세 정보 출력\n      const errorMsg = error?.response?.data?.message || error.message || '알 수 없는 오류'\n      alert(`❌ 저장 중 오류 발생: ${errorMsg}`)\n      if (error?.response?.data) {\n        console.error('📋 서버 응답 상세:', error.response.data)\n        console.error('🔢 상태 코드:', error.response.status)\n      }\n    } finally {\n      console.log('🏁 isSaving = false 설정됨')\n      setIsSaving(false)\n    }\n  }\n\n  const handleCancel = () => {\n    setShowForm(false)\n    setEditingItem(null)\n  }\n\n  const handleDelete = async (project: Project) => {\n    if (confirm('정말 삭제하시겠습니까?')) {\n      try {\n        setIsDeleting(true)\n        await deleteProject(project._id!)\n      } catch (error) {\n        console.error('삭제 실패:', error)\n      } finally {\n        setIsDeleting(false)\n      }\n    }\n  }\n\n  const handleAddNew = () => {\n    setEditingItem(null)\n    setShowForm(true)\n  }\n\n  const handleEdit = (project: Project) => {\n    setEditingItem(project)\n    setShowForm(true)\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center py-8\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n        <span className=\"ml-2\">프로젝트 데이터를 불러오는 중...</span>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-2xl font-bold\">프로젝트 관리</h2>\n        <button\n          onClick={handleAddNew}\n          className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2\"\n        >\n          <FaPlus />\n          프로젝트 추가\n        </button>\n      </div>\n\n      {/* 필터 정보 표시 */}\n      {(projectFilter !== 'all' || projectSearchTerm || selectedProjectCategory) && (\n        <div className=\"mb-4 p-4 bg-gray-100 dark:bg-gray-700 rounded-lg\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n                현재 필터: \n                {projectFilter === 'all' && !projectSearchTerm && ' 📁 모든 프로젝트'}\n                {projectFilter === 'category' && selectedProjectCategory && ` 🏷️ ${selectedProjectCategory} 카테고리`}\n                {projectFilter === 'featured' && ' 🌟 주요 프로젝트'}\n                {projectSearchTerm && ` 🔍 \"${projectSearchTerm}\" 검색`}\n              </h4>\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                {filteredProjects.length}개 프로젝트 표시 중 (전체 {projects.length}개)\n                {projectFilter === 'featured' && ` (주요 프로젝트: ${featuredProjectsCount}개)`}\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {showForm && (\n        <div className=\"mb-6\">\n          <ProjectForm\n            data={editingItem}\n            onSave={handleSave}\n            onCancel={handleCancel}\n            isSaving={isSaving}\n          />\n        </div>\n      )}\n\n      {/* 프로젝트 목록 */}\n      {filteredProjects.length > 0 ? (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {filteredProjects.map((project) => (\n            <div key={project._id} className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg border border-gray-200 dark:border-gray-600\">\n              <h3 className=\"font-semibold text-lg mb-2\">{project.title}</h3>\n              <p className=\"text-gray-600 dark:text-gray-400 text-sm mb-2 line-clamp-2\">{project.description}</p>\n              {project.category && (\n                <p className=\"text-xs text-blue-600 dark:text-blue-400 mb-3\">{project.category}</p>\n              )}\n              {project.technologies && project.technologies.length > 0 && (\n                <div className=\"flex flex-wrap gap-1 mb-3\">\n                  {project.technologies.slice(0, 3).map((tech, index) => (\n                    <span key={index} className=\"text-xs bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-gray-300 px-2 py-1 rounded\">\n                      {tech}\n                    </span>\n                  ))}\n                  {project.technologies.length > 3 && (\n                    <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      +{project.technologies.length - 3}\n                    </span>\n                  )}\n                </div>\n              )}\n              <div className=\"flex justify-between items-center\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    project.status === 'completed' \n                      ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-300' \n                      : 'bg-yellow-100 dark:bg-yellow-900/30 text-yellow-800 dark:text-yellow-300'\n                  }`}>\n                    {project.status === 'completed' ? '완료' : '진행중'}\n                  </span>\n                  {project.status === 'completed' && project.detailedDescription && project.detailedDescription.trim().length > 0 && (\n                    <span className=\"text-xs bg-purple-100 dark:bg-purple-900/30 text-purple-800 dark:text-purple-300 px-2 py-1 rounded\">\n                      🌟 주요\n                    </span>\n                  )}\n                </div>\n                <div className=\"flex gap-2\">\n                  <button\n                    onClick={() => handleEdit(project)}\n                    className=\"p-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\n                    disabled={isSaving || isDeleting}\n                  >\n                    <FaEdit />\n                  </button>\n                  <button\n                    onClick={() => handleDelete(project)}\n                    className=\"p-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\n                    disabled={isSaving || isDeleting}\n                  >\n                    <FaTrash />\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div className=\"text-center py-12\">\n          <p className=\"text-gray-500 dark:text-gray-400 text-lg mb-4\">\n            {projectFilter !== 'all' || projectSearchTerm || selectedProjectCategory\n              ? '필터 조건에 맞는 프로젝트가 없습니다.'\n              : '등록된 프로젝트가 없습니다.'\n            }\n          </p>\n          {(projectFilter !== 'all' || projectSearchTerm || selectedProjectCategory) && (\n            <p className=\"text-sm text-gray-400 dark:text-gray-500\">\n              필터를 초기화하거나 다른 검색어를 시도해보세요.\n            </p>\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ProjectManager","import React, { useState } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { FaTimes, FaEnvelope, FaUser, FaCalendar, FaCheck, FaTrash, FaReply, FaArrowLeft, FaSpinner } from 'react-icons/fa'\nimport { ContactMessage } from '../../types'\nimport { useMessageDetail } from '../../hooks/useMessageDetail'\n\ninterface MessageDetailProps {\n  messageId: string | undefined\n  isOpen: boolean\n  onClose: () => void\n  onMarkAsRead: (id: string) => Promise<void>\n  onDelete: (id: string) => Promise<void>\n  onReply?: (message: ContactMessage) => void\n}\n\nconst MessageDetail: React.FC<MessageDetailProps> = ({\n  messageId,\n  isOpen,\n  onClose,\n  onMarkAsRead,\n  onDelete,\n  onReply\n}) => {\n  const [isProcessing, setIsProcessing] = useState(false)\n  const [showReplyForm, setShowReplyForm] = useState(false)\n  const [replyContent, setReplyContent] = useState('')\n\n  // React Query를 사용한 메시지 상세 정보 로딩\n  const { \n    data: message, \n    isLoading, \n    isError, \n    error,\n    refetch \n  } = useMessageDetail(messageId, {\n    enabled: isOpen && !!messageId // 모달이 열려있고 messageId가 있을 때만 쿼리 실행\n  })\n\n  const handleMarkAsRead = async () => {\n    if (message.isRead) return\n    \n    try {\n      setIsProcessing(true)\n      await onMarkAsRead(message._id!)\n    } catch (error) {\n      console.error('읽음 처리 실패:', error)\n    } finally {\n      setIsProcessing(false)\n    }\n  }\n\n  const handleDelete = async () => {\n    if (!confirm('정말 이 메시지를 삭제하시겠습니까?')) return\n    \n    try {\n      setIsProcessing(true)\n      await onDelete(message._id!)\n      onClose()\n    } catch (error) {\n      console.error('삭제 실패:', error)\n    } finally {\n      setIsProcessing(false)\n    }\n  }\n\n  const handleReply = () => {\n    if (onReply) {\n      onReply(message)\n    } else {\n      setShowReplyForm(true)\n    }\n  }\n\n  const handleSendReply = () => {\n    // 답장 기능 구현 (이메일 발송 등)\n    console.log('답장 내용:', replyContent)\n    alert('답장 기능은 향후 구현 예정입니다.')\n    setShowReplyForm(false)\n    setReplyContent('')\n  }\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleString('ko-KR', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    })\n  }\n\n  if (!isOpen) return null\n\n  // 로딩 상태 처리\n  if (isLoading) {\n    return (\n      <AnimatePresence>\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\"\n          onClick={onClose}\n        >\n          <motion.div\n            initial={{ scale: 0.9, opacity: 0 }}\n            animate={{ scale: 1, opacity: 1 }}\n            exit={{ scale: 0.9, opacity: 0 }}\n            className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-md w-full p-8\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <div className=\"flex flex-col items-center justify-center\">\n              <FaSpinner className=\"text-4xl text-blue-600 dark:text-blue-400 animate-spin mb-4\" />\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\n                메시지 로딩 중...\n              </h3>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                잠시만 기다려주세요\n              </p>\n            </div>\n          </motion.div>\n        </motion.div>\n      </AnimatePresence>\n    )\n  }\n\n  // 에러 상태 처리\n  if (isError) {\n    return (\n      <AnimatePresence>\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\"\n          onClick={onClose}\n        >\n          <motion.div\n            initial={{ scale: 0.9, opacity: 0 }}\n            animate={{ scale: 1, opacity: 1 }}\n            exit={{ scale: 0.9, opacity: 0 }}\n            className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-md w-full p-8\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <div className=\"text-center\">\n              <div className=\"text-red-500 text-4xl mb-4\">⚠️</div>\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\n                메시지를 불러올 수 없습니다\n              </h3>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-4\">\n                {error?.message || '알 수 없는 오류가 발생했습니다.'}\n              </p>\n              <div className=\"flex gap-3 justify-center\">\n                <button\n                  onClick={() => refetch()}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n                >\n                  다시 시도\n                </button>\n                <button\n                  onClick={onClose}\n                  className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\n                >\n                  닫기\n                </button>\n              </div>\n            </div>\n          </motion.div>\n        </motion.div>\n      </AnimatePresence>\n    )\n  }\n\n  // 메시지 데이터가 없는 경우\n  if (!message) {\n    return (\n      <AnimatePresence>\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\"\n          onClick={onClose}\n        >\n          <motion.div\n            initial={{ scale: 0.9, opacity: 0 }}\n            animate={{ scale: 1, opacity: 1 }}\n            exit={{ scale: 0.9, opacity: 0 }}\n            className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-md w-full p-8\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <div className=\"text-center\">\n              <FaEnvelope className=\"text-4xl text-gray-400 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\n                메시지를 찾을 수 없습니다\n              </h3>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-4\">\n                요청하신 메시지가 존재하지 않거나 삭제되었습니다.\n              </p>\n              <button\n                onClick={onClose}\n                className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\n              >\n                닫기\n              </button>\n            </div>\n          </motion.div>\n        </motion.div>\n      </AnimatePresence>\n    )\n  }\n\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\"\n        onClick={onClose}\n      >\n        <motion.div\n          initial={{ scale: 0.9, opacity: 0 }}\n          animate={{ scale: 1, opacity: 1 }}\n          exit={{ scale: 0.9, opacity: 0 }}\n          className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-hidden\"\n          onClick={(e) => e.stopPropagation()}\n        >\n          {/* Header */}\n          <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center gap-3\">\n              <FaEnvelope className=\"text-blue-600 dark:text-blue-400 text-xl\" />\n              <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n                메시지 상세\n              </h2>\n              {!message.isRead && (\n                <span className=\"bg-blue-500 text-white text-xs px-2 py-1 rounded-full\">\n                  새 메시지\n                </span>\n              )}\n            </div>\n            <button\n              onClick={onClose}\n              className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\n            >\n              <FaTimes className=\"text-gray-500 dark:text-gray-400\" />\n            </button>\n          </div>\n\n          {/* Content */}\n          <div className=\"p-6 overflow-y-auto max-h-[calc(90vh-140px)]\">\n            {/* 메시지 정보 */}\n            <div className=\"grid md:grid-cols-2 gap-6 mb-6\">\n              <div className=\"space-y-4\">\n                <div className=\"flex items-start gap-3\">\n                  <FaUser className=\"text-gray-500 dark:text-gray-400 mt-1\" />\n                  <div>\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">보낸이</p>\n                    <p className=\"font-medium text-gray-900 dark:text-white\">\n                      {message.name}\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start gap-3\">\n                  <FaEnvelope className=\"text-gray-500 dark:text-gray-400 mt-1\" />\n                  <div>\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">이메일</p>\n                    <p className=\"font-medium text-gray-900 dark:text-white\">\n                      {message.email}\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start gap-3\">\n                  <FaCalendar className=\"text-gray-500 dark:text-gray-400 mt-1\" />\n                  <div>\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">받은 시간</p>\n                    <p className=\"font-medium text-gray-900 dark:text-white\">\n                      {formatDate(message.createdAt || '')}\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"space-y-4\">\n                <div>\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-2\">상태</p>\n                  <div className=\"flex items-center gap-2\">\n                    {message.isRead ? (\n                      <span className=\"flex items-center gap-1 text-green-600 dark:text-green-400\">\n                        <FaCheck /> 읽음\n                      </span>\n                    ) : (\n                      <span className=\"flex items-center gap-1 text-blue-600 dark:text-blue-400\">\n                        <FaEnvelope /> 읽지 않음\n                      </span>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* 제목 */}\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                {message.subject}\n              </h3>\n            </div>\n\n            {/* 메시지 내용 */}\n            <div className=\"mb-6\">\n              <h4 className=\"text-sm font-medium text-gray-500 dark:text-gray-400 mb-3\">\n                메시지 내용\n              </h4>\n              <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\n                <p className=\"text-gray-900 dark:text-white whitespace-pre-wrap\">\n                  {message.message}\n                </p>\n              </div>\n            </div>\n\n            {/* 답장 폼 */}\n            <AnimatePresence>\n              {showReplyForm && (\n                <motion.div\n                  initial={{ opacity: 0, height: 0 }}\n                  animate={{ opacity: 1, height: 'auto' }}\n                  exit={{ opacity: 0, height: 0 }}\n                  className=\"mb-6 border-t border-gray-200 dark:border-gray-700 pt-6\"\n                >\n                  <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                    답장 작성\n                  </h4>\n                  <div className=\"space-y-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                        받는 사람\n                      </label>\n                      <input\n                        type=\"email\"\n                        value={message.email}\n                        disabled\n                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-500 dark:text-gray-400\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                        답장 내용\n                      </label>\n                      <textarea\n                        value={replyContent}\n                        onChange={(e) => setReplyContent(e.target.value)}\n                        placeholder=\"답장 내용을 입력하세요...\"\n                        rows={6}\n                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-vertical\"\n                      />\n                    </div>\n                    <div className=\"flex gap-3\">\n                      <button\n                        onClick={handleSendReply}\n                        disabled={!replyContent.trim()}\n                        className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors flex items-center gap-2\"\n                      >\n                        <FaReply /> 답장 보내기\n                      </button>\n                      <button\n                        onClick={() => {\n                          setShowReplyForm(false)\n                          setReplyContent('')\n                        }}\n                        className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\n                      >\n                        취소\n                      </button>\n                    </div>\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n\n          {/* Footer */}\n          <div className=\"flex items-center justify-between p-6 border-t border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-700\">\n            <button\n              onClick={handleReply}\n              className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              <FaReply /> 답장\n            </button>\n            \n            <div className=\"flex gap-3\">\n              {!message.isRead && (\n                <button\n                  onClick={handleMarkAsRead}\n                  disabled={isProcessing}\n                  className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors\"\n                >\n                  <FaCheck /> {isProcessing ? '처리 중...' : '읽음 처리'}\n                </button>\n              )}\n              <button\n                onClick={handleDelete}\n                disabled={isProcessing}\n                className=\"flex items-center gap-2 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors\"\n              >\n                <FaTrash /> {isProcessing ? '삭제 중...' : '삭제'}\n              </button>\n            </div>\n          </div>\n        </motion.div>\n      </motion.div>\n    </AnimatePresence>\n  )\n}\n\nexport default MessageDetail\n","import React, { useState } from 'react'\nimport { FaTrash, FaEye, FaEnvelope } from 'react-icons/fa'\nimport { ContactMessage } from '../../types'\nimport { useMessageManagerData } from '../../hooks/useMessageManagerData'\nimport MessageDetail from './MessageDetail'\n\nconst MessageManager: React.FC = () => {\n  const { messages, isLoading, markAsRead, deleteMessage } = useMessageManagerData()\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [selectedMessageId, setSelectedMessageId] = useState<string | undefined>(undefined)\n  const [showDetail, setShowDetail] = useState(false)\n\n  const handleMarkAsRead = async (message: ContactMessage) => {\n    try {\n      await markAsRead(message._id!)\n    } catch (error) {\n      console.error('읽음 처리 실패:', error)\n    }\n  }\n\n  const handleDelete = async (message: ContactMessage) => {\n    if (confirm('정말 삭제하시겠습니까?')) {\n      try {\n        setIsDeleting(true)\n        await deleteMessage(message._id!)\n      } catch (error) {\n        console.error('삭제 실패:', error)\n      } finally {\n        setIsDeleting(false)\n      }\n    }\n  }\n\n  const handleViewDetail = (message: ContactMessage) => {\n    setSelectedMessageId(message._id)\n    setShowDetail(true)\n  }\n\n  const handleCloseDetail = () => {\n    setShowDetail(false)\n    setSelectedMessageId(undefined)\n  }\n\n  const handleDetailMarkAsRead = async (id: string) => {\n    await markAsRead(id)\n  }\n\n  const handleDetailDelete = async (id: string) => {\n    await deleteMessage(id)\n    handleCloseDetail()\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center py-8\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n        <span className=\"ml-2\">메시지 데이터를 불러오는 중...</span>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <div>\n        <div className=\"flex items-center justify-between mb-6\">\n          <h2 className=\"text-2xl font-bold\">메시지 관리</h2>\n          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n            총 {messages.length}개의 메시지\n          </div>\n        </div>\n        \n        <div className=\"space-y-4\">\n          {messages.map((message) => (\n            <div \n              key={message._id} \n              className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg border border-gray-200 dark:border-gray-600 hover:shadow-md transition-shadow cursor-pointer\"\n              onClick={() => handleViewDetail(message)}\n            >\n              <div className=\"flex justify-between items-start\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <h3 className=\"font-semibold text-lg\">{message.subject}</h3>\n                    {!message.isRead && (\n                      <span className=\"bg-blue-500 text-white text-xs px-2 py-1 rounded-full\">\n                        새 메시지\n                      </span>\n                    )}\n                  </div>\n                  <p \n                    className=\"text-gray-600 dark:text-gray-400 mb-2\"\n                    style={{\n                      display: '-webkit-box',\n                      WebkitLineClamp: 2,\n                      WebkitBoxOrient: 'vertical',\n                      overflow: 'hidden'\n                    }}\n                  >\n                    {message.message.length > 100 ? `${message.message.substring(0, 100)}...` : message.message}\n                  </p>\n                  <div className=\"text-sm text-gray-500 dark:text-gray-500\">\n                    <p>보낸이: {message.name} ({message.email})</p>\n                    <p>받은 시간: {message.createdAt ? new Date(message.createdAt).toLocaleString('ko-KR') : '알 수 없음'}</p>\n                  </div>\n                </div>\n                <div className=\"flex gap-2 ml-4\" onClick={(e) => e.stopPropagation()}>\n                  <button\n                    onClick={() => handleViewDetail(message)}\n                    className=\"p-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\n                    title=\"상세 보기\"\n                  >\n                    <FaEye />\n                  </button>\n                  {!message.isRead && (\n                    <button\n                      onClick={() => handleMarkAsRead(message)}\n                      className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 transition-colors text-sm\"\n                    >\n                      읽음 처리\n                    </button>\n                  )}\n                  <button\n                    onClick={() => handleDelete(message)}\n                    className=\"p-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\n                    disabled={isDeleting}\n                    title=\"삭제\"\n                  >\n                    <FaTrash />\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* 메시지 상세 보기 모달 */}\n      {showDetail && (\n        <MessageDetail\n          messageId={selectedMessageId}\n          isOpen={showDetail}\n          onClose={handleCloseDetail}\n          onMarkAsRead={handleDetailMarkAsRead}\n          onDelete={handleDetailDelete}\n        />\n      )}\n    </>\n  )\n}\n\nexport default MessageManager","import React from 'react'\nimport { FaPlus, FaEdit, FaTrash, FaChevronDown, FaChevronRight, FaBars } from 'react-icons/fa'\nimport { useSortable } from '@dnd-kit/sortable'\nimport { CSS } from '@dnd-kit/utilities'\nimport { SkillCategory } from '../../types'\n\ninterface SortableCategoryCardProps {\n  category: SkillCategory\n  isExpanded: boolean\n  onToggle: (categoryId: string) => void\n  onAddSkill: (categoryId: string) => void\n  onEdit: (category: SkillCategory) => void\n  onDelete: (category: SkillCategory) => void\n  isSaving: boolean\n  isDeleting: boolean\n  children?: React.ReactNode\n}\n\nconst SortableCategoryCard: React.FC<SortableCategoryCardProps> = ({\n  category,\n  isExpanded,\n  onToggle,\n  onAddSkill,\n  onEdit,\n  onDelete,\n  isSaving,\n  isDeleting,\n  children\n}) => {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({ id: category._id! })\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.5 : 1,\n  }\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style}\n      className=\"bg-gray-50 dark:bg-gray-700 rounded-lg border border-gray-200 dark:border-gray-600 overflow-hidden\"\n    >\n      <div className=\"p-4 hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-3 flex-1\" onClick={() => onToggle(category._id!)}>\n            {/* 🌟 드래그 핸들 */}\n            <div\n              {...attributes}\n              {...listeners}\n              className=\"cursor-grab active:cursor-grabbing text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 p-1\"\n              title=\"드래그하여 순서 변경\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              <FaBars />\n            </div>\n            <div \n              className=\"w-4 h-4 rounded-full\"\n              style={{ backgroundColor: category.color }}\n            ></div>\n            <h3 className=\"font-semibold text-lg cursor-pointer\">{category.title}</h3>\n            <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n              ({category.skills?.length || 0}개 스킬)\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <button\n              onClick={(e) => {\n                e.stopPropagation()\n                onAddSkill(category._id!)\n              }}\n              className=\"p-2 bg-green-600 text-white rounded hover:bg-green-700 transition-colors\"\n              disabled={isSaving || isDeleting}\n            >\n              <FaPlus size={12} />\n            </button>\n            <button\n              onClick={(e) => {\n                e.stopPropagation()\n                onEdit(category)\n              }}\n              className=\"p-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\n              disabled={isSaving || isDeleting}\n            >\n              <FaEdit size={12} />\n            </button>\n            <button\n              onClick={(e) => {\n                e.stopPropagation()\n                onDelete(category)\n              }}\n              className=\"p-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\n              disabled={isSaving || isDeleting}\n            >\n              <FaTrash size={12} />\n            </button>\n            {isExpanded ? (\n              <FaChevronDown className=\"text-gray-400\" />\n            ) : (\n              <FaChevronRight className=\"text-gray-400\" />\n            )}\n          </div>\n        </div>\n        {category.description && (\n          <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-2 ml-7\">\n            {category.description}\n          </p>\n        )}\n      </div>\n      \n      {/* 스킬 목록 (children으로 전달) */}\n      {isExpanded && children}\n    </div>\n  )\n}\n\nexport default SortableCategoryCard\n\n","import React from 'react'\nimport { FaEdit, FaTrash, FaBars, FaSave } from 'react-icons/fa'\nimport { useSortable } from '@dnd-kit/sortable'\nimport { CSS } from '@dnd-kit/utilities'\nimport { Skill } from '../../types'\nimport DynamicIcon from '../common/DynamicIcon'\n\ninterface SortableSkillItemProps {\n  skill: Skill\n  categoryColor: string\n  currentLevel: number\n  hasChanges: boolean\n  isSavingThis: boolean\n  isSaving: boolean\n  isDeleting: boolean\n  onLevelChange: (skillId: string, level: number) => void\n  onSaveLevel: (skill: Skill) => void\n  onEdit: (skill: Skill) => void\n  onDelete: (skill: Skill) => void\n  onToggleSidebar: (skill: Skill) => void\n  onToggleLanguageCard: (skill: Skill) => void\n}\n\nconst SortableSkillItem: React.FC<SortableSkillItemProps> = ({\n  skill,\n  categoryColor,\n  currentLevel,\n  hasChanges,\n  isSavingThis,\n  isSaving,\n  isDeleting,\n  onLevelChange,\n  onSaveLevel,\n  onEdit,\n  onDelete,\n  onToggleSidebar,\n  onToggleLanguageCard\n}) => {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({ id: skill._id! })\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.5 : 1,\n  }\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style}\n      className=\"flex items-center justify-between bg-white dark:bg-gray-700 p-3 rounded-lg\"\n    >\n      <div className=\"flex items-center gap-3 flex-1\">\n        {/* 🌟 드래그 핸들 */}\n        <div\n          {...attributes}\n          {...listeners}\n          className=\"cursor-grab active:cursor-grabbing text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 p-1\"\n          title=\"드래그하여 순서 변경\"\n        >\n          <FaBars />\n        </div>\n        \n        {/* 🌟 사이드바/언어 카드 표시 체크박스 */}\n        <div className=\"flex flex-col gap-1\">\n          <label className=\"flex items-center gap-1 text-xs cursor-pointer\" title=\"사이드바 핵심기술에 표시\">\n            <input\n              type=\"checkbox\"\n              checked={skill.showInSidebar || false}\n              onChange={() => onToggleSidebar(skill)}\n              disabled={isSaving || isDeleting}\n              className=\"w-3 h-3 text-blue-600 rounded focus:ring-2 focus:ring-blue-500\"\n            />\n            <span className=\"text-gray-600 dark:text-gray-400\">핵심</span>\n          </label>\n          <label className=\"flex items-center gap-1 text-xs cursor-pointer\" title=\"사이드바 언어카드에 표시\">\n            <input\n              type=\"checkbox\"\n              checked={skill.showInLanguageCard || false}\n              onChange={() => onToggleLanguageCard(skill)}\n              disabled={isSaving || isDeleting}\n              className=\"w-3 h-3 text-green-600 rounded focus:ring-2 focus:ring-green-500\"\n            />\n            <span className=\"text-gray-600 dark:text-gray-400\">언어</span>\n          </label>\n        </div>\n        \n        <div className=\"text-lg text-blue-600 dark:text-blue-400\">\n          <DynamicIcon iconName={skill.icon} size={18} />\n        </div>\n        <span className=\"font-medium min-w-[120px]\">{skill.name}</span>\n        <div className=\"flex items-center gap-2 flex-1 max-w-md\">\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"100\"\n            step=\"5\"\n            value={currentLevel}\n            onChange={(e) => {\n              const newLevel = parseInt(e.target.value)\n              onLevelChange(skill._id!, newLevel)\n            }}\n            className=\"flex-1 h-2 bg-gray-200 dark:bg-gray-600 rounded-lg appearance-none cursor-pointer slider-thumb\"\n            style={{\n              background: `linear-gradient(to right, ${categoryColor} 0%, ${categoryColor} ${currentLevel}%, #e5e7eb ${currentLevel}%, #e5e7eb 100%)`\n            }}\n            disabled={isSaving || isDeleting || isSavingThis}\n          />\n          <span className=\"text-sm text-gray-600 dark:text-gray-400 min-w-[45px] text-right font-medium\">\n            {currentLevel}%\n          </span>\n          {hasChanges && (\n            <button\n              onClick={() => onSaveLevel(skill)}\n              disabled={isSavingThis}\n              className={`px-3 py-1 bg-green-600 hover:bg-green-700 text-white rounded text-xs font-medium transition-colors flex items-center gap-1 ${\n                isSavingThis ? 'opacity-50 cursor-not-allowed' : ''\n              }`}\n              title=\"변경된 숙련도 저장\"\n            >\n              {isSavingThis ? (\n                <>\n                  <div className=\"w-3 h-3 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n                  저장중\n                </>\n              ) : (\n                <>\n                  <FaSave size={10} />\n                  저장\n                </>\n              )}\n            </button>\n          )}\n        </div>\n      </div>\n      <div className=\"flex gap-2 ml-2\">\n        <button\n          onClick={() => onEdit(skill)}\n          className=\"p-2 bg-yellow-600 text-white rounded hover:bg-yellow-700 transition-colors\"\n          disabled={isSaving || isDeleting}\n        >\n          <FaEdit size={12} />\n        </button>\n        <button\n          onClick={() => onDelete(skill)}\n          className=\"p-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\n          disabled={isSaving || isDeleting}\n        >\n          <FaTrash size={12} />\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default SortableSkillItem\n\n","import React, { useState, useCallback } from 'react'\nimport { FaPlus } from 'react-icons/fa'\nimport { SkillCategory, Skill, SkillCategoryFormData, SkillFormData } from '../../types'\nimport { useSkillsManagerData } from '../../hooks/useSkillsManagerData'\nimport SkillCategoryForm from '../forms/SkillCategoryForm'\nimport SkillForm from '../forms/SkillForm'\nimport SortableCategoryCard from './SortableCategoryCard'\nimport SortableSkillItem from './SortableSkillItem'\nimport { DndContext, closestCenter, DragEndEvent } from '@dnd-kit/core'\nimport { SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable'\nimport { arrayMove } from '@dnd-kit/sortable'\n\nconst SkillsManager: React.FC = () => {\n  const { \n    skillCategories, \n    isLoading, \n    createSkillCategory,\n    updateSkillCategory,\n    deleteSkillCategory,\n    createSkill,\n    updateSkill,\n    deleteSkill\n  } = useSkillsManagerData()\n\n\n  // 단일 폼 상태 관리 - 한 번에 하나의 작업만 가능\n  const [activeForm, setActiveForm] = useState<'category' | 'skill' | null>(null)\n  const [editingCategory, setEditingCategory] = useState<SkillCategory | null>(null)\n  const [editingSkill, setEditingSkill] = useState<Skill | null>(null)\n  const [selectedCategoryId, setSelectedCategoryId] = useState<string | null>(null)\n  const [expandedCategories, setExpandedCategories] = useState<Set<string>>(new Set())\n  const [isSaving, setIsSaving] = useState(false)\n  const [isDeleting, setIsDeleting] = useState(false)\n\n  // 🌟 숙련도 로컬 상태 관리 (변경사항 추적용)\n  const [localLevels, setLocalLevels] = useState<Map<string, number>>(new Map())\n  \n  // 🌟 저장 중인 스킬 ID 추적\n  const [savingSkillIds, setSavingSkillIds] = useState<Set<string>>(new Set())\n\n  // 🌟 슬라이더 변경 핸들러 (즉시 저장 없이 로컬 상태만 업데이트)\n  const handleLevelChange = useCallback((skillId: string, newLevel: number) => {\n    setLocalLevels(prev => {\n      const newMap = new Map(prev)\n      newMap.set(skillId, newLevel)\n      return newMap\n    })\n  }, [])\n\n  // 🌟 개별 스킬 숙련도 저장 핸들러\n  const handleSaveLevel = useCallback(async (skill: Skill) => {\n    const skillId = skill._id!\n    const newLevel = localLevels.get(skillId)\n    \n    if (newLevel === undefined || newLevel === skill.level) {\n      // 변경사항이 없으면 로컬 상태만 정리\n      setLocalLevels(prev => {\n        const newMap = new Map(prev)\n        newMap.delete(skillId)\n        return newMap\n      })\n      return\n    }\n\n    try {\n      setSavingSkillIds(prev => new Set(prev).add(skillId))\n      console.log(`💾 숙련도 저장: ${skill.name} = ${newLevel}%`)\n      \n      await updateSkill(skillId, { \n        name: skill.name,\n        icon: skill.icon,\n        level: newLevel,\n        order: skill.order,\n        ...(skill.description && { description: skill.description }),\n        ...(skill.color && { color: skill.color }),\n        ...(skill.showInSidebar !== undefined && { showInSidebar: skill.showInSidebar }),\n        ...(skill.showInLanguageCard !== undefined && { showInLanguageCard: skill.showInLanguageCard })\n      })\n      \n      console.log(`✅ 저장 완료: ${skill.name}`)\n      \n      // 저장 성공 후 로컬 상태 정리\n      setLocalLevels(prev => {\n        const newMap = new Map(prev)\n        newMap.delete(skillId)\n        return newMap\n      })\n    } catch (error) {\n      console.error(`❌ 저장 실패: ${skill.name}`, error)\n      alert(`저장 실패: ${skill.name}`)\n    } finally {\n      setSavingSkillIds(prev => {\n        const newSet = new Set(prev)\n        newSet.delete(skillId)\n        return newSet\n      })\n    }\n  }, [localLevels, updateSkill])\n\n  // 🌟 사이드바 표시 토글 핸들러\n  const handleToggleSidebar = useCallback(async (skill: Skill) => {\n    if (!skill._id) return\n    \n    try {\n      setSavingSkillIds(prev => new Set(prev).add(skill._id!))\n      const newValue = !skill.showInSidebar\n      console.log(`💾 [핵심기술] 토글: ${skill.name} = ${newValue}`)\n      console.log(`📋 [핵심기술] 전송 데이터:`, {\n        name: skill.name,\n        showInSidebar: newValue,\n        showInLanguageCard: skill.showInLanguageCard\n      })\n      \n      const result = await updateSkill(skill._id, {\n        name: skill.name,\n        icon: skill.icon,\n        level: skill.level,\n        order: skill.order,\n        showInSidebar: newValue,\n        ...(skill.description && { description: skill.description }),\n        ...(skill.color && { color: skill.color }),\n        ...(skill.showInLanguageCard !== undefined && { showInLanguageCard: skill.showInLanguageCard })\n      })\n      \n      console.log(`✅ [핵심기술] 토글 완료:`, result)\n    } catch (error) {\n      console.error(`❌ [핵심기술] 토글 실패: ${skill.name}`, error)\n      alert(`사이드바 표시 토글 실패: ${skill.name}`)\n    } finally {\n      setSavingSkillIds(prev => {\n        const newSet = new Set(prev)\n        newSet.delete(skill._id!)\n        return newSet\n      })\n    }\n  }, [updateSkill])\n\n  // 🌟 언어 카드 표시 토글 핸들러\n  const handleToggleLanguageCard = useCallback(async (skill: Skill) => {\n    if (!skill._id) return\n    \n    try {\n      setSavingSkillIds(prev => new Set(prev).add(skill._id!))\n      const newValue = !skill.showInLanguageCard\n      console.log(`💾 [언어카드] 토글: ${skill.name} = ${newValue}`)\n      console.log(`📋 [언어카드] 전송 데이터:`, {\n        name: skill.name,\n        showInSidebar: skill.showInSidebar,\n        showInLanguageCard: newValue\n      })\n      \n      const result = await updateSkill(skill._id, {\n        name: skill.name,\n        icon: skill.icon,\n        level: skill.level,\n        order: skill.order,\n        showInLanguageCard: newValue,\n        ...(skill.description && { description: skill.description }),\n        ...(skill.color && { color: skill.color }),\n        ...(skill.showInSidebar !== undefined && { showInSidebar: skill.showInSidebar })\n      })\n      \n      console.log(`✅ [언어카드] 토글 완료:`, result)\n    } catch (error) {\n      console.error(`❌ [언어카드] 토글 실패: ${skill.name}`, error)\n      alert(`언어 카드 표시 토글 실패: ${skill.name}`)\n    } finally {\n      setSavingSkillIds(prev => {\n        const newSet = new Set(prev)\n        newSet.delete(skill._id!)\n        return newSet\n      })\n    }\n  }, [updateSkill])\n\n  // 🌟 카테고리 드래그 앤 드롭 핸들러\n  const handleCategoryDragEnd = useCallback(async (event: DragEndEvent) => {\n    const { active, over } = event\n    \n    if (!over || active.id === over.id) return\n    \n    const oldIndex = skillCategories.findIndex(cat => cat._id === active.id)\n    const newIndex = skillCategories.findIndex(cat => cat._id === over.id)\n    \n    if (oldIndex === -1 || newIndex === -1) return\n    \n    // 배열 순서 변경\n    const reorderedCategories = arrayMove(skillCategories, oldIndex, newIndex)\n    \n    // 각 카테고리의 order 값을 새로운 인덱스로 업데이트하고 저장\n    try {\n      for (let i = 0; i < reorderedCategories.length; i++) {\n        const category = reorderedCategories[i]\n        if (!category?._id) continue\n        \n        await updateSkillCategory(category._id, {\n          title: category.title,\n          color: category.color,\n          order: i,\n          ...(category.description && { description: category.description })\n        })\n      }\n      console.log('✅ 카테고리 순서 변경 완료')\n    } catch (error) {\n      console.error('❌ 카테고리 순서 변경 실패:', error)\n      alert('순서 변경에 실패했습니다.')\n    }\n  }, [skillCategories, updateSkillCategory])\n\n  // 🌟 스킬 드래그 앤 드롭 핸들러 (카테고리별)\n  const handleSkillDragEnd = useCallback(async (event: DragEndEvent, categoryId: string) => {\n    const { active, over } = event\n    \n    if (!over || active.id === over.id) return\n    \n    const category = skillCategories.find(cat => cat._id === categoryId)\n    if (!category || !category.skills) return\n    \n    const oldIndex = category.skills.findIndex(skill => skill._id === active.id)\n    const newIndex = category.skills.findIndex(skill => skill._id === over.id)\n    \n    if (oldIndex === -1 || newIndex === -1) return\n    \n    // 스킬 배열 순서 변경\n    const reorderedSkills = arrayMove(category.skills, oldIndex, newIndex)\n    \n    // 각 스킬의 order 값을 새로운 인덱스로 업데이트하고 저장\n    try {\n      for (let i = 0; i < reorderedSkills.length; i++) {\n        const skill = reorderedSkills[i]\n        if (!skill?._id) continue\n        \n        await updateSkill(skill._id, {\n          name: skill.name,\n          icon: skill.icon,\n          level: skill.level,\n          order: i,\n          ...(skill.description && { description: skill.description }),\n          ...(skill.color && { color: skill.color })\n        })\n      }\n      console.log(`✅ 스킬 순서 변경 완료 (카테고리: ${category.title})`)\n    } catch (error) {\n      console.error('❌ 스킬 순서 변경 실패:', error)\n      alert('순서 변경에 실패했습니다.')\n    }\n  }, [skillCategories, updateSkill])\n\n  const toggleCategory = (categoryId: string) => {\n    setExpandedCategories(prev => {\n      const newSet = new Set(prev)\n      if (newSet.has(categoryId)) {\n        newSet.delete(categoryId)\n      } else {\n        newSet.add(categoryId)\n      }\n      return newSet\n    })\n  }\n\n  const handleAddCategory = () => {\n    setEditingCategory(null)\n    setActiveForm('category')\n  }\n\n  const handleEditCategory = (category: SkillCategory) => {\n    setEditingCategory(category)\n    setActiveForm('category')\n  }\n\n  const handleSaveCategory = async (data: SkillCategoryFormData) => {\n    try {\n      setIsSaving(true)\n      console.log('🔍 카테고리 저장 시작:', data)\n      \n      if (editingCategory) {\n        console.log('📝 카테고리 수정 모드:', editingCategory._id)\n        const result = await updateSkillCategory(editingCategory._id!, data)\n        console.log('✅ 수정 결과:', result)\n        if (result.success) {\n          setActiveForm(null)\n          setEditingCategory(null)\n          alert('카테고리가 성공적으로 수정되었습니다.')\n        } else {\n          alert(`카테고리 수정 실패: ${result.error || '알 수 없는 오류'}`)\n        }\n      } else {\n        console.log('➕ 카테고리 생성 모드')\n        const result = await createSkillCategory(data)\n        console.log('✅ 생성 결과:', result)\n        if (result.success) {\n          setActiveForm(null)\n          alert('카테고리가 성공적으로 추가되었습니다.')\n        } else {\n          alert(`카테고리 추가 실패: ${result.error || '알 수 없는 오류'}`)\n        }\n      }\n    } catch (error) {\n      console.error('❌ 카테고리 저장 실패:', error)\n      alert(`카테고리 저장 중 오류가 발생했습니다: ${error}`)\n    } finally {\n      setIsSaving(false)\n    }\n  }\n\n  const handleDeleteCategory = async (category: SkillCategory) => {\n    if (confirm('정말 삭제하시겠습니까? 카테고리 내 모든 스킬도 함께 삭제됩니다.')) {\n      try {\n        setIsDeleting(true)\n        await deleteSkillCategory(category._id!)\n      } catch (error) {\n        console.error('카테고리 삭제 실패:', error)\n      } finally {\n        setIsDeleting(false)\n      }\n    }\n  }\n\n  const handleAddSkill = (categoryId: string) => {\n    setSelectedCategoryId(categoryId)\n    setEditingSkill(null)\n    setActiveForm('skill')\n  }\n\n  const handleEditSkill = (skill: Skill) => {\n    setEditingSkill(skill)\n    setSelectedCategoryId(skill.categoryId)\n    setActiveForm('skill')\n  }\n\n  const handleSaveSkill = async (data: SkillFormData) => {\n    if (!selectedCategoryId && !editingSkill) return\n    \n    try {\n      setIsSaving(true)\n      const categoryId = editingSkill?.categoryId || selectedCategoryId!\n      \n      if (editingSkill) {\n        const result = await updateSkill(editingSkill._id!, data)\n        if (result.success) {\n          setActiveForm(null)\n          setEditingSkill(null)\n          setSelectedCategoryId(null)\n        }\n      } else {\n        const result = await createSkill(categoryId, data)\n        if (result.success) {\n          setActiveForm(null)\n          setSelectedCategoryId(null)\n        }\n      }\n    } catch (error) {\n      console.error('스킬 저장 실패:', error)\n    } finally {\n      setIsSaving(false)\n    }\n  }\n\n  const handleDeleteSkill = async (skill: Skill) => {\n    if (confirm('정말 삭제하시겠습니까?')) {\n      try {\n        setIsDeleting(true)\n        await deleteSkill(skill._id!)\n      } catch (error) {\n        console.error('스킬 삭제 실패:', error)\n      } finally {\n        setIsDeleting(false)\n      }\n    }\n  }\n\n  const handleCancel = () => {\n    setActiveForm(null)\n    setEditingCategory(null)\n    setEditingSkill(null)\n    setSelectedCategoryId(null)\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center py-8\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n        <span className=\"ml-2\">기술 데이터를 불러오는 중...</span>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-2xl font-bold\">기술 관리</h2>\n        <button\n          onClick={handleAddCategory}\n          className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2\"\n        >\n          <FaPlus />\n          카테고리 추가\n        </button>\n      </div>\n\n      {/* 카테고리 폼 */}\n      {activeForm === 'category' && (\n        <SkillCategoryForm\n          initialData={editingCategory}\n          onSave={handleSaveCategory}\n          onCancel={handleCancel}\n          isSaving={isSaving}\n        />\n      )}\n\n      {/* 스킬 폼 */}\n      {activeForm === 'skill' && (\n        <SkillForm\n          initialData={editingSkill}\n          categoryId={selectedCategoryId || undefined}\n          onSave={handleSaveSkill}\n          onCancel={handleCancel}\n          isSaving={isSaving}\n        />\n      )}\n\n      {/* 카테고리 목록 - 🌟 드래그 앤 드롭 적용 */}\n      <DndContext collisionDetection={closestCenter} onDragEnd={handleCategoryDragEnd}>\n        <SortableContext items={skillCategories.map(cat => cat._id!)} strategy={verticalListSortingStrategy}>\n          <div className=\"space-y-4\">\n            {skillCategories.map((category) => {\n              const isExpanded = expandedCategories.has(category._id!)\n              return (\n                <SortableCategoryCard\n                  key={category._id}\n                  category={category}\n                  isExpanded={isExpanded}\n                  onToggle={toggleCategory}\n                  onAddSkill={handleAddSkill}\n                  onEdit={handleEditCategory}\n                  onDelete={handleDeleteCategory}\n                  isSaving={isSaving}\n                  isDeleting={isDeleting}\n                >\n              \n                  {/* 스킬 목록 - 🌟 드래그 앤 드롭 적용 */}\n                  <div className=\"border-t border-gray-200 dark:border-gray-600 bg-gray-100 dark:bg-gray-800\">\n                    {category.skills && category.skills.length > 0 ? (\n                      <DndContext \n                        collisionDetection={closestCenter} \n                        onDragEnd={(event) => handleSkillDragEnd(event, category._id!)}\n                      >\n                        <SortableContext \n                          items={category.skills.map(skill => skill._id!)} \n                          strategy={verticalListSortingStrategy}\n                        >\n                          <div className=\"p-4 space-y-2\">\n                            {category.skills\n                              .sort((a, b) => a.order - b.order)\n                              .map((skill) => {\n                                const currentLevel = localLevels.get(skill._id!) ?? skill.level\n                                const hasChanges = localLevels.has(skill._id!) && localLevels.get(skill._id!) !== skill.level\n                                const isSavingThis = savingSkillIds.has(skill._id!)\n                                \n                                return (\n                                  <SortableSkillItem\n                                    key={skill._id}\n                                    skill={skill}\n                                    categoryColor={category.color || '#3B82F6'}\n                                    currentLevel={currentLevel}\n                                    hasChanges={hasChanges}\n                                    isSavingThis={isSavingThis}\n                                    isSaving={isSaving}\n                                    isDeleting={isDeleting}\n                                    onLevelChange={handleLevelChange}\n                                    onSaveLevel={handleSaveLevel}\n                                    onEdit={handleEditSkill}\n                                    onDelete={handleDeleteSkill}\n                                    onToggleSidebar={handleToggleSidebar}\n                                    onToggleLanguageCard={handleToggleLanguageCard}\n                                  />\n                                )\n                              })}\n                          </div>\n                        </SortableContext>\n                      </DndContext>\n                    ) : (\n                      <div className=\"p-4 text-center text-gray-500 dark:text-gray-400\">\n                        <FaPlus size={32} className=\"text-blue-400 dark:text-blue-500 mx-auto mb-2\" />\n                        <p className=\"text-sm\">아직 스킬이 없습니다.</p>\n                        <p className=\"text-xs mt-1\">카테고리 제목 옆의 + 버튼을 클릭하여 스킬을 추가하세요.</p>\n                      </div>\n                    )}\n                  </div>\n                </SortableCategoryCard>\n              )\n            })}\n          </div>\n        </SortableContext>\n      </DndContext>\n\n      {skillCategories.length === 0 && (\n        <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\n          <p className=\"text-lg mb-2\">아직 생성된 카테고리가 없습니다.</p>\n          <p>위의 \"카테고리 추가\" 버튼을 클릭하여 첫 번째 카테고리를 만들어보세요.</p>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default SkillsManager\n","import React, { useState } from 'react'\nimport { FaPlus, FaEdit, FaTrash, FaFolder, FaBars } from 'react-icons/fa'\nimport { Category, CategoryFormData } from '../../types'\nimport { useCategoryManagerData, useCategoryUsage } from '../../hooks/useCategories'\nimport { useCRUDManager } from '../../hooks/useCRUDManager'\nimport { useToastHelpers } from '../../hooks/useToast'\nimport CategoryForm from '../forms/CategoryForm'\nimport { DndContext, closestCenter, DragEndEvent } from '@dnd-kit/core'\nimport { SortableContext, verticalListSortingStrategy, useSortable, arrayMove } from '@dnd-kit/sortable'\nimport { CSS } from '@dnd-kit/utilities'\n\n// 드래그 가능한 카테고리 카드 컴포넌트\ninterface SortableCategoryCardProps {\n  category: Category\n  onEdit: () => void\n  onDelete: () => void\n  isDeleting: boolean\n}\n\nconst SortableCategoryCard: React.FC<SortableCategoryCardProps> = ({ \n  category, \n  onEdit, \n  onDelete, \n  isDeleting \n}) => {\n  const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({ \n    id: category._id \n  })\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.5 : 1,\n  }\n\n  // 카테고리 사용 통계 조회\n  const { data: usageData } = useCategoryUsage(category._id)\n\n  return (\n    <div\n      ref={setNodeRef}\n      style={style}\n      className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4 hover:shadow-lg transition-shadow\"\n    >\n      <div className=\"flex items-start justify-between\">\n        <div className=\"flex items-start gap-3 flex-1\">\n          {/* 드래그 핸들 */}\n          <button\n            {...attributes}\n            {...listeners}\n            className=\"mt-1 p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 cursor-grab active:cursor-grabbing\"\n            title=\"드래그하여 순서 변경\"\n          >\n            <FaBars />\n          </button>\n\n          <div className=\"flex-1\">\n            <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-2\">\n              {category.name}\n            </h3>\n            \n            {/* 사용 통계 */}\n            {usageData && (\n              <div className=\"flex flex-wrap gap-2 text-sm\">\n                {usageData.usage.books > 0 && (\n                  <span className=\"px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded\">\n                    📚 서적 {usageData.usage.books}개\n                  </span>\n                )}\n                {usageData.usage.projects > 0 && (\n                  <span className=\"px-2 py-1 bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 rounded\">\n                    🚀 프로젝트 {usageData.usage.projects}개\n                  </span>\n                )}\n                {usageData.usage.videoLearnings > 0 && (\n                  <span className=\"px-2 py-1 bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-200 rounded\">\n                    📹 영상 {usageData.usage.videoLearnings}개\n                  </span>\n                )}\n                {usageData.usage.videoPlaylists > 0 && (\n                  <span className=\"px-2 py-1 bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200 rounded\">\n                    📺 재생 목록 {usageData.usage.videoPlaylists}개\n                  </span>\n                )}\n                {usageData.usage.total === 0 && (\n                  <span className=\"text-gray-500 dark:text-gray-400 text-xs\">\n                    사용 중이지 않음\n                  </span>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"flex gap-2 ml-4\">\n          <button\n            onClick={onEdit}\n            className=\"p-2 text-yellow-600 hover:bg-yellow-100 dark:hover:bg-yellow-900 rounded-lg transition-colors\"\n            title=\"수정\"\n          >\n            <FaEdit />\n          </button>\n          <button\n            onClick={onDelete}\n            disabled={isDeleting}\n            className=\"p-2 text-red-600 hover:bg-red-100 dark:hover:bg-red-900 rounded-lg transition-colors disabled:opacity-50\"\n            title=\"삭제\"\n          >\n            <FaTrash />\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst CategoryManager: React.FC = () => {\n  const { success, error } = useToastHelpers()\n  const { \n    categories, \n    isLoading, \n    createCategory, \n    updateCategory, \n    deleteCategory \n  } = useCategoryManagerData()\n\n  const [categoryState, categoryActions] = useCRUDManager<Category>({\n    onSave: async (data: CategoryFormData, editingItem) => {\n      if (editingItem) {\n        const result = await updateCategory(editingItem._id, data)\n        if (result.success) {\n          success('카테고리 수정 완료', '카테고리가 성공적으로 수정되었습니다.')\n        } else {\n          throw result.error\n        }\n      } else {\n        const result = await createCategory(data)\n        if (result.success) {\n          success('카테고리 추가 완료', '새로운 카테고리가 추가되었습니다.')\n        } else {\n          throw result.error\n        }\n      }\n    },\n    onDelete: async (category: Category) => {\n      const result = await deleteCategory(category._id)\n      if (result.success) {\n        success('카테고리 삭제 완료', `${category.name}이(가) 삭제되었습니다.`)\n      } else {\n        // 사용 중인 경우 에러 메시지 표시\n        const errorMsg = result.error?.response?.data?.message || '카테고리 삭제에 실패했습니다'\n        const usage = result.error?.response?.data?.usage\n        \n        if (usage) {\n          const usageDetails = []\n          if (usage.books > 0) usageDetails.push(`서적 ${usage.books}개`)\n          if (usage.projects > 0) usageDetails.push(`프로젝트 ${usage.projects}개`)\n          if (usage.videoLearnings > 0) usageDetails.push(`영상 ${usage.videoLearnings}개`)\n          if (usage.videoPlaylists > 0) usageDetails.push(`재생 목록 ${usage.videoPlaylists}개`)\n          \n          error('삭제 불가', `이 카테고리는 ${usageDetails.join(', ')}에서 사용 중입니다. 먼저 해당 항목들의 카테고리를 변경해주세요.`)\n        } else {\n          error('삭제 실패', errorMsg)\n        }\n        throw result.error\n      }\n    },\n    onError: (err) => {\n      error('작업 실패', err.message || '알 수 없는 오류가 발생했습니다.')\n    }\n  })\n\n  // 드래그 앤 드롭으로 순서 변경\n  const handleDragEnd = async (event: DragEndEvent) => {\n    const { active, over } = event\n\n    if (!over || active.id === over.id) return\n\n    const oldIndex = categories.findIndex(cat => cat._id === active.id)\n    const newIndex = categories.findIndex(cat => cat._id === over.id)\n\n    const reorderedCategories = arrayMove(categories, oldIndex, newIndex)\n\n    // 순서 업데이트\n    for (let i = 0; i < reorderedCategories.length; i++) {\n      const category = reorderedCategories[i]\n      if (category.order !== i) {\n        await updateCategory(category._id, { name: category.name, order: i })\n      }\n    }\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center py-12\">\n        <div className=\"w-12 h-12 border-4 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white flex items-center gap-2\">\n          <FaFolder className=\"text-yellow-600\" />\n          카테고리 관리\n        </h2>\n        <button\n          onClick={categoryActions.handleCreate}\n          className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors shadow-md\"\n        >\n          <FaPlus />\n          카테고리 추가\n        </button>\n      </div>\n\n      {/* 카테고리 폼 모달 */}\n      {categoryState.showForm && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-md w-full mx-4\">\n            <div className=\"p-6\">\n              <h2 className=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">\n                {categoryState.editingItem ? '카테고리 수정' : '카테고리 추가'}\n              </h2>\n              {categoryState.editingItem ? (\n                <CategoryForm\n                  data={categoryState.editingItem}\n                  onSave={categoryActions.handleSave}\n                  onCancel={categoryActions.handleCancel}\n                  isSaving={categoryState.isSaving}\n                />\n              ) : (\n                <CategoryForm\n                  onSave={categoryActions.handleSave}\n                  onCancel={categoryActions.handleCancel}\n                  isSaving={categoryState.isSaving}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 카테고리 목록 - 드래그 앤 드롭 */}\n      <DndContext collisionDetection={closestCenter} onDragEnd={handleDragEnd}>\n        <SortableContext items={categories.map(c => c._id)} strategy={verticalListSortingStrategy}>\n          <div className=\"grid gap-4\">\n            {categories.map((category) => (\n              <SortableCategoryCard\n                key={category._id}\n                category={category}\n                onEdit={() => categoryActions.handleEdit(category)}\n                onDelete={() => categoryActions.handleDelete(category)}\n                isDeleting={categoryState.isDeleting}\n              />\n            ))}\n          </div>\n        </SortableContext>\n      </DndContext>\n\n      {categories.length === 0 && (\n        <div className=\"text-center py-12 text-gray-500 dark:text-gray-400\">\n          <FaFolder className=\"text-6xl mx-auto mb-4 opacity-30\" />\n          <p>아직 등록된 카테고리가 없습니다</p>\n          <p className=\"text-sm mt-2\">위의 \"카테고리 추가\" 버튼을 클릭하여 첫 카테고리를 만들어보세요</p>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default CategoryManager\n","import React from 'react'\nimport { FaBell } from 'react-icons/fa'\n\ninterface Notification {\n  id: string\n  message: string\n  read: boolean\n  createdAt: string\n}\n\ninterface NotificationDropdownProps {\n  notifications: Notification[]\n  showNotifications: boolean\n  onToggle: () => void\n  onNotificationClick?: (notificationId: string) => void\n}\n\nconst NotificationDropdown: React.FC<NotificationDropdownProps> = ({\n  notifications,\n  showNotifications,\n  onToggle,\n  onNotificationClick\n}) => {\n  const getUnreadNotificationCount = () => {\n    return notifications.filter(n => !n.read).length\n  }\n\n  return (\n    <div className=\"relative\">\n      <button\n        onClick={onToggle}\n        className=\"p-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors relative\"\n      >\n        <FaBell />\n        알림\n        {getUnreadNotificationCount() > 0 && (\n          <span className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\">\n            {getUnreadNotificationCount()}\n          </span>\n        )}\n      </button>\n\n      {showNotifications && (\n        <div className=\"absolute right-0 top-full mt-2 w-80 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg z-50\">\n          <div className=\"p-4\">\n            <h3 className=\"font-semibold text-gray-900 dark:text-white mb-3\">\n              알림\n            </h3>\n            {notifications.length === 0 ? (\n              <p className=\"text-gray-500 dark:text-gray-400 text-sm\">\n                새로운 알림이 없습니다.\n              </p>\n            ) : (\n              <div className=\"space-y-2\">\n                {notifications.slice(0, 5).map((notification) => (\n                  <div\n                    key={notification.id}\n                    onClick={() => onNotificationClick?.(notification.id)}\n                    className={`p-3 rounded-lg border cursor-pointer transition-all hover:shadow-md ${\n                      !notification.read\n                        ? 'bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-800 hover:bg-blue-100 dark:hover:bg-blue-900/30'\n                        : 'bg-gray-50 dark:bg-gray-700 border-gray-200 dark:border-gray-600 hover:bg-gray-100 dark:hover:bg-gray-600'\n                    }`}\n                  >\n                    <p className=\"text-sm text-gray-900 dark:text-white\">\n                      {notification.message}\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                      {new Date(notification.createdAt).toLocaleString('ko-KR')}\n                    </p>\n                  </div>\n                ))}\n                {notifications.length > 5 && (\n                  <p className=\"text-center text-sm text-gray-500 dark:text-gray-400 pt-2 border-t border-gray-200 dark:border-gray-700\">\n                    +{notifications.length - 5}개 더 보기\n                  </p>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default NotificationDropdown\n","import React, { useState } from 'react'\nimport { BookFilterGroup } from '../../hooks/useAdminSidebarState'\n\ninterface BookFilterMenuProps {\n  filterGroup: BookFilterGroup\n  count: number\n}\n\nconst BookFilterMenu: React.FC<BookFilterMenuProps> = ({ filterGroup, count }) => {\n  const { state, actions, data } = filterGroup\n  \n  // 로컬 UI 상태: 검색창 표시 여부\n  const [showBookSearch, setShowBookSearch] = useState(false)\n\n  // 모든 필터 초기화 함수\n  const resetAllFilters = () => {\n    actions.setFilter('all')\n    actions.setSearchTerm('')\n    actions.setSelectedCategory('')\n    setShowBookSearch(false)\n  }\n\n  return (\n    <div className=\"mb-6\">\n      <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\n        서적 관리\n      </h4>\n      <div className=\"space-y-1\">\n        {/* 모든 서적 버튼 */}\n        <button\n          onClick={() => {\n            actions.setFilter('all')\n            actions.setSearchTerm('')\n            setShowBookSearch(false)\n            actions.setSelectedCategory('')\n          }}\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\n            state.filter === 'all' && !state.searchTerm && !state.selectedCategory\n              ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n          }`}\n        >\n          📖 모든 서적 ({count})\n        </button>\n\n        {/* 평점 5점 서적 버튼 */}\n        <button\n          onClick={() => {\n            actions.setFilter('five-star')\n            actions.setSearchTerm('')\n            setShowBookSearch(false)\n            actions.setSelectedCategory('')\n          }}\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\n            state.filter === 'five-star'\n              ? 'bg-yellow-100 dark:bg-yellow-900 text-yellow-700 dark:text-yellow-300'\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n          }`}\n        >\n          ⭐ 평점 5점 서적\n        </button>\n\n        {/* 카테고리별 보기 버튼 */}\n        <button\n          onClick={() => {\n            actions.setFilter('category')\n            actions.setSearchTerm('')\n            setShowBookSearch(false)\n          }}\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\n            state.filter === 'category'\n              ? 'bg-purple-100 dark:bg-purple-900 text-purple-700 dark:text-purple-300'\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n          }`}\n        >\n          📚 카테고리별 보기\n        </button>\n\n        {/* 카테고리 드롭다운 */}\n        {state.filter === 'category' && (\n          <div className=\"ml-4 mb-2\">\n            <select\n              value={state.selectedCategory}\n              onChange={(e) => actions.setSelectedCategory(e.target.value)}\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            >\n              <option value=\"\">카테고리 선택</option>\n              {data.categories.map((category) => (\n                <option key={category} value={category}>\n                  {category}\n                </option>\n              ))}\n            </select>\n          </div>\n        )}\n\n        {/* 검색 버튼 */}\n        <button\n          onClick={() => setShowBookSearch(!showBookSearch)}\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\n            showBookSearch\n              ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300'\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n          }`}\n        >\n          🔍 서적 검색\n        </button>\n\n        {/* 검색 입력창 */}\n        {showBookSearch && (\n          <div className=\"ml-4 mb-2\">\n            <input\n              type=\"text\"\n              placeholder=\"제목, 저자, 카테고리 검색...\"\n              value={state.searchTerm}\n              onChange={(e) => actions.setSearchTerm(e.target.value)}\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\n            />\n          </div>\n        )}\n\n        {/* 필터 초기화 버튼 */}\n        {(state.filter !== 'all' || state.searchTerm || state.selectedCategory) && (\n          <button\n            onClick={resetAllFilters}\n            className=\"w-full text-left px-3 py-2 text-sm rounded-lg transition-colors text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20\"\n          >\n            🔄 필터 초기화\n          </button>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default BookFilterMenu\n","import React, { useState } from 'react'\nimport { ExperienceFilterGroup } from '../../hooks/useAdminSidebarState'\n\ninterface ExperienceFilterMenuProps {\n  filterGroup: ExperienceFilterGroup\n  count: number\n}\n\nconst ExperienceFilterMenu: React.FC<ExperienceFilterMenuProps> = ({ filterGroup, count }) => {\n  const { state, actions, data } = filterGroup\n  \n  // 로컬 UI 상태: 검색창 표시 여부\n  const [showExperienceSearch, setShowExperienceSearch] = useState(false)\n\n  // 모든 필터 초기화 함수\n  const resetAllFilters = () => {\n    actions.setFilter('all')\n    actions.setSearchTerm('')\n    actions.setSelectedCompany('')\n    actions.setSelectedYear('')\n    setShowExperienceSearch(false)\n  }\n\n  return (\n    <div className=\"mb-6\">\n      <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\n        경력 관리\n      </h4>\n      <div className=\"space-y-1\">\n        {/* 모든 경력 버튼 */}\n        <button\n          onClick={() => {\n            actions.setFilter('all')\n            actions.setSearchTerm('')\n            setShowExperienceSearch(false)\n            actions.setSelectedCompany('')\n            actions.setSelectedYear('')\n          }}\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\n            state.filter === 'all' && !state.searchTerm && !state.selectedCompany && !state.selectedYear\n              ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n          }`}\n        >\n          💼 모든 경력 ({count})\n        </button>\n\n        {/* 회사별 보기 버튼 */}\n        <button\n          onClick={() => {\n            actions.setFilter('company')\n            actions.setSearchTerm('')\n            setShowExperienceSearch(false)\n            actions.setSelectedYear('')\n          }}\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\n            state.filter === 'company'\n              ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300'\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n          }`}\n        >\n          🏢 회사별 보기\n        </button>\n\n        {/* 회사 드롭다운 */}\n        {state.filter === 'company' && (\n          <div className=\"ml-4 mb-2\">\n            <select\n              value={state.selectedCompany}\n              onChange={(e) => actions.setSelectedCompany(e.target.value)}\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            >\n              <option value=\"\">회사 선택</option>\n              {data.companies.map((company) => (\n                <option key={company} value={company}>\n                  {company}\n                </option>\n              ))}\n            </select>\n          </div>\n        )}\n\n        {/* 연도별 보기 버튼 */}\n        <button\n          onClick={() => {\n            actions.setFilter('year')\n            actions.setSearchTerm('')\n            setShowExperienceSearch(false)\n            actions.setSelectedCompany('')\n          }}\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\n            state.filter === 'year'\n              ? 'bg-indigo-100 dark:bg-indigo-900 text-indigo-700 dark:text-indigo-300'\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n          }`}\n        >\n          📅 연도별 보기\n        </button>\n\n        {/* 연도 드롭다운 */}\n        {state.filter === 'year' && (\n          <div className=\"ml-4 mb-2\">\n            <select\n              value={state.selectedYear}\n              onChange={(e) => actions.setSelectedYear(e.target.value)}\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            >\n              <option value=\"\">연도 선택</option>\n              {data.years.map((year) => (\n                <option key={year} value={year}>\n                  {year}년\n                </option>\n              ))}\n            </select>\n          </div>\n        )}\n\n        {/* 검색 버튼 */}\n        <button\n          onClick={() => setShowExperienceSearch(!showExperienceSearch)}\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\n            showExperienceSearch\n              ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300'\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n          }`}\n        >\n          🔍 경력 검색\n        </button>\n\n        {/* 검색 입력창 */}\n        {showExperienceSearch && (\n          <div className=\"ml-4 mb-2\">\n            <input\n              type=\"text\"\n              placeholder=\"제목, 회사, 설명 검색...\"\n              value={state.searchTerm}\n              onChange={(e) => actions.setSearchTerm(e.target.value)}\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\n            />\n          </div>\n        )}\n\n        {/* 필터 초기화 버튼 */}\n        {(state.filter !== 'all' || state.searchTerm || state.selectedCompany || state.selectedYear) && (\n          <button\n            onClick={resetAllFilters}\n            className=\"w-full text-left px-3 py-2 text-sm rounded-lg transition-colors text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20\"\n          >\n            🔄 필터 초기화\n          </button>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default ExperienceFilterMenu\n","import React, { useState } from 'react'\nimport { ProjectFilterGroup } from '../../hooks/useAdminSidebarState'\n\ninterface ProjectFilterMenuProps {\n  filterGroup: ProjectFilterGroup\n  count: number\n}\n\nconst ProjectFilterMenu: React.FC<ProjectFilterMenuProps> = ({ filterGroup, count }) => {\n  const { state, actions, data } = filterGroup\n  \n  // 로컬 UI 상태: 검색창 표시 여부\n  const [showProjectSearch, setShowProjectSearch] = useState(false)\n\n  // 모든 필터 초기화 함수\n  const resetAllFilters = () => {\n    actions.setFilter('all')\n    actions.setSearchTerm('')\n    actions.setSelectedCategory('')\n    setShowProjectSearch(false)\n  }\n\n  return (\n    <div className=\"mb-6\">\n      <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\n        프로젝트 관리\n      </h4>\n      <div className=\"space-y-1\">\n        {/* 모든 프로젝트 버튼 */}\n        <button\n          onClick={() => {\n            actions.setFilter('all')\n            actions.setSearchTerm('')\n            setShowProjectSearch(false)\n            actions.setSelectedCategory('')\n          }}\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\n            state.filter === 'all' && !state.searchTerm && !state.selectedCategory\n              ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n          }`}\n        >\n          📁 모든 프로젝트 ({count})\n        </button>\n\n        {/* 카테고리별 보기 버튼 */}\n        <button\n          onClick={() => {\n            actions.setFilter('category')\n            actions.setSearchTerm('')\n            setShowProjectSearch(false)\n          }}\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\n            state.filter === 'category'\n              ? 'bg-purple-100 dark:bg-purple-900 text-purple-700 dark:text-purple-300'\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n          }`}\n        >\n          🏷️ 카테고리별 보기\n        </button>\n\n        {/* 카테고리 드롭다운 */}\n        {state.filter === 'category' && (\n          <div className=\"ml-4 mb-2\">\n            <select\n              value={state.selectedCategory}\n              onChange={(e) => actions.setSelectedCategory(e.target.value)}\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            >\n              <option value=\"\">카테고리 선택</option>\n              {data.categories.map((category) => (\n                <option key={category} value={category}>\n                  {category}\n                </option>\n              ))}\n            </select>\n          </div>\n        )}\n\n        {/* 주요 프로젝트 버튼 */}\n        <button\n          onClick={() => {\n            actions.setFilter('featured')\n            actions.setSearchTerm('')\n            setShowProjectSearch(false)\n            actions.setSelectedCategory('')\n          }}\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\n            state.filter === 'featured'\n              ? 'bg-yellow-100 dark:bg-yellow-900 text-yellow-700 dark:text-yellow-300'\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n          }`}\n        >\n          🌟 주요 프로젝트\n        </button>\n\n        {/* 검색 버튼 */}\n        <button\n          onClick={() => setShowProjectSearch(!showProjectSearch)}\n          className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\n            showProjectSearch\n              ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300'\n              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n          }`}\n        >\n          🔍 프로젝트 검색\n        </button>\n\n        {/* 검색 입력창 */}\n        {showProjectSearch && (\n          <div className=\"ml-4 mb-2\">\n            <input\n              type=\"text\"\n              placeholder=\"제목, 설명, 기술스택 검색...\"\n              value={state.searchTerm}\n              onChange={(e) => actions.setSearchTerm(e.target.value)}\n              className=\"w-full px-2 py-1 text-xs border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\n            />\n          </div>\n        )}\n\n        {/* 필터 초기화 버튼 */}\n        {(state.filter !== 'all' || state.searchTerm || state.selectedCategory) && (\n          <button\n            onClick={resetAllFilters}\n            className=\"w-full text-left px-3 py-2 text-sm rounded-lg transition-colors text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20\"\n          >\n            🔄 필터 초기화\n          </button>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectFilterMenu\n","import React from 'react'\n\ninterface SettingsMenuProps {\n  activeSettingsSection: string | null\n  setActiveSettingsSection: (section: string | null) => void\n}\n\nconst SettingsMenu: React.FC<SettingsMenuProps> = ({ \n  activeSettingsSection, \n  setActiveSettingsSection \n}) => {\n  const settingsOptions = [\n    { id: 'general', label: '🏠 일반 설정', description: '사이트 기본 정보' },\n    { id: 'appearance', label: '🎨 외관 설정', description: '테마 및 디자인' },\n    { id: 'seo', label: '🔍 SEO 설정', description: '검색 엔진 최적화' },\n    { id: 'social', label: '📱 소셜 미디어', description: '소셜 링크 및 연락처' },\n    { id: 'analytics', label: '📊 분석 도구', description: 'Google Analytics 등' },\n    { id: 'security', label: '🔒 보안 설정', description: '인증 및 보안' },\n  ]\n\n  return (\n    <div className=\"space-y-2\">\n      <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\n        사이트 설정\n      </h4>\n      \n      <div className=\"space-y-1\">\n        {settingsOptions.map((option) => (\n          <button\n            key={option.id}\n            onClick={() => setActiveSettingsSection(option.id)}\n            className={`w-full text-left px-3 py-2 text-sm rounded-lg transition-colors ${\n              activeSettingsSection === option.id\n                ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n            }`}\n          >\n            <div className=\"flex flex-col\">\n              <span className=\"font-medium\">{option.label}</span>\n              <span className=\"text-xs text-gray-500 dark:text-gray-400 mt-0.5\">\n                {option.description}\n              </span>\n            </div>\n          </button>\n        ))}\n      </div>\n\n      {/* 설정 초기화 버튼 */}\n      {activeSettingsSection && (\n        <button\n          onClick={() => setActiveSettingsSection(null)}\n          className=\"w-full text-left px-3 py-2 text-sm rounded-lg transition-colors text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700\"\n        >\n          ← 설정 메뉴로 돌아가기\n        </button>\n      )}\n    </div>\n  )\n}\n\nexport default SettingsMenu\n","import React from 'react'\nimport { AdminTab, BookFilterGroup, ExperienceFilterGroup, ProjectFilterGroup } from '../../hooks/useAdminSidebarState'\n\n// 분리된 컴포넌트들 import\nimport BookFilterMenu from './BookFilterMenu'\nimport ExperienceFilterMenu from './ExperienceFilterMenu'\nimport ProjectFilterMenu from './ProjectFilterMenu'\nimport SettingsMenu from './SettingsMenu'\n\ninterface DataCounts {\n  books: number\n  videoLearnings: number\n  videoPlaylists: number\n  experiences: number\n  projects: number\n  messages: number\n  skills: number\n  categories: number\n}\n\ninterface RightSidebarProps {\n  // 탭 관련 props (핵심만)\n  activeTab: AdminTab\n  setActiveTab: (tab: AdminTab) => void\n  activeSettingsSection: string | null\n  setActiveSettingsSection: (section: string | null) => void\n  \n  // 데이터 카운트\n  counts: DataCounts\n  refreshCounts: () => void\n  \n  // 필터 그룹들 (각각 하나의 객체로 전달)\n  bookFilters: BookFilterGroup\n  experienceFilters: ExperienceFilterGroup\n  projectFilters: ProjectFilterGroup\n}\n\nconst RightSidebar: React.FC<RightSidebarProps> = ({ \n  activeTab, \n  setActiveTab, \n  activeSettingsSection,\n  setActiveSettingsSection, \n  counts,\n  refreshCounts,\n  bookFilters,\n  experienceFilters,\n  projectFilters,\n}) => {\n  return (\n    <div className=\"w-80 bg-white dark:bg-gray-800 border-l border-gray-200 dark:border-gray-700 p-6\">\n      <div className=\"sticky top-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n          빠른 메뉴\n        </h3>\n\n        {/* 관리자 대시보드 홈 버튼 */}\n        <div className=\"mb-8\">\n          <button\n            onClick={() => {\n              setActiveTab('settings')\n              setActiveSettingsSection(null)\n            }}\n            className={`w-full flex items-center gap-3 px-4 py-3 text-sm font-semibold rounded-lg transition-colors ${\n              activeTab === 'settings' && activeSettingsSection === null\n                ? 'bg-blue-600 text-white'\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n            }`}\n          >\n            <span className=\"text-lg\">🏠</span>\n            관리자 대시보드\n          </button>\n        </div>\n\n        {/* 관리 버튼들 */}\n        <div className=\"space-y-2 mb-8\">\n          <button\n            onClick={() => setActiveTab('books')}\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\n              activeTab === 'books'\n                ? 'bg-orange-100 dark:bg-orange-900 text-orange-700 dark:text-orange-300'\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n            }`}\n          >\n            <span>📚 서적 관리</span>\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\n              {counts.books}\n            </span>\n          </button>\n\n          <button\n            onClick={() => {\n              setActiveSettingsSection(null)\n              setActiveTab('videoLearnings')\n            }}\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\n              activeTab === 'videoLearnings'\n                ? 'bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-300'\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n            }`}\n          >\n            <span>📹 개별 영상</span>\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\n              {counts.videoLearnings || 0}\n            </span>\n          </button>\n\n          <button\n            onClick={() => {\n              setActiveSettingsSection(null)\n              setActiveTab('videoPlaylists')\n            }}\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\n              activeTab === 'videoPlaylists'\n                ? 'bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-300'\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n            }`}\n          >\n            <span>📺 시리즈 영상</span>\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\n              {counts.videoPlaylists || 0}\n            </span>\n          </button>\n\n          <button\n            onClick={() => setActiveTab('experiences')}\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\n              activeTab === 'experiences'\n                ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300'\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n            }`}\n          >\n            <span>💼 경력 관리</span>\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\n              {counts.experiences}\n            </span>\n          </button>\n\n          <button\n            onClick={() => setActiveTab('projects')}\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\n              activeTab === 'projects'\n                ? 'bg-purple-100 dark:bg-purple-900 text-purple-700 dark:text-purple-300'\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n            }`}\n          >\n            <span>🚀 프로젝트 관리</span>\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\n              {counts.projects}\n            </span>\n          </button>\n\n          <button\n            onClick={() => setActiveTab('messages')}\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\n              activeTab === 'messages'\n                ? 'bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-300'\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n            }`}\n          >\n            <span>💬 메시지 관리</span>\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\n              {counts.messages}\n            </span>\n          </button>\n\n          <button\n            onClick={() => setActiveTab('skills')}\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\n              activeTab === 'skills'\n                ? 'bg-indigo-100 dark:bg-indigo-900 text-indigo-700 dark:text-indigo-300'\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n            }`}\n          >\n            <span>⚡ 기술 관리</span>\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\n              {counts.skills}\n            </span>\n          </button>\n\n          <button\n            onClick={() => {\n              setActiveSettingsSection(null)\n              setActiveTab('categories')\n            }}\n            className={`w-full flex items-center justify-between px-4 py-2 text-sm rounded-lg transition-colors ${\n              activeTab === 'categories'\n                ? 'bg-yellow-100 dark:bg-yellow-900 text-yellow-700 dark:text-yellow-300'\n                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n            }`}\n          >\n            <span>📂 카테고리 관리</span>\n            <span className=\"text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\n              {counts.categories || 0}\n            </span>\n          </button>\n        </div>\n\n        {/* 세부 메뉴 - 분리된 컴포넌트들로 대체 */}\n        {activeTab === 'books' && (\n          <BookFilterMenu \n            filterGroup={bookFilters} \n            count={counts.books} \n          />\n        )}\n\n        {activeTab === 'experiences' && (\n          <ExperienceFilterMenu \n            filterGroup={experienceFilters} \n            count={counts.experiences} \n          />\n        )}\n\n        {activeTab === 'projects' && (\n          <ProjectFilterMenu \n            filterGroup={projectFilters} \n            count={counts.projects} \n          />\n        )}\n\n        {activeTab === 'settings' && (\n          <SettingsMenu \n            activeSettingsSection={activeSettingsSection}\n            setActiveSettingsSection={setActiveSettingsSection}\n          />\n        )}\n\n        {/* 공통 도구 */}\n        <div className=\"mt-8 pt-6 border-t border-gray-200 dark:border-gray-700\">\n          <div className=\"space-y-2\">\n            <button\n              onClick={refreshCounts}\n              className=\"w-full flex items-center gap-2 px-3 py-2 text-sm text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\n            >\n              <span>🔄</span>\n              데이터 새로고침\n            </button>\n            \n            <div className=\"text-xs text-gray-500 dark:text-gray-400 text-center\">\n              마지막 업데이트: {new Date().toLocaleTimeString('ko-KR')}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default RightSidebar","import { SiteSettings } from '@/types'\nimport { Field, SectionDefinition } from './types'\n\n// Initial settings with default values\nexport const initialSettings: SiteSettings = {\n  fullName: '', firstName: '', role: '', subtitle: '', location: '', education: '', \n  yearsOfExperience: '', email: '', phone: '', githubUrl: '', linkedinUrl: '', \n  heroTitle: '', heroSubtitle: '', aboutTitle: '', aboutSubtitle: '', aboutDescription1: '', \n  aboutDescription2: '', skillsTitle: '', skillsSubtitle: '', projectsTitle: '', \n  projectsSubtitle: '', booksTitle: '', booksSubtitle: '', contactTitle: '', \n  contactSubtitle: '', stat1Number: '', stat1Label: '', stat2Number: '', stat2Label: '',\n  experienceTitle: '', experienceSubtitle: '',\n  // Learning goals defaults\n  learningGoalsTitle: '앞으로의 학습 목표',\n  learningGoalsDescription: '4차 산업혁명 시대에 발맞춰 **지능형 공장(Smart Factory) 구현**을 위해 다음 기술들을 집중적으로 탐구하여 전문성을 확대해 나가겠습니다.',\n  learningGoalsList: ['첨단 로봇 제어', '딥러닝 기반 비전 시스템', '엣지 컴퓨팅', '클라우드 연동', 'MES/ERP 연동 기술'],\n  // SEO defaults\n  siteTitle: '', siteDescription: '', siteKeywords: '', siteAuthor: '', siteLanguage: 'ko',\n  siteUrl: '', ogTitle: '', ogDescription: '', ogImage: '', ogType: 'website',\n  twitterCard: 'summary_large_image', twitterSite: '', twitterCreator: '',\n  robotsIndex: true, robotsFollow: true, googleAnalyticsId: '', googleSiteVerification: '',\n  // Social media defaults\n  instagramUrl: '', twitterUrl: '', facebookUrl: '', youtubeUrl: '', tiktokUrl: '',\n  behanceUrl: '', dribbbleUrl: '', mediumUrl: '', telegramUrl: '', discordUrl: '',\n  kakaoTalkUrl: '', naverBlogUrl: '', tistoryUrl: '', velogUrl: '', notionUrl: '',\n  // Analytics defaults\n  googleTagManagerId: '', facebookPixelId: '', naverAnalyticsId: '', kakaoPixelId: '',\n  hotjarId: '', mixpanelToken: '', amplitudeApiKey: '', sentryDsn: '',\n  logRocketId: '', fullStoryOrgId: '', intercomAppId: '', zendeskWidgetKey: '',\n  crispWebsiteId: '', tawkToPropertyId: '', liveChatLicense: '', olarkSiteId: '',\n  // Security defaults\n  enableHttps: true, enableCsp: true, cspDirectives: \"default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:;\",\n  enableHsts: true, hstsMaxAge: '31536000', enableXssProtection: true, enableContentTypeOptions: true,\n  enableFrameOptions: true, frameOptionsValue: 'DENY', enableReferrerPolicy: true, referrerPolicyValue: 'strict-origin-when-cross-origin',\n  enablePermissionsPolicy: true, permissionsPolicyValue: 'camera=(), microphone=(), geolocation=(), payment=()', enableApiRateLimit: true, apiRateLimitPerMinute: '60',\n  enableAdminAuth: true, adminSessionTimeout: '3600', enableTwoFactorAuth: false, enableIpWhitelist: false, allowedIpAddresses: '',\n  enableAuditLog: true, enableBackup: true, backupFrequency: 'daily'\n}\n\n// All settings sections with field definitions\nexport const allSections: SectionDefinition[] = [\n  {\n    title: '🧑 개인 정보',\n    fields: [\n      { key: 'fullName', label: '전체 이름', type: 'text', placeholder: '최주영', isMultilingual: true },\n      { key: 'firstName', label: '이름', type: 'text', placeholder: '주영', isMultilingual: true },\n      { key: 'role', label: '역할/직책', type: 'text', placeholder: '공장자동화 전문가', isMultilingual: true },\n      { key: 'subtitle', label: '부제목', type: 'text', placeholder: '바리스타 → 자동화 엔지니어', isMultilingual: true },\n      { key: 'location', label: '위치', type: 'text', placeholder: '부산', isMultilingual: true },\n      { key: 'education', label: '교육', type: 'text', placeholder: '부산인력개발원', isMultilingual: true },\n      { key: 'yearsOfExperience', label: '경력 기간', type: 'text', placeholder: '5년', isMultilingual: true },\n      { key: 'email', label: '이메일', type: 'email', placeholder: 'your@email.com' },\n      { key: 'phone', label: '전화번호', type: 'tel', placeholder: '+82 10-1234-5678' },\n    ] as Field[]\n  },\n  {\n    title: '🔗 소셜 링크',\n    fields: [\n      { key: 'githubUrl', label: 'GitHub URL', type: 'url', placeholder: 'https://github.com/username' },\n      { key: 'linkedinUrl', label: 'LinkedIn URL', type: 'url', placeholder: 'https://linkedin.com/in/username' },\n    ] as Field[]\n  },\n  {\n    title: '⚙️ 사이드바 설정',\n    fields: [\n      { key: 'sidebarSkillCount', label: '사이드바 핵심기술 표시 개수', type: 'number', min: 3, max: 6, placeholder: '4' },\n      { key: 'languageCardSkillCount', label: '사이드바 언어카드 표시 개수', type: 'number', min: 2, max: 5, placeholder: '3' },\n    ] as Field[]\n  },\n  {\n    title: '🏠 Hero 섹션 (메인 페이지)',\n    fields: [\n      { key: 'heroTitle', label: 'Hero 제목', type: 'text', placeholder: '공장자동화 전문가', isMultilingual: true },\n      { key: 'heroSubtitle', label: 'Hero 부제목', type: 'textarea', rows: 6, placeholder: '여러분의 소개를 작성하세요...', isMultilingual: true },\n      { key: 'heroTag', label: 'Hero 태그', type: 'text', placeholder: '🎯 취업 준비 중', isMultilingual: true },\n    ] as Field[]\n  },\n  {\n    title: '👤 About 섹션',\n    fields: [\n      { key: 'aboutTitle', label: 'About 제목', type: 'text', placeholder: '저의 여정', isMultilingual: true },\n      { key: 'aboutSubtitle', label: 'About 부제목', type: 'text', placeholder: '커피 한 잔에서 시작된...', isMultilingual: true },\n      { key: 'aboutDescription1', label: 'About 설명 1', type: 'textarea', rows: 6, placeholder: '첫 번째 문단...', isMultilingual: true },\n      { key: 'aboutDescription2', label: 'About 설명 2', type: 'textarea', rows: 6, placeholder: '두 번째 문단...', isMultilingual: true },\n      { key: 'aboutCardTitle', label: '소개 카드 제목', type: 'text', placeholder: '바리스타에서 자동화 전문가로', isMultilingual: true },\n      { key: 'aboutJourneyTitle', label: '성장 여정 제목', type: 'text', placeholder: '성장 여정', isMultilingual: true },\n    ] as Field[]\n  },\n  {\n    title: '💼 Experience 섹션',\n    fields: [\n      { key: 'experienceTitle', label: 'Experience 제목', type: 'text', placeholder: '경력 & 학습', isMultilingual: true },\n      { key: 'experienceSubtitle', label: 'Experience 부제목', type: 'text', placeholder: '바리스타에서 자동화 전문가로...', isMultilingual: true },\n    ] as Field[]\n  },\n  {\n    title: '🛠️ Skills 섹션',\n    fields: [\n      { key: 'skillsTitle', label: 'Skills 제목', type: 'text', placeholder: '기술 스택', isMultilingual: true },\n      { key: 'skillsSubtitle', label: 'Skills 부제목', type: 'text', placeholder: '공장자동화와 데이터 분석을...', isMultilingual: true },\n    ] as Field[]\n  },\n  {\n    title: '🎯 학습 목표 (Skills 페이지)',\n    fields: [\n      { key: 'learningGoalsTitle', label: '학습 목표 제목', type: 'text', placeholder: '앞으로의 학습 목표', isMultilingual: true },\n      { key: 'learningGoalsDescription', label: '학습 목표 설명', type: 'textarea', placeholder: '4차 산업혁명 시대에...', isMultilingual: true },\n      { key: 'learningGoalsList', label: '학습 목표 기술 목록', type: 'array', placeholder: '기술 이름 입력 (Enter로 추가)' },\n    ] as Field[]\n  },\n  {\n    title: '📁 Projects 섹션',\n    fields: [\n      { key: 'projectsTitle', label: 'Projects 제목', type: 'text', placeholder: '프로젝트', isMultilingual: true },\n      { key: 'projectsSubtitle', label: 'Projects 부제목', type: 'text', placeholder: '다양한 분야의 프로젝트...', isMultilingual: true },\n      { key: 'projectsUpdateTitle', label: '업데이트 카드 제목', type: 'text', placeholder: '프로젝트 업데이트 예정', isMultilingual: true },\n      { key: 'projectsUpdateDescription', label: '업데이트 카드 설명', type: 'textarea', placeholder: '현재 학습 중인 기술들을 활용한 실제 프로젝트들을 곧 업로드할 예정입니다.', isMultilingual: true },\n      { key: 'projectsUpdateTechList', label: '업데이트 예정 기술 목록', type: 'array', placeholder: '기술 이름 입력 (Enter로 추가)' },\n    ] as Field[]\n  },\n  {\n    title: '📚 Books 섹션',\n    fields: [\n      { key: 'booksTitle', label: 'Books 제목', type: 'text', placeholder: '기술 서적 & 학습 노트', isMultilingual: true },\n      { key: 'booksSubtitle', label: 'Books 부제목', type: 'text', placeholder: '읽은 기술 서적과...', isMultilingual: true },\n    ] as Field[]\n  },\n  {\n    title: '📞 Contact 섹션',\n    fields: [\n      { key: 'contactTitle', label: 'Contact 제목', type: 'text', placeholder: '연락처', isMultilingual: true },\n      { key: 'contactSubtitle', label: 'Contact 부제목', type: 'text', placeholder: '프로젝트나 협업에...', isMultilingual: true },\n    ] as Field[]\n  },\n  {\n    title: '📊 통계 섹션',\n    fields: [\n      { key: 'stat1Number', label: '통계 1 숫자', type: 'text', placeholder: '5+' },\n      { key: 'stat1Label', label: '통계 1 라벨', type: 'text', placeholder: '년 경력', isMultilingual: true },\n      { key: 'stat2Number', label: '통계 2 숫자', type: 'text', placeholder: '10+' },\n      { key: 'stat2Label', label: '통계 2 라벨', type: 'text', placeholder: '기술 스택', isMultilingual: true },\n      { key: 'stat3Number', label: '통계 3 숫자', type: 'text', placeholder: '3+' },\n      { key: 'stat3Label', label: '통계 3 라벨', type: 'text', placeholder: '완료 프로젝트', isMultilingual: true },\n    ] as Field[]\n  },\n  // SEO Settings\n  {\n    title: '🔍 기본 SEO 설정',\n    fields: [\n      { key: 'siteTitle', label: '사이트 제목', type: 'text', placeholder: '포트폴리오 - 홍길동' },\n      { key: 'siteDescription', label: '사이트 설명', type: 'textarea', rows: 3, placeholder: '공장자동화 전문가 홍길동의 포트폴리오입니다. PLC 프로그래밍, 데이터 분석, 자동화 시스템 개발 경험을 소개합니다.' },\n      { key: 'siteKeywords', label: '키워드 (쉼표로 구분)', type: 'text', placeholder: '공장자동화, PLC, 데이터분석, 자동화시스템' },\n      { key: 'siteAuthor', label: '작성자', type: 'text', placeholder: '홍길동' },\n      { key: 'siteLanguage', label: '사이트 언어', type: 'select', placeholder: '언어 선택', options: [\n        { value: 'ko', label: '한국어 (ko)' },\n        { value: 'en', label: 'English (en)' },\n        { value: 'ja', label: '日本語 (ja)' },\n        { value: 'zh', label: '中文 (zh)' }\n      ]},\n      { key: 'siteUrl', label: '사이트 URL', type: 'url', placeholder: 'https://yourportfolio.com' },\n    ] as Field[]\n  },\n  {\n    title: '📱 Open Graph (Facebook, LinkedIn)',\n    fields: [\n      { key: 'ogTitle', label: 'OG 제목', type: 'text', placeholder: '포트폴리오 - 홍길동' },\n      { key: 'ogDescription', label: 'OG 설명', type: 'textarea', rows: 3, placeholder: '공장자동화 전문가 홍길동의 포트폴리오를 확인해보세요.' },\n      { key: 'ogImage', label: 'OG 이미지 URL', type: 'url', placeholder: 'https://yourportfolio.com/og-image.jpg' },\n      { key: 'ogType', label: 'OG 타입', type: 'select', placeholder: '타입 선택', options: [\n        { value: 'website', label: '웹사이트 (website)' },\n        { value: 'profile', label: '프로필 (profile)' },\n        { value: 'article', label: '기사 (article)' }\n      ]},\n    ] as Field[]\n  },\n  {\n    title: '🐦 Twitter Card',\n    fields: [\n      { key: 'twitterCard', label: 'Twitter Card 타입', type: 'select', placeholder: '카드 타입 선택', options: [\n        { value: 'summary', label: '요약 (summary)' },\n        { value: 'summary_large_image', label: '큰 이미지 요약 (summary_large_image)' },\n        { value: 'app', label: '앱 (app)' },\n        { value: 'player', label: '플레이어 (player)' }\n      ]},\n      { key: 'twitterSite', label: 'Twitter 사이트 계정', type: 'text', placeholder: '@yourhandle' },\n      { key: 'twitterCreator', label: 'Twitter 작성자 계정', type: 'text', placeholder: '@yourhandle' },\n    ] as Field[]\n  },\n  {\n    title: '🤖 검색 엔진 설정',\n    fields: [\n      { key: 'robotsIndex', label: '검색 엔진 인덱싱 허용', type: 'checkbox', placeholder: '검색 엔진이 이 사이트를 인덱싱할 수 있도록 허용합니다.' },\n      { key: 'robotsFollow', label: '링크 팔로우 허용', type: 'checkbox', placeholder: '검색 엔진이 이 사이트의 링크를 따라갈 수 있도록 허용합니다.' },\n    ] as Field[]\n  },\n  {\n    title: '📊 Google 설정',\n    fields: [\n      { key: 'googleAnalyticsId', label: 'Google Analytics ID', type: 'text', placeholder: 'G-XXXXXXXXXX' },\n      { key: 'googleSiteVerification', label: 'Google 사이트 인증 코드', type: 'text', placeholder: 'google-site-verification=...' },\n    ] as Field[]\n  },\n  // Social Media\n  {\n    title: '📱 글로벌 소셜 미디어',\n    fields: [\n      { key: 'instagramUrl', label: 'Instagram URL', type: 'url', placeholder: 'https://instagram.com/yourhandle' },\n      { key: 'twitterUrl', label: 'Twitter URL', type: 'url', placeholder: 'https://twitter.com/yourhandle' },\n      { key: 'facebookUrl', label: 'Facebook URL', type: 'url', placeholder: 'https://facebook.com/yourpage' },\n      { key: 'youtubeUrl', label: 'YouTube URL', type: 'url', placeholder: 'https://youtube.com/@yourchannel' },\n      { key: 'tiktokUrl', label: 'TikTok URL', type: 'url', placeholder: 'https://tiktok.com/@yourhandle' },\n    ] as Field[]\n  },\n  {\n    title: '🎨 디자인 & 포트폴리오',\n    fields: [\n      { key: 'behanceUrl', label: 'Behance URL', type: 'url', placeholder: 'https://behance.net/yourprofile' },\n      { key: 'dribbbleUrl', label: 'Dribbble URL', type: 'url', placeholder: 'https://dribbble.com/yourhandle' },\n    ] as Field[]\n  },\n  {\n    title: '✍️ 블로그 & 글쓰기',\n    fields: [\n      { key: 'mediumUrl', label: 'Medium URL', type: 'url', placeholder: 'https://medium.com/@yourhandle' },\n      { key: 'velogUrl', label: 'Velog URL', type: 'url', placeholder: 'https://velog.io/@yourhandle' },\n      { key: 'tistoryUrl', label: 'Tistory URL', type: 'url', placeholder: 'https://yourblog.tistory.com' },\n      { key: 'naverBlogUrl', label: '네이버 블로그 URL', type: 'url', placeholder: 'https://blog.naver.com/yourblog' },\n    ] as Field[]\n  },\n  {\n    title: '💬 메신저 & 커뮤니케이션',\n    fields: [\n      { key: 'telegramUrl', label: 'Telegram URL', type: 'url', placeholder: 'https://t.me/yourhandle' },\n      { key: 'discordUrl', label: 'Discord URL', type: 'url', placeholder: 'https://discord.gg/yourserver' },\n      { key: 'kakaoTalkUrl', label: '카카오톡 URL', type: 'url', placeholder: 'https://open.kakao.com/o/yourgroup' },\n    ] as Field[]\n  },\n  {\n    title: '📝 워크스페이스 & 도구',\n    fields: [\n      { key: 'notionUrl', label: 'Notion 워크스페이스 URL', type: 'url', placeholder: 'https://notion.so/yourworkspace' },\n    ] as Field[]\n  },\n  // Analytics\n  {\n    title: '📊 웹 분석 도구',\n    fields: [\n      { key: 'googleTagManagerId', label: 'Google Tag Manager ID', type: 'text', placeholder: 'GTM-XXXXXXX' },\n      { key: 'facebookPixelId', label: 'Facebook Pixel ID', type: 'text', placeholder: '123456789012345' },\n      { key: 'naverAnalyticsId', label: '네이버 웹마스터 도구 ID', type: 'text', placeholder: 'naver-site-verification=...' },\n      { key: 'kakaoPixelId', label: '카카오 픽셀 ID', type: 'text', placeholder: '1234567890' },\n    ] as Field[]\n  },\n  {\n    title: '🔍 사용자 행동 분석',\n    fields: [\n      { key: 'hotjarId', label: 'Hotjar Site ID', type: 'text', placeholder: '1234567' },\n      { key: 'mixpanelToken', label: 'Mixpanel Project Token', type: 'text', placeholder: 'abc123def456...' },\n      { key: 'amplitudeApiKey', label: 'Amplitude API Key', type: 'text', placeholder: 'abc123def456...' },\n    ] as Field[]\n  },\n  {\n    title: '🐛 에러 추적 & 모니터링',\n    fields: [\n      { key: 'sentryDsn', label: 'Sentry DSN', type: 'text', placeholder: 'https://abc123@sentry.io/123456' },\n      { key: 'logRocketId', label: 'LogRocket App ID', type: 'text', placeholder: 'abc123def456' },\n      { key: 'fullStoryOrgId', label: 'FullStory Org ID', type: 'text', placeholder: 'ABC123' },\n    ] as Field[]\n  },\n  {\n    title: '💬 고객 지원 & 채팅',\n    fields: [\n      { key: 'intercomAppId', label: 'Intercom App ID', type: 'text', placeholder: 'abc123def' },\n      { key: 'zendeskWidgetKey', label: 'Zendesk Widget Key', type: 'text', placeholder: 'abc123def456...' },\n      { key: 'crispWebsiteId', label: 'Crisp Website ID', type: 'text', placeholder: 'abc123def456...' },\n    ] as Field[]\n  },\n  {\n    title: '🎧 추가 채팅 도구',\n    fields: [\n      { key: 'tawkToPropertyId', label: 'Tawk.to Property ID', type: 'text', placeholder: 'abc123def456...' },\n      { key: 'liveChatLicense', label: 'LiveChat License Number', type: 'text', placeholder: '12345678' },\n      { key: 'olarkSiteId', label: 'Olark Site ID', type: 'text', placeholder: 'abc123def456...' },\n    ] as Field[]\n  },\n  // Security\n  {\n    title: '🔒 기본 보안 헤더',\n    fields: [\n      { key: 'enableHttps', label: 'HTTPS 강제 사용', type: 'checkbox', placeholder: '모든 HTTP 요청을 HTTPS로 리다이렉트합니다.' },\n      { key: 'enableCsp', label: 'Content Security Policy (CSP) 활성화', type: 'checkbox', placeholder: 'XSS 공격을 방지하기 위한 CSP 헤더를 설정합니다.' },\n      { key: 'cspDirectives', label: 'CSP 지시문', type: 'textarea', rows: 3, placeholder: 'Content Security Policy 지시문을 설정합니다.' },\n      { key: 'enableHsts', label: 'HTTP Strict Transport Security (HSTS) 활성화', type: 'checkbox', placeholder: 'HTTPS 연결을 강제하는 HSTS 헤더를 설정합니다.' },\n      { key: 'hstsMaxAge', label: 'HSTS 최대 나이 (초)', type: 'text', placeholder: '31536000 (1년)' },\n    ] as Field[]\n  },\n  {\n    title: '🛡️ 추가 보안 헤더',\n    fields: [\n      { key: 'enableXssProtection', label: 'XSS 보호 활성화', type: 'checkbox', placeholder: '브라우저의 XSS 필터를 활성화합니다.' },\n      { key: 'enableContentTypeOptions', label: 'Content-Type 옵션 활성화', type: 'checkbox', placeholder: 'MIME 타입 스니핑 공격을 방지합니다.' },\n      { key: 'enableFrameOptions', label: 'X-Frame-Options 활성화', type: 'checkbox', placeholder: '클릭재킹 공격을 방지합니다.' },\n      { key: 'frameOptionsValue', label: 'X-Frame-Options 값', type: 'select', placeholder: '헤더 값 선택', options: [\n        { value: 'DENY', label: 'DENY (모든 프레임 차단)' },\n        { value: 'SAMEORIGIN', label: 'SAMEORIGIN (같은 도메인만 허용)' },\n        { value: 'ALLOW-FROM', label: 'ALLOW-FROM (특정 도메인 허용)' }\n      ]},\n      { key: 'enableReferrerPolicy', label: 'Referrer Policy 활성화', type: 'checkbox', placeholder: '리퍼러 정보 노출을 제어합니다.' },\n      { key: 'referrerPolicyValue', label: 'Referrer Policy 값', type: 'select', placeholder: '정책 값 선택', options: [\n        { value: 'no-referrer', label: 'no-referrer (리퍼러 정보 전송 안함)' },\n        { value: 'strict-origin-when-cross-origin', label: 'strict-origin-when-cross-origin (교차 도메인시 도메인만)' },\n        { value: 'same-origin', label: 'same-origin (같은 도메인만)' }\n      ]},\n    ] as Field[]\n  },\n  {\n    title: '🔐 권한 및 정책',\n    fields: [\n      { key: 'enablePermissionsPolicy', label: 'Permissions Policy 활성화', type: 'checkbox', placeholder: '브라우저 기능 사용을 제어합니다.' },\n      { key: 'permissionsPolicyValue', label: 'Permissions Policy 값', type: 'textarea', rows: 2, placeholder: 'camera=(), microphone=(), geolocation=(), payment=()' },\n    ] as Field[]\n  },\n  {\n    title: '⚡ API 보안',\n    fields: [\n      { key: 'enableApiRateLimit', label: 'API 속도 제한 활성화', type: 'checkbox', placeholder: 'API 요청 빈도를 제한하여 DDoS 공격을 방지합니다.' },\n      { key: 'apiRateLimitPerMinute', label: '분당 API 요청 제한', type: 'text', placeholder: '60 (분당 60회)' },\n    ] as Field[]\n  },\n  {\n    title: '👤 관리자 인증',\n    fields: [\n      { key: 'enableAdminAuth', label: '관리자 인증 활성화', type: 'checkbox', placeholder: '관리자 대시보드 접근을 위한 인증을 활성화합니다.' },\n      { key: 'adminSessionTimeout', label: '관리자 세션 타임아웃 (초)', type: 'text', placeholder: '3600 (1시간)' },\n      { key: 'enableTwoFactorAuth', label: '2단계 인증 활성화', type: 'checkbox', placeholder: '관리자 로그인시 2단계 인증을 요구합니다.' },\n      { key: 'enableIpWhitelist', label: 'IP 화이트리스트 활성화', type: 'checkbox', placeholder: '특정 IP 주소에서만 관리자 접근을 허용합니다.' },\n      { key: 'allowedIpAddresses', label: '허용된 IP 주소 (쉼표로 구분)', type: 'text', placeholder: '192.168.1.1, 10.0.0.1' },\n    ] as Field[]\n  },\n  {\n    title: '📋 로그 & 백업',\n    fields: [\n      { key: 'enableAuditLog', label: '감사 로그 활성화', type: 'checkbox', placeholder: '관리자 활동을 기록하여 보안 감사를 지원합니다.' },\n      { key: 'enableBackup', label: '자동 백업 활성화', type: 'checkbox', placeholder: '정기적으로 데이터를 백업합니다.' },\n      { key: 'backupFrequency', label: '백업 빈도', type: 'select', placeholder: '백업 주기 선택', options: [\n        { value: 'hourly', label: '매시간 (hourly)' },\n        { value: 'daily', label: '매일 (daily)' },\n        { value: 'weekly', label: '매주 (weekly)' },\n        { value: 'monthly', label: '매월 (monthly)' }\n      ]},\n    ] as Field[]\n  },\n]\n\n","import { AdminLanguage } from '@/components/common/LanguageTabs'\nimport { SectionDefinition } from './types'\nimport { allSections } from './constants'\n\n/**\n * Generate multilingual field key based on language\n * @param baseKey - Base field key (e.g., 'heroTitle')\n * @param lang - Target language ('ko', 'en', 'ja')\n * @returns Localized field key (e.g., 'heroTitleEn' for 'en')\n */\nexport const getMultilingualKey = (baseKey: string, lang: AdminLanguage): string => {\n  if (lang === 'ko') return baseKey\n  if (lang === 'en') return `${baseKey}En`\n  if (lang === 'ja') return `${baseKey}Ja`\n  return baseKey\n}\n\n/**\n * Check if a multilingual field has values in all languages\n * @param settings - Settings object containing field values\n * @param fieldKey - Base field key to check\n * @returns Object with completion status for each language\n */\nexport const isFieldTranslated = (\n  settings: any,\n  fieldKey: string\n): { ko: boolean; en: boolean; ja: boolean; complete: boolean } => {\n  const koValue = settings[fieldKey]\n  const enValue = settings[getMultilingualKey(fieldKey, 'en')]\n  const jaValue = settings[getMultilingualKey(fieldKey, 'ja')]\n\n  const hasKo = Boolean(koValue && (typeof koValue === 'string' ? koValue.trim() : koValue))\n  const hasEn = Boolean(enValue && (typeof enValue === 'string' ? enValue.trim() : enValue))\n  const hasJa = Boolean(jaValue && (typeof jaValue === 'string' ? jaValue.trim() : jaValue))\n\n  return {\n    ko: hasKo,\n    en: hasEn,\n    ja: hasJa,\n    complete: hasKo && hasEn && hasJa\n  }\n}\n\n/**\n * Get active section title based on section ID\n * @param activeSection - Section ID ('general', 'appearance', etc.)\n * @returns Human-readable section title\n */\nexport const getActiveSectionTitle = (activeSection: string | null): string => {\n  switch (activeSection) {\n    case 'general': return '🏠 일반 설정'\n    case 'appearance': return '🎨 외관 설정'\n    case 'seo': return '🔍 SEO 설정'\n    case 'social': return '📱 소셜 미디어'\n    case 'analytics': return '📊 분석 도구'\n    case 'security': return '🔒 보안 설정'\n    default: return '사이트 설정'\n  }\n}\n\n/**\n * Get active section description based on section ID\n * @param activeSection - Section ID ('general', 'appearance', etc.)\n * @returns Section description text\n */\nexport const getActiveSectionDescription = (activeSection: string | null): string => {\n  switch (activeSection) {\n    case 'general': return '사이트의 기본 정보와 개인 정보를 설정합니다.'\n    case 'appearance': return '각 섹션의 제목과 내용을 편집합니다.'\n    case 'seo': return '검색 엔진 최적화 설정을 관리합니다.'\n    case 'social': return '소셜 미디어 링크와 연락처 정보를 설정합니다.'\n    case 'analytics': return 'Google Analytics 등 분석 도구를 설정합니다.'\n    case 'security': return '인증 및 보안 설정을 관리합니다.'\n    default: return '포트폴리오의 모든 텍스트를 편집하고 저장하세요.'\n  }\n}\n\n/**\n * Filter sections based on active section ID\n * @param activeSection - Section ID or null for all sections\n * @returns Filtered array of section definitions\n */\nexport const getFilteredSections = (activeSection: string | null): SectionDefinition[] => {\n  if (!activeSection) return allSections\n\n  switch (activeSection) {\n    case 'general':\n      // General settings: Personal info + Social links + Sidebar settings\n      return allSections.filter(section =>\n        section.title.includes('개인 정보') || \n        section.title.includes('소셜 링크') || \n        section.title.includes('사이드바 설정')\n      )\n    \n    case 'appearance':\n      // Appearance: Hero + About + Experience + Skills + Learning Goals + Projects + Books + Contact + Stats\n      return allSections.filter(section =>\n        section.title.includes('Hero') ||\n        section.title.includes('About') ||\n        section.title.includes('Experience') ||\n        section.title.includes('Skills') ||\n        section.title.includes('학습 목표') ||\n        section.title.includes('Projects') ||\n        section.title.includes('Books') ||\n        section.title.includes('Contact') ||\n        section.title.includes('통계')\n      )\n    \n    case 'seo':\n      // SEO: All SEO-related sections\n      return allSections.filter(section =>\n        section.title.includes('SEO') ||\n        section.title.includes('Open Graph') ||\n        section.title.includes('Twitter Card') ||\n        section.title.includes('검색 엔진') ||\n        section.title.includes('Google')\n      )\n    \n    case 'social':\n      // Social media: Social links + all social media sections\n      return allSections.filter(section =>\n        section.title.includes('소셜 링크') ||\n        section.title.includes('글로벌 소셜 미디어') ||\n        section.title.includes('디자인 & 포트폴리오') ||\n        section.title.includes('블로그 & 글쓰기') ||\n        section.title.includes('메신저 & 커뮤니케이션') ||\n        section.title.includes('워크스페이스 & 도구')\n      )\n    \n    case 'analytics':\n      // Analytics: All analytics-related sections\n      return allSections.filter(section =>\n        section.title.includes('웹 분석 도구') ||\n        section.title.includes('사용자 행동 분석') ||\n        section.title.includes('에러 추적') ||\n        section.title.includes('고객 지원') ||\n        section.title.includes('추가 채팅 도구')\n      )\n    \n    case 'security':\n      // Security: All security-related sections\n      return allSections.filter(section =>\n        section.title.includes('기본 보안 헤더') ||\n        section.title.includes('추가 보안 헤더') ||\n        section.title.includes('권한 및 정책') ||\n        section.title.includes('API 보안') ||\n        section.title.includes('관리자 인증') ||\n        section.title.includes('로그 & 백업')\n      )\n    \n    default:\n      return allSections\n  }\n}\n\n","import React from 'react'\nimport { FaPlus } from 'react-icons/fa'\nimport { FieldRendererProps } from '../types'\nimport { getMultilingualKey } from '../utils'\n\n/**\n * SettingField Component\n * Renders an individual form field with language indicators for multilingual fields\n */\nconst SettingField: React.FC<FieldRendererProps> = ({ \n  field, \n  value, \n  onChange, \n  currentLang = 'ko', \n  settings \n}) => {\n  // Language indicator for multilingual fields\n  const renderLanguageIndicator = () => {\n    if (!field.isMultilingual || !settings) return null\n\n    const koValue = settings[field.key]\n    const enValue = settings[getMultilingualKey(field.key as string, 'en')]\n    const jaValue = settings[getMultilingualKey(field.key as string, 'ja')]\n\n    return (\n      <div className=\"flex gap-2 text-xs mb-2\">\n        <span className={`px-2 py-1 rounded ${koValue ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300' : 'bg-gray-100 dark:bg-gray-700 text-gray-500'}`}>\n          🇰🇷 {koValue ? '✓' : '○'}\n        </span>\n        <span className={`px-2 py-1 rounded ${enValue ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300' : 'bg-gray-100 dark:bg-gray-700 text-gray-500'}`}>\n          🇺🇸 {enValue ? '✓' : '○'}\n        </span>\n        <span className={`px-2 py-1 rounded ${jaValue ? 'bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300' : 'bg-gray-100 dark:bg-gray-700 text-gray-500'}`}>\n          🇯🇵 {jaValue ? '✓' : '○'}\n        </span>\n      </div>\n    )\n  }\n\n  // Render input based on field type\n  const renderInput = () => {\n    switch (field.type) {\n      case 'textarea':\n        return (\n          <>\n            {renderLanguageIndicator()}\n            <textarea\n              id={field.key}\n              value={(value as string) || ''}\n              onChange={(e) => onChange(e.target.value)}\n              rows={field.rows || 3}\n              placeholder={field.placeholder}\n              className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-vertical\"\n            />\n          </>\n        )\n\n      case 'select':\n        return (\n          <select\n            id={field.key}\n            value={(value as string) || ''}\n            onChange={(e) => onChange(e.target.value)}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n          >\n            {field.options?.map((option) => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n        )\n\n      case 'checkbox':\n        return (\n          <div className=\"flex items-center space-x-3\">\n            <input\n              id={field.key}\n              type=\"checkbox\"\n              checked={(value as boolean) || false}\n              onChange={(e) => onChange(e.target.checked)}\n              className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\n            />\n            <label htmlFor={field.key} className=\"text-sm text-gray-700 dark:text-gray-300\">\n              {field.placeholder}\n            </label>\n          </div>\n        )\n\n      case 'number':\n        return (\n          <input\n            id={field.key}\n            type=\"number\"\n            value={(value as number) || ''}\n            onChange={(e) => onChange(parseInt(e.target.value) || 0)}\n            min={field.min}\n            max={field.max}\n            placeholder={field.placeholder}\n            className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n          />\n        )\n\n      case 'array':\n        return (\n          <div className=\"space-y-2\">\n            {((value as string[]) || []).map((item, index) => (\n              <div key={index} className=\"flex items-center gap-2\">\n                <input\n                  type=\"text\"\n                  value={item}\n                  onChange={(e) => {\n                    const newArray = [...(value as string[])]\n                    newArray[index] = e.target.value\n                    onChange(newArray)\n                  }}\n                  className=\"flex-1 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                  placeholder={field.placeholder}\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    const newArray = (value as string[]).filter((_, i) => i !== index)\n                    onChange(newArray)\n                  }}\n                  className=\"p-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\"\n                >\n                  삭제\n                </button>\n              </div>\n            ))}\n            <button\n              type=\"button\"\n              onClick={() => {\n                const newArray = [...((value as string[]) || []), '']\n                onChange(newArray)\n              }}\n              className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2\"\n            >\n              <FaPlus size={12} /> 항목 추가\n            </button>\n          </div>\n        )\n\n      default:\n        return (\n          <>\n            {renderLanguageIndicator()}\n            <input\n              id={field.key}\n              type={field.type}\n              value={(value as string) || ''}\n              onChange={(e) => onChange(e.target.value)}\n              placeholder={field.placeholder}\n              className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            />\n          </>\n        )\n    }\n  }\n\n  return (\n    <div>\n      {field.type !== 'checkbox' && (\n        <label\n          htmlFor={field.key}\n          className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\"\n        >\n          {field.label}\n        </label>\n      )}\n      {renderInput()}\n      {field.type === 'checkbox' && (\n        <label\n          htmlFor={field.key}\n          className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\"\n        >\n          {field.label}\n        </label>\n      )}\n    </div>\n  )\n}\n\nexport default SettingField\n\n","import React from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { FaEdit, FaChevronDown, FaChevronRight } from 'react-icons/fa'\nimport { SiteSettings } from '@/types'\nimport { AdminLanguage } from '@/components/common/LanguageTabs'\nimport LanguageTabs from '@/components/common/LanguageTabs'\nimport { SectionDefinition } from '../types'\nimport { getMultilingualKey } from '../utils'\nimport SettingField from './SettingField'\n\ninterface SettingsSectionProps {\n  section: SectionDefinition\n  isExpanded: boolean\n  onToggle: () => void\n  currentLang: AdminLanguage\n  settings: SiteSettings\n  onChange: (field: keyof SiteSettings, value: string | boolean | string[] | number) => void\n  setCurrentLang: (lang: AdminLanguage) => void\n}\n\n/**\n * SettingsSection Component\n * Renders a collapsible section containing multiple setting fields\n */\nconst SettingsSection: React.FC<SettingsSectionProps> = ({\n  section,\n  isExpanded,\n  onToggle,\n  currentLang,\n  settings,\n  onChange,\n  setCurrentLang\n}) => {\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden\">\n      {/* Section Header */}\n      <button\n        onClick={onToggle}\n        className=\"w-full p-6 text-left hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\"\n      >\n        <h3 className=\"text-xl font-bold text-gray-900 dark:text-white flex items-center gap-3\">\n          <FaEdit className=\"text-primary-500\" size={20} />\n          {section.title}\n          {isExpanded ? (\n            <FaChevronDown className=\"text-gray-400 ml-auto\" size={16} />\n          ) : (\n            <FaChevronRight className=\"text-gray-400 ml-auto\" size={16} />\n          )}\n        </h3>\n      </button>\n\n      {/* Section Content */}\n      <AnimatePresence>\n        {isExpanded && (\n          <motion.div\n            initial={{ height: 0, opacity: 0 }}\n            animate={{ height: 'auto', opacity: 1 }}\n            exit={{ height: 0, opacity: 0 }}\n            transition={{ duration: 0.3, ease: 'easeInOut' }}\n            className=\"overflow-hidden\"\n          >\n            <div className={`p-6 pt-4 border-t border-gray-200 dark:border-gray-700 ${\n              section.title.includes('Hero 섹션') ? 'py-8' : ''\n            }`}>\n              {/* Language tabs for multilingual sections */}\n              {section.fields.some(f => f.isMultilingual) && (\n                <LanguageTabs\n                  activeLanguage={currentLang}\n                  onChange={setCurrentLang}\n                />\n              )}\n\n              {/* Fields grid */}\n              <div className={`grid gap-6 ${\n                section.title.includes('About 섹션') ||\n                section.title.includes('Hero 섹션') ||\n                section.title.includes('Experience 섹션') ||\n                section.title.includes('Skills 섹션') ||\n                section.title.includes('Projects 섹션') ||\n                section.title.includes('Books 섹션') ||\n                section.title.includes('소셜 링크') ||\n                section.title.includes('Contact 섹션')\n                  ? 'grid-cols-1'\n                  : 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3'\n              }`}>\n                {section.fields.map((field) => {\n                  // Use multilingual key if field supports it\n                  const activeKey = field.isMultilingual\n                    ? getMultilingualKey(field.key as string, currentLang) as keyof SiteSettings\n                    : field.key\n\n                  return (\n                    <SettingField\n                      key={field.key}\n                      field={field}\n                      value={settings[activeKey] || (field.type === 'checkbox' ? false : field.type === 'array' ? [] : '')}\n                      onChange={(value) => onChange(activeKey, value)}\n                      currentLang={currentLang}\n                      settings={settings}\n                    />\n                  )\n                })}\n              </div>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  )\n}\n\nexport default SettingsSection\n\n"],"names":["ProtectedRoute","element","Component","isAuthenticated","isLoading","useAuth","jsxRuntimeExports","jsxs","style","display","justifyContent","alignItems","height","backgroundColor","children","width","border","borderTop","borderRadius","animation","marginLeft","color","fontSize","jsx","Navigate","to","replace","LoadScene","onFirstVisitComplete","progress","setProgress","useState","navigate","useNavigate","useEffect","window","location","hash","sceneRef","useRef","animationRef","tlRef","textMeshesRef","sceneInstanceRef","cameraRef","rendererRef","autoNavigateTimer","setTimeout","localStorage","setItem","clearTimeout","cleanup","current","cancelAnimationFrame","kill","canvas","domElement","contains","removeChild","dispose","initThreeScene","scene","THREE.Scene","background","THREE.Color","camera","THREE.PerspectiveCamera","innerWidth","innerHeight","renderer","THREE.WebGLRenderer","alpha","antialias","setSize","setClearColor","shadowMap","enabled","type","THREE.PCFSoftShadowMap","appendChild","ambientLight","THREE.AmbientLight","add","directionalLight","THREE.DirectionalLight","position","set","castShadow","shadow","mapSize","pointLight","THREE.PointLight","pointLight2","create3DText","z","lookAt","animate","requestAnimationFrame","forEach","mesh","index","rotation","y","x","Math","sin","Date","now","cos","render","handleResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","loadingLetters","letter","geometry","createLGeometry","THREE.TorusGeometry","THREE.ConeGeometry","createDGeometry","THREE.BoxGeometry","createNGeometry","createGGeometry","hue","length","material","THREE.MeshPhongMaterial","setHSL","shininess","specular","emissive","THREE.Mesh","receiveShadow","startX","scale","PI","push","gsapWithCSS","duration","delay","ease","THREE.BufferGeometry","vertices","setAttribute","THREE.Float32BufferAttribute","computeVertexNormals","i","angle","setupAnimation","tl","gsap","timeline","onUpdate","this","className","ref","motion","div","initial","opacity","transition","round","IconMap","FaIcons","SiIcons","DynamicIcon","iconName","size","IconComponent","React","createElement","FaIcons.FaMicrochip","LanguageSwitcher","variant","i18n","useTranslation","changeLanguage","lang","languages","code","short","full","FaGlobe","map","isActive","language","onClick","getLocalizedField","currentLang","koValue","enValue","jaValue","getLocalizedArrayField","koArray","enArray","jaArray","getLocalizedSkillName","skill","name","nameEn","nameJa","getLocalizedSkillDescription","description","descriptionEn","descriptionJa","getLocalizedCategoryName","category","getLocalizedSkillCategoryTitle","skillCategory","title","titleEn","titleJa","SidebarNavItem","item","setIsOpen","activeSection","useMemo","path","pathname","startsWith","icon","classes","handleNavigation","useCallback","scrollToSection","href","Sidebar","darkMode","toggleDarkMode","onLoginClick","isOpen","useLocation","logout","t","settings","siteSettings","useSiteSettings","useScrollSpy","navItems","FaHome","FaUser","FaBriefcase","FaWrench","FaLaptopCode","FaBook","FaVideo","FaCommentDots","coreSkills","languageSkills","isLoadingSkills","useSidebarSkills","socialLinks","FaGithub","label","FaLinkedin","FaEnvelope","Fragment","FaTimes","FaBars","exit","firstName","firstNameEn","firstNameJa","FaCode","fullName","fullNameEn","fullNameJa","role","roleEn","roleJa","subtitle","subtitleEn","subtitleJa","locationEn","locationJa","education","educationEn","educationJa","yearsOfExperience","yearsOfExperienceEn","yearsOfExperienceJa","skillName","isNative","includes","level","cx","cy","r","stroke","strokeWidth","fill","strokeDasharray","strokeLinecap","_id","Link","FaUserShield","Icon","FaSun","FaMoon","FaSignInAlt","LoginModal","onClose","username","setUsername","password","setPassword","error","setError","setIsLoading","login","handleClose","AnimatePresence","id","onSubmit","async","e","preventDefault","err","errorMessage","message","htmlFor","value","onChange","target","placeholder","required","autoComplete","FaLock","button","disabled","whileHover","whileTap","FaCircleNotch","AppLayout","showLoginModal","setShowLoginModal","isFirstVisit","SimpleLoadingSpinner","Suspense","fallback","Outlet","Hero","loading","scrollYProgress","useScroll","yTop","useTransform","yBottom","itemVariants","hidden","visible","stats","number","stat1Number","stat1Label","stat1LabelEn","stat1LabelJa","FaCoffee","stat2Number","stat2Label","stat2LabelEn","stat2LabelJa","stat3Number","stat3Label","stat3LabelEn","stat3LabelJa","FaCog","variants","staggerChildren","heroTag","heroTagEn","heroTagJa","h1","heroTitle","heroTitleEn","heroTitleJa","p","heroSubtitle","heroSubtitleEn","heroSubtitleJa","a","FaArrowRight","heroCtaLink2","download","rel","FaDownload","stat","formatDate","dateString","toLocaleDateString","formatRelativeDate","date","diffInMs","getTime","diffInMinutes","floor","diffInHours","diffInDays","diffInWeeks","diffInMonths","BookCoverImage","src","alt","fallbackIcon","imageState","setImageState","imageSrc","setImageSrc","FaImage","decoding","onLoad","onError","ScrollToTopButton","isVisible","setIsVisible","toggleVisibility","scrollY","scrollTo","top","behavior","FaArrowUp","getFormattedReadingTime","text","wordsPerMinute","minutes","words","trim","split","ceil","max","calculateReadingTime","formatReadingTime","escapeHtml","String","renderEditorJSData","data","outputData","JSON","parse","blocks","Array","isArray","html","block","_a","line","join","_b","headerText","_c","items","_d","_e","itemText","content","stringify","_f","toggleTitle","_g","toggleContent","_h","_i","isCollapsed","url","_k","_j","file","_l","caption","_m","renderLexicalData","lexicalData","root","renderNode","node","child","textContent","c","tag","headingText","slice","listType","listHtml","codeText","open","altText","isLexicalData","RichTextEditor","rows","textareaRef","cursorPosition","setCursorPosition","updateCursorPosition","selectionStart","getCurrentLine","lines","currentLineIndex","lineStart","lineLengthWithNewline","lineIndex","applyHeading","prefix","repeat","match","applyListStyle","indent","adjustIndent","direction","applyTextStyle","textarea","start","end","selectionEnd","selectedText","substring","wrap","wrappedText","newValue","setSelectionRange","focus","FaBold","FaItalic","FaUnderline","FaListUl","FaListOl","FaOutdent","FaIndent","newLine","splice","newPosition","FaChevronDown","codeBlockLines","positionToMove","MdCode","onSelect","onKeyUp","onMouseUp","dangerouslySetInnerHTML","__html","_match","p1","p2","LearningItem","learning","isEditing","currentFormData","setCurrentFormData","onStartEdit","onSaveEdit","onCancelEdit","onDelete","isSaving","allSkillsMap","onSkillLinkChange","chapterId","linkedSkills","skillIds","get","skillId","filter","availableSkills","from","values","topic","prev","FaTag","isLinked","dynamicStyle","handleSkillToggle","FaEdit","FaTrash","badgeStyle","colorCode","createdAt","useParams","book","isError","useBook","bookChapters","useQuery","queryKey","queryFn","response","chaptersAPI","getByBook","staleTime","skillCategories","useSkills","deleteMutation","useDeleteBook","bookApiError","editingLearningId","showAddForm","learningApiError","handleToggleAddForm","handleAddLearning","handleDeleteLearning","handleStartEdit","handleSaveEdit","handleCancelEdit","handleSkillLinkChange","useLearningManager","expandedChapterId","setExpandedChapterId","linkedBookSkills","allSkills","flatMap","skills","uniqueSkillIds","Set","chapter","learnings","has","levelText","Map","isDeleting","isPending","sortedLearnings","sort","b","state","FaArrowLeft","coverImage","categoryIds","catIdOrObj","catName","tab","editId","confirm","mutateAsync","author","authorEn","authorJa","rating","_","FaStar","FaCalendar","readDate","FaCubes","FaPlus","isExpanded","toggleChapter","prevId","span","rotate","FaChevronRight","CollapsibleNode","ElementNode","constructor","key","super","__publicField","__title","__open","getType","clone","__key","createDOM","config","dom","document","updateDOM","prevNode","importDOM","details","conversion","convertCollapsibleElement","priority","exportDOM","summary","importJSON","serializedNode","$createCollapsibleNode","exportJSON","getTitle","version","getLatest","setTitle","getWritable","setOpen","toggle","domNode","querySelector","$applyNodeReplacement","ToolbarPlugin","editor","useLexicalComposerContext","handleBold","dispatchCommand","FORMAT_TEXT_COMMAND","handleItalic","handleUnderline","handleHeading","update","selection","$getSelection","$isRangeSelection","headingNode","$createHeadingNode","insertNodes","handleCode","codeNode","$createCodeNode","Br","handleInsertCollapsible","collapsible","INSERT_UNORDERED_LIST_COMMAND","INSERT_ORDERED_LIST_COMMAND","ImageNode","__src","__altText","__width","__height","img","$createImageNode","getSrc","setSrc","getAltText","setAltText","INSERT_IMAGE_COMMAND","createCommand","ImageUploadPlugin","registerCommand","payload","formData","FormData","append","api","post","headers","success","Error","imageNode","COMMAND_PRIORITY_EDITOR","theme","paragraph","heading","h2","h3","list","ul","ol","listitem","bold","italic","underline","strikethrough","quote","container","UpdateStatePlugin","forceUpdate","parsedValue","editorState","parseEditorState","setEditorState","LexicalEditor","forceUpdateKey","initialConfig","namespace","nodes","HeadingNode","QuoteNode","ListNode","ListItemNode","CodeNode","CodeHighlightNode","LinkNode","ParagraphNode","TextNode","TableNode","TableCellNode","TableRowNode","handleChange","serialized","toJSON","LexicalComposer","RichTextPlugin","contentEditable","ContentEditable","ErrorBoundary","LexicalErrorBoundary","OnChangePlugin","HistoryPlugin","ListPlugin","LinkPlugin","video","useVideoLearning","useDeleteVideoLearning","updateMutation","useUpdateVideoLearning","toastError","useToastHelpers","playerRef","playerContainerRef","isPlayerReady","setIsPlayerReady","isEditingKeyTakeaways","setIsEditingKeyTakeaways","editingContent","setEditingContent","videoId","videoUrl","extractYouTubeId","YT","firstScriptTag","getElementsByTagName","parentNode","insertBefore","initializePlayer","Player","playerVars","enablejsapi","origin","modestbranding","fs","cc_load_policy","iv_load_policy","showinfo","controls","events","onReady","onYouTubeIframeAPIReady","destroy","cat","keyTakeaways","FaLightbulb","parsed","format","parseKeyTakeaways","tagName","dataset","timestamp","seconds","seekTo","playVideo","handleTimestampClick","parseInt","skillIdOrObj","Boolean","updateData","watchDate","purpose","application","order","FaSave","FaBullseye","ReactMarkdown","FaRocket","playlist","useVideoPlaylist","playlistVideos","usePlaylistVideos","useDeleteVideoPlaylist","updateVideoMutation","useUpdatePlaylistVideo","activeVideoId","setActiveVideoId","activeVideoTab","setActiveVideoTab","showVideoTabs","setShowVideoTabs","editingVideoId","setEditingVideoId","playlistId","activeVideo","find","v","targetVideoId","videoIndex","findIndex","playVideoAt","FaList","FaChevronUp","handleVideoTabClick","ProjectCard","project","getStatusColor","getStatusText","technologies","technologiesEn","technologiesJa","hasLinks","githubLink","liveLink","layout","scrollPosition","image","status","tech","stopPropagation","FaExternalLinkAlt","localizedProject","useProjectDetail","selectedImage","setSelectedImage","currentVideoIndex","setCurrentVideoIndex","currentShortsIndex","setCurrentShortsIndex","isYouTubeShorts","getYouTubeEmbedUrl","regularVideos","videos","shortsVideos","images","FaPlay","allowFullScreen","allow","preload","videoDescriptions","FaChevronLeft","maxWidth","videoIndexInAll","indexOf","maxHeight","margin","detailedDescription","features","feature","iconMap","FaGraduationCap","FaChartLine","FaRobot","FaCar","FaShieldAlt","ExperienceItem","exp","isLast","setIsExpanded","iconKey","some","idOrObj","descriptionItems","iconColor","iconBgColor","bgColor","stiffness","company","companyEn","companyJa","period","detail","idx","categoryEn","categoryJa","itemsEn","itemsJa","itemIdx","li","FaCheckCircle","DashboardHome","counts","siteActivityStats","recentUpdates","typeName","updatedAt","weeklyStats","booksAdded","projectsCompleted","experiencesUpdated","books","experiences","projects","FaProjectDiagram","FaSync","FaCalendarAlt","ChapterLearningList","chapters","onAddChapter","onEditChapter","onDeleteChapter","onAddLearning","onEditLearning","onDeleteLearning","expandedChapters","setExpandedChapters","ch","learningCount","newSet","delete","Toast","toast","getBgColor","FaCheck","FaExclamationTriangle","FaInfo","getIcon","ToastContainer","toasts","BookManager","bookFilter","bookSearchTerm","selectedBookCategory","initialEditId","createBook","updateBook","deleteBook","useBookManagerData","createAbortController","useAbortController","hideToast","bookState","bookActions","useCRUDManager","onSave","editingItem","optimisticAdd","optimisticAddChapter","optimisticUpdateItem","optimisticUpdateChapter","optimisticDelete","optimisticDeleteChapter","resetData","resetChapters","useOptimisticArrayUpdate","showBookDetailModal","setShowBookDetailModal","selectedBook","setSelectedBook","selectedChapterId","setSelectedChapterId","showChapterForm","setShowChapterForm","editingChapter","setEditingChapter","showLearningForm","setShowLearningForm","editingLearning","setEditingLearning","hasAutoOpened","setHasAutoOpened","bookToEdit","handleEdit","filteredBooks","filtered","searchLower","toLowerCase","handleBookDetailClick","abortController","chaptersResponse","signal","aborted","handleSaveChapter","chapterData","then","res","toISOString","create","handleDeleteChapter","handleAddLearningClick","handleEditLearningClick","handleDeleteLearningClick","learningsAPI","deleteForChapter","handleSaveLearning","learningData","updateForChapter","createForChapter","renderRating","handleCreate","FaEye","handleDelete","showForm","handleCancel","BookForm","handleSave","onCancel","ChapterForm","LearningForm","VideoLearningManager","videoLearnings","createVideoLearning","updateVideoLearning","deleteVideoLearning","useVideoLearningManagerData","videoState","videoActions","categoryFilter","setCategoryFilter","availableCategories","categories","extractUniqueCategories","filteredVideos","videoToEdit","count","VideoLearningForm","thumbnailUrl","getYouTubeThumbnail","handleAdd","VideoPlaylistManager","playlists","createPlaylist","updatePlaylist","deletePlaylist","useVideoPlaylistManagerData","expandedPlaylistId","setExpandedPlaylistId","showVideoForm","setShowVideoForm","editingVideo","setEditingVideo","showBulkAddForm","setShowBulkAddForm","bulkVideoUrls","setBulkVideoUrls","createVideoMutation","useCreatePlaylistVideo","deleteVideoMutation","useDeletePlaylistVideo","playlistState","playlistActions","handleBulkAddVideos","alert","urls","successCount","videoData","VideoPlaylistForm","PlaylistVideoForm","currentVideos","handleDeleteVideo","LanguageTabs","activeLanguage","flag","ExperienceManager","experienceFilter","experienceSearchTerm","selectedExperienceCompany","selectedExperienceYear","createExperience","updateExperience","deleteExperience","useExperienceManagerData","setShowForm","setEditingItem","setIsSaving","setIsDeleting","filteredExperiences","ExperienceForm","experience","ProjectManager","projectFilter","projectSearchTerm","selectedProjectCategory","createProject","updateProject","deleteProject","useProjectManagerData","filteredProjects","featuredProjectsCount","ProjectForm","result","errorMsg","MessageDetail","messageId","onMarkAsRead","onReply","isProcessing","setIsProcessing","showReplyForm","setShowReplyForm","replyContent","setReplyContent","refetch","useMessageDetail","FaSpinner","isRead","email","toLocaleString","year","month","day","hour","minute","subject","FaReply","MessageManager","messages","markAsRead","deleteMessage","useMessageManagerData","selectedMessageId","setSelectedMessageId","showDetail","setShowDetail","handleViewDetail","handleCloseDetail","WebkitLineClamp","WebkitBoxOrient","overflow","handleMarkAsRead","SortableCategoryCard","onToggle","onAddSkill","onEdit","attributes","listeners","setNodeRef","transform","isDragging","useSortable","CSS","Transform","toString","SortableSkillItem","categoryColor","currentLevel","hasChanges","isSavingThis","onLevelChange","onSaveLevel","onToggleSidebar","onToggleLanguageCard","checked","showInSidebar","showInLanguageCard","min","step","newLevel","SkillsManager","createSkillCategory","updateSkillCategory","deleteSkillCategory","createSkill","updateSkill","deleteSkill","useSkillsManagerData","activeForm","setActiveForm","editingCategory","setEditingCategory","editingSkill","setEditingSkill","selectedCategoryId","setSelectedCategoryId","expandedCategories","setExpandedCategories","localLevels","setLocalLevels","savingSkillIds","setSavingSkillIds","handleLevelChange","newMap","handleSaveLevel","handleToggleSidebar","handleToggleLanguageCard","handleCategoryDragEnd","event","active","over","oldIndex","newIndex","reorderedCategories","arrayMove","handleSkillDragEnd","categoryId","reorderedSkills","toggleCategory","handleEditCategory","handleDeleteCategory","handleAddSkill","handleEditSkill","handleDeleteSkill","SkillCategoryForm","initialData","SkillForm","DndContext","collisionDetection","closestCenter","onDragEnd","SortableContext","strategy","verticalListSortingStrategy","usageData","useCategoryUsage","usage","videoPlaylists","total","CategoryManager","createCategory","updateCategory","deleteCategory","useCategoryManagerData","categoryState","categoryActions","usageDetails","FaFolder","CategoryForm","NotificationDropdown","notifications","showNotifications","onNotificationClick","getUnreadNotificationCount","n","read","FaBell","notification","BookFilterMenu","filterGroup","actions","showBookSearch","setShowBookSearch","setFilter","setSearchTerm","setSelectedCategory","searchTerm","selectedCategory","ExperienceFilterMenu","showExperienceSearch","setShowExperienceSearch","setSelectedCompany","setSelectedYear","selectedCompany","selectedYear","companies","years","ProjectFilterMenu","showProjectSearch","setShowProjectSearch","SettingsMenu","activeSettingsSection","setActiveSettingsSection","option","RightSidebar","activeTab","setActiveTab","refreshCounts","bookFilters","experienceFilters","projectFilters","toLocaleTimeString","initialSettings","phone","githubUrl","linkedinUrl","aboutTitle","aboutSubtitle","aboutDescription1","aboutDescription2","skillsTitle","skillsSubtitle","projectsTitle","projectsSubtitle","booksTitle","booksSubtitle","contactTitle","contactSubtitle","experienceTitle","experienceSubtitle","learningGoalsTitle","learningGoalsDescription","learningGoalsList","siteTitle","siteDescription","siteKeywords","siteAuthor","siteLanguage","siteUrl","ogTitle","ogDescription","ogImage","ogType","twitterCard","twitterSite","twitterCreator","robotsIndex","robotsFollow","googleAnalyticsId","googleSiteVerification","instagramUrl","twitterUrl","facebookUrl","youtubeUrl","tiktokUrl","behanceUrl","dribbbleUrl","mediumUrl","telegramUrl","discordUrl","kakaoTalkUrl","naverBlogUrl","tistoryUrl","velogUrl","notionUrl","googleTagManagerId","facebookPixelId","naverAnalyticsId","kakaoPixelId","hotjarId","mixpanelToken","amplitudeApiKey","sentryDsn","logRocketId","fullStoryOrgId","intercomAppId","zendeskWidgetKey","crispWebsiteId","tawkToPropertyId","liveChatLicense","olarkSiteId","enableHttps","enableCsp","cspDirectives","enableHsts","hstsMaxAge","enableXssProtection","enableContentTypeOptions","enableFrameOptions","frameOptionsValue","enableReferrerPolicy","referrerPolicyValue","enablePermissionsPolicy","permissionsPolicyValue","enableApiRateLimit","apiRateLimitPerMinute","enableAdminAuth","adminSessionTimeout","enableTwoFactorAuth","enableIpWhitelist","allowedIpAddresses","enableAuditLog","enableBackup","backupFrequency","allSections","fields","isMultilingual","options","getMultilingualKey","baseKey","getActiveSectionTitle","getActiveSectionDescription","getFilteredSections","section","SettingField","field","renderLanguageIndicator","newArray","renderInput","SettingsSection","setCurrentLang","f","activeKey"],"mappings":"s3DAQA,MAAMA,GAAgD,EAAGC,QAASC,MAChE,MAAMC,gBAAEA,EAAAC,UAAiBA,GAAcC,KAGvC,OAAID,EAEAE,EAAAC,KAAC,OAAIC,MAAO,CACVC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,QACRC,gBAAiB,WAEjBC,SAAA,OAAC,OAAIN,MAAO,CACVO,MAAO,OACPH,OAAQ,OACRI,OAAQ,oBACRC,UAAW,wBACXC,aAAc,MACdC,UAAW,mCAEZ,QAAKX,MAAO,CACXY,WAAY,OACZC,MAAO,UACPC,SAAU,QACTR,SAAU,kBAMdX,QAKGD,EAAU,CAAA,GAJRqB,EAAAA,IAAAC,EAAA,CAASC,GAAG,IAAIC,SAAO,KC9B7BC,GAAsC,EAAGC,2BAC7C,MAAOC,EAAUC,GAAeC,WAAS,GACnCC,EAAWC,IAGjBC,EAAAA,UAAU,KACKC,OAAOC,SAASC,MAE3BL,EAAS,QAAS,CAAEN,SAAS,KAE9B,CAACM,IACE,MAAAM,EAAWC,SAAuB,MAClCC,EAAeD,EAAAA,SACfE,EAAQF,EAAAA,SACRG,EAAgBH,SAAqB,IACrCI,EAAmBJ,EAAAA,SACnBK,EAAYL,EAAAA,SACZM,EAAcN,EAAAA,SAEpBL,EAAAA,UAAU,aAOD,WAGN,IAGHA,EAAAA,UAAU,KACF,MAAAY,EAAoBC,WAAW,KAEtBC,aAAAC,QAAQ,aAAc,QACZ,MAAArB,GAAAA,IACvBI,EAAS,UACR,KAEI,MAAA,IAAMkB,aAAaJ,IACzB,CAACd,EAAUJ,IAEd,MAAMuB,EAAU,KAOV,GANAX,EAAaY,SACfC,qBAAqBb,EAAaY,SAEhCX,EAAMW,SACRX,EAAMW,QAAQE,OAEZT,EAAYO,SAAWd,EAASc,QAAS,CACrC,MAAAG,EAASV,EAAYO,QAAQI,WAC/BlB,EAASc,QAAQK,SAASF,IACnBjB,EAAAc,QAAQM,YAAYH,GAE/BV,EAAYO,QAAQO,SACtB,CACAjB,EAAcU,QAAU,IAGpBQ,EAAiB,KACrB,IAAKtB,EAASc,QAAS,OAGjB,MAAAS,EAAQ,IAAIC,GACZD,EAAAE,WAAa,IAAIC,GAAY,QAE7B,MAAAC,EAAS,IAAIC,GAAwB,GAAI/B,OAAOgC,WAAahC,OAAOiC,YAAa,GAAK,KACtFC,EAAW,IAAIC,GAAoB,CAAEC,OAAO,EAAOC,WAAW,IAEpEH,EAASI,QAAQtC,OAAOgC,WAAYhC,OAAOiC,aAClCC,EAAAK,cAAc,OAAU,GACjCL,EAASM,UAAUC,SAAU,EACpBP,EAAAM,UAAUE,KAAOC,GAEjBxC,EAAAc,QAAQ2B,YAAYV,EAASb,YAGtC,MAAMwB,EAAe,IAAIC,GAAmB,SAAU,IACtDpB,EAAMqB,IAAIF,GAEV,MAAMG,EAAmB,IAAIC,GAAuB,SAAU,IAC9DD,EAAiBE,SAASC,IAAI,GAAI,GAAI,GACtCH,EAAiBI,YAAa,EACbJ,EAAAK,OAAOC,QAAQ1E,MAAQ,KACvBoE,EAAAK,OAAOC,QAAQ7E,OAAS,KACzCiD,EAAMqB,IAAIC,GAGV,MAAMO,EAAa,IAAIC,GAAiB,MAAU,GAAK,KACvDD,EAAWL,SAASC,KAAS,GAAA,EAAG,IAChCzB,EAAMqB,IAAIQ,GAEV,MAAME,EAAc,IAAID,GAAiB,SAAU,GAAK,KACxDC,EAAYP,SAASC,IAAI,GAAI,EAAG,IAChCzB,EAAMqB,IAAIU,GAGVC,EAAahC,GAGbI,EAAOoB,SAASS,EAAI,GACb7B,EAAA8B,OAAO,EAAG,EAAG,GAGpBpD,EAAiBS,QAAUS,EAC3BjB,EAAUQ,QAAUa,EACpBpB,EAAYO,QAAUiB,EAGtB,MAAM2B,EAAU,KACDxD,EAAAY,QAAU6C,sBAAsBD,GAG7CtD,EAAcU,QAAQ8C,QAAQ,CAACC,EAAMC,KAC/BD,IACGA,EAAAE,SAASC,GAAK,KAAiB,KAARF,EACvBD,EAAAE,SAASE,EAA2C,GAAvCC,KAAKC,IAAiB,KAAbC,KAAKC,MAAgBP,GAC3CD,EAAAd,SAASiB,EAA2C,GAAvCE,KAAKC,IAAiB,KAAbC,KAAKC,MAAgBP,MAKhDxD,EAAUQ,UACFR,EAAAQ,QAAQiC,SAASkB,EAAoC,EAAhCC,KAAKC,IAAiB,KAAbC,KAAKC,OACnC/D,EAAAQ,QAAQiC,SAASiB,EAAoC,EAAhCE,KAAKI,IAAiB,KAAbF,KAAKC,OAC7C/D,EAAUQ,QAAQ2C,OAAO,EAAG,EAAG,IAGxB1B,EAAAwC,OAAOhD,EAAOI,QAKzB,MAAM6C,EAAe,KACflE,EAAUQ,SAAWP,EAAYO,UACnCR,EAAUQ,QAAQ2D,OAAS5E,OAAOgC,WAAahC,OAAOiC,YACtDxB,EAAUQ,QAAQ4D,yBAClBnE,EAAYO,QAAQqB,QAAQtC,OAAOgC,WAAYhC,OAAOiC,eAK1D,OAFOjC,OAAA8E,iBAAiB,SAAUH,GAE3B,KACE3E,OAAA+E,oBAAoB,SAAUJ,KAInCjB,EAAgBhC,IAEd,MAAAsD,EAAiB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEvCA,EAAAjB,QAAQ,CAACkB,EAAQhB,KAE1B,IAAAiB,EAGJ,OAAOD,GACL,IAAK,IACHC,EAAWC,IACX,MACF,IAAK,IACHD,EAAW,IAAIE,GAAoB,IAAK,GAAK,GAAI,IACjD,MACF,IAAK,IACHF,EAAW,IAAIG,GAAmB,IAAK,EAAG,GAC1C,MACF,IAAK,IACHH,EAAWI,IACX,MACF,IAAK,IACHJ,EAAW,IAAIK,GAAkB,GAAK,EAAG,IACzC,MACF,IAAK,IACHL,EAAWM,IACX,MACF,IAAK,IACHN,EAAWO,IACX,MACF,QACEP,EAAW,IAAIK,GAAkB,EAAG,EAAG,IAIrC,MAAAG,EAAOzB,EAAQe,EAAeW,OAAU,IACxCC,EAAW,IAAIC,GAAwB,CAC3C3G,OAAO,IAAI2C,IAAciE,OAAOJ,EAAM,IAAK,GAAK,IAChDK,UAAW,IACXC,SAAU,QACVC,UAAU,IAAIpE,IAAciE,OAAOJ,EAAM,IAAK,GAAK,MAG/C1B,EAAO,IAAIkC,GAAWhB,EAAUU,GACtC5B,EAAKZ,YAAa,EAClBY,EAAKmC,eAAgB,EAGrB,MACMC,EADU,MACCpB,EAAeW,OAAS,GAAe,EACxD3B,EAAKd,SAASC,IAAIiD,EAFF,IAEWnC,EAAiB,EAAG,GAG/CD,EAAKqC,MAAMlD,IAAI,IAAM,IAAM,KACtBa,EAAAE,SAASE,EAAIC,KAAKiC,GAClBtC,EAAAE,SAASP,EAAIU,KAAKiC,GAEvB5E,EAAMqB,IAAIiB,GACIzD,EAAAU,QAAQsF,KAAKvC,GAGtBwC,GAAAlH,GAAG0E,EAAKqC,MAAO,CAClBjC,EAAG,EACHD,EAAG,EACHR,EAAG,EACH8C,SAAU,IACVC,MAAe,IAARzC,EACP0C,KAAM,gBAGHH,GAAAlH,GAAG0E,EAAKE,SAAU,CACrBE,EAAG,EACHT,EAAG,EACH8C,SAAU,IACVC,MAAe,IAARzC,EACP0C,KAAM,kBAMNxB,EAAkB,KAChB,MAAAD,EAAW,IAAI0B,GACfC,EAAW,GAUV,OAPEA,EAAAN,SAAa,EAAA,KAAO,EAAG,GAAS,GAAA,EAAG,GACnCM,EAAAN,SAAa,EAAA,MAAS,EAAG,GAAS,IAAA,EAAI,GACtCM,EAAAN,UAAiB,IAAA,EAAG,GAAS,IAAA,EAAG,GAAG,EAAI,GACvCM,EAAAN,UAAiB,IAAA,EAAG,GAAO,EAAA,GAAS,IAAA,EAAI,GAEjDrB,EAAS4B,aAAa,WAAY,IAAIC,GAA6BF,EAAU,IAC7E3B,EAAS8B,uBACF9B,GAGHI,EAAkB,KAChB,MAAAJ,EAAW,IAAI0B,GACfC,EAAW,GAGjB,IAAA,IAASI,EAAI,EAAGA,GAAK,GAAIA,IAAK,CACtB,MAAAC,EAASD,EAAI,GAAM5C,KAAKiC,GACxBlC,EAAsB,IAAlBC,KAAKI,IAAIyC,GACb/C,EAAsB,EAAlBE,KAAKC,IAAI4C,GACnBL,EAASN,KAAKnC,EAAGD,EAAG,EAAGC,EAAGD,EAAG,GAC/B,CAQO,OALE0C,EAAAN,WAAe,EAAA,OAAS,EAAG,GAAS,IAAA,EAAG,IACvCM,EAAAN,WAAe,EAAA,OAAS,EAAG,IAAW,KAAA,EAAI,IAEnDrB,EAAS4B,aAAa,WAAY,IAAIC,GAA6BF,EAAU,IAC7E3B,EAAS8B,uBACF9B,GAGHM,EAAkB,KAChB,MAAAN,EAAW,IAAI0B,GACfC,EAAW,GAYV,OATEA,EAAAN,SAAa,EAAA,KAAO,EAAG,GAAS,GAAA,EAAG,GACnCM,EAAAN,SAAa,EAAA,MAAS,EAAG,GAAS,IAAA,EAAI,GACtCM,EAAAN,SAAW,IAAK,EAAG,GAAO,EAAA,EAAG,GAAG,IAAM,GACtCM,EAAAN,SAAW,IAAK,EAAG,GAAS,IAAA,GAAS,IAAA,EAAI,GACzCM,EAAAN,KAAK,IAAS,EAAA,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,GAClCM,EAAAN,KAAK,IAAS,EAAA,EAAG,EAAG,EAAG,EAAG,GAAG,EAAI,GAE1CrB,EAAS4B,aAAa,WAAY,IAAIC,GAA6BF,EAAU,IAC7E3B,EAAS8B,uBACF9B,GAGHO,EAAkB,KAChB,MAAAP,EAAW,IAAI0B,GACfC,EAAW,GAGjB,IAAA,IAASI,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC5B,MAAMC,EAASD,EAAI,GAAM5C,KAAKiC,GAAK,IAC7BlC,EAAsB,IAAlBC,KAAKI,IAAIyC,GACb/C,EAAsB,EAAlBE,KAAKC,IAAI4C,GACnBL,EAASN,KAAKnC,EAAGD,EAAG,EAAGC,EAAGD,EAAG,GAC/B,CAQO,OALE0C,EAAAN,WAAe,EAAA,EAAG,GAAO,EAAA,EAAG,GAAG,IAAM,GACrCM,EAAAN,WAAe,EAAA,EAAG,GAAS,IAAA,GAAS,KAAA,IAAM,GAEnDrB,EAAS4B,aAAa,WAAY,IAAIC,GAA6BF,EAAU,IAC7E3B,EAAS8B,uBACF9B,GAIHiC,EAAiB,KACf,MAAAC,EAAKC,GAAKC,WAChBhH,EAAMW,QAAUmG,EAGbA,EAAA9H,GAAG,GAAI,CACRmH,SAAU,EACVc,SAAU,WACR5H,EAAkC,IAArB6H,KAAe,WAC9B,KAOF,SAAApJ,KAAC,MAAI,CAAAqJ,UAAU,8CAEb9I,SAAA,CAAAS,EAAAA,IAAC,MAAI,CAAAsI,IAAKvH,EAAUsH,UAAU,uBAG9BrI,IAAC,MAAI,CAAAqI,UAAU,iFACb9I,SAAAR,EAAAC,KAACuJ,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1BsD,UAAU,cAEV9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,qDAAqD9I,SAEnE,iBAGAS,IAAC,MAAI,CAAAqI,UAAU,oDACb9I,SAAAR,EAAAiB,IAACuI,GAAOC,IAAP,CACCH,UAAU,gFACVpJ,MAAO,CAAEO,MAAO,GAAGc,MACnBqI,WAAY,CAAEtB,SAAU,UAG5BrI,KAAC,IAAE,CAAAqJ,UAAU,uCACV9I,SAAA,CAAA0F,KAAK2D,MAAMtI,GAAU,gBC9V5BuI,GAAgD,IACjDC,KACAC,GASCC,GAA0C,EAC9CC,WACAC,OAAO,GACPb,YAAY,OAEN,MAAAc,EAAgBN,GAAQI,GAE9B,OAAKE,EAKEC,EAAMC,cAAcF,EAAe,CAAED,OAAMb,gBAHxCrI,IAAAsJ,EAAA,CAAoBJ,OAAYb,eCftCkB,GAAoD,EAAGC,UAAU,cAC/D,MAAAC,KAAEA,GAASC,IAEXC,EAAkBC,IACtBH,EAAKE,eAAeC,GACPnI,aAAAC,QAAQ,WAAYkI,IAG7BC,EAAY,CAChB,CAAEC,KAAM,KAAkBC,MAAO,MAAOC,KAAM,OAC9C,CAAEF,KAAM,KAAkBC,MAAO,MAAOC,KAAM,WAC9C,CAAEF,KAAM,KAAkBC,MAAO,MAAOC,KAAM,QAGhD,MAAgB,YAAZR,IAEAxK,KAAC,MAAI,CAAAqJ,UAAU,sBACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,+BACb9I,SAAA,GAACS,IAAAiK,EAAA,CAAQ5B,UAAU,+CAClBrI,EAAAA,IAAA,OAAA,CAAKqI,UAAU,uDAAuD9I,SAAQ,sBAEhF,MAAI,CAAA8I,UAAU,0BACZ9I,SAAUsK,EAAAK,IAAKN,IACR,MAAAO,EAAWV,EAAKW,WAAaR,EAAKE,KAEtC,OAAA/K,EAAAiB,IAAC,SAAA,CAECqK,QAAS,IAAMV,EAAeC,EAAKE,MACnCzB,UAAW,2EACT8B,EACI,mCACA,0GAEN,aAAY,GAAGP,EAAKI,WACpB,eAAcG,EAAW,OAAS,QAEjC5K,SAAKqK,EAAAG,OAVDH,EAAKE,eAoBtB9K,KAAC,MAAI,CAAAqJ,UAAU,sBACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,0BACb9I,SAAA,GAACS,IAAAiK,EAAA,CAAQ5B,UAAU,2CAClBrI,EAAAA,IAAA,OAAA,CAAKqI,UAAU,uDAAuD9I,SAAK,mBAE7E,MAAI,CAAA8I,UAAU,uBACZ9I,SAAUsK,EAAAK,IAAKN,IACR,MAAAO,EAAWV,EAAKW,WAAaR,EAAKE,KAEtC,OAAA/K,EAAAiB,IAAC,SAAA,CAECqK,QAAS,IAAMV,EAAeC,EAAKE,MACnCzB,UAAW,2EACT8B,EACI,sCACA,mKAEN,aAAY,GAAGP,EAAKI,WACpB,eAAcG,EAAW,OAAS,QAEjC5K,SAAKqK,EAAAI,MAVDJ,EAAKE,cCxDXQ,GAAoB,CAC/BC,EACAC,EACAC,EACAC,IAEoB,OAAhBH,GAAwBE,EAAgBA,EACxB,OAAhBF,GAAwBG,EAAgBA,EACrCF,GAAW,GAMPG,GAAyB,CACpCJ,EACAK,EACAC,EACAC,IAEoB,OAAhBP,GAAwBM,GAAWA,EAAQtE,OAAS,EAAUsE,EAC9C,OAAhBN,GAAwBO,GAAWA,EAAQvE,OAAS,EAAUuE,EAC3DF,GAAW,GAmCPG,GAAwB,CACnCR,EACAS,IAEOV,GAAkBC,EAAaS,EAAMC,KAAMD,EAAME,OAAQF,EAAMG,QAS3DC,GAA+B,CAC1Cb,EACAS,IAEOV,GAAkBC,EAAaS,EAAMK,YAAaL,EAAMM,cAAeN,EAAMO,eASzEC,GAA2B,CACtCjB,EACAkB,IAEOnB,GAAkBC,EAAakB,EAASR,KAAMQ,EAASP,OAAQO,EAASN,QASpEO,GAAiC,CAC5CnB,EACAoB,IAEOrB,GAAkBC,EAAaoB,EAAcC,MAAOD,EAAcE,QAASF,EAAcG,SCnE5FC,GAAgD,EAAGC,OAAMnL,WAAUoL,YAAWC,oBAClF,MAAMzL,EAAWC,IAGXyJ,EAAWgC,EAAAA,QAAQ,IAEL,MAAdH,EAAKI,KACsB,MAAtBvL,EAASwL,UAAsC,SAAlBH,EAIpB,MAAdF,EAAKI,MACAvL,EAASwL,SAASC,WAAWN,EAAKI,MAI1C,CAACvL,EAASwL,SAAUL,EAAKI,KAAMF,IAE5B/C,EAAgB6C,EAAKO,KAMrBC,EAAU,4FAAkBrC,EAHZ,sEACE,gIAKlBsC,EAAmBC,EAAAA,YAAY,KAEjB,MAAdV,EAAKI,KACmB,MAAtBvL,EAASwL,SAEXM,GAAgB,OAAQ,IAGxBlM,EAAS,UAKXA,EAASuL,EAAKY,MAGhBX,GAAU,IACT,CAACD,EAAKI,KAAMJ,EAAKY,KAAM/L,EAASwL,SAAU5L,EAAUwL,IAGnD,MAAc,MAAdD,EAAKI,KAELrN,EAAAC,KAAC,SAAA,CACCqL,QAASoC,EACTpE,UAAWmE,EAEXjN,SAAA,GAACS,IAAAmJ,EAAA,CAAcD,KAAM,KACpB8C,EAAKf,QAOVlM,EAAAC,KAAC,SAAA,CACCqL,QAASoC,EACTpE,UAAWmE,EACX,eAAcrC,EAAW,YAAS,EAElC5K,SAAA,GAACS,IAAAmJ,EAAA,CAAcD,KAAM,KACpB8C,EAAKf,SAKN4B,GAAkC,EAAGC,WAAUC,iBAAgBC,mBACnE,MAAOC,EAAQhB,GAAazL,YAAS,GAC/BK,EAAWqM,KACXtO,gBAAEA,EAAAuO,OAAiBA,GAAWrO,MAC9BsO,EAAEA,EAAA3D,KAAGA,GAASC,IACda,EAAcd,EAAKW,UACjBiD,SAAUC,GAAiBC,KAE7BrB,EAAgBsB,KAMhBC,EAAsB,CAE1B,CAAExC,KAAMmC,EAAE,YAAaR,KAAM,IAAKR,KAAM,IAAKG,KAAMmB,GAGnD,CAAEzC,KAAMmC,EAAE,aAAcR,KAAM,SAAUR,KAAM,SAAUG,KAAMoB,GAC9D,CAAE1C,KAAMmC,EAAE,kBAAmBR,KAAM,cAAeR,KAAM,cAAeG,KAAMqB,GAC7E,CAAE3C,KAAMmC,EAAE,cAAeR,KAAM,UAAWR,KAAM,UAAWG,KAAMsB,GACjE,CAAE5C,KAAMmC,EAAE,gBAAiBR,KAAM,YAAaR,KAAM,YAAaG,KAAMuB,GACvE,CAAE7C,KAAMmC,EAAE,aAAcR,KAAM,SAAUR,KAAM,SAAUG,KAAMwB,GAC9D,CAAE9C,KAAMmC,EAAE,sBAAuBR,KAAM,mBAAoBR,KAAM,mBAAoBG,KAAMyB,GAC3F,CAAE/C,KAAMmC,EAAE,eAAgBR,KAAM,WAAYR,KAAM,WAAYG,KAAM0B,KAIhEC,WAAEA,EAAAC,eAAYA,EAAgBC,gBAAAA,GAAoBC,KAElDC,EAAc,CAClB,CAAE/B,KAAMgC,EAAU3B,KAAM,IAAK4B,MAAO,UACpC,CAAEjC,KAAMkC,EAAY7B,KAAM,IAAK4B,MAAO,YACtC,CAAEjC,KAAMmC,EAAY9B,KAAM,gCAAiC4B,MAAO,UAKpE,OAGIzP,EAAAC,KAAA2P,WAAA,CAAApP,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAM4B,GAAWgB,GAC1B5E,UAAU,4HACV,aAAY4E,EAAS,UAAY,UAEhC1N,SAAA0N,QAAU2B,EAAQ,CAAA1F,KAAM,OAASlJ,IAAC6O,EAAO,CAAA3F,KAAM,OAIjD+D,GACClO,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,GACpBjE,QAAS,CAAEiE,QAAS,GACpBoG,KAAM,CAAEpG,QAAS,GACjBL,UAAU,sDACVgC,QAAS,IAAM4B,GAAU,GACzB,aAAW,YAKflN,EAAAiB,IAAC,QAAA,CACCqI,UAAW,qKACT4E,EAAS,gBAAkB,uDAE7B,aAAW,WAEX1N,SAAAR,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,gBAEb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,cACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,kCACb9I,SAAA,GAAAS,IAAC,MAAI,CAAAqI,UAAU,oHACZ9I,SAAA+K,GAAkBC,EAAa,MAAA+C,OAAA,EAAAA,EAAcyB,UAAyB,MAAdzB,OAAc,EAAAA,EAAA0B,kBAAa1B,WAAc2B,cAAgB,OAEpHlQ,EAAAiB,IAAC,MAAA,CACCqI,UAAU,8IACV,aAAW,UAEX9I,WAACS,IAAAkP,EAAA,CAAO7G,UAAU,aAAaa,KAAM,YAGxClJ,IAAA,KAAA,CAAGqI,UAAU,4DACX9I,SAAkB+K,GAAAC,EAAa,MAAA+C,OAAA,EAAAA,EAAc6B,SAAwB,MAAd7B,OAAc,EAAAA,EAAA8B,iBAAY9B,WAAc+B,aAAe,UAEhHrP,IAAA,IAAA,CAAEqI,UAAU,wDACV9I,SAAkB+K,GAAAC,EAAa,MAAA+C,OAAA,EAAAA,EAAcgC,KAAoB,MAAdhC,OAAc,EAAAA,EAAAiC,aAAQjC,WAAckC,SAAW,gBAEpGxP,IAAA,IAAA,CAAEqI,UAAU,2CACV9I,SAAkB+K,GAAAC,EAAa,MAAA+C,OAAA,EAAAA,EAAcmC,SAAwB,MAAdnC,OAAc,EAAAA,EAAAoC,iBAAYpC,WAAcqC,aAAe,6BAKlH,MAAI,CAAAtH,UAAU,YACb9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,+CACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,yCACb9I,SAAA,CAAAS,MAAC,OAAK,CAAAqI,UAAU,2CAA4C9I,SAAA6N,EAAE,sBAC7DpN,IAAA,OAAA,CAAKqI,UAAU,gDACb9I,SAAkB+K,GAAAC,EAAa,MAAA+C,OAAA,EAAAA,EAAczM,SAAwB,MAAdyM,OAAc,EAAAA,EAAAsC,iBAAYtC,WAAcuC,aAAe,YAGnH7Q,KAAC,MAAI,CAAAqJ,UAAU,yCACb9I,SAAA,CAAAS,MAAC,OAAK,CAAAqI,UAAU,2CAA4C9I,SAAA6N,EAAE,uBAC7DpN,IAAA,OAAA,CAAKqI,UAAU,mEACb9I,SAAkB+K,GAAAC,EAAa,MAAA+C,OAAA,EAAAA,EAAcwC,UAAyB,MAAdxC,OAAc,EAAAA,EAAAyC,kBAAazC,WAAc0C,cAAgB,iBAGtHhR,KAAC,MAAI,CAAAqJ,UAAU,oCACb9I,SAAA,CAAAS,MAAC,OAAK,CAAAqI,UAAU,2CAA4C9I,SAAA6N,EAAE,+BAC7DpN,IAAA,OAAA,CAAKqI,UAAU,gDACb9I,SAAkB+K,GAAAC,EAAa,MAAA+C,OAAA,EAAAA,EAAc2C,kBAAiC,MAAd3C,OAAc,EAAAA,EAAA4C,0BAAqB5C,WAAc6C,sBAAwB,eAOjJhC,EAAe5H,OAAS,GACvBvG,EAAAA,IAAC,OACCT,SAACS,EAAAA,IAAA,MAAA,CAAIqI,UAAU,yCACZ9I,SAAA6O,EACC,CAAC,EAAG,EAAG,GAAGlE,IAAKrC,GACb7I,EAAAA,KAAC,MAAY,CAAAqJ,UAAU,6BACrB9I,SAAA,GAACS,IAAA,MAAA,CAAIqI,UAAU,wEACfrI,IAAC,MAAI,CAAAqI,UAAU,uEAFPR,IAMZsG,EAAejE,IAAKc,IAEZ,MAAAoF,EAAYrF,GAAsBR,EAAaS,GAC/CqF,EAAWD,EAAUE,SAAS,QAA0B,MAAhBtF,EAAMuF,MAGlD,SAAAvR,KAAC,MAAoB,CAAAqJ,UAAU,6BAC7B9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,qBAEb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,iCACb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCwQ,GAAG,KACHC,GAAG,KACHC,EAAE,KACFC,OAAO,eACPC,YAAY,IACZC,KAAK,OACLxI,UAAU,sCAGZtJ,EAAAiB,IAAC,SAAA,CACCwQ,GAAG,KACHC,GAAG,KACHC,EAAE,KACFC,OAAQ3F,EAAMlL,OAAS,UACvB8Q,YAAY,IACZC,KAAK,OACLC,gBAAqB9F,EAAMuF,MAAQ,IAAO,IAAzB,OACjBlI,UAAU,wCACV0I,cAAc,eAIlB/Q,IAAC,MAAI,CAAAqI,UAAU,oDACb9I,SAAAR,EAAAiB,IAACgJ,GAAA,CACCC,SAAU+B,EAAMuB,KAChBrD,KAAM,GACNb,UAAU,8CAIfrI,EAAAA,IAAA,OAAA,CAAKqI,UAAU,wEACb9I,SACH6Q,IACApQ,EAAAA,IAAC,QAAKqI,UAAU,yDACb9I,WAAW,MAAQ,GAAGyL,EAAMuF,aAvCvBvF,EAAMgG,kBAkD3B,MACC,CAAAzR,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,2DAA2D9I,SAEzE,YACAS,IAAC,MAAI,CAAAqI,UAAU,YACZ9I,SAAA6O,EAEEpO,EAAAA,IAAA,MAAA,CAAIqI,UAAU,YACZ9I,UAAC,EAAG,EAAG,EAAG,GAAG2K,IAAKrC,UAChB,MACC,CAAAtI,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,4BACb9I,SAAA,GAACS,IAAA,MAAA,CAAIqI,UAAU,kEACfrI,IAAC,MAAI,CAAAqI,UAAU,oEAEjBrI,IAAC,MAAI,CAAAqI,UAAU,yEALPR,MASZqG,EAAW3H,OAAS,EAEtB2H,EAAWhE,IAAKc,UACb,MACC,CAAAzL,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,4BACb9I,SAAA,CAAAS,MAAC,QAAKqI,UAAU,uDACb9I,SAAsBwL,GAAAR,EAAaS,OAEtChM,KAAC,OAAK,CAAAqJ,UAAU,yDACb9I,SAAA,CAAMyL,EAAAuF,MAAM,YAGjBvQ,IAAC,MAAI,CAAAqI,UAAU,wDACb9I,SAAAR,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAEjJ,MAAO,GAClBiF,QAAS,CAAEjF,MAAO,GAAGwL,EAAMuF,UAC3B5H,WAAY,CAAEtB,SAAU,EAAGC,MAAO,IAClCe,UAAU,uCAdN2C,EAAMgG,QAqBlBhR,IAAC,OAAIqI,UAAU,mBACb9I,eAAC,IAAE,CAAA8I,UAAU,2CAA2C9I,SAAA,gCAS/D,MACC,CAAAA,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,2DAA2D9I,SAEzE,SACAS,IAAC,MAAGqI,UAAU,YACX9I,WAAS2K,IAAK8B,GACbhM,EAAAA,IAAC,KACC,CAAAT,SAAAR,EAAAiB,IAAC+L,GAAA,CACCC,OACAnL,WACAoL,YACAC,mBALKF,EAAKf,YAanBrM,GACCG,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1B4D,WAAY,CAAEtB,SAAU,IAExB9H,SAAAR,EAAAC,KAACiS,EAAA,CACC/Q,GAAG,SACHmI,UAAU,oKACVgC,QAAS,IAAM4B,GAAU,GAEzB1M,SAAA,GAACS,IAAAkR,EAAA,CAAahI,KAAM,KAAM,wBAM/B,MACC,CAAA3J,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,2DAA2D9I,SAEzE,SACCS,IAAA,MAAA,CAAIqI,UAAU,iBACZ9I,SAAY+O,EAAApE,IAAI,EAAGqC,KAAM4E,EAAMvE,OAAM4B,WACpCzP,EAAAiB,IAAC,IAAA,CAEC4M,OACAvE,UAAU,wMACV,aAAYmG,EAEZjP,SAAAS,EAAAA,IAACmR,EAAK,CAAAjI,KAAM,MALPsF,SAYbxO,EAAAA,IAAC,OAAIqI,UAAU,OACb9I,eAACgK,GAAiB,CAAAC,QAAQ,gBAI5BxK,KAAC,MAAI,CAAAqJ,UAAU,YACb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAAS0C,EACT1E,UAAU,iKACV,aAAYyE,EAAW,aAAe,YAErCvN,WAEGP,EAAAA,KAAA2P,EAAAA,SAAA,CAAApP,SAAA,GAACS,IAAAoR,EAAA,CAAMlI,KAAM,OACblJ,IAAC,QAAKT,SAAM,cAIZP,EAAAA,KAAA2P,EAAAA,SAAA,CAAApP,SAAA,GAACS,IAAAqR,EAAA,CAAOnI,KAAM,OACdlJ,IAAC,QAAKT,SAAK,eAKhBX,EACCG,EAAAC,KAAC,SAAA,CACCqL,QAAS,SAEP4B,GAAU,IAEZ5D,UAAU,2JACV,aAAW,WAEX9I,SAAA,GAACS,IAAAsR,EAAA,CAAYpI,KAAM,OACnBlJ,IAAC,QAAKT,SAAI,YAGZR,EAAAC,KAAC,SAAA,CACCqL,QAAS,SAEP4B,GAAU,IAEZ5D,UAAU,+JACV,aAAW,UAEX9I,SAAA,GAACS,IAAAsR,EAAA,CAAYpI,KAAM,OACnBlJ,IAAC,QAAKT,SAAO,2BC3bvBgS,GAAwC,EAAGtE,SAAQuE,cACvD,MAAOC,EAAUC,GAAelR,WAAS,KAClCmR,EAAUC,GAAepR,WAAS,KAClCqR,EAAOC,GAAYtR,WAAS,KAC5B3B,EAAWkT,GAAgBvR,YAAS,IACrCwR,MAAEA,GAAUlT,KACZ2B,EAAWC,IAsBXuR,EAAc,KAClBP,EAAY,IACZE,EAAY,IACZE,EAAS,SAKT9R,OAAAA,EAAAA,IAACkS,GACE,CAAA3S,SAAA0N,GAGGjO,OAAA2P,EAAAA,SAAA,CAAApP,SAAA,CAAAR,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,GACpBjE,QAAS,CAAEiE,QAAS,GACpBoG,KAAM,CAAEpG,QAAS,GACjB2B,QAAS4H,EACT5J,UAAU,sDAIZrI,IAAC,MAAI,CAAAqI,UAAU,0DACb9I,SAAAR,EAAAC,KAACuJ,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAGzB,MAAO,GAAKlC,EAAG,IACtCN,QAAS,CAAEiE,QAAS,EAAGzB,MAAO,EAAGlC,EAAG,GACpC+J,KAAM,CAAEpG,QAAS,EAAGzB,MAAO,GAAKlC,EAAG,IACnCuK,KAAK,SACL,aAAW,OACX,kBAAgB,cAChBjH,UAAU,gFAGV9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAAS4H,EACT5J,UAAU,mGACV,aAAW,KAEX9I,SAAAS,EAAAA,IAAC4O,EAAQ,CAAAvG,UAAU,yCAIrBrJ,KAAC,MAAI,CAAAqJ,UAAU,mBACb9I,SAAA,CAAAS,EAAAA,IAAC,OAAIqI,UAAU,kHACb9I,eAACoO,EAAO,CAAAtF,UAAU,gCAEnB,KAAG,CAAA8J,GAAG,cAAc9J,UAAU,wDAAwD9I,SAEvF,YACCS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,mCAAmC9I,SAEhD,2BAIDP,EAAAA,KAAA,OAAA,CAAKoT,SA1EGC,MAAOC,IAC1BA,EAAEC,iBACFT,EAAS,IACTC,GAAa,GAET,UACIC,EAAMP,EAAUE,OAEtBlR,EAAS,UACTiR,EAAY,IACZE,EAAY,UACLY,GAED,MAAAC,EAAeD,EAAIE,SAAW,2BACpCZ,EAASW,EAAY,CACrB,QACAV,GAAa,EACf,GAyDwC1J,UAAU,YACrC9I,SAAA,CACCsS,GAAA9S,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,GAAO,IAC9BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1BsD,UAAU,sIACViH,KAAK,QAEJ/P,SAAAsS,WAIJ,MACC,CAAAtS,SAAA,CAAAS,MAAC,QAAM,CAAA2S,QAAQ,WAAWtK,UAAU,kEAAkE9I,SAEtG,UACAP,KAAC,MAAI,CAAAqJ,UAAU,WACb9I,SAAA,GAACS,IAAA2N,EAAA,CAAOtF,UAAU,2DAClBtJ,EAAAiB,IAAC,QAAA,CACCsD,KAAK,OACL6O,GAAG,WACHS,MAAOnB,EACPoB,SAAWP,GAAMZ,EAAYY,EAAEQ,OAAOF,OACtCvK,UAAU,kMACV0K,YAAY,aACZC,UAAQ,EACRC,aAAa,0BAKlB,MACC,CAAA1T,SAAA,CAAAS,MAAC,QAAM,CAAA2S,QAAQ,WAAWtK,UAAU,kEAAkE9I,SAEtG,WACAP,KAAC,MAAI,CAAAqJ,UAAU,WACb9I,SAAA,GAACS,IAAAkT,EAAA,CAAO7K,UAAU,2DAClBtJ,EAAAiB,IAAC,QAAA,CACCsD,KAAK,WACL6O,GAAG,WACHS,MAAOjB,EACPkB,SAAWP,GAAMV,EAAYU,EAAEQ,OAAOF,OACtCvK,UAAU,kMACV0K,YAAY,cACZC,UAAQ,EACRC,aAAa,2BAKnBlU,EAAAiB,IAACuI,GAAO4K,OAAP,CACC7P,KAAK,SACL8P,SAAUvU,EACVwJ,UAAU,sPACVgL,WAAY,CAAEpM,MAAO,MACrBqM,SAAU,CAAErM,MAAO,KAElB1H,WAEGP,EAAAA,KAAA2P,EAAAA,SAAA,CAAApP,SAAA,GAACS,IAAAuT,EAAA,CAAclL,UAAU,iBAAiB,cAI5C,sBC9IdmL,GAAsC,EAC1C1G,WACAC,iBACA0G,iBACAC,oBACAC,mBAIM,MAAAC,EAAuB,IAC3B5T,EAAAA,IAAC,MAAI,CAAAqI,UAAU,wCACb9I,SAACS,EAAAA,IAAA,MAAA,CAAIqI,UAAU,mEAKjB,SAAArJ,KAAC,MAAI,CAAAqJ,UAAU,gFAEb9I,SAAA,CAAAR,EAAAiB,IAAC6M,GAAA,CACCC,WACAC,iBACAC,aAAc,IAAM0G,GAAkB,WAIvC,OAAK,CAAArL,UAAU,uCACd9I,SAAAR,EAAAiB,IAAC6T,YAASC,SAAUH,IAAgB3T,IAAAI,GAAA,CAAA,GAAgBJ,EAAAA,IAAA4T,EAAA,IAClDrU,SAACS,EAAAA,IAAA+T,EAAA,QAKLhV,EAAAiB,IAACuR,GAAA,CACCtE,OAAQwG,EACRjC,QAAS,IAAMkC,GAAkB,SCzCnCM,GAAiB,KACrB,MAAM3G,SAAEA,EAAA4G,QAAUA,GAAY1G,MACxBH,EAAEA,EAAA3D,KAAGA,GAASC,IACda,EAAcd,EAAKW,UAGnB8J,gBAAEA,GAAoBC,KAGtBC,EAAOC,GAAaH,EAAiB,CAAC,EAAG,GAAI,CAAC,EAAG,MACjDI,EAAUD,GAAaH,EAAiB,CAAC,EAAG,GAAI,CAAC,GAAG,MAYpDK,EAAe,CACnBC,OAAQ,CAAE9L,QAAS,EAAG3D,EAAG,IACzB0P,QAAS,CACP/L,QAAS,EACT3D,EAAG,EACH4D,WAAY,CACVtB,SAAU,GACVE,KAAM,aAMZ,GAAI0M,EAEA,SAAAjU,IAAC,UAAQ,CAAAmS,GAAG,OAAO9J,UAAU,6EAC3B9I,SAACS,EAAAA,IAAA,MAAA,CAAIqI,UAAU,0FAKrB,MAAMqM,EAAQ,CACZ,CACEC,cAAQtH,WAAUuH,cAAe,KACjCpG,MAAOlE,GAAkBC,EAAa,MAAA8C,OAAA,EAAAA,EAAUwH,WAAsB,MAAVxH,OAAU,EAAAA,EAAAyH,aAAwB,MAAVzH,OAAU,EAAAA,EAAA0H,eAAiB,OAC/GxI,KAAMyI,GAER,CACEL,cAAQtH,WAAU4H,cAAe,KACjCzG,MAAOlE,GAAkBC,EAAa,MAAA8C,OAAA,EAAAA,EAAU6H,WAAsB,MAAV7H,OAAU,EAAAA,EAAA8H,aAAwB,MAAV9H,OAAU,EAAAA,EAAA+H,eAAiB,UAC/G7I,KAAM2C,GAER,CACEyF,cAAQtH,WAAUgI,cAAe,MACjC7G,MAAOlE,GAAkBC,EAAa,MAAA8C,OAAA,EAAAA,EAAUiI,WAAsB,MAAVjI,OAAU,EAAAA,EAAAkI,aAAwB,MAAVlI,OAAU,EAAAA,EAAAmI,eAAiB,QAC/GjJ,KAAMkJ,IAKPzW,OAAAA,EAAAA,KAAA,UAAA,CAAQmT,GAAG,OAAO9J,UAAU,sGAE3B9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,mCAEb9I,SAAA,CAAAR,EAAAiB,IAACuI,GAAOC,IAAP,CACCvJ,MAAO,CAAE8F,EAAGqP,GACZ/L,UAAU,2GAGZtJ,EAAAiB,IAACuI,GAAOC,IAAP,CACCvJ,MAAO,CAAE8F,EAAGuP,GACZjM,UAAU,oHAIdrI,IAAC,MAAI,CAAAqI,UAAU,uCACb9I,SAAAR,EAAAC,KAACuJ,GAAOC,IAAP,CACCkN,SAnEkB,CACxBlB,OAAQ,CAAE9L,QAAS,GACnB+L,QAAS,CACP/L,QAAS,EACTC,WAAY,CACVgN,gBAAiB,MA+DflN,QAAQ,SACRhE,QAAQ,UACR4D,UAAU,oBAEV9I,SAAA,CAAAR,EAAAiB,IAACuI,GAAOC,IAAP,CACCkN,SAAUnB,EACVlM,UAAU,OAEV9I,SAACR,EAAAiB,IAAA,OAAA,CAAKqI,UAAU,qIACb9I,SAAkB+K,GAAAC,EAAa,MAAA8C,OAAA,EAAAA,EAAUuI,QAAmB,MAAVvI,OAAU,EAAAA,EAAAwI,gBAAWxI,WAAUyI,YAAc,iBAIpG/W,EAAAiB,IAACuI,GAAOwN,GAAP,CACCL,SAAUnB,EACVlM,UAAU,sFAET9I,SAAA+K,GAAkBC,EAAa,MAAA8C,OAAA,EAAAA,EAAU2I,UAAqB,MAAV3I,OAAU,EAAAA,EAAA4I,YAAuB,MAAV5I,OAAU,EAAAA,EAAA6I,cAAgB,cAGxGnX,EAAAiB,IAACuI,GAAO4N,EAAP,CACCT,SAAUnB,EACVlM,UAAU,2GAET9I,SAAA+K,GAAkBC,EAAa,MAAA8C,OAAA,EAAAA,EAAU+I,aAAwB,MAAV/I,OAAU,EAAAA,EAAAgJ,eAA0B,MAAVhJ,OAAU,EAAAA,EAAAiJ,iBAAmB,+CAGjHvX,EAAAC,KAACuJ,GAAOC,IAAP,CACCkN,SAAUnB,EACVlM,UAAU,wCAEV9I,SAAA,CAAAR,EAAAC,KAACuJ,GAAOgO,EAAP,CACC3J,KAAK,YACL,aAAYQ,EAAE,qBACdsI,SAAUnB,EACVlM,UAAU,6EAET9I,SAAA,CAAA6N,EAAE,uBACHpN,IAACwW,EAAa,CAAAnO,UAAU,sDAE1BtJ,EAAAC,KAACuJ,GAAOgO,EAAP,CACC3J,YAAMS,WAAUoJ,eAAgB,cAChCC,YAAoB,MAAVrJ,OAAU,EAAAA,EAAAoJ,cACpB3D,OAAO,SACP6D,IAAI,sBACJ,aAAYvJ,EAAE,kBACdsI,SAAUnB,EACVlM,UAAU,yEAEV9I,SAAA,CAAAR,EAAAiB,IAAC4W,EAAW,IACXxJ,EAAE,wBAKPrO,EAAAiB,IAACuI,GAAOC,IAAP,CACCkN,SAAUnB,EACVlM,UAAU,wCAET9I,SAAAmV,EAAMxK,IAAK2M,GACV9X,EAAAiB,IAACuI,GAAOC,IAAP,CAECH,UAAU,+IACVgL,WAAY,CAAEtO,GAAM,GACpBuK,KAAK,SACL,aAAY,GAAGuH,EAAKrI,aAAaqI,EAAKlC,SAEtCpV,SAAAR,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,0BACb9I,SAAA,GAACS,IAAA,MAAA,CAAIqI,UAAU,kDACb9I,SAACS,EAAAA,IAAA6W,EAAKtK,KAAL,CAAUlE,UAAU,uCAAuCa,KAAM,cAEnE,MACC,CAAA3J,SAAA,CAAAS,EAAAA,IAAC,MAAI,CAAAqI,UAAU,0DACZ9I,SAAAsX,EAAKlC,SAEP3U,EAAAA,IAAA,MAAA,CAAIqI,UAAU,2CACZ9I,WAAKiP,eAfPqI,EAAKrI,mBC3IbsI,GAAcC,IACrB,IAEK,OADM,IAAI5R,KAAK4R,GACVC,mBAAmB,eACxBnF,GAEA,MAAA,UACT,GAQWoF,GAAsBF,IAC7B,IACI,MAAAG,EAAO,IAAI/R,KAAK4R,GAEhBI,OADUhS,MACKiS,UAAYF,EAAKE,UAGtC,GAAID,EAAW,EAAU,MAAA,OAGzB,MAAME,EAAgBpS,KAAKqS,MAAMH,EAAA,KACjC,GAAIE,EAAgB,EAAU,MAAA,OAC9B,GAAIA,EAAgB,GAAI,MAAO,GAAGA,OAGlC,MAAME,EAActS,KAAKqS,MAAMH,EAAY,MAC3C,GAAII,EAAc,GAAI,MAAO,GAAGA,QAGhC,MAAMC,EAAavS,KAAKqS,MAAMH,SAC9B,GAAmB,IAAfK,EAAyB,MAAA,KAC7B,GAAIA,EAAa,EAAG,MAAO,GAAGA,OAG9B,MAAMC,EAAcxS,KAAKqS,MAAME,EAAa,GAC5C,GAAIC,EAAc,EAAG,MAAO,GAAGA,OAG/B,MAAMC,EAAezS,KAAKqS,MAAME,EAAa,IAC7C,GAAIE,EAAe,GAAI,MAAO,GAAGA,QAIjC,MAAO,GADazS,KAAKqS,MAAME,EAAa,gBAErC3F,GAEA,MAAA,UACT,GC7CI8F,GAAgD,EACpDC,MACAC,MACAxP,YAAY,mFACZyP,mBAEA,MAAOC,EAAYC,GAAiBxX,WAAyC,YACtEyX,EAAUC,GAAe1X,WAASoX,GAYrC,OAACK,GAA2B,UAAfF,IASf/Y,KAAC,MAAI,CAAAqJ,UAAU,2BAEZ9I,SAAA,CAAe,YAAAwY,SACb,MAAI,CAAA1P,UAAU,+FACb9I,SAACS,EAAAA,IAAAmY,EAAA,CAAQ9P,UAAU,6BAKvBtJ,EAAAiB,IAAC,MAAA,CACC4X,IAAKK,EACLJ,MACAxP,UAAW,GAAGA,KAA4B,YAAf0P,EAA2B,YAAc,gDACpE9D,QAAQ,OACRmE,SAAS,QACT5Y,MAAM,MACNH,OAAO,MACPgZ,OApCkB,KACtBL,EAAc,WAoCVM,QAjCmB,KACvBN,EAAc,SACdE,OAAY,WAMVlY,IAAC,OAAIqI,UAAU,iGACZ9I,YAAiBR,EAAAiB,IAAA+N,EAAA,CAAO1F,UAAU,2BClCrCkQ,GAA8B,KAClC,MAAOC,EAAWC,GAAgBjY,YAAS,GAG3CG,EAAAA,UAAU,KACR,MAAM+X,EAAmB,KAEnB9X,OAAO+X,QAAU,IACnBF,GAAa,GAEbA,GAAa,IAMjB,OAFO7X,OAAA8E,iBAAiB,SAAUgT,GAE3B,KACE9X,OAAA+E,oBAAoB,SAAU+S,KAEtC,IAWD,SAAA1Y,IAACkS,IACE3S,SACCiZ,GAAAzZ,EAAAiB,IAACuI,GAAO4K,OAAP,CACC1K,QAAS,CAAEC,QAAS,EAAGzB,MAAO,IAC9BxC,QAAS,CAAEiE,QAAS,EAAGzB,MAAO,GAC9B6H,KAAM,CAAEpG,QAAS,EAAGzB,MAAO,IAC3B0B,WAAY,CAAEtB,SAAU,IACxBgD,QAfY,KAClBzJ,OAAOgY,SAAS,CACdC,IAAK,EACLC,SAAU,YAaNzQ,UAAU,0JACV,aAAW,WACXuD,MAAM,OAENrM,SAAAS,EAAAA,IAAC+Y,EAAU,CAAA1Q,UAAU,uFC2FlB2Q,GAA0B,CAACC,EAAcC,EAAyB,OACvE,MAAAC,EA3B4B,EAACF,EAAcC,EAAyB,OAC1E,IAAKD,EAAa,OAAA,EAElB,MAAMG,EAAQH,EAAKI,OAAOC,MAAM,OAAO/S,OACjC4S,EAAUlU,KAAKsU,KAAKH,EAAQF,GAE3B,OAAAjU,KAAKuU,IAAI,EAAGL,IAqBHM,CAAqBR,EAAMC,GAC3C,MAd+B,CAACC,GAChB,IAAZA,EAAsB,WACV,IAAZA,EAAsB,QACnB,GAAGA,QAWHO,CAAkBP,IA+DdQ,GAAcV,IACzB,IAAKA,EAAa,MAAA,GAKlB,OAFgC,iBAATA,EAAoBA,EAAOW,OAAOX,IAGtD9Y,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,UAkDN0Z,GAAsBC,kCACjC,IAAKA,EAAa,MAAA,GAEd,IAAAC,EACA,GAAgB,iBAATD,EACL,IACWC,EAAAC,KAAKC,MAAMH,EAAI,CACtB,MAEC,MAAA,EACT,MAEaC,EAAAD,EAGX,IAACC,EAAWG,SAAWC,MAAMC,QAAQL,EAAWG,QAC3C,MAAA,GAGT,IAAIG,EAAO,GACA,IAAA,MAAAC,KAASP,EAAWG,OAC7B,OAAQI,EAAMhX,MACZ,IAAK,YAMH+W,GAAQ,qBALc,OAAAE,EAAAD,EAAMR,WAAN,EAAAS,EAAYtB,OAAQ,IAEN9Y,QAAQ,eAAgB,MAE5BmZ,MAAM,MAAMpP,IAAYsQ,GAAAb,GAAWa,IAAOC,KAAK,cAE/E,MACF,IAAK,SACG,MAAAlK,GAAQ,OAAAmK,EAAAJ,EAAMR,WAAN,EAAAY,EAAYnK,QAAS,EAC/B,IAAAoK,GAAa,OAAAC,EAAAN,EAAMR,WAAN,EAAAc,EAAY3B,OAAQ,GAExB0B,EAAAA,EAAWxa,QAAQ,eAAgB,MAGhDka,GAAQ,KAAK9J,+DADWoK,EAAWrB,MAAM,MAAMpP,IAAYsQ,GAAAb,GAAWa,IAAOC,KAAK,aACmBlK,KACrG,MACF,IAAK,OACH,MAAMsK,GAAQ,OAAAC,EAAAR,EAAMR,WAAN,EAAAgB,EAAYD,QAAS,GAEnCR,GAAQ,cADgC,aAAtB,OAAAU,EAAMT,EAAAR,WAAM,EAAAiB,EAAA9b,OAAsB,eAAiB,0BAErE,IAAA,MAAW+M,KAAQ6O,EAAO,CAEpB,IAAAG,EAESA,EADO,iBAAThP,EACEA,EACc,iBAATA,GAA8B,OAATA,EAEhCA,EAAaiN,KACJjN,EAAaiN,KACfjN,EAAaiP,QACXjP,EAAaiP,QAChBd,MAAMC,QAAQpO,GACZA,EAAKyO,KAAK,MAEVT,KAAKkB,UAAUlP,GAGjB4N,OAAO5N,GAGTgP,EAAAA,EAAS7a,QAAQ,eAAgB,MAEjC6a,EAAAA,EAAS1B,MAAM,MAAMpP,IAAYsQ,GAAAb,GAAWa,IAAOC,KAAK,QACnEJ,GAAQ,oBAAoBW,QAC9B,CACQX,GAAA,QACR,MACF,IAAK,OACHA,GAAQ,iHAAiHV,IAAW,OAAAwB,EAAAb,EAAMR,WAAM,EAAAqB,EAAArR,OAAQ,mBACxJ,MACF,IAAK,SACH,MAAMsR,EAAczB,IAAW,OAAA0B,EAAAf,EAAMR,WAAN,EAAAuB,EAAYzP,QAAS,SAChD,IAAA0P,GAAgB,OAAAC,EAAAjB,EAAMR,WAAN,EAAAyB,EAAYN,UAAW,GAG3C,GAAId,MAAMC,QAAQkB,IAAkBA,EAAc/U,OAAS,EAAG,CAG5D+U,EAAgBzB,GADS,CAAEK,OAAQoB,GACgB,KACjB,iBAAlBA,GAEAA,EAAAA,EAAcnb,QAAQ,eAAgB,MACtCmb,EAAAA,EAAchC,MAAM,MAAMpP,IAAYsQ,GAAAb,GAAWa,IAAOC,KAAK,SAG7Ea,EAFkC,iBAAlBA,GAAgD,OAAlBA,GAA0BA,EAAcpB,OAEtEL,GAAmByB,GAEnB,GAOlBjB,GAAQ,YAFwC,KAA5B,OAAAmB,EAAAlB,EAAMR,WAAN,EAAA0B,EAAYC,aACD,GAAK,4TAGQL,sJAGtCE,0CAGN,MACF,IAAK,QACG,MAAAI,GAAM,OAAAC,EAAA,OAAMC,EAAAtB,EAAAR,WAAM,EAAA8B,EAAAC,eAAMH,OAAO,OAAAI,EAAAxB,EAAMR,WAAN,EAAAgC,EAAYJ,MAAO,GAClDK,GAAU,OAAAC,EAAA1B,EAAMR,WAAN,EAAAkC,EAAYD,UAAW,GAC/B1B,GAAA,2CACMqB,WAAa/B,GAAWoC,mDAClCA,EAAU,4DAA4DpC,GAAWoC,SAAiB,qBASrG,OAAA1B,GAQI4B,GAAqBnC,IAChC,IAAKA,EAAa,MAAA,GAEd,IAAAoC,EACA,GAAgB,iBAATpC,EACL,IACYoC,EAAAlC,KAAKC,MAAMH,EAAI,CACvB,MACC,MAAA,EACT,MAEcoC,EAAApC,EAGZ,WAACoC,WAAaC,QAAShC,MAAMC,QAAQ8B,EAAYC,KAAK5c,UACjD,MAAA,GAGT,IAAI8a,EAAO,GAEL,MAAA+B,EAAcC,kBAClB,OAAQA,EAAK/Y,MACX,IAAK,YAgBH,MAAO,oBAfM,OAAAiX,EAAK8B,EAAA9c,eAAU,EAAAgb,EAAArQ,IAAKoS,UAC3B,GAAe,SAAfA,EAAMhZ,KAAiB,CACrB,IAAAiZ,EAAcD,EAAMrD,MAAQ,GAIzB,OAFOsD,EAAAA,EAAYpc,QAAQ,eAAgB,MAE3Coc,EAAYjD,MAAM,MAAMpP,IAAYsQ,GAAAb,GAAWa,IAAOC,KAAK,OACpE,CACI,GAAe,SAAf6B,EAAMhZ,KAAiB,CACnB,MAAAsJ,EAAO0P,EAAMZ,KAAO,GACpBT,GAAU,OAAAV,EAAA+B,EAAM/c,eAANgb,EAAAA,EAAgBrQ,IAAKsS,GAAWA,EAAEvD,MAAMwB,KAAK,MAAO,GACpE,MAAO,YAAYd,GAAW/M,uFAA0F+M,GAAWsB,QACrI,CACO,MAAA,KACNR,KAAK,MAAO,SAGjB,IAAK,UACG,MAAAlK,EAAQ8L,EAAKI,KAAO,KACpBC,GAAc,OAAAhC,EAAK2B,EAAA9c,eAAU,EAAAmb,EAAAxQ,IAAKoS,IAClC,GAAe,SAAfA,EAAMhZ,KAAiB,CACrB,IAAAiZ,EAAcD,EAAMrD,MAAQ,GAEzB,OADOsD,EAAAA,EAAYpc,QAAQ,eAAgB,MAC3Coc,EAAYjD,MAAM,MAAMpP,IAAYsQ,GAAAb,GAAWa,IAAOC,KAAK,OACpE,CACO,MAAA,KACNA,KAAK,MAAO,GACR,MAAA,KAAKlK,EAAMoM,MAAM,gEAAgED,OAAiBnM,EAAMoM,MAAM,MAEvH,IAAK,OACH,MAAMC,EAA6B,WAAlBP,EAAKO,SAAwB,KAAO,KAC/C/B,EAAQwB,EAAK9c,UAAY,GAC/B,IAAIsd,EAAW,IAAID,YAAgC,OAAbA,EAAoB,eAAiB,0BAC3E,IAAA,MAAW5Q,KAAQ6O,EAAO,CASxBgC,GAAY,qBARK,OAAAjC,EAAK5O,EAAAzM,eAAU,EAAAqb,EAAA1Q,IAAKoS,IAC/B,GAAe,SAAfA,EAAMhZ,KAAiB,CACrB,IAAAiZ,EAAcD,EAAMrD,MAAQ,GAEzB,OADOsD,EAAAA,EAAYpc,QAAQ,eAAgB,MAC3Coc,EAAYjD,MAAM,MAAMpP,IAAYsQ,GAAAb,GAAWa,IAAOC,KAAK,OACpE,CACO,MAAA,KACNA,KAAK,MAAO,SAEjB,CAEO,OADPoC,GAAY,KAAKD,KACVC,EAET,IAAK,QASH,MAAO,0HARW,OAAA/B,EAAKuB,EAAA9c,eAAU,EAAAub,EAAA5Q,IAAKoS,IAChC,GAAe,SAAfA,EAAMhZ,KAAiB,CACrB,IAAAiZ,EAAcD,EAAMrD,MAAQ,GAEzB,OADOsD,EAAAA,EAAYpc,QAAQ,eAAgB,MAC3Coc,EAAYjD,MAAM,MAAMpP,IAAYsQ,GAAAb,GAAWa,IAAOC,KAAK,OACpE,CACO,MAAA,KACNA,KAAK,MAAO,kBAGjB,IAAK,OACG,MAAAqC,EAAWT,EAAKpD,MAAQ,GACvB,MAAA,iHAAiHU,GAAWmD,kBAErI,IAAK,cACG,MAAAlR,EAAQyQ,EAAKzQ,OAAS,QACtBqB,EAASoP,EAAKU,OAAQ,EACtB9B,GAAU,OAAAF,EAAKsB,EAAA9c,mBAAU2K,IAAIkS,GAAY3B,KAAK,MAAO,GAE3D,MAAO,WADUxN,EAAS,QAAU,+PAG9B0M,GAAW/N,gJAGXqP,0CAIR,IAAK,QACG,MAAArD,EAAMyE,EAAKzE,KAAO,GAClBC,EAAMwE,EAAKW,SAAW,GACrB,MAAA,2CACOrD,GAAW/B,YAAc+B,GAAW9B,uDAGpD,QACS,MAAA,KAIF,IAAA,MAAAyE,KAASJ,EAAYC,KAAK5c,SACnC8a,GAAQ+B,EAAWE,GAGd,OAAAjC,GAMI4C,GAAiBnD,UAC5B,aAAOA,WAAMqC,OAAQhC,MAAMC,QAAQ,OAAAG,EAAM,MAAAT,OAAA,EAAAA,EAAAqC,eAAM5c,WCrf3C2d,GAAgD,EACpDtK,QACAC,WACAE,cAAc,YACdoK,OAAO,EACP9U,YAAY,OAEN,MAAA+U,EAAcpc,SAA4B,OACzCqc,EAAgBC,GAAqB9c,WAAS,GAG/C+c,EAAuB,KACvBH,EAAYvb,SACIyb,EAAAF,EAAYvb,QAAQ2b,iBAKpCC,EAAiB,WACf,MAAAC,EAAQ9K,EAAM0G,MAAM,MAC1B,IAAIqE,EAAmB,EACnBC,EAAY,EAEhB,IAAA,IAAS/V,EAAI,EAAGA,EAAI6V,EAAMnX,OAAQsB,IAAK,CACrC,MAAMgW,IAAyB,OAAAtD,EAAMmD,EAAA7V,SAAN,EAAA0S,EAAUhU,SAAU,GAAK,EAGpD,GAAA8W,GAAkBO,IAAcP,EAAiBO,EAAYC,GAAyBhW,IAAM6V,EAAMnX,OAAS,GAAI,CAC9FoX,EAAA9V,EACnB,KACF,CAEa+V,GAAAC,CACf,CAEO,MAAA,CACLC,UAAWH,EACXnD,KAAMkD,EAAMC,IAAqB,GACjCD,QACAE,cASEG,EAAgBxN,IACpB,MAAMuN,UAAEA,EAAAtD,KAAWA,EAAMkD,MAAAA,GAAUD,IAC7BO,EAAS,IAAIC,OAAO1N,GAAS,IAG/BiK,EAAK0D,MAAM,SACbR,EAAMI,GAAaE,EAASxD,EAAKra,QAAQ,QAAS,IAE5Cud,EAAAI,GAAaE,EAASxD,EAGrB3H,EAAA6K,EAAMjD,KAAK,QAIhB0D,EAAkB7a,UACtB,MAAMwa,UAAEA,EAAAtD,KAAWA,EAAMkD,MAAAA,GAAUD,IAGnC,IAAU,MAANjD,OAAM,EAAAA,EAAA0D,MAAM,oBAAoB,MAAA1D,OAAA,EAAAA,EAAM0D,MAAM,kBACxCR,EAAAI,IAAa,MAAAtD,OAAA,EAAAA,EAAMra,QAAQ,oBAAqB,IAAIkZ,SAAU,OAC/D,CAEL,MAAM+E,GAAS,OAAA7D,EAAA,MAAAC,OAAA,EAAAA,EAAM0D,MAAM,oBAAY,KAAM,GACvCF,EAAkB,WAAT1a,EAAoB,KAAO,MAC1Coa,EAAMI,GAAaM,EAASJ,UAAUxD,WAAMnB,SAAU,GACxD,CAESxG,EAAA6K,EAAMjD,KAAK,QAIhB4D,EAAgBC,IACpB,MAAMR,UAAEA,EAAAJ,MAAWA,GAAUD,IACvBjD,EAAOkD,EAAMI,IAAc,GAGzBJ,EAAAI,GADU,OAAdQ,EACiB,KAAO9D,EAEPA,EAAKra,QAAQ,aAAc,IAGvC0S,EAAA6K,EAAMjD,KAAK,QAqDhB8D,EAAkBtf,IACtB,MAAMuf,EAAWpB,EAAYvb,QAC7B,IAAK2c,EAAU,OAEf,MAAMC,EAAQD,EAAShB,eACjBkB,EAAMF,EAASG,aACfC,EAAehM,EAAMiM,UAAUJ,EAAOC,GAE5C,IAAII,EAAO,GACX,OAAQ7f,GACN,IAAK,OAAe6f,EAAA,KAAM,MAC1B,IAAK,SAAiBA,EAAA,IAAK,MAC3B,IAAK,YAAoBA,EAAA,KAG3B,MAAMC,EAAc,GAAGD,IAAOF,IAAeE,IAEvCE,EAAWpM,EAAMiM,UAAU,EAAGJ,GAASM,EAAcnM,EAAMiM,UAAUH,GAC3E7L,EAASmM,GAGTxd,WAAW,KAELid,IAAUC,EACZF,EAASS,kBAAkBR,EAAQK,EAAKvY,OAAQmY,EAAMI,EAAKvY,QAIlDiY,EAAAS,kBAAkBP,EAAM,EAAII,EAAKvY,OAAQmY,EAAM,EAAII,EAAKvY,QAEnEiY,EAASU,SACR,IAkCFlgB,OAAAA,EAAAA,KAAA,MAAA,CAAIqJ,UAAW,oFAAoFA,IAElG9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,qHAEb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,+BACb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCsD,KAAK,SACL+G,QAAS,IAAM0T,EAAa,GAC5B1V,UAAU,kIACVuD,MAAM,OACPrM,SAAA,OAGDR,EAAAiB,IAAC,SAAA,CACCsD,KAAK,SACL+G,QAAS,IAAM0T,EAAa,GAC5B1V,UAAU,sIACVuD,MAAM,OACPrM,SAAA,OAGDR,EAAAiB,IAAC,SAAA,CACCsD,KAAK,SACL+G,QAAS,IAAM0T,EAAa,GAC5B1V,UAAU,oIACVuD,MAAM,OACPrM,SAAA,YAKHS,IAAC,MAAI,CAAAqI,UAAU,4CAGfrJ,KAAC,MAAI,CAAAqJ,UAAU,+BACb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCsD,KAAK,SACL+G,QAAS,IAAMkU,EAAe,QAC9BlW,UAAU,0GACVuD,MAAM,KAENrM,SAAAS,EAAAA,IAACmf,EAAO,CAAA9W,UAAU,cAEpBtJ,EAAAiB,IAAC,SAAA,CACCsD,KAAK,SACL+G,QAAS,IAAMkU,EAAe,UAC9BlW,UAAU,0GACVuD,MAAM,MAENrM,SAAAS,EAAAA,IAACof,EAAS,CAAA/W,UAAU,cAEtBtJ,EAAAiB,IAAC,SAAA,CACCsD,KAAK,SACL+G,QAAS,IAAMkU,EAAe,aAC9BlW,UAAU,0GACVuD,MAAM,KAENrM,SAAAS,EAAAA,IAACqf,EAAY,CAAAhX,UAAU,mBAI3BrI,IAAC,MAAI,CAAAqI,UAAU,4CAGfrJ,KAAC,MAAI,CAAAqJ,UAAU,+BACb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCsD,KAAK,SACL+G,QAAS,IAAM8T,EAAe,UAC9B9V,UAAU,0GACVuD,MAAM,SAENrM,SAAAS,EAAAA,IAACsf,EAAS,CAAAjX,UAAU,cAEtBtJ,EAAAiB,IAAC,SAAA,CACCsD,KAAK,SACL+G,QAAS,IAAM8T,EAAe,UAC9B9V,UAAU,0GACVuD,MAAM,SAENrM,SAAAS,EAAAA,IAACuf,EAAS,CAAAlX,UAAU,mBAIxBrI,IAAC,MAAI,CAAAqI,UAAU,4CAGfrJ,KAAC,MAAI,CAAAqJ,UAAU,+BACb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCsD,KAAK,SACL+G,QAAS,IAAMgU,EAAa,OAC5BhW,UAAU,0GACVuD,MAAM,OAENrM,SAAAS,EAAAA,IAACwf,EAAU,CAAAnX,UAAU,cAEvBtJ,EAAAiB,IAAC,SAAA,CACCsD,KAAK,SACL+G,QAAS,IAAMgU,EAAa,MAC5BhW,UAAU,0GACVuD,MAAM,OAENrM,SAAAS,EAAAA,IAACyf,EAAS,CAAApX,UAAU,mBAIxBrI,IAAC,MAAI,CAAAqI,UAAU,0CAGftJ,EAAAiB,IAAC,SAAA,CACCsD,KAAK,SACL+G,QAhOa,KACnB,MAAMyT,UAAEA,EAAAJ,MAAWA,EAAOE,UAAAA,GAAcH,IAClCiC,EAAU,UAChBhC,EAAMiC,OAAO7B,EAAY,EAAG,EAAG4B,EAAS,kBAC/B7M,EAAA6K,EAAMjD,KAAK,OAGpBjZ,WAAW,WACT,GAAI4b,EAAYvb,QAAS,CAEjB,MAAA+d,EAAchC,IAAa,OAAArD,EAAAmD,EAAMI,SAAY,EAAAvD,EAAAhU,SAAU,GAAK,EAAImZ,EAAiB,EAAI,EAC/EtC,EAAAvb,QAAQod,kBAAkBW,EAAaA,GACnDxC,EAAYvb,QAAQqd,OACtB,GACC,IAmNG7W,UAAU,+GACVuD,MAAM,QAENrM,SAAAS,EAAAA,IAAC6f,EAAc,CAAAxX,UAAU,cAG3BtJ,EAAAiB,IAAC,SAAA,CACCsD,KAAK,SACL+G,QAvNgB,KACtB,MAAMyT,UAAEA,EAAAJ,MAAWA,EAAOE,UAAAA,GAAcH,IAElCqC,EAAiB,CACrB,gBACA,mBACA,OAIFpC,EAAMiC,OAAO7B,EAAY,EAAG,KAAMgC,GAC5B,MAAAd,EAAWtB,EAAMjD,KAAK,MAC5B5H,EAASmM,GAGTxd,WAAW,aACT,GAAI4b,EAAYvb,QAAS,CAEvB,MAAMke,EACJnC,IAAa,OAAArD,EAAMmD,EAAAI,SAAY,EAAAvD,EAAAhU,SAAU,GAAK,IAC3C,OAAAmU,IAAe,SAAI,EAAAA,EAAAnU,SAAU,GAAK,EACnC,EAEQ6W,EAAAvb,QAAQod,kBAAkBc,EAAgBA,GACtD3C,EAAYvb,QAAQqd,OACtB,GACC,IA8LG7W,UAAU,0GACVuD,MAAM,QAENrM,SAAAS,EAAAA,IAACggB,EAAO,CAAA3X,UAAU,mBAKtBrJ,KAAC,MAAI,CAAAqJ,UAAU,WACb9I,SAAA,CAAAR,EAAAiB,IAAC,WAAA,CACCsI,IAAK8U,EACLxK,QACAC,SAAWP,GAAMO,EAASP,EAAEQ,OAAOF,OACnCqN,SAAU1C,EACV2C,QAAS3C,EACT4C,UAAW5C,EACXxK,cACAoK,OACA9U,UAAU,uIAIXuK,KACC5S,IAAC,MAAI,CAAAqI,UAAU,iDACb9I,SAAAR,EAAAiB,IAAC,MAAA,CACCqI,UAAU,wDACV+X,wBAAyB,CAAEC,QAhLfpH,EAgLsCrG,EA/KrDqG,EAEJ9Y,QAAQ,gBAAiB,qFACzBA,QAAQ,eAAgB,qFACxBA,QAAQ,cAAe,kFAEvBA,QAAQ,iBAAkB,yCAE1BA,QAAQ,aAAc,8BAEtBA,QAAQ,aAAc,+BAEtBA,QAAQ,WAAY,4GAEpBA,QAAQ,cAAe,+IAEvBA,QAAQ,wBAAyB,8DAEjCA,QAAQ,wBAAyB,+DAEjCA,QAAQ,+BAAgC,CAACmgB,EAAQC,EAAIC,IAE7C,6EADMD,EAAK,YAAYA,EAAGlH,SAAW,6BACuEmH,EAAGnH,uBAGvHlZ,QAAQ,MAAO,oBA1BG,IAAC8Y,GCxJpBwH,GAA4C,EAChDC,WACA7b,MAAAA,EACAjG,kBACA+hB,YACAC,kBACAC,qBACAC,cACAC,aACAC,eACAC,WACAC,YAAW,EACXC,eACAC,oBACAC,sBAIM,MAAAC,EAAenV,EAAAA,QAAQ,IACtBgV,GACGT,EAASa,UAAY,IAC1BrX,OAAeiX,EAAaK,IAAIC,IAChCC,OAAQ1W,KAAqCA,GAHtB,GAIzB,CAAC0V,EAASa,SAAUJ,IAWjBQ,EAAkBxV,EAAAA,QAAQ,IACzBgV,EACEhH,MAAMyH,KAAKT,EAAaU,UADL,GAEzB,CAACV,IAuBF,OAAApiB,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1B4D,WAAY,CAAErB,MAAO,GAAMzC,GAC3BwD,UAAW,aAAYsY,EAAY,wCAA0C,IAE5EphB,SAAAohB,IAEC3hB,KAAC,MAAI,CAAAqJ,UAAU,YACb9I,SAAA,QAAC,MACC,CAAAA,SAAA,CAAAS,MAAC,QAAM,CAAA2S,QAAQ,QAAQtK,UAAU,kEAAkE9I,SAEnG,UACAR,EAAAiB,IAAC,QAAA,CACCsD,KAAK,OACL6O,GAAG,QACHS,MAAOgO,EAAgBkB,MACvBjP,SAAWP,GAAMuO,EAA4BkB,IAAA,IAAKA,EAAMD,MAAOxP,EAAEQ,OAAOF,SACxEG,YAAY,eACZ1K,UAAU,wMAIb,MACC,CAAA9I,SAAA,CAAAS,MAAC,QAAM,CAAA2S,QAAQ,UAAUtK,UAAU,kEAAkE9I,SAErG,UACAR,EAAAiB,IAACkd,GAAA,CACCtK,MAAOgO,EAAgB3F,QACvBpI,SAAWD,GAAUiO,EAAmBkB,IAAS,IAAKA,EAAM9G,QAASrI,KACrEG,YAAY,oDACZoK,KAAM,EACN9U,UAAU,qBAKbzJ,GAAmBuiB,GAAgBQ,EAAgBpb,OAAS,UAC1D,MAAA,CAAI8B,UAAU,qDACb9I,SAAA,GAACP,KAAA,QAAA,CAAMqJ,UAAU,0FACf9I,SAAA,CAAAS,EAAAA,IAACgiB,EAAM,CAAA9Y,KAAM,GAAIb,UAAU,qBAAqB,eAAY,OAAAkS,EAAAmG,EAASa,eAAT,EAAAhH,EAAmBhU,SAAU,EAAE,kBAG5F,MAAI,CAAA8B,UAAU,8FACZ9I,SAAAoiB,EAAgBzX,IAAac,UAC5B,MAAMiX,EAAW,OAAA1H,EAAAmG,EAASa,eAAThH,EAAAA,EAAmBjK,SAAStF,EAAMgG,KAE7CkR,EAAelX,EAAMlL,OAASmiB,EAtD3C,CACL3iB,gBAqD0E0L,EAAMlL,MApDhFA,MAAO,gBAoDkF,EAG3E,OAAAf,EAAAC,KAAC,SAAA,CAECqL,QAAS,IAtFH,CAACoX,UACzB,IAAKL,EAAmB,OACxB,MAAMa,GAAW,OAAA1H,EAAAmG,EAASa,eAAThH,EAAAA,EAAmBjK,SAASmR,MAAY,EAEzDL,EAAkBV,EAAS1P,IAAKyQ,GAAUQ,IAkFTE,CAAkBnX,EAAMgG,KACvC1N,KAAK,SACL+E,UAAW,8DACT4Z,EACI,8BACA,0GAENhjB,MAAOijB,EAEN3iB,SAAA,CAAA0iB,EAAW,KAAO,IAAI,IAAEjX,EAAMC,OAV1BD,EAAMgG,cAmBvBhS,KAAC,MAAI,CAAAqJ,UAAU,kBACb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAM0W,IACf3N,SAAU8N,IAAaN,EAAgBkB,MAAMzI,SAAWuH,EAAgB3F,QAAQ5B,OAChFhR,UAAU,iLAET9I,WAAW,UAAY,OAE1BR,EAAAiB,IAAC,SAAA,CACCqK,QAAS2W,EACT3Y,UAAU,kFACX9I,SAAA,oBAQHoP,EAAAA,SAAA,CAAApP,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,wCACb9I,SAAA,CAAAS,EAAAA,IAAC,KAAG,CAAAqI,UAAU,sDACX9I,SAAAmhB,EAASoB,QAEXljB,GACCG,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,aACb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAMyW,EAAYJ,EAAUW,GACrChZ,UAAU,2FACV,aAAW,KAEX9I,SAAAS,EAAAA,IAACoiB,EAAO,CAAAlZ,KAAM,OAEhBnK,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAM4W,EAASP,EAAS1P,IAAKqQ,GACtChZ,UAAU,0FACV,aAAW,KAEX9I,SAAAS,EAAAA,IAACqiB,EAAQ,CAAAnZ,KAAM,aAOtBoY,EAAa/a,OAAS,GACpBvH,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,wCACb9I,SAAA,CAAAS,MAACgiB,GAAM9Y,KAAM,GAAIb,UAAU,iDAAiDuD,MAAM,UACjF0V,EAAapX,IAAac,IAEzB,MAAMsX,EAAatX,EAAMlL,MAtI9B,CACLR,gBAJc,GAFKijB,EA2IsCvX,EAAMlL,UApI/DA,MAJgByiB,QAwIwD,EA3ItD,IAACA,EA8IP,OAAAxjB,EAAAiB,IAACiR,EAAA,CAEC/Q,GAAI,qBAAqB8K,EAAMgG,MAC/BpF,MAAO,GAAGZ,EAAMC,uBAChB5C,UAAU,mHACVpJ,MAAO,IACFqjB,EACH,kBAAmBtX,EAAMlL,OAAS,WAGnCP,SAAMyL,EAAAC,MATFD,EAAMgG,UAiBrBjS,EAAAiB,IAAC,MAAA,CACCqI,UAAU,+FACV+X,wBAAyB,CAAEC,QFtOTpH,EEsO+ByH,EAASzF,QFrO/DhC,EAEEA,EAEJ9Y,QAAQ,oBAAqB,iIAG7BA,QAAQ,aAAc,8FAGtBA,QAAQ,iBAAkB,uBAC1BA,QAAQ,aAAc,uBAGtBA,QAAQ,kDAAmD,mBAC3DA,QAAQ,kDAAmD,mBAG3DA,QAAQ,2BAA4B,2HAGpCA,QAAQ,eAAgB,qFACxBA,QAAQ,cAAe,qFACvBA,QAAQ,aAAc,kFAGtBA,QAAQ,qBAAsB,4BAC9BA,QAAQ,+BAAgC,kDAGxCA,QAAQ,aAAc,uHAGtBA,QAAQ,UAAW,0DAGnBA,QAAQ,MAAO,QApCA,SEuOVnB,KAAC,MAAI,CAAAqJ,UAAU,gDAAgD9I,SAAA,CAAA,QACvDuX,GAAW4J,EAAS8B,WAAW,KAAGvL,GAAmByJ,EAAS8B,WAAW,OAAKxJ,GAAwB0H,EAASzF,iBFzOpG,IAAChC,kEGQD,KACrB,MAAA9G,GAAEA,GAAOsQ,IACThiB,EAAWC,IACXG,EAAWqM,KACXtO,gBAAEA,GAAoBE,MACtB2K,KAAEA,GAASC,IACXa,EAAcd,EAAKW,UAGjB0P,KAAM4I,EAAM7jB,UAAWoV,UAAS0O,EAAS9Q,MAAAA,GAAU+Q,GAAQzQ,IAG3D2H,KAAM+I,EAAe,IAAOC,GAA2B,CAC7DC,SAAU,CAAC,WAAY5Q,GACvB6Q,QAAS3Q,gBACP,IAAKF,EAAI,MAAO,GAChB,MAAM8Q,QAAiBC,GAAYC,UAAUhR,GAC7C,OAAO,OAAAoI,IAAST,WAAT,EAAAS,EAAeT,OAAQmJ,EAASnJ,MAAQ,IAEjDzW,UAAW8O,EACXiR,UAAW,OAIPC,gBAAEA,GAAoBC,KAGtBC,EAAiBC,KAEjBC,EAAed,GAAkB,MAAP9Q,OAAO,EAAAA,EAAAa,UAAW,wBAA2B,MAKvEgR,kBACJA,EAAA9C,gBACAA,EAAAC,mBACAA,EAAA8C,YACAA,EAAAzC,SACAA,EAAA0C,iBACAA,EAAAC,oBACAA,EAAAC,kBACAA,EAAAC,qBACAA,EAAAC,gBACAA,EAAAC,eACAA,EAAAC,iBACAA,EAAAC,sBACAA,GACEC,GAAmBjS,IAGhBkS,EAAmBC,GAAwB9jB,WAAwB,MAYpE+jB,EAAmBpY,EAAAA,QAA8C,KACjE,IAAC0W,IAAiBQ,EAAiB,MAAO,GAExC,MAAAmB,EAAYnB,EAAgBoB,WAAoBhZ,EAASiZ,QAAU,IAGnEC,MAAqBC,IAU3B,GATa/B,EAAAle,QAAmBkgB,KAC7BA,EAAQC,WAAa,IAAIngB,QAAoB+b,KAE3CA,EAASa,UAAY,IAAI5c,QAAS8c,IACjCkD,EAAehhB,IAAI8d,SAKG,IAAxBkD,EAAezb,KAAY,MAAO,GAWtC,OAAOsb,EACJ9C,OAAgB1W,GAAAA,EAAMgG,KAAO2T,EAAeI,IAAI/Z,EAAMgG,MACtD9G,IAAcc,IAAA,UACVA,EACHga,WAZkBzU,EAYMvF,EAAMuF,OAAS,EAXrCA,GAAS,GAAW,SACpBA,GAAS,GAAW,aACpBA,GAAS,GAAW,YACjB,UAJY,IAACA,KAcrB,CAACsS,EAAcQ,IAGZlC,EAAehV,EAAAA,QAAQ,KACrB,MAAAjC,MAAU+a,IAET,OADUV,EAAA5f,WAAiBqG,EAAMgG,KAAO9G,EAAInG,IAAIiH,EAAMgG,IAAKhG,IAC3Dd,GACN,CAACqa,IA8BEW,EAAa3B,EAAe4B,UAO5BC,EAAkBjZ,EAAAA,QAAQ,KACnB,MAANuW,OAAM,EAAAA,EAAAoC,WAEJ,IAAIpC,EAAKoC,WAAWO,KAAK,CAAC9O,EAAG+O,IAE3B,IAAIngB,KAAKmgB,EAAE9C,WAAWpL,UAAY,IAAIjS,KAAKoR,EAAEiM,WAAWpL,WAJpC,GAM5B,CAAO,MAANsL,OAAM,EAAAA,EAAAoC,YAMV,GAAI7Q,EAEA,OAAAlV,EAAAiB,IAAC,OAAIqI,UAAU,gDACb9I,eAAC,MAAI,CAAA8I,UAAU,2FAKrB,IAAKqa,EACH,aACG,MAAI,CAAAra,UAAU,gDACb9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,cACb9I,SAAA,GAACS,IAAA+N,EAAA,CAAO1F,UAAU,wCACjBrI,EAAAA,IAAA,IAAA,CAAEqI,UAAU,2CAA2C9I,SAAa,kBACrER,EAAAiB,IAACiR,EAAA,CACC/Q,GAAG,SACHqlB,MAAO1kB,EAAS0kB,MAChBld,UAAU,4DACX9I,SAAA,mBAkBT,aACG,UAAQ,CAAA8I,UAAU,yDACjB9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,oBAEX9I,SAAA,EAAAkkB,GAAgBG,IAChB7kB,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,GAAO,IAC9BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1BsD,UAAU,wFACViH,KAAK,QAEJ/P,SAAgBkkB,GAAAG,IAKrB7kB,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1BsD,UAAU,OAEV9I,SAAAR,EAAAC,KAACiS,EAAA,CACC/Q,GAAG,SACHqlB,MAAO1kB,EAAS0kB,MAChBld,UAAU,8EAEV9I,SAAA,CAAAR,EAAAiB,IAACwlB,GAAY,IAAE,kBAKnBzmB,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1BsD,UAAU,gBAEV9I,SAAAR,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,4BACb9I,SAAA,GAACS,IAAA,MAAA,CACET,WAAKkmB,WACJ1mB,EAAAiB,IAAC,MAAA,CACC4X,IAAK8K,EAAK+C,WACV5N,IAAK6K,EAAK9W,MACVvD,UAAU,kDACV4L,QAAQ,QACRmE,SAAS,QACT5Y,MAAM,MACNH,OAAO,QAGRN,EAAAiB,IAAA,MAAA,CAAIqI,UAAU,iHACb9I,eAACwO,EAAO,CAAA1F,UAAU,8BAIxBrJ,KAAC,MAAI,CAAAqJ,UAAU,gBACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,wCACb9I,SAAA,GAAAS,IAAC,MAAI,CAAAqI,UAAU,uBAEZ9I,SAAAmjB,EAAKgD,aAAehD,EAAKgD,YAAYnf,OAAS,EAC5Cmc,EAAKgD,YAAsBxb,IAAKyb,IAC/B,MAAMC,EAAgC,iBAAfD,EAA0BA,EAAyB,MAAZA,OAAY,EAAAA,EAAA1a,KAC1E,OAAO2a,EACL7mB,EAAAiB,IAAC,OAAA,CAECqI,UAAU,uHAET9I,SAAAqmB,GAH0B,iBAAfD,EAA0BA,EAAyB,MAAZA,OAAY,EAAAA,EAAA3U,KAK/D,OAIN0R,EAAKjX,UACHzL,EAAAA,IAAC,QAAKqI,UAAU,uHACb9I,WAAKkM,aAKb7M,GACCG,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,aACb9I,SAAA,CAAAR,EAAAiB,IAACiR,EAAA,CACC/Q,GAAI,SACJqlB,MAAO,CAAEM,IAAK,QAASC,OAAQpD,EAAK1R,KACpC3I,UAAU,2FACV,aAAW,QAEX9I,eAAC6iB,EAAO,MAEVrjB,EAAAiB,IAAC,SAAA,CACCqK,QA7JKgI,UACnB,GAAC0T,QAAQ,uCAET,UACIxC,EAAeyC,YAAY7T,GACjC1R,EAAS,gBACFoR,GAET,GAsJkBuB,SAAU8R,EACV7c,UAAW,oEACT6c,EACI,gCACA,4CAEN,aAAW,QAEV3lB,iBACE,MAAA,CAAI8I,UAAU,yFAEdga,EAAQ,cAMlBriB,IAAA,KAAA,CAAGqI,UAAU,oEACX9I,SAAkB+K,GAAAC,EAAamY,EAAK9W,MAAO8W,EAAK7W,QAAS6W,EAAK5W,aAEhE9L,IAAA,IAAA,CAAEqI,UAAU,gDACV9I,SAAkB+K,GAAAC,EAAamY,EAAKuD,OAAQvD,EAAKwD,SAAUxD,EAAKyD,cAEnEnnB,KAAC,MAAI,CAAAqJ,UAAU,wDACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,0BACZ9I,SAAA,EA7HU6mB,EA6HQ1D,EAAK0D,OA5H/BjM,MAAMyH,KAAK,CAAErb,OAAQ,GAAK,CAAC8f,EAAGxe,IACnC9I,EAAAiB,IAACsmB,GAAA,CAECje,UAAWR,EAAIue,EAAS,kBAAoB,oCADvCve,OA2HK7I,KAAC,OAAK,CAAAqJ,UAAU,mBAAoB9I,SAAA,CAAKmjB,EAAA0D,OAAO,aAElDpnB,KAAC,MAAI,CAAAqJ,UAAU,0BACb9I,SAAA,CAAAR,EAAAiB,IAACumB,GAAW,WACX,OAAK,CAAAhnB,SAAA,CAAA,UAAQuX,GAAW4L,EAAK8D,2BAQvCjC,EAAiBhe,OAAS,GACzBxH,EAAAC,KAACuJ,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1B4D,WAAY,CAAErB,MAAO,IACrBe,UAAU,gBAEV9I,SAAA,GAACP,KAAA,KAAA,CAAGqJ,UAAU,+EACZ9I,SAAA,GAACS,IAAAymB,GAAA,CAAQpe,UAAU,qBAAqB,8BAEzC,MAAI,CAAAA,UAAU,uBACZ9I,SAAAglB,EAAiBra,IAAac,IAE7B,MAAMsX,EAAatX,EAAMlL,MA5N9B,CACLR,gBAJc,GAFKijB,EAiOsCvX,EAAMlL,UA1N/DA,MAJgByiB,QA8NwD,EAjOtD,IAACA,EAoOP,OAAAxjB,EAAAC,KAACiS,EAAA,CAEC/Q,GAAI,qBAAqB8K,EAAMgG,MAC/BpF,MAAO,GAAGZ,EAAMC,0BAChB5C,UAAU,iHACVpJ,MAAO,IACFqjB,EACH,kBAAmBtX,EAAMlL,OAAS,WAGnCP,SAAA,CAAMyL,EAAAC,KACPlM,EAAAC,KAAC,OAAA,CACCqJ,UAAU,6BACVpJ,MAAO,CAAEa,MAAOkL,EAAMlL,OAAS,WAChCP,SAAA,CAAA,IACGyL,EAAMga,UAAU,SAdfha,EAAMgG,YAwBvBjS,EAAAC,KAACuJ,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1B4D,WAAY,CAAErB,MAAO,IAErB/H,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,yCACb9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,mDAAmD9I,SAEjE,UACCX,KAAqBikB,GAAwC,IAAxBA,EAAatc,SACjDxH,EAAAC,KAAC,SAAA,CACCqL,QAASwZ,EACTxb,UAAU,4HAEV9I,SAAA,CAAAR,EAAAiB,IAAC0mB,GAAO,IAAE,IAAE/C,EAAc,QAAU,kBAM1C3jB,IAACkS,IACE3S,SACCokB,GAAA5kB,EAAAC,KAACuJ,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAGrJ,OAAQ,GAC/BoF,QAAS,CAAEiE,QAAS,EAAGrJ,OAAQ,QAC/ByP,KAAM,CAAEpG,QAAS,EAAGrJ,OAAQ,GAC5BgJ,UAAU,gCAEV9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,2DAA2D9I,SAEzE,iBACAP,KAAC,MAAI,CAAAqJ,UAAU,YACb9I,SAAA,QAAC,MACC,CAAAA,SAAA,CAAAS,MAAC,QAAM,CAAA2S,QAAQ,QAAQtK,UAAU,kEAAkE9I,SAEnG,UACAR,EAAAiB,IAAC,QAAA,CACCsD,KAAK,OACL6O,GAAG,QACHS,MAAOgO,EAAgBkB,MACvBjP,SAAWP,GAAMuO,EAA4BkB,IAAA,IAAKA,EAAMD,MAAOxP,EAAEQ,OAAOF,SACxEG,YAAY,eACZ1K,UAAU,wMAIb,MACC,CAAA9I,SAAA,CAAAS,MAAC,QAAM,CAAA2S,QAAQ,UAAUtK,UAAU,kEAAkE9I,SAErG,UACAR,EAAAiB,IAACkd,GAAA,CACCtK,MAAOgO,EAAgB3F,QACvBpI,SAAWD,GAAUiO,EAAmBkB,IAAS,IAAKA,EAAM9G,QAASrI,KACrEG,YAAY,oDACZoK,KAAM,EACN9U,UAAU,uBAIdrJ,KAAC,MAAI,CAAAqJ,UAAU,kBACb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAASyZ,EACT1Q,SAAU8N,IAAaN,EAAgBkB,MAAMzI,SAAWuH,EAAgB3F,QAAQ5B,OAChFhR,UAAU,iLAET9I,WAAW,UAAY,OAE1BR,EAAAiB,IAAC,SAAA,CACCqK,QAASwZ,EACTxb,UAAU,kFACX9I,SAAA,kBAYLsjB,GAAgBA,EAAatc,OAAS,QAErC,MAAI,CAAA8B,UAAU,YACZ9I,SAAasjB,EAAA3Y,IAAK2a,IAEX,MAAA8B,EAAatC,IAAsBQ,EAAQ7T,IAG/C,SAAAhS,KAAC,MAAsB,CAAAqJ,UAAU,uDAG/B9I,SAAA,CAAAR,EAAAC,KAAC,MAAA,CACCqJ,UAAU,iIACVgC,QAAS,KAAMuc,OAhZhBvF,EAgZ8BwD,EAAQ7T,SA/Y3DsT,EAAgCuC,GAAAA,IAAWxF,EAAY,KAAOA,GAD1C,IAACA,GAkZC9hB,SAAA,GAACP,KAAA,KAAA,CAAGqJ,UAAU,yDACX9I,SAAA,CAAQslB,EAAAjZ,QACT5M,KAAC,OAAK,CAAAqJ,UAAU,4DAA4D9I,SAAA,CAAA,KACvEslB,EAAQC,WAAa,IAAIve,OAAO,kBAIvCxH,EAAAiB,IAACuI,GAAOue,KAAP,CACCriB,QAAS,CAAEsiB,OAAQJ,EAAa,GAAK,GACrChe,WAAY,CAAEtB,SAAU,IACxBgB,UAAU,sDAEV9I,eAACynB,GAAe,WAKpBhnB,IAACkS,IACE3S,SACConB,GAAA5nB,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAGrJ,OAAQ,GAC/BoF,QAAS,CAAEiE,QAAS,EAAGrJ,OAAQ,QAC/ByP,KAAM,CAAEpG,QAAS,EAAGrJ,OAAQ,GAC5BsJ,WAAY,CAAEtB,SAAU,GAAKE,KAAM,aACnCc,UAAU,kBAEV9I,SAAAR,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,oEACX9I,SAAA,EAAAslB,EAAQC,WAAa,IAAI5a,IAAI,CAACwW,EAAU7b,IACxC9F,EAAAiB,IAACygB,GAAA,CAECC,WACA7b,MAAAA,EACAjG,kBACA+hB,UAAW+C,IAAsBhD,EAAS1P,IAC1C4P,kBACAC,qBACAC,YAAakD,EACbjD,WAAYkD,EACZjD,aAAckD,EACdjD,SAAU8C,EACV7C,WACAC,eACAC,kBAAmB+C,EACnB9C,UAAWwD,EAAQ7T,KAdd0P,EAAS1P,QAiBf6T,EAAQC,WAA0C,IAA7BD,EAAQC,UAAUve,SACvCvG,EAAAA,IAAA,MAAA,CAAIqI,UAAU,oDAAoD9I,SAEnE,oCAxDFslB,EAAQ7T,SAqEnBoU,EAAgB7e,OAAS,QAE7B,OAAI8B,UAAU,YACZ9I,WAAgB2K,IAAI,CAACwW,EAAU7b,IAC9B9F,EAAAiB,IAACygB,GAAA,CAECC,WACA7b,MAAAA,EACAjG,kBACA+hB,UAAW+C,IAAsBhD,EAAS1P,IAC1C4P,kBACAC,qBACAC,YAAakD,EACbjD,WAAYkD,EACZjD,aAAckD,EACdjD,SAAU8C,EACV7C,WACAC,eACAC,kBAAmB+C,GAbdzD,EAAS1P,UAsBpBhS,KAAC,MAAI,CAAAqJ,UAAU,wBACb9I,SAAA,GAACS,IAAA+N,EAAA,CAAO1F,UAAU,wCACjBrI,EAAAA,IAAA,IAAA,CAAEqI,UAAU,2CAA2C9I,SAExD,kCAjXU,IAAC6mB,0CCjLtB,MAAMa,WAAwBC,GAYnC,WAAAC,CAAYvb,EAAemR,EAAeqK,GACxCC,MAAMD,GAZRE,EAAAlf,KAAA,WACAkf,EAAAlf,KAAA,UAYEA,KAAKmf,QAAU3b,EACfxD,KAAKof,OAASzK,CAChB,CAZA,cAAO0K,GACE,MAAA,aACT,CAEA,YAAOC,CAAMrL,GACX,OAAO,IAAI4K,GAAgB5K,EAAKkL,QAASlL,EAAKmL,OAAQnL,EAAKsL,MAC7D,CAQA,SAAAC,CAAUC,GACF,MAAAC,EAAMC,SAAS1e,cAAc,OAI5B,OAHHye,EAAApgB,aAAa,2BAA4B,QAC7CogB,EAAIzf,UAAY,8EAETyf,CACT,CAEA,SAAAE,CAAUC,EAA2BH,EAAkBD,GAC9C,OAAA,CACT,CAEA,gBAAOK,GACE,MAAA,CACLC,QAAU9L,IAAgB,CACxB+L,WAAYC,GACZC,SAAU,IAGhB,CAEA,SAAAC,GACQ,MAAA7pB,EAAUqpB,SAAS1e,cAAc,WACvC3K,EAAQqe,KAAO3U,KAAKof,OAEd,MAAAgB,EAAUT,SAAS1e,cAAc,WAKvC,OAJAmf,EAAQjM,YAAcnU,KAAKmf,QAC3BiB,EAAQngB,UAAY,yCACpB3J,EAAQ8E,YAAYglB,GAEb,CAAE9pB,UACX,CAEA,iBAAO+pB,CAAWC,GACV,MAAA9c,MAAEA,EAAOmR,KAAAA,GAAS2L,EAIjB,OAHMC,GAAuB/c,EAAOmR,EAI7C,CAEA,UAAA6L,GACS,MAAA,IACFvB,MAAMuB,aACThd,MAAOxD,KAAKygB,WACZ9L,KAAM3U,KAAK6E,SACX3J,KAAM,cACNwlB,QAAS,EAEb,CAEA,QAAAD,GACS,OAAAzgB,KAAK2gB,YAAYxB,OAC1B,CAEA,QAAAyB,CAASpd,GACUxD,KAAK6gB,cACb1B,QAAU3b,CACrB,CAEA,MAAAqB,GACS,OAAA7E,KAAK2gB,YAAYvB,MAC1B,CAEA,OAAA0B,CAAQnM,GACW3U,KAAK6gB,cACbzB,OAASzK,CACpB,CAEA,MAAAoM,GACE/gB,KAAK8gB,SAAS9gB,KAAK6E,SACrB,EAGF,SAASob,GAA0Be,GACjC,MAAMtB,EAAMsB,EACNZ,EAAUV,EAAIuB,cAAc,WAMlC,MAAO,CAAEhN,KAFIsM,GAHCH,GAAUA,EAAQjM,aAAoB,GACvCuL,EAAI/K,MAKnB,CAEgB,SAAA4L,GAAuB/c,EAAemR,GACpD,OAAOuM,GAAsB,IAAIrC,GAAgBrb,EAAOmR,GAC1D,CC7GO,MAAMwM,GAAgB,KACrB,MAACC,GAAUC,KAEXC,EAAahd,EAAAA,YAAY,KACtB8c,EAAAG,gBAAgBC,GAAqB,SAC3C,CAACJ,IAEEK,EAAend,EAAAA,YAAY,KACxB8c,EAAAG,gBAAgBC,GAAqB,WAC3C,CAACJ,IAEEM,EAAkBpd,EAAAA,YAAY,KAC3B8c,EAAAG,gBAAgBC,GAAqB,cAC3C,CAACJ,IAEEO,EAAgBrd,cAAa6D,IACjCiZ,EAAOQ,OAAO,KACZ,MAAMC,EAAYC,KACdC,GAAAA,GAAkBF,GAAY,CAChC,MAAMG,EAAcC,GAAmB,IAAI9Z,KACjC0Z,EAAAK,YAAY,CAACF,GACzB,KAED,CAACZ,IAEEe,EAAa7d,EAAAA,YAAY,KAC7B8c,EAAOQ,OAAO,KACN,MAAAQ,EAAWC,GAAgB,IACpBC,GAAA,CAACF,OAEf,CAAChB,IAEEmB,EAA0Bje,EAAAA,YAAY,KAC1C8c,EAAOQ,OAAO,KACN,MAAAY,EAAcjC,GAAuB,SAAS,GACvC+B,GAAA,CAACE,OAEf,CAACpB,IAGF,SAAAxqB,KAAC,MAAI,CAAAqJ,UAAU,mGACb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCsD,KAAK,SACL+G,QAASqf,EACTrhB,UAAU,6DACVuD,MAAM,OAENrM,SAAAS,EAAAA,IAAC,UAAOT,SAAC,QAEXR,EAAAiB,IAAC,SAAA,CACCsD,KAAK,SACL+G,QAASwf,EACTxhB,UAAU,oEACVuD,MAAM,SAENrM,SAAAS,EAAAA,IAAC,MAAGT,SAAC,QAEPR,EAAAiB,IAAC,SAAA,CACCsD,KAAK,SACL+G,QAASyf,EACTzhB,UAAU,uEACVuD,MAAM,YAENrM,SAAAS,EAAAA,IAAC,KAAET,SAAC,UAENS,IAAC,MAAI,CAAAqI,UAAU,uDACftJ,EAAAiB,IAAC,SAAA,CACCsD,KAAK,SACL+G,QAAS,IAAM0f,EAAc,GAC7B1hB,UAAU,6DACVuD,MAAM,YACPrM,SAAA,OAGDR,EAAAiB,IAAC,SAAA,CACCsD,KAAK,SACL+G,QAAS,IAAM0f,EAAc,GAC7B1hB,UAAU,6DACVuD,MAAM,YACPrM,SAAA,OAGDR,EAAAiB,IAAC,SAAA,CACCsD,KAAK,SACL+G,QAAS,IAAM0f,EAAc,GAC7B1hB,UAAU,6DACVuD,MAAM,YACPrM,SAAA,SAGDS,IAAC,MAAI,CAAAqI,UAAU,uDACftJ,EAAAiB,IAAC,SAAA,CACCsD,KAAK,SACL+G,QAAS,IAAMmf,EAAOG,gBAAgBkB,QAA+B,GACrExiB,UAAU,6DACVuD,MAAM,cACPrM,SAAA,MAGDR,EAAAiB,IAAC,SAAA,CACCsD,KAAK,SACL+G,QAAS,IAAMmf,EAAOG,gBAAgBmB,QAA6B,GACnEziB,UAAU,6DACVuD,MAAM,gBACPrM,SAAA,OAGDR,EAAAiB,IAAC,SAAA,CACCsD,KAAK,SACL+G,QAASkgB,EACTliB,UAAU,6DACVuD,MAAM,aAELrM,SAAA,UAEHS,IAAC,MAAI,CAAAqI,UAAU,uDACftJ,EAAAiB,IAAC,SAAA,CACCsD,KAAK,SACL+G,QAASsgB,EACTtiB,UAAU,6DACVuD,MAAM,qBACPrM,SAAA,UCpHA,MAAMwrB,WAAkB7D,GAc7B,WAAAC,CAAYvP,EAAaoF,EAAiBxd,EAAgBH,EAAiB+nB,GACzEC,MAAMD,GAdRE,EAAAlf,KAAA,SACAkf,EAAAlf,KAAA,aACAkf,EAAAlf,KAAA,WACAkf,EAAAlf,KAAA,YAYEA,KAAK4iB,MAAQpT,EACbxP,KAAK6iB,UAAYjO,EACjB5U,KAAK8iB,QAAU1rB,EACf4I,KAAK+iB,SAAW9rB,CAClB,CAdA,cAAOooB,GACE,MAAA,OACT,CAEA,YAAOC,CAAMrL,GACJ,OAAA,IAAI0O,GAAU1O,EAAK2O,MAAO3O,EAAK4O,UAAW5O,EAAK6O,QAAS7O,EAAK8O,SAAU9O,EAAKsL,MACrF,CAUA,gBAAOO,GACE,MAAA,CACLkD,IAAM/O,IAAgB,CACpB+L,WAAagB,IACX,MAAMgC,EAAMhC,GACNxR,IAAEA,EAAAC,IAAKA,EAAKrY,MAAAA,EAAAH,OAAOA,GAAW+rB,EAE7B,MAAA,CAAE/O,KADIgP,GAAiBzT,EAAKC,GAAO,GAAIrY,QAAS,EAAWH,QAAU,KAG9EipB,SAAU,IAGhB,CAEA,SAAAC,GACQ,MAAA6C,EAAMrD,SAAS1e,cAAc,OAM5B,OALP+hB,EAAIxT,IAAMxP,KAAK4iB,MACfI,EAAIvT,IAAMzP,KAAK6iB,UACX7iB,KAAK8iB,UAASE,EAAI5rB,MAAQ4I,KAAK8iB,SAC/B9iB,KAAK+iB,WAAUC,EAAI/rB,OAAS+I,KAAK+iB,UACrCC,EAAI/iB,UAAY,wBACT+iB,CACT,CAEA,iBAAO3C,CAAWC,GAChB,MAAM9Q,IAAEA,EAAAoF,QAAKA,EAASxd,MAAAA,EAAAH,OAAOA,GAAWqpB,EAEjC,OADM2C,GAAiBzT,EAAKoF,EAASxd,EAAOH,EAErD,CAEA,UAAAupB,GACS,MAAA,IACFvB,MAAMuB,aACThR,IAAKxP,KAAK4iB,MACVhO,QAAS5U,KAAK6iB,UACdzrB,MAAO4I,KAAK8iB,QACZ7rB,OAAQ+I,KAAK+iB,SACb7nB,KAAM,QACNwlB,QAAS,EAEb,CAEA,MAAAwC,GACS,OAAAljB,KAAK2gB,YAAYiC,KAC1B,CAEA,MAAAO,CAAO3T,GACYxP,KAAK6gB,cACb+B,MAAQpT,CACnB,CAEA,UAAA4T,GACS,OAAApjB,KAAK2gB,YAAYkC,SAC1B,CAEA,UAAAQ,CAAWzO,GACQ5U,KAAK6gB,cACbgC,UAAYjO,CACvB,CAEA,SAAA4K,CAAUC,GACF,MAAAuD,EAAMrD,SAAS1e,cAAc,OAM5B,OALP+hB,EAAIxT,IAAMxP,KAAK4iB,MACfI,EAAIvT,IAAMzP,KAAK6iB,UACX7iB,KAAK8iB,UAASE,EAAI5rB,MAAQ4I,KAAK8iB,SAC/B9iB,KAAK+iB,WAAUC,EAAI/rB,OAAS+I,KAAK+iB,UACrCC,EAAI/iB,UAAY,wBACT+iB,CACT,CAEA,SAAApD,CAAUC,EAAqBH,EAAkBD,GAC3C,OAAAI,EAAS+C,QAAU5iB,KAAK4iB,QAGxB/C,EAASgD,YAAc7iB,KAAK6iB,YAG5BhD,EAASiD,UAAY9iB,KAAK8iB,SAAWjD,EAASkD,WAAa/iB,KAAK+iB,UAItE,EAGK,SAASE,GAAiBzT,EAAaoF,EAAiBxd,EAAgBH,GAC7E,OAAOiqB,GAAsB,IAAIyB,GAAUnT,EAAKoF,EAASxd,EAAOH,GAClE,CC5Ha,MAAAqsB,GAAuBC,GAAc,wBAErCC,GAAoB,KACzB,MAACpC,GAAUC,KAuCV,OArCP9oB,EAAAA,UAAU,IACD6oB,EAAOqC,gBACZH,GACArZ,MAAOyZ,IACC,MAAAjQ,KAAEA,GAASiQ,EAEb,IAEI,MAAAC,EAAW,IAAIC,SACZD,EAAAE,OAAO,QAASpQ,GAGzB,MAAMoH,QAAiBiJ,GAAIC,KAAK,gBAAiBJ,EAAU,CACzDK,QAAS,CACP,eAAgB,yBAIpB,IAAInJ,EAASnJ,KAAKuS,UAAWpJ,EAASnJ,KAAK4B,IAOnC,MAAA,IAAI4Q,MAAM,iBALhB9C,EAAOQ,OAAO,KACZ,MAAMuC,EAAYlB,GAAiBpI,EAASnJ,KAAK4B,IAAKG,EAAK5Q,MAC9Cyf,GAAA,CAAC6B,YAKX1a,GAET,CAEO,OAAA,GAET2a,IAED,CAAChD,IAEG,MChDIiD,GAAQ,CACnBC,UAAW,wCACXC,QAAS,CACP5W,GAAI,6DACJ6W,GAAI,6DACJC,GAAI,6DAENC,KAAM,CACJC,GAAI,uDACJC,GAAI,0DACJC,SAAU,QAEZnjB,KAAM,qFACNmP,KAAM,CACJiU,KAAM,YACNC,OAAQ,SACRC,UAAW,YACXC,cAAe,eACfvjB,KAAM,sEAERwjB,MAAO,oGACP1C,YAAa,CACX2C,UAAW,8DACX/E,QAAS,4IACTvN,QAAS,+CCQPuS,GAAoB,EAAG5a,QAAO6a,kBAC5B,MAACjE,GAAUC,KAwBV,OAtBP9oB,EAAAA,UAAU,KACR,IAAKiS,EAAO,OAER,IAAA8a,EACA,GAAiB,iBAAV9a,EACL,IACY8a,EAAA1T,KAAKC,MAAMrH,EAAK,CACxB,MAEN,MACF,MAEc8a,EAAA9a,EAGZ,GAAA8a,GAAeA,EAAYvR,KAAM,CAE7B,MAAAwR,EAAcnE,EAAOoE,iBAAiBF,GAC5ClE,EAAOqE,eAAeF,EACxB,GACC,CAACF,EAAajE,IAEV,MAGHsE,GAA8C,EAClDlb,QACAC,WACAE,cAAc,eACd1K,YAAY,OAGN,MAAA0lB,EAAiB3kB,EAAM+C,QAAQ,IAC5B6N,KAAKkB,UAAUtI,GACrB,CAACA,IAEEob,EAAgB7hB,EAAAA,QAAQ,KACrB,CACL8hB,UAAW,gBACXxB,SACAnU,QAAUzG,MAGVqc,MAAO,CACLC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACA1H,GACA8D,GACA6D,GACAC,GACAC,MAGH,IAEGC,EAAeriB,EAAAA,YAClBihB,IACO,MAAAqB,EAAarB,EAAYsB,SAC/Bpc,EAASmc,IAEX,CAACnc,IAID,OAAA9T,EAAAiB,IAAC,OAAIqI,UAAW,oFAAoFA,IAClG9I,SAAAR,EAAAC,KAACkwB,IAAgBlB,gBACfzuB,SAAA,GAACS,IAAAwtB,GAAA,CAAkB5a,QAAc6a,YAAaM,UAC7CxE,GAAc,MACfvqB,KAAC,MAAI,CAAAqJ,UAAU,WACb9I,SAAA,CAAAR,EAAAiB,IAACmvB,GAAA,CACCC,gBAAiBpvB,EAAAA,IAACqvB,GAAgB,CAAAhnB,UAAU,oDAC5C0K,cAAa/S,IAAC,MAAI,CAAAqI,UAAU,0DAA2D9I,SAAYwT,IACnGuc,cAAeC,OAEjBvvB,IAACwvB,GAAe,CAAA3c,SAAUkc,UACzBU,GAAc,UACdC,GAAW,UACXC,GAAW,UACX/D,GAAkB,4EC/FS,KAC9B,MAAAzZ,GAAEA,GAAOsQ,IACThiB,EAAWC,IACXG,EAAWqM,KACXtO,gBAAEA,GAAoBE,MACtB2K,KAAEA,GAASC,IACQD,EAAAW,SAEnB,MAAE0P,KAAM8V,EAAO/wB,UAAWoV,UAAS0O,EAAS9Q,MAAAA,GAAUge,GAAiB1d,GACvEoR,EAAiBuM,KACjBC,EAAiBC,MACjB3M,gBAAEA,GAAoBC,MACtB+I,QAAEA,EAASxa,MAAOoe,GAAeC,KAGjCC,EAAYnvB,SAAY,MACxBovB,EAAqBpvB,SAAuB,OAC3CqvB,EAAeC,GAAoB9vB,YAAS,IAG5C+vB,EAAuBC,GAA4BhwB,YAAS,IAC5DiwB,EAAgBC,GAAqBlwB,WAAuC,MAmB7EmwB,EAAUxkB,EAAAA,QAAQ,KACX,MAAPyjB,OAAO,EAAAA,EAAAe,SAAgBf,EAAMe,SAEb,MAAff,OAAe,EAAAA,EAAAgB,UAAiBC,GAAkBjB,EAAcgB,UAC9D,KACN,CAAChB,IAGJjvB,EAAAA,UAAU,WACR,IAAKgwB,EAAS,OAGV,IAAC/vB,OAAOkwB,GAAI,CACR,MAAArU,EAAMsL,SAAS1e,cAAc,UACnCoT,EAAI7E,IAAM,qCACV,MAAMmZ,EAAiBhJ,SAASiJ,qBAAqB,UAAU,GAChD,OAAAzW,EAAAwW,EAAAE,aAAY1W,EAAA2W,aAAazU,EAAKsU,EAC/C,CAGA,MAAMI,EAAmB,KACnBvwB,OAAOkwB,IAAMlwB,OAAOkwB,GAAGM,QAAUhB,EAAmBvuB,UACtDsuB,EAAUtuB,QAAU,IAAIjB,OAAOkwB,GAAGM,OAAOhB,EAAmBvuB,QAAS,CACnE8uB,UACAU,WAAY,CACVC,YAAa,EACbC,OAAQ3wB,OAAOC,SAAS0wB,OACxB5a,IAAK,EACL6a,eAAgB,EAChBC,GAAI,EACJC,eAAgB,EAChBC,eAAgB,EAChBC,SAAU,EACVC,SAAU,GAEZC,OAAQ,CACNC,QAAS,KAEPzB,GAAiB,SAc3B,OAPI1vB,OAAOkwB,IAAMlwB,OAAOkwB,GAAGM,WAGzBxwB,OAAOoxB,wBAA0Bb,EAI5B,KACDhB,EAAUtuB,SAAgD,mBAA9BsuB,EAAUtuB,QAAQowB,SAChD9B,EAAUtuB,QAAQowB,YAGrB,CAACtB,IAGE,MAAArP,EAAenV,EAAAA,QAAQ,KACvB,KAAQ,MAAPyjB,OAAO,EAAAA,EAAArO,YAAa8B,EAAiB,MAAO,GAE1C,OADWA,EAAgBoB,WAAeyN,EAAIxN,QAAU,IAC9ChD,OAAO1W,UAAS,OAAAA,EAAMgG,MAAO,OAAAuJ,EAAAqV,EAAMrO,eAAN,EAAAhH,EAAgBjK,SAAStF,EAAMgG,SAC5E,CAAC4e,EAAOvM,IAkJL6B,EAAa3B,EAAe4B,UAElC,OAAIlR,EAEAlV,EAAAiB,IAAC,OAAIqI,UAAU,gDACb9I,eAAC,MAAI,CAAA8I,UAAU,2FAKhBunB,QAmBF,UAAQ,CAAAvnB,UAAU,yCACjB9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,8BAEb9I,SAAA,CAAAR,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1BsD,UAAU,OAEV9I,SAAAR,EAAAC,KAACiS,EAAA,CACC/Q,GAAG,mBACHqlB,MAAO1kB,EAAS0kB,MAChBld,UAAU,yEAEV9I,SAAA,CAAAR,EAAAiB,IAACwlB,GAAY,IAAE,oBAKnBxmB,KAAC,MAAI,CAAAqJ,UAAU,kCAGb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,6BAGZ9I,SAAA,CACCoxB,GAAA5xB,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1BsD,UAAU,gCAEV9I,SAAAR,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,uEACb9I,SAAA,CAAAR,EAAAiB,IAAC,MAAA,CACCsI,IAAK8nB,EACL/nB,UAAU,mBAEVgoB,GACArwB,EAAAA,IAAC,MAAI,CAAAqI,UAAU,8EACb9I,SAACS,EAAAA,IAAA,MAAA,CAAIqI,UAAU,2FAQvBunB,EAAMuC,cAAgBvzB,IACtBG,EAAAC,KAACuJ,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1B4D,WAAY,CAAErB,MAAO,IACrBe,UAAU,8HAEV9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,OACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,yCACb9I,SAAA,GAACP,KAAA,KAAA,CAAGqJ,UAAU,0EACZ9I,SAAA,GAACS,IAAAoyB,GAAA,CAAY/pB,UAAU,oBAAoB,YAG5CzJ,IAAoB2xB,GACnBxxB,EAAAiB,IAAC,SAAA,CACCqK,QAnJE,KACtBmmB,GAAyB,GACnB,MAAA6B,EA1KkB,CAACzf,IACzB,IAAKA,EAAO,MAAO,CAAEuJ,KAAM,CAAE5c,SAAU,GAAI+e,UAAW,MAAOgU,OAAQ,GAAIlU,OAAQ,EAAG9a,KAAM,OAAQwlB,QAAS,IACvG,IACI,MAAAuJ,EAASrY,KAAKC,MAAMrH,GAC1B,OAAIyf,GAAUA,EAAOlW,MAEjBkW,GAAUA,EAAOnY,OAFamY,EAM3B,CAAElW,KAAM,CAAE5c,SAAU,GAAI+e,UAAW,MAAOgU,OAAQ,GAAIlU,OAAQ,EAAG9a,KAAM,OAAQwlB,QAAS,GAAI,CAC7F,MACN,MAAO,CAAE3M,KAAM,CAAE5c,SAAU,GAAI+e,UAAW,MAAOgU,OAAQ,GAAIlU,OAAQ,EAAG9a,KAAM,OAAQwlB,QAAS,GACjG,GA6JeyJ,CAAkB,MAAA3C,OAAA,EAAAA,EAAOuC,cAExCzB,EAAkB2B,IAgJEhqB,UAAU,2FACVuD,MAAM,WAENrM,SAAAS,EAAAA,IAACoiB,EAAO,CAAA/Z,UAAU,iBAIvBunB,EAAMpN,kBACJ,IAAA,CAAEna,UAAU,2CAA2C9I,SAAA,CAAA,UAC9CuX,GAAW8Y,EAAMpN,kBAM7B+N,GAEGvwB,EAAAA,IAAA2O,EAAAA,SAAA,CAAApP,SAAAqwB,EAAMuC,eAEHnyB,IAAA2O,WAAA,CAAApP,SAAAR,EAAAiB,IAAC,MAAA,CACCqI,UAAU,sEACV+X,wBAAyB,CACvBC,OAAQuP,EAAMuC,aACTlV,GAAcjD,KAAKC,MAAM2V,EAAMuC,eAC5BlW,GAAkB2T,EAAMuC,cACxBtY,GAAmB+V,EAAMuC,cAC7B,IAEN9nB,QAAUiI,IAER,MAAMQ,EAASR,EAAEQ,OACjB,GAAuB,WAAnBA,EAAO0f,SAAwB1f,EAAO2f,QAAQC,UAAW,CAxQ1D,CAACC,IAG5B,GAAKxC,EAAUtuB,SAAYwuB,EAKvB,IAEQF,EAAAtuB,QAAQ+wB,OAAOD,GAAS,GAGlCxC,EAAUtuB,QAAQgxB,kBAGXhhB,GAET,GAwP0BihB,CADgBC,SAASjgB,EAAO2f,QAAQC,UAAW,IAErD,OAKL1zB,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,oDACb9I,SAAA,CAACS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,UAAU9I,SAA0B,+BAChDX,KACCoB,IAAC,IAAE,CAAAqI,UAAU,eAAe9I,SAA2B,qCAQhEgxB,GAAyBE,GACxBzxB,EAAAA,KAAC,MACC,CAAAO,SAAA,CAAAR,EAAAiB,IAAC8tB,GAAA,CACClb,MAAO6d,EACP5d,SAAU6d,EACV3d,YAAY,4CACZ1K,UAAU,oBAEZrJ,KAAC,MAAI,CAAAqJ,UAAU,kBACb9I,SAAA,CAAAR,EAAAC,KAAC,SAAA,CACCqL,QAlMCgI,kBACjB,GAACud,GAAUzd,EAEX,IAEF,MAAMoP,GAAYqO,EAAMrO,UAAY,IAAIrX,IAAK8oB,GACnB,iBAAjBA,EAA4BA,EAA6B,MAAdA,OAAc,EAAAA,EAAAhiB,KAChE0Q,OAAOuR,SAEHvN,GAAekK,EAAMlK,aAAe,IAAIxb,IAAKyb,GAC3B,iBAAfA,EAA0BA,EAAyB,MAAZA,OAAY,EAAAA,EAAA3U,KAC1D0Q,OAAOuR,SAGHC,EAAa,CACjBtnB,MAAOgkB,EAAMhkB,MACb+kB,QAASf,EAAMe,QACfllB,SAAUmkB,EAAMnkB,SAChBia,cACAyN,UAAWvD,EAAMuD,UACjBC,QAASxD,EAAMwD,QACfjB,aAAcnY,KAAKkB,UAAUuV,GAC7B4C,YAAazD,EAAMyD,YACnB9R,WACA6E,OAAQwJ,EAAMxJ,OACdkN,MAAO1D,EAAM0D,aAKTvD,EAAe/J,YAAY,CAC/B7T,KACA2H,KAAMoZ,IAER7G,EAAQ,QAAS,mBACjBmE,GAAyB,GACzBE,EAAkB,YACXle,GAGPyd,EAAW,SAAS,OAAArV,EAAA,OAAIF,EAAAlI,EAAAyQ,mBAAUnJ,WAAd,EAAAc,EAAoBlI,UAAW,yBACrD,GA0JoBU,SAAU2c,EAAe5K,UACzB9c,UAAU,+KAEV9I,SAAA,CAAAR,EAAAiB,IAACuzB,GAAO,IACPxD,EAAe5K,UAAY,UAAY,QAE1CpmB,EAAAC,KAAC,SAAA,CACCqL,QAhNG,KACvBmmB,GAAyB,GACzBE,EAAkB,OA+MEtd,SAAU2c,EAAe5K,UACzB9c,UAAU,+KAEV9I,SAAA,CAAAR,EAAAiB,IAAC4O,EAAQ,IAAE,sBAWzB5P,KAAC,MAAI,CAAAqJ,UAAU,6BAGb9I,SAAA,CAAAR,EAAAC,KAACuJ,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1B4D,WAAY,CAAErB,MAAO,IACrBe,UAAU,WAEV9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,wCAEb9I,SAAA,GAAAS,IAAC,MAAI,CAAAqI,UAAU,uBACZ9I,SAAAqwB,EAAMlK,aAAekK,EAAMlK,YAAYnf,OAAS,EAC9CqpB,EAAMlK,YAAsBxb,IAAKyb,IAChC,MAAMC,EAAgC,iBAAfD,EAA0BA,EAAyB,MAAZA,OAAY,EAAAA,EAAA1a,KAC1E,OAAO2a,EACL7mB,EAAAiB,IAAC,OAAA,CAECqI,UAAU,uHAET9I,SAAAqmB,GAH0B,iBAAfD,EAA0BA,EAAyB,MAAZA,OAAY,EAAAA,EAAA3U,KAK/D,OAIN4e,EAAMnkB,UACJzL,EAAAA,IAAC,QAAKqI,UAAU,uHACb9I,WAAMkM,aAKd7M,GACCG,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,aACb9I,SAAA,CAAAR,EAAAiB,IAACiR,EAAA,CACC/Q,GAAI,SACJqlB,MAAO,CAAEM,IAAK,iBAAkBC,OAAQ8J,EAAM5e,KAC9C3I,UAAU,2FACV,aAAW,QAEX9I,eAAC6iB,EAAO,MAEVrjB,EAAAiB,IAAC,SAAA,CACCqK,QA/RMgI,UACpB,GAAC0T,QAAQ,yBAET,UACIxC,EAAeyC,YAAY7T,GACjC1R,EAAS,0BACFoR,GAET,GAwRkBuB,SAAU8R,EACV7c,UAAW,oEACT6c,EACI,gCACA,4CAEN,aAAW,QAEV3lB,iBACE,MAAA,CAAI8I,UAAU,yFAEdga,EAAQ,YAOlBriB,EAAAA,IAAA,KAAA,CAAGqI,UAAU,wDACX9I,WAAMqM,UAGT5M,KAAC,MAAI,CAAAqJ,UAAU,gEACZ9I,SAAA,CAAAqwB,EAAMxJ,eACJ,MAAI,CAAA/d,UAAU,0BACZ9I,SAAA,CAAA4a,MAAMyH,KAAK,CAAErb,OAAQ,GAAK,CAAC8f,EAAGxe,IAC7B9I,EAAAiB,IAACsmB,GAAA,CAECje,UAAW,YAAWR,EAAI+nB,EAAMxJ,OAAU,kBAAoB,qCADzDve,MAIT7I,KAAC,OAAK,CAAAqJ,UAAU,cAAe9I,SAAA,CAAMqwB,EAAAxJ,OAAO,aAGhDpnB,KAAC,MAAI,CAAAqJ,UAAU,0BACb9I,SAAA,CAAAR,EAAAiB,IAACumB,GAAW,IACXvmB,EAAAA,IAAA,OAAA,CAAMT,SAAWuX,GAAA8Y,EAAMuD,sBAM7B7R,EAAa/a,OAAS,GACrBxH,EAAAC,KAACuJ,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1B4D,WAAY,CAAErB,MAAO,IACrBe,UAAU,WAEV9I,SAAA,GAACP,KAAA,KAAA,CAAGqJ,UAAU,+EACZ9I,SAAA,GAACS,IAAAymB,GAAA,CAAQpe,UAAU,qBAAqB,mBAEzC,MAAI,CAAAA,UAAU,uBACZ9I,SAAA+hB,EAAapX,IACZc,GAAAjM,EAAAiB,IAAC,MAAA,CAECqI,UAAU,oEACVpJ,MAAO,CACLK,gBAAiB,GAAG0L,EAAMlL,UAC1BA,MAAOkL,EAAMlL,OAGdP,SAAMyL,EAAAC,MAPFD,EAAMgG,WAepB4e,EAAMwD,SACLr0B,EAAAC,KAACuJ,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1B4D,WAAY,CAAErB,MAAO,IACrBe,UAAU,gBAEV9I,SAAA,GAACP,KAAA,KAAA,CAAGqJ,UAAU,+EACZ9I,SAAA,GAACS,IAAAwzB,GAAA,CAAWnrB,UAAU,kBAAkB,cAE1CrI,IAAC,OAAIqI,UAAU,8EACb9I,eAACk0B,GAAe,CAAAl0B,SAAAqwB,EAAMwD,eAM3BxD,EAAMyD,aACLt0B,EAAAC,KAACuJ,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1B4D,WAAY,CAAErB,MAAO,IACrBe,UAAU,gIAEV9I,SAAA,GAACP,KAAA,KAAA,CAAGqJ,UAAU,+EACZ9I,SAAA,GAACS,IAAA0zB,GAAA,CAASrrB,UAAU,oBAAoB,cAE1CrI,IAAC,OAAIqI,UAAU,8EACb9I,eAACk0B,GAAe,CAAAl0B,SAAAqwB,EAAMyD,oCAhTjC,MAAI,CAAAhrB,UAAU,gDACb9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,cACb9I,SAAA,GAACS,IAAAgO,EAAA,CAAQ3F,UAAU,wCAClBrI,EAAAA,IAAA,IAAA,CAAEqI,UAAU,2CAA2C9I,SAAmB,wBAC3ER,EAAAiB,IAACiR,EAAA,CACC/Q,GAAG,mBACHqlB,MAAO1kB,EAAS0kB,MAChBld,UAAU,4DACX9I,SAAA,0HC9Q2B,KAC9B,MAAA4S,GAAEA,GAAOsQ,IACThiB,EAAWC,IACXG,EAAWqM,KACXtO,gBAAEA,GAAoBE,MACtB2K,KAAEA,GAASC,IACQD,EAAAW,SAEzB,MAAQ0P,KAAM6Z,EAAU90B,UAAWoV,GAAY2f,GAAiBzhB,IACxD2H,KAAM+Z,EAAiB,IAAOC,GAAkB3hB,GAClDoR,EAAiBwQ,KACjBC,EAAsBC,MACtB5Q,gBAAEA,GAAoBC,MACtB+I,QAAEA,EAAAxa,MAASA,GAAUqe,KAErBC,EAAYnvB,SAAY,MACxBovB,EAAqBpvB,SAAuB,OAC3CqvB,EAAeC,GAAoB9vB,YAAS,IAC5C0zB,EAAeC,GAAoB3zB,WAAwB,MACpBA,EAAAA,SAAwB,MACtE,MAAO4zB,EAAgBC,GAAqB7zB,WAAwB,OAC7D8zB,EAAeC,GAAoB/zB,YAAS,IAG5Cg0B,EAAgBC,GAAqBj0B,WAAwB,OAC7DiwB,EAAgBC,GAAqBlwB,EAAAA,SAAgC,CAAE2b,KAAM,CAAE5c,SAAU,GAAI+e,UAAW,MAAOgU,OAAQ,GAAIlU,OAAQ,EAAG9a,KAAM,OAAQwlB,QAAS,KAoBpKnoB,EAAAA,UAAU,KACJkzB,EAAettB,OAAS,IAAM2tB,GACfC,EAAAN,EAAe,GAAGlD,UAEpC,CAACkD,EAAgBK,IAGpBvzB,EAAAA,UAAU,WACR,KAAe,MAAVgzB,OAAU,EAAAA,EAAAe,YAAY,OAEvB,IAAC9zB,OAAOkwB,GAAI,CACR,MAAArU,EAAMsL,SAAS1e,cAAc,UACnCoT,EAAI7E,IAAM,qCACV,MAAMmZ,EAAiBhJ,SAASiJ,qBAAqB,UAAU,GAChD,OAAAzW,EAAAwW,EAAAE,aAAY1W,EAAA2W,aAAazU,EAAKsU,EAC/C,CAEA,MAAMI,EAAmB,KACnBvwB,OAAOkwB,IAAMlwB,OAAOkwB,GAAGM,QAAUhB,EAAmBvuB,UACtDsuB,EAAUtuB,QAAU,IAAIjB,OAAOkwB,GAAGM,OAAOhB,EAAmBvuB,QAAS,CACnEwvB,WAAY,CACVzU,SAAU,WACVkQ,KAAM6G,EAASe,WACfpD,YAAa,EACbC,OAAQ3wB,OAAOC,SAAS0wB,OACxB5a,IAAK,EACL6a,eAAgB,EAChBC,GAAI,EACJC,eAAgB,EAChBC,eAAgB,EAChBC,SAAU,GAEZE,OAAQ,CACNC,QAAS,KACPzB,GAAiB,SAa3B,OANI1vB,OAAOkwB,IAAMlwB,OAAOkwB,GAAGM,WAGzBxwB,OAAOoxB,wBAA0Bb,EAG5B,KACDhB,EAAUtuB,SAAgD,mBAA9BsuB,EAAUtuB,QAAQowB,SAChD9B,EAAUtuB,QAAQowB,YAGrB,CAAW,MAAV0B,OAAU,EAAAA,EAAAe,aAGd/zB,EAAAA,UAAU,KACJkzB,EAAettB,OAAS,IAAM6tB,GACdC,EAAAR,EAAe,GAAG7iB,MAErC,CAAC6iB,EAAgBO,IAGd,MAAA9S,EAAenV,EAAAA,QAAQ,KACvB,KAAW,MAAVwnB,OAAU,EAAAA,EAAApS,YAAa8B,EAAiB,MAAO,GAE7C,OADWA,EAAgBoB,WAAeyN,EAAIxN,QAAU,IAC9ChD,OAAO1W,UAAS,OAAAA,EAAMgG,MAAO,OAAAuJ,EAAAoZ,EAASpS,eAAT,EAAAhH,EAAmBjK,SAAStF,EAAMgG,SAC/E,CAAC2iB,EAAUtQ,IAGRsR,EAAcxoB,EAAAA,QAAQ,IAC1B0nB,EAAee,KAAUC,GAAAA,EAAE7jB,MAAQojB,GACnC,CAACP,EAAgBO,IAUbtB,EAAuB,CAACgC,EAAuBnC,KACnD,GAAKtC,GAAkBF,EAAUtuB,QAI7B,IACF,MAAMkzB,EAAalB,EAAemB,UAAeH,GAAAA,EAAElE,UAAYmE,GAE/D,IAAuB,IAAnBC,EACF,OAIQ5E,EAAAtuB,QAAQozB,YAAYF,GAC9BZ,EAAiBW,GAGjBtzB,WAAW,KACC2uB,EAAAtuB,QAAQ+wB,OAAOD,GAAS,GAClCxC,EAAUtuB,QAAQgxB,aACjB,WAEIhhB,GAET,GAiBImS,EAAmB4L,IACvB6E,EAAkB7E,EAAM5e,KACN0f,EA7IM,CAAC9d,IACzB,IAAKA,EAAO,MAAO,CAAEuJ,KAAM,CAAE5c,SAAU,GAAI+e,UAAW,MAAOgU,OAAQ,GAAIlU,OAAQ,EAAG9a,KAAM,OAAQwlB,QAAS,IACvG,IACI,MAAAuJ,EAASrY,KAAKC,MAAMrH,GAC1B,OAAIyf,GAAUA,EAAOlW,MAEjBkW,GAAUA,EAAOnY,OAFamY,EAK3B,CAAElW,KAAM,CAAE5c,SAAU,GAAI+e,UAAW,MAAOgU,OAAQ,GAAIlU,OAAQ,EAAG9a,KAAM,OAAQwlB,QAAS,GAAI,CAC7F,MACN,MAAO,CAAE3M,KAAM,CAAE5c,SAAU,GAAI+e,UAAW,MAAOgU,OAAQ,GAAIlU,OAAQ,EAAG9a,KAAM,OAAQwlB,QAAS,GACjG,GAiIkByJ,CAAkB3C,EAAMuC,gBAiC5C,OAAIle,EAEAlV,EAAAiB,IAAC,OAAIqI,UAAU,gDACb9I,eAAC,MAAI,CAAA8I,UAAU,2FAKhBsrB,QAmBF,UAAQ,CAAAtrB,UAAU,yCACjB9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,8BAEb9I,SAAA,CAAAR,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1BsD,UAAU,OAEV9I,SAAAR,EAAAC,KAACiS,EAAA,CACC/Q,GAAG,mBACHqlB,MAAO1kB,EAAS0kB,MAChBld,UAAU,yEAEV9I,SAAA,CAAAR,EAAAiB,IAACwlB,GAAY,IAAE,oBAKnBxmB,KAAC,MAAI,CAAAqJ,UAAU,kCAGb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,iDAGZ9I,SAAA,CAAAo0B,EAASe,YACR31B,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1BsD,UAAU,OAEV9I,SAAAR,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,uEACb9I,SAAA,CAAAR,EAAAiB,IAAC,MAAA,CACCsI,IAAK8nB,EACL/nB,UAAU,mBAEVgoB,GACArwB,EAAAA,IAAC,MAAI,CAAAqI,UAAU,8EACb9I,SAACS,EAAAA,IAAA,MAAA,CAAIqI,UAAU,0FAQzBtJ,EAAAC,KAACuJ,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1B4D,WAAY,CAAErB,MAAO,IACrBe,UAAU,gBAEV9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,wCAEb9I,SAAA,GAAAS,IAAC,MAAI,CAAAqI,UAAU,uBACZ9I,SAAAo0B,EAASjO,aAAeiO,EAASjO,YAAYnf,OAAS,EACpDotB,EAASjO,YAAsBxb,IAAKyb,IACnC,MAAMC,EAAgC,iBAAfD,EAA0BA,EAAyB,MAAZA,OAAY,EAAAA,EAAA1a,KAC1E,OAAO2a,EACL7mB,EAAAiB,IAAC,OAAA,CAECqI,UAAU,uHAET9I,SAAAqmB,GAH0B,iBAAfD,EAA0BA,EAAyB,MAAZA,OAAY,EAAAA,EAAA3U,KAK/D,OAIN2iB,EAASloB,UACPzL,EAAAA,IAAC,QAAKqI,UAAU,uHACb9I,WAASkM,aAKjB7M,GACCG,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,aACb9I,SAAA,CAAAR,EAAAiB,IAACiR,EAAA,CACC/Q,GAAI,SACJqlB,MAAO,CAAEM,IAAK,iBAAkBC,OAAQ6N,EAAS3iB,KACjD3I,UAAU,2FACV,aAAW,WAEX9I,eAAC6iB,EAAO,MAEVrjB,EAAAiB,IAAC,SAAA,CACCqK,QAhKCgI,UACf,GAAC0T,QAAQ,sBAET,UACIxC,EAAeyC,YAAY7T,GACjC1R,EAAS,0BACFoR,GAET,GAyJkBuB,SAAUmQ,EAAe4B,UACzB9c,UAAU,yFACV,aAAW,WAEX9I,eAAC8iB,EAAQ,YAMhBriB,EAAAA,IAAA,KAAA,CAAGqI,UAAU,wDACX9I,WAASqM,UAGZ5M,KAAC,MAAI,CAAAqJ,UAAU,gEACZ9I,SAAA,CAAAo0B,EAASvN,eACP,MAAI,CAAA/d,UAAU,0BACZ9I,SAAA,CAAA4a,MAAMyH,KAAK,CAAErb,OAAQ,GAAK,CAAC8f,EAAGxe,IAC7B9I,EAAAiB,IAACsmB,GAAA,CAECje,UAAW,YAAWR,EAAI8rB,EAASvN,OAAU,kBAAoB,qCAD5Dve,MAIT7I,KAAC,OAAK,CAAAqJ,UAAU,cAAe9I,SAAA,CAASo0B,EAAAvN,OAAO,aAGnDpnB,KAAC,MAAI,CAAAqJ,UAAU,0BACb9I,SAAA,CAAAR,EAAAiB,IAACumB,GAAW,IACXvmB,EAAAA,IAAA,OAAA,CAAMT,SAAWuX,GAAA6c,EAASR,kBAE7Bn0B,KAAC,MAAI,CAAAqJ,UAAU,0BACb9I,SAAA,CAAAR,EAAAiB,IAACk1B,GAAO,WACP,OAAM,CAAA31B,SAAA,CAAes0B,EAAAttB,OAAO,mBAMlCotB,EAASP,SACRr0B,EAAAC,KAACuJ,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1B4D,WAAY,CAAErB,MAAO,IACrBe,UAAU,gBAEV9I,SAAA,GAACP,KAAA,KAAA,CAAGqJ,UAAU,+EACZ9I,SAAA,GAACS,IAAAwzB,GAAA,CAAWnrB,UAAU,kBAAkB,cAE1CrI,IAAC,OAAIqI,UAAU,8EACb9I,eAACk0B,GAAe,CAAAl0B,SAAAo0B,EAASP,eAM9BO,EAASN,aACRt0B,EAAAC,KAACuJ,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1B4D,WAAY,CAAErB,MAAO,IACrBe,UAAU,gIAEV9I,SAAA,GAACP,KAAA,KAAA,CAAGqJ,UAAU,+EACZ9I,SAAA,GAACS,IAAA0zB,GAAA,CAASrrB,UAAU,oBAAoB,iBAE1CrI,IAAC,OAAIqI,UAAU,8EACb9I,eAACk0B,GAAe,CAAAl0B,SAAAo0B,EAASN,wBAOjCr0B,KAAC,MAAI,CAAAqJ,UAAU,6BAGZ9I,SAAA,CAAA+hB,EAAa/a,OAAS,GACrBxH,EAAAC,KAACuJ,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1B4D,WAAY,CAAErB,MAAO,IACrBe,UAAU,gBAEV9I,SAAA,GAACP,KAAA,KAAA,CAAGqJ,UAAU,+EACZ9I,SAAA,GAACS,IAAAymB,GAAA,CAAQpe,UAAU,qBAAqB,mBAEzC,MAAI,CAAAA,UAAU,uBACZ9I,SAAA+hB,EAAapX,IACZc,GAAAjM,EAAAiB,IAAC,MAAA,CAECqI,UAAU,oEACVpJ,MAAO,CACLK,gBAAiB,GAAG0L,EAAMlL,UAC1BA,MAAOkL,EAAMlL,OAGdP,SAAMyL,EAAAC,MAPFD,EAAMgG,WAerBjS,EAAAC,KAACuJ,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1B4D,WAAY,CAAErB,MAAO,IACrBe,UAAU,WAEd9I,SAAA,GAACS,IAAA,MAAA,CAAIqI,UAAU,yCACb9I,SAAAR,EAAAC,KAAC,SAAA,CACCqL,QAAS,IAAMkqB,GAAkBD,GACjCjsB,UAAU,+IAET9I,SAAA,CAAA+0B,EAAiBv1B,EAAAiB,IAAAm1B,GAAA,CAAA,GAAiBp2B,EAAAiB,IAAC6f,EAAc,IAAG,iBACtCgU,EAAettB,OAAO,UAKxC+tB,GAAiBT,EAAettB,OAAS,GACvCvG,EAAAA,IAAA,MAAA,CAAIqI,UAAU,4BACZ9I,SAAes0B,EAAA3pB,IAAI,CAAC0lB,EAAO/qB,IAC1B9F,EAAAC,KAAC,SAAA,CAECqL,QAAS,IAlUG,CAACulB,IAC3ByE,EAAkBzE,EAAM5e,KACH8hB,EAAAlD,EAAMe,QAAS,IAgUPyE,CAAoBxF,GACnCvnB,UAAW,+DACT+rB,IAAmBxE,EAAM5e,IACrB,4BACA,0GAEPzR,SAAA,CAAA,IACGsF,EAAQ,EAAE,IAAE+qB,EAAMhkB,QARfgkB,EAAM5e,QAelB6iB,EAAettB,OAAS,GAAKouB,EAC3B31B,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,yEAEb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,kCACb9I,SAAA,CAAAS,EAAAA,IAAC,KAAG,CAAAqI,UAAU,+CACX9I,SAAAo1B,EAAY/oB,UAEf5M,KAAC,MAAI,CAAAqJ,UAAU,oCACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,cACb9I,SAAA,GAACP,KAAA,IAAA,CAAEqJ,UAAU,2CAA2C9I,SAAA,CAAA,cAC1Co1B,EAAYhE,WAEzBgE,EAAYnS,kBACV,IAAA,CAAEna,UAAU,2CAA2C9I,SAAA,CAAA,UAC9CuX,GAAW6d,EAAYnS,iBAKpC5jB,GAAmB41B,IAAmBG,EAAY3jB,KACjDjS,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAM2Z,EAAgB2Q,GAC/BtsB,UAAU,2FACVuD,MAAM,WAENrM,SAAAS,EAAAA,IAACoiB,EAAO,CAAA/Z,UAAU,oBAOzBmsB,IAAmBG,EAAY3jB,KAC9BhR,EAAAA,IAAA2O,EAAAA,SAAA,CACGpP,WAAY4yB,aACXpzB,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,gCACb9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,0DAA0D9I,SAExE,aACAR,EAAAiB,IAAC,MAAA,CACCqI,UAAU,sFACV+X,wBAAyB,CACvBC,OAAQsU,EAAYxC,aACflV,GAAcjD,KAAKC,MAAM0a,EAAYxC,eAClClW,GAAkB0Y,EAAYxC,cAC9BtY,GAAmB8a,EAAYxC,cACnC,IAEN9nB,QAAUiI,IAER,MAAMQ,EAASR,EAAEQ,OACjB,GAAuB,WAAnBA,EAAO0f,SAAwB1f,EAAO2f,QAAQC,UAAW,CAC3D,MAAMC,EAAUI,SAASjgB,EAAO2f,QAAQC,UAAW,IAC9BI,EAAA6B,EAAYhE,QAASgC,EAC5C,QAKN3zB,EAAAA,KAAC,MAAI,CAAAqJ,UAAU,6EACb9I,SAAA,CAACS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,UAAU9I,SAA0B,+BAChDX,KACCoB,IAAC,IAAE,CAAAqI,UAAU,eAAe9I,SAA2B,qCAQhEi1B,IAAmBG,EAAY3jB,KAC7BhS,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,gCACb9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,0DAA0D9I,SAExE,gBACAR,EAAAiB,IAAC8tB,GAAA,CACClb,MAAO6d,EACP5d,SAAU6d,EACV3d,YAAY,4CACZ1K,UAAU,oBAEZrJ,KAAC,MAAI,CAAAqJ,UAAU,kBACb9I,SAAA,CAAAR,EAAAC,KAAC,SAAA,CACCqL,QAxWGgI,UACjB,GAACmiB,GAAmBG,EAEpB,UACIX,EAAoBhO,YAAY,CACpC7T,GAAIqiB,EACJ1a,KAAM,CACJ4a,WAAYviB,EACZwe,QAASgE,EAAYhE,QACrB/kB,MAAO+oB,EAAY/oB,MACnBumB,aAAcnY,KAAKkB,UAAUuV,GAC7B6C,MAAOqB,EAAYrB,OAAS,KAGhCjH,EAAQ,QAAS,mBACjBoI,EAAkB,MAClB/D,EAAkB,CAAEvU,KAAM,CAAE5c,SAAU,GAAI+e,UAAW,MAAOgU,OAAQ,GAAIlU,OAAQ,EAAG9a,KAAM,OAAQwlB,QAAS,WACnGtW,GACPX,EAAM,QAAS,yBAEjB,GAqVkBuB,SAAU4gB,EAAoB7O,UAC9B9c,UAAU,+KAEV9I,SAAA,CAAAR,EAAAiB,IAACuzB,GAAO,IACPS,EAAoB7O,UAAY,UAAY,QAE/CpmB,EAAAC,KAAC,SAAA,CACCqL,QAtXK,KACvBoqB,EAAkB,MAClB/D,EAAkB,CAAEvU,KAAM,CAAE5c,SAAU,GAAI+e,UAAW,MAAOgU,OAAQ,GAAIlU,OAAQ,EAAG9a,KAAM,OAAQwlB,QAAS,MAqXxF1V,SAAU4gB,EAAoB7O,UAC9B9c,UAAU,+KAEV9I,SAAA,CAAAR,EAAAiB,IAAC4O,EAAQ,IAAE,iBAOO,IAA1BilB,EAAettB,cAChB,MAAA,CAAI8B,UAAU,oDACb9I,SAAA,CAACS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,OAAO9I,SAAqB,0BACxCX,KACCoB,IAAC,IAAE,CAAAqI,UAAU,UAAU9I,SAA8B,sCAGvD,yBAjWP,MAAI,CAAA8I,UAAU,gDACb9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,cACb9I,SAAA,GAACS,IAAAk1B,GAAA,CAAO7sB,UAAU,wCACjBrI,EAAAA,IAAA,IAAA,CAAEqI,UAAU,2CAA2C9I,SAAgB,qBACxER,EAAAiB,IAACiR,EAAA,CACC/Q,GAAG,mBACHqlB,MAAO1kB,EAAS0kB,MAChBld,UAAU,4DACX9I,SAAA,2DCnOL81B,GAA0C,EAAGC,UAAS/gB,eAAcghB,iBAAgBC,oBAClF,MAAA/rB,KAAEA,GAASC,IACXa,EAAcd,EAAKW,SAGnBqrB,EAAe9qB,GACnBJ,EACA+qB,EAAQG,aACRH,EAAQI,eACRJ,EAAQK,gBAIJC,EAAWN,EAAQO,YAAcP,EAAQQ,SAG7C,OAAA/2B,EAAAiB,IAACuI,GAAOC,IAAP,CAECkN,SAAUnB,EAEVwhB,QAAM,EACN1tB,UAAU,sJAEV9I,SAAAR,EAAAC,KAACiS,EAAA,CACC/Q,GAAI,aAAao1B,EAAQtkB,MACzBuU,MAAO,CAAEyQ,eAAgBp1B,OAAO+X,SAChCtQ,UAAU,6BAEZ9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,6FACZ9I,SAAA,CAAA+1B,EAAQW,MACPl3B,EAAAiB,IAAC,MAAA,CACC4X,IAAK0d,EAAQW,MACbpe,IAAK,GAAGyd,EAAQ1pB,YAChBvD,UAAU,6BACV4L,QAAQ,OACRmE,SAAS,QACT5Y,MAAM,MACNH,OAAO,QAGTN,EAAAiB,IAACmY,EAAQ,CAAA9P,UAAU,oDAEpB,MAAI,CAAAA,UAAU,yBACb9I,SAAAS,MAAC,QAAKqI,UAAW,8CAA8CktB,EAAeD,EAAQY,UACnF32B,WAAc+1B,EAAQY,iBAI7Bl3B,KAAC,MAAI,CAAAqJ,UAAU,8BACb9I,SAAA,GAACS,IAAA,KAAA,CAAGqI,UAAU,4IACX9I,SAAkB+K,GAAAC,EAAa+qB,EAAQ1pB,MAAO0pB,EAAQzpB,QAASypB,EAAQxpB,aAEzE9L,IAAA,IAAA,CAAEqI,UAAU,kEACV9I,SAAkB+K,GAAAC,EAAa+qB,EAAQjqB,YAAaiqB,EAAQhqB,cAAegqB,EAAQ/pB,mBAEtFvM,KAAC,MAAI,CAAAqJ,UAAU,4BACZ9I,SAAA,CAAAk2B,EAAa9Y,MAAM,EA1DL,GA0D0BzS,IAAKisB,GAC5Cp3B,EAAAiB,IAAC,OAAA,CAECqI,UAAU,gHAET9I,SAAA42B,GAHIA,IAMRV,EAAalvB,OAlEC,GAmEZvH,EAAAA,KAAA,OAAA,CAAKqJ,UAAU,0GAA0G9I,SAAA,CAAA,KACrHk2B,EAAalvB,OApEL,EAoE+B,UAIhDxH,EAAAiB,IAAC,MAAA,CACCqI,UAAU,2EACVgC,QAAUiI,GAAMA,EAAE8jB,kBAEjB72B,WAEIP,EAAAA,KAAA2P,EAAAA,SAAA,CAAApP,SAAA,CAAA+1B,EAAQQ,UACP/2B,EAAAC,KAAC,IAAA,CACC4N,KAAM0oB,EAAQQ,SACdhjB,OAAO,SACP6D,IAAI,sBACJtO,UAAW,6GACY,cAAnBitB,EAAQY,OACN,yDACA,4GAEN,aAAY,GAAGZ,EAAQ1pB,kBAEvBrM,SAAA,GAACS,IAAAq2B,GAAA,CAAkBntB,KAAM,KAAM,YAIlCosB,EAAQO,YACP92B,EAAAC,KAAC,IAAA,CACC4N,KAAM0oB,EAAQO,WACd/iB,OAAO,SACP6D,IAAI,sBACJtO,UAAU,yOACV,aAAY,GAAGitB,EAAQ1pB,qBAEvBrM,SAAA,GAACS,IAAAuO,EAAA,CAASrF,KAAM,KAAM,eAK1B,cAxFHosB,EAAQtkB,qEC5Ba,aACxB,MAAAmB,GAAEA,GAAOsQ,IACThiB,EAAWC,IACXG,EAAWqM,KACXzD,KAAEA,GAASC,IACXa,EAAcd,EAAKW,UAGnB6J,QAAEA,QAASpC,EAAOykB,iBAAAA,EAAAhV,aAAkBA,GAAiBiV,GAAiBpkB,EAAI5H,IAGzEisB,EAAeC,GAAoBj2B,WAAwB,OAC3Dk2B,EAAmBC,GAAwBn2B,WAAS,IACpDo2B,EAAoBC,GAAyBr2B,WAAS,GAa7D,GAAIyT,EAEA,OAAAlV,EAAAiB,IAAC,OAAIqI,UAAU,gDACb9I,eAAC,MAAI,CAAA8I,UAAU,2FAKjB,GAAAwJ,IAAUykB,EACZ,aACG,MAAI,CAAAjuB,UAAU,gDACb9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,cACb9I,SAAA,CAAAS,EAAAA,IAAC,IAAE,CAAAqI,UAAU,gDAAiD9I,SAAAsS,GAAS,qBACvE9S,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAM5J,EAAS,YAAa,CAAE8kB,MAAO1kB,EAAS0kB,QACvDld,UAAU,0CACX9I,SAAA,mBAQH,MAKAu3B,EAAmBpb,GAChBA,EAAIpL,SAAS,uBAGhBymB,EAAsBrb,cAC1B,IAAIiV,EAAU,GASP,OAPHjV,EAAIpL,SAAS,uBACLiK,GAAA,OAAAA,EAAAmB,EAAIpC,MAAM,WAAW,SAArBiB,EAAAA,EAAyBjB,MAAM,KAAK,KAAM,GAC3CoC,EAAIpL,SAAS,wBACZoK,GAAA,OAAAA,EAAAgB,EAAIpC,MAAM,MAAM,SAAhBoB,EAAAA,EAAoBpB,MAAM,KAAK,KAAM,GACtCoC,EAAIpL,SAAS,eACZqgB,GAAA,OAAA/V,EAAAc,EAAIpC,MAAM,aAAa,SAAvB,EAAAsB,EAA2BtB,MAAM,KAAK,KAAM,IAEjDqX,EAAU,iCAAiCA,sCAA8C,IAI5FqG,GAAgB,OAAAzc,EAAiB+b,EAAAW,aAAQ,EAAA1c,EAAAmH,OAAQkO,IAAmBkH,EAAgBlH,MAAW,GAC/FsH,GAAe,OAAAxc,EAAiB4b,EAAAW,aAAQ,EAAAvc,EAAAgH,OAAQkO,GAAkBkH,EAAgBlH,MAAW,GAGjG,SAAA5wB,KAAC,UAAQ,CAAAqJ,UAAU,2DACjB9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,yBAEb9I,SAAA,CAAAR,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1BsD,UAAU,OAEV9I,SAAAR,EAAAC,KAACiS,EAAA,CACC/Q,GAAG,YACHqlB,MAAO1kB,EAAS0kB,MAChBld,UAAU,oGAEV9I,SAAA,CAAAR,EAAAiB,IAACwlB,GAAY,IAAE,kBAKnBzmB,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1BsD,UAAU,2DAEV9I,SAAAR,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,kCAEZ9I,SAAA,CAAA+2B,EAAiBL,aACf,MAAI,CAAA5tB,UAAU,WACb9I,SAAAR,EAAAiB,IAAC,MAAA,CACC4X,IAAK0e,EAAiBL,MACtBpe,IAAKye,EAAiB1qB,MACtBvD,UAAU,kDACV4L,QAAQ,QACRmE,SAAS,QACT5Y,MAAM,MACNH,OAAO,YAMbL,KAAC,MAAI,CAAAqJ,UAAU,SACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,wCAEZ9I,SAAA,CAAiB+2B,EAAA5Q,aAAe4Q,EAAiB5Q,YAAYnf,OAAS,EACpE+vB,EAAiB5Q,YAAsBxb,IAAKyb,IAC3C,MAAMC,EAAgC,iBAAfD,EAA0BA,EAAyB,MAAZA,OAAY,EAAAA,EAAA1a,KAC1E,OAAO2a,EACL7mB,EAAAiB,IAAC,OAAA,CAECqI,UAAU,uHAET9I,SAAAqmB,GAH0B,iBAAfD,EAA0BA,EAAyB,MAAZA,OAAY,EAAAA,EAAA3U,KAK/D,OAINslB,EAAiB7qB,UACfzL,EAAAA,IAAC,QAAKqI,UAAU,uHACb9I,WAAiBkM,WAIxBzL,EAAAA,IAAC,QAAKqI,UAAW,+CACa,cAA5BiuB,EAAiBJ,OACb,oEAC4B,aAA5BI,EAAiBJ,OACjB,wEACA,iEAEH32B,SAA4B,gBAAX22B,OAAyB,KAAmC,aAA5BI,EAAiBJ,OAAwB,MAAQ,WAGtGl2B,EAAAA,IAAA,KAAA,CAAGqI,UAAU,oEACX9I,WAAiBqM,QAEnB5L,EAAAA,IAAA,IAAA,CAAEqI,UAAU,gEACV9I,WAAiB8L,cAInBirB,EAAiBb,aAAalvB,OAAS,GACrCvH,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,OACb9I,SAAA,GAACP,KAAA,KAAA,CAAGqJ,UAAU,sFACZ9I,SAAA,CAAAR,EAAAiB,IAACkP,EAAO,IAAE,YAEZlP,EAAAA,IAAC,OAAIqI,UAAU,uBACZ9I,WAAiBk2B,aAAavrB,IAAI,CAACisB,EAAMtxB,IACxC9F,EAAAiB,IAAC,OAAA,CAECqI,UAAU,yGAET9I,SAAA42B,GAHItxB,SAWdyc,EAAa/a,OAAS,GACpBvH,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,OACb9I,SAAA,GAACP,KAAA,KAAA,CAAGqJ,UAAU,sFACZ9I,SAAA,CAAAR,EAAAiB,IAACkP,EAAO,IAAE,sBAEX,MAAI,CAAA7G,UAAU,uBACZ9I,SAAa+hB,EAAApX,IAAKc,IAEjB,MAAMsX,EAAatX,EAAMlL,MArKpC,CACLR,gBAJc,GADKijB,EAyK4CvX,EAAMlL,UAnKrEA,MAJgByiB,QAuK8D,EAzK5D,IAACA,EA4KD,OAAAxjB,EAAAC,KAACiS,EAAA,CAEC/Q,GAAI,qBAAqB8K,EAAMgG,MAC/B3I,UAAU,iHACVuD,MAAO,GAAGZ,EAAMC,0BAChBhM,MAAO,IACFqjB,EACH,kBAAmBtX,EAAMlL,OAAS,WAGpCP,SAAA,CAAAS,EAAAA,IAAC,OAAK,CAAAqI,UAAU,gBAAiB9I,SAAAyL,EAAMC,OACvClM,EAAAC,KAAC,OAAA,CACCqJ,UAAU,6BACVpJ,MAAO,CAAEa,MAAOkL,EAAMlL,OAAS,WAChCP,SAAA,CAAA,IACGyL,EAAMga,UAAU,SAdfha,EAAMgG,cAwBvBhS,KAAC,MAAI,CAAAqJ,UAAU,uBACZ9I,SAAA,CAAA+2B,EAAiBT,YAChB92B,EAAAC,KAAC,IAAA,CACC4N,KAAM0pB,EAAiBT,WACvB/iB,OAAO,SACP6D,IAAI,sBACJtO,UAAU,yJAEV9I,SAAA,CAAAR,EAAAiB,IAACuO,EAAS,IAAE,aAGf+nB,EAAiBR,UAChB/2B,EAAAC,KAAC,IAAA,CACC4N,KAAM0pB,EAAiBR,SACvBhjB,OAAO,SACP6D,IAAI,sBACJtO,UAAU,uHAEV9I,SAAA,CAAAR,EAAAiB,IAACq2B,GAAkB,IAAE,6BAQjCr3B,KAAC,MAAI,CAAAqJ,UAAU,wCAEZ9I,SAAA,CAAiB+2B,EAAAa,QAAUb,EAAiBa,OAAO5wB,OAAS,GAC1DxH,EAAAC,KAAA,MAAA,CAAIqJ,UAAU,oEACb9I,SAAA,GAACP,KAAA,KAAA,CAAGqJ,UAAU,mFACZ9I,SAAA,CAAAR,EAAAiB,IAACmY,EAAQ,IAAE,eAEbnY,EAAAA,IAAC,OAAIqI,UAAU,uDACZ9I,WAAiB43B,OAAOjtB,IAAI,CAAC+rB,EAAOpxB,IACnC9F,EAAAiB,IAACuI,GAAOC,IAAP,CAECC,QAAS,CAAEC,QAAS,EAAGzB,MAAO,IAC9BxC,QAAS,CAAEiE,QAAS,EAAGzB,MAAO,GAC9B0B,WAAY,CAAErB,MAAe,GAARzC,GACrBwD,UAAU,uBACVgC,QAAS,IAAMosB,EAAiBR,GAEhC12B,WAAAS,IAAC,MAAI,CAAAqI,UAAU,4FACb9I,SAAAR,EAAAiB,IAAC,MAAA,CACC4X,IAAKqe,EACLpe,IAAK,GAAGye,EAAiB1qB,SAAS/G,EAAQ,IAC1CwD,UAAU,qFACV4L,QAAQ,OACRmE,SAAS,QACT5Y,MAAM,MACNH,OAAO,WAfNwF,SA0BdmyB,EAAczwB,OAAS,GACtBvH,EAAAA,KAAC,OAAIqJ,UAAU,oEAAoE,sBAAkB,EACnG9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,yCACb9I,SAAA,GAACP,KAAA,KAAA,CAAGqJ,UAAU,8EACZ9I,SAAA,CAAAR,EAAAiB,IAACo3B,GAAO,IAAE,eAEXJ,EAAczwB,OAAS,GACrBvH,EAAAA,KAAA,OAAA,CAAKqJ,UAAU,2CACb9I,SAAA,CAAoBm3B,EAAA,EAAE,MAAIM,EAAczwB,eAK/CvH,KAAC,MAAI,CAAAqJ,UAAU,WAEb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,iBACX9I,SAAA,CAAA,YACM,MAAAqwB,EAAQoH,EAAcN,GAC5B,OAAK9G,SAGF,MACE,CAAArwB,SAAA,EAvPDmc,EAuPckU,EAtP3BlU,EAAIpL,SAAS,gBAAkBoL,EAAIpL,SAAS,YAuP5BtR,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,oFACb9I,SAAA,GAACS,IAAA,MAAA,CAAIqI,UAAU,eACb9I,SAAAR,EAAAiB,IAAC,SAAA,CACC4X,IAAKmf,EAAmBnH,GACxBhkB,MAAO,GAAG0qB,EAAiB1qB,aAAa8qB,EAAoB,IAC5DruB,UAAU,gBACVgvB,iBAAe,EACfC,MAAM,iGAIVt3B,IAAC,MAAI,CAAAqI,UAAU,sFACb9I,SAAAR,EAAAiB,IAAC,IAAA,CACC4M,KAAMgjB,EACN9c,OAAO,SACP6D,IAAI,sBACJtO,UAAU,iGACX9I,SAAA,sBAMLP,EAAAA,KAAC,MAAI,CAAAqJ,UAAU,oFACb9I,SAAA,GAACS,IAAA,MAAA,CAAIqI,UAAU,eACb9I,SAAAR,EAAAC,KAAC,QAAA,CACC4Y,IAAKgY,EACLiC,UAAQ,EACRxpB,UAAU,6BACVkvB,QAAQ,WAERh4B,SAAA,CAAAS,EAAAA,IAAC,SAAO,CAAA4X,IAAKgY,EAAOtsB,KAAK,cACxBtD,EAAAA,IAAA,SAAA,CAAO4X,IAAKgY,EAAOtsB,KAAK,eACxBtD,EAAAA,IAAA,SAAA,CAAO4X,IAAKgY,EAAOtsB,KAAK,cAAc,+BAK3CtD,IAAC,MAAI,CAAAqI,UAAU,sFACb9I,SAAAR,EAAAiB,IAAC,IAAA,CACC4M,KAAMgjB,EACN9c,OAAO,SACP6D,IAAI,sBACJtO,UAAU,mGACX9I,SAAA,iBAQN,OAAAgb,EAAA+b,EAAiBkB,wBAAjB,EAAAjd,EAAqCmc,KACnC33B,EAAAiB,IAAA,MAAA,CAAIqI,UAAU,kDACb9I,SAAAR,EAAAiB,IAAC,MAAA,CACCqI,UAAU,uGACV+X,wBAAyB,CAAEC,OAAQiW,EAAiBkB,kBAAkBd,WA7D7D,KAnPhB,IAAChb,CAsTH,EArED,GAwEDsb,EAAczwB,OAAS,GAEpBvH,EAAAA,KAAA2P,EAAAA,SAAA,CAAApP,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAMssB,EAAsB5U,GAAmB,IAATA,EAAaiV,EAAczwB,OAAS,EAAIwb,EAAO,GAC9F1Z,UAAU,2JACV,aAAW,QAEX9I,SAAAS,EAAAA,IAACy3B,GAAc,CAAAvuB,KAAM,OAEvBnK,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAMssB,EAAsB5U,GAAUA,IAASiV,EAAczwB,OAAS,EAAI,EAAIwb,EAAO,GAC9F1Z,UAAU,4JACV,aAAW,QAEX9I,SAAAS,EAAAA,IAACgnB,GAAe,CAAA9d,KAAM,aAO7B8tB,EAAczwB,OAAS,GACrBvG,EAAAA,IAAA,MAAA,CAAIqI,UAAU,iCACZ9I,SAAcy3B,EAAA9sB,IAAI,CAACmc,EAAWxhB,IAC7B9F,EAAAiB,IAAC,SAAA,CAECqK,QAAS,IAAMssB,EAAqB9xB,GACpCwD,UAAW,oCACTxD,IAAU6xB,EACN,mCACA,6EAEN,aAAY,GAAG7xB,EAAQ,aAPlBA,YAiBlBqyB,EAAa3wB,OAAS,GACrBvH,EAAAA,KAAC,OAAIqJ,UAAU,0EAA0E,uBAAmB,EAE1G9I,SAAA,CAAAS,EAAAA,IAAC,MAAI,CAAAqI,UAAU,mCACb9I,WAAAP,KAAC,MAAI,CAAAqJ,UAAU,sBAAsBpJ,MAAO,CAAEy4B,SAAU,QAASl4B,MAAO,QAEtED,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,yCACb9I,SAAA,GAACP,KAAA,KAAA,CAAGqJ,UAAU,8EACZ9I,SAAA,CAAAR,EAAAiB,IAACo3B,GAAO,IAAE,aAEXF,EAAa3wB,OAAS,GACpBvH,EAAAA,KAAA,OAAA,CAAKqJ,UAAU,2CACb9I,SAAA,CAAqBq3B,EAAA,EAAE,MAAIM,EAAa3wB,aAG/C,cAEQ,MAAAqpB,EAAQsH,EAAaN,GAC3B,IAAKhH,EAAc,OAAA,KAEnB,MAAM+H,GAAkB,OAAApd,EAAA+b,EAAiBW,aAAjB1c,EAAAA,EAAyBqd,QAAQhI,MAAU,EAGjE,SAAA5wB,KAAC,MAAI,CAAAqJ,UAAU,SACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,gEAEb9I,SAAA,OAAC,OAAI8I,UAAU,uBAAuBpJ,MAAO,CAAE44B,UAAW,SACxDt4B,SAAAR,EAAAiB,IAAC,SAAA,CACC4X,IAAKmf,EAAmBnH,GACxBhkB,MAAO,GAAG0qB,EAAiB1qB,gBAAgBgrB,EAAqB,IAChEvuB,UAAU,gBACVgvB,iBAAe,EACfC,MAAM,iGAIVt3B,IAAC,MAAI,CAAAqI,UAAU,sFACb9I,SAAAR,EAAAiB,IAAC,IAAA,CACC4M,KAAMgjB,EACN9c,OAAO,SACP6D,IAAI,sBACJtO,UAAU,mIACX9I,SAAA,iBAOJ,OAAAmb,EAAA4b,EAAiBkB,wBAAjB,EAAA9c,EAAqCid,WACnC,MAAI,CAAAtvB,UAAU,kDAAkDpJ,MAAO,CAAEy4B,SAAU,QAASI,OAAQ,eACnGv4B,SAAAR,EAAAiB,IAAC,MAAA,CACCqI,UAAU,uGACV+X,wBAAyB,CAAEC,OAAQiW,EAAiBkB,kBAAkBG,UAM/E,EA5CH,GA+CCT,EAAa3wB,OAAS,GAEnBvH,EAAAA,KAAA2P,EAAAA,SAAA,CAAApP,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAMwsB,EAAuB9U,GAAmB,IAATA,EAAamV,EAAa3wB,OAAS,EAAIwb,EAAO,GAC9F1Z,UAAU,2JACV,aAAW,QAEX9I,SAAAS,EAAAA,IAACy3B,GAAc,CAAAvuB,KAAM,OAEvBnK,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAMwsB,EAAuB9U,GAAUA,IAASmV,EAAa3wB,OAAS,EAAI,EAAIwb,EAAO,GAC9F1Z,UAAU,4JACV,aAAW,QAEX9I,SAAAS,EAAAA,IAACgnB,GAAe,CAAA9d,KAAM,eAQ/BguB,EAAa3wB,OAAS,GACpBvG,EAAAA,IAAA,MAAA,CAAIqI,UAAU,iCACZ9I,SAAa23B,EAAAhtB,IAAI,CAACmc,EAAWxhB,IAC5B9F,EAAAiB,IAAC,SAAA,CAECqK,QAAS,IAAMwsB,EAAsBhyB,GACrCwD,UAAW,oCACTxD,IAAU+xB,EACN,iCACA,6EAEN,aAAY,GAAG/xB,EAAQ,aAPlBA,SAgBhByxB,EAAiByB,4BACf,MAAA,CAAI1vB,UAAU,oEACb9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,2DAA2D9I,SAEzE,UACAR,EAAAiB,IAAC,MAAA,CACCqI,UAAU,+EACV+X,wBAAyB,CAAEC,OAAQiW,EAAiByB,0BAOzDzB,EAAiB0B,SAASzxB,OAAS,GACjCvH,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,oEACb9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,2DAA2D9I,SAEzE,YACCS,IAAA,KAAA,CAAGqI,UAAU,YACX9I,SAAiB+2B,EAAA0B,SAAS9tB,IAAI,CAAC+tB,EAASpzB,WACtC,KAAA,CAAewD,UAAU,yBACxB9I,SAAA,CAAAS,EAAAA,IAAC,OAAK,CAAAqI,UAAU,2KACb9I,SAAAsF,EAAQ,IAEV7E,EAAAA,IAAA,OAAA,CAAKqI,UAAU,mCAAoC9I,SAAQ04B,MAJrDpzB,SAYhByxB,EAAiBxR,UAAUve,OAAS,GAClCvH,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,oEACb9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,2DAA2D9I,SAEzE,WACCS,IAAA,KAAA,CAAGqI,UAAU,YACX9I,SAAiB+2B,EAAAxR,UAAU5a,IAAI,CAACwW,EAAU7b,WACxC,KAAA,CAAewD,UAAU,yBACxB9I,SAAA,GAACS,IAAA,OAAA,CAAKqI,UAAU,+EACfrI,EAAAA,IAAA,OAAA,CAAKqI,UAAU,mCAAoC9I,SAASmhB,MAFtD7b,eAYpB2xB,GACCz3B,EAAAC,KAACuJ,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,GACpBjE,QAAS,CAAEiE,QAAS,GACpBoG,KAAM,CAAEpG,QAAS,GACjBL,UAAU,sEACVgC,QAAS,IAAMosB,EAAiB,MAEhCl3B,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAMosB,EAAiB,MAChCpuB,UAAU,iEACX9I,SAAA,MAGDR,EAAAiB,IAAC,MAAA,CACC4X,IAAK4e,EACL3e,IAAI,SACJxP,UAAU,uCACV4L,QAAQ,QACRmE,SAAS,wDC5iBf8f,GAAU,CACdljB,WACAmjB,mBACAC,eACAxqB,cACAsB,SACAuG,QACA4iB,WACAC,SACAC,eACAzqB,gBAGI0qB,GAAgD,EAAGC,MAAK/iB,WAAUgjB,UAAS,MAC/E,MAAO/R,EAAYgS,GAAiBn4B,YAAS,IACvC6iB,gBAAEA,GAAoBC,MACtB7Z,KAAEA,GAASC,IACXa,EAAcd,EAAKW,SAGnBjB,EAAgBsvB,EAAIG,SAAWV,GAAQO,EAAIG,SAC7CV,GAAQO,EAAIG,SACZhrB,EAGE0T,EAAenV,EAAAA,QAAQ,KACvB,IAACssB,EAAIlX,WAAa8B,EAAiB,MAAO,GAEvC,OADWA,EAAgBoB,WAAeyN,EAAIxN,QAAU,IAC9ChD,OAAgB1W,IAC/B,MAAMyW,EAAUzW,EAAMgG,IACtB,OAAOyQ,GAAYgX,EAAIlX,SAAmBsX,KAAMC,IAChB,iBAAZA,EAAuBA,EAAmB,MAATA,OAAS,EAAAA,EAAA9nB,OAC9CyQ,MAGjB,CAACgX,EAAIlX,SAAU8B,IAGZ0V,EAAmBN,EAAIptB,YACzBotB,EAAIptB,YAAYiO,MAAM,MAAMoI,UAA+B,KAAhBlH,EAAKnB,QAChD,GAGE2f,EAAYP,EAAI34B,OAAS,UACzBm5B,EAAcR,EAAIS,SAAW,UAGjC,SAAAl6B,KAAC,MAAI,CAAAqJ,UAAU,kCAEZ9I,SAAA,EAACm5B,GACA14B,EAAAA,IAAC,MAAI,CAAAqI,UAAU,uIAIjBrI,IAAC,MAAI,CAAAqI,UAAU,8BACb9I,SAAAR,EAAAiB,IAACuI,GAAOC,IAAP,CACCkN,WACArN,UAAU,yGACVpJ,MAAO,CACLK,gBAAiB25B,GAEnB5lB,WAAY,CAAEpM,MAAO,IAAK8f,OAAQ,GAClCpe,WAAY,CAAErF,KAAM,SAAU61B,UAAW,KAEzC55B,SAAAR,EAAAiB,IAACmJ,EAAA,CACCD,KAAM,GACNjK,MAAO,CAAEa,MAAOk5B,SAMtBj6B,EAAAiB,IAACuI,GAAOC,IAAP,CACCkN,WACArN,UAAU,eAEV9I,SAAAR,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,uDAEb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAMsuB,GAAehS,GAC9Bte,UAAU,mBAEV9I,eAAC,MAAI,CAAA8I,UAAU,wCACb9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,SAEb9I,SAAA,GAACS,IAAA,IAAA,CAAEqI,UAAU,oEACV9I,SAAkB+K,GAAAC,EAAakuB,EAAIW,QAASX,EAAIY,UAAWZ,EAAIa,eAGlEt6B,KAAC,KAAG,CAAAqJ,UAAU,gFACX9I,SAAA,CAAA+K,GAAkBC,EAAakuB,EAAI7sB,MAAO6sB,EAAI5sB,QAAS4sB,EAAI3sB,SAE3D9L,EAAAA,IAAA,OAAA,CAAKqI,UAAU,UACb9I,WACES,EAAAA,IAAA6f,EAAA,CAAcxX,UAAU,2CAEzBrI,MAACgnB,GAAe,CAAA3e,UAAU,yBAKhCrJ,KAAC,OAAK,CAAAqJ,UAAU,gJAAgJ9I,SAAA,CAAA,MAC1Jk5B,EAAIc,iBAOf5S,GACC5nB,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAGrJ,OAAQ,GAC/BoF,QAAS,CAAEiE,QAAS,EAAGrJ,OAAQ,QAC/ByP,KAAM,CAAEpG,QAAS,EAAGrJ,OAAQ,GAC5BsJ,WAAY,CAAEtB,SAAU,IACxBgB,UAAU,0DAGT9I,SAAIk5B,EAAAtQ,SAAWsQ,EAAItQ,QAAQ5hB,OAAS,IACnCvG,IAAC,MAAI,CAAAqI,UAAU,2CACZ9I,SAAIk5B,EAAAtQ,QAAQje,IAAI,CAACsvB,EAA0BC,IAC1C16B,EAAAC,KAACuJ,GAAOC,IAAP,CAECC,QAAS,CAAEC,QAAS,EAAG3D,EAAG,IAC1BN,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,GAC1B4D,WAAY,CAAErB,MAAa,GAANmyB,GACrBpxB,UAAU,iOAGV9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,kFACb9I,SAAA,CAAAS,MAAC,OAAIqI,UAAU,uBAAuBpJ,MAAO,CAAEK,gBAAiB05B,OAC/Dh5B,IAAA,KAAA,CAAGqI,UAAU,oDACX9I,SAAkB+K,GAAAC,EAAaivB,EAAO/tB,SAAU+tB,EAAOE,WAAYF,EAAOG,uBAK9E,KAAG,CAAAtxB,UAAU,cACX9I,SAAAoL,GAAuBJ,EAAaivB,EAAO3e,MAAO2e,EAAOI,QAASJ,EAAOK,SAAS3vB,IAAI,CAAC8B,EAAc8tB,IACpG/6B,EAAAC,KAACuJ,GAAOwxB,GAAP,CAECtxB,QAAS,CAAEC,QAAS,EAAG1D,GAAO,IAC9BP,QAAS,CAAEiE,QAAS,EAAG1D,EAAG,GAC1B2D,WAAY,CAAErB,MAAc,GAANmyB,EAAwB,IAAVK,GACpCzxB,UAAU,kEAEV9I,SAAA,CAAAS,MAACg6B,IAAc/6B,MAAO,CAAEa,MAAOk5B,GAAa3wB,UAAU,iCACrDrI,EAAAA,IAAA,OAAA,CAAKqI,UAAU,yBAA0B9I,SAAKyM,MAP1C8tB,QAlBNL,MAkCXV,EAAiBxyB,OAAS,GAEtBvH,EAAAA,KAAA2P,EAAAA,SAAA,CAAApP,SAAA,GAACP,KAAA,KAAA,CAAGqJ,UAAU,mFACZ9I,SAAA,CAAAS,MAACg6B,IAAc/6B,MAAO,CAAEa,MAAOk5B,GAAa9vB,KAAM,KAAM,aAGzDlJ,IAAA,KAAA,CAAGqI,UAAU,mBACX9I,SAAiBw5B,EAAA7uB,IAAI,CAAC8B,EAAMnE,IAC3B7I,EAAAA,KAAC,KAAW,CAAAqJ,UAAU,0DACpB9I,SAAA,CAAAS,MAAC,QAAKqI,UAAU,8CAA8CpJ,MAAO,CAAEK,gBAAiB05B,KACvFh5B,EAAAA,IAAA,OAAA,CAAKqI,UAAU,SAAU9I,SAAKyM,MAFxBnE,WAatByZ,EAAa/a,OAAS,GACpBvG,EAAAA,IAAA,MAAA,CAAIqI,UAAU,4BACZ9I,SAAA+hB,EAAapX,IAAKc,GACjBjM,EAAAiB,IAACiR,EAAA,CAEC/Q,GAAI,qBAAqB8K,EAAMgG,MAC/B3I,UAAU,mHACVpJ,MAAO,CACLK,gBAAiB,GAAG0L,EAAMlL,UAC1BA,MAAOkL,EAAMlL,MACb,kBAAmBkL,EAAMlL,OAAS,WAEpC8L,MAAO,GAAGZ,EAAMC,uBAEf1L,SAAMyL,EAAAC,MAVFD,EAAMgG,SAiBjBsQ,EAAa/a,QAAUkyB,EAAI/T,QAAU+T,EAAI/T,OAAOne,OAAS,GACzDvG,EAAAA,IAAC,OAAIqI,UAAU,4BACZ9I,WAAImlB,OAAOxa,IAAKc,GACfjM,EAAAiB,IAAC,OAAA,CAECqI,UAAU,0MAET9I,SAAAyL,GAHIA,eC1NjBivB,GAA8C,EAAGC,aAErD,MAAMC,EAAoB,CACxBC,cAAe,CACb,CAAE92B,KAAM,OAAQ+2B,SAAU,IAAKzuB,MAAO,WAAY0uB,UAAe,IAAAn1B,MACjE,CAAE7B,KAAM,UAAW+2B,SAAU,OAAQzuB,MAAO,YAAa0uB,UAAe,IAAAn1B,MACxE,CAAE7B,KAAM,aAAc+2B,SAAU,KAAMzuB,MAAO,aAAc0uB,UAAe,IAAAn1B,OAE5Eo1B,YAAa,CACXC,WAAY,EACZC,kBAAmB,EACnBC,mBAAoB,IAIxB,cACG,MACC,CAAAn7B,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,0BAA0B9I,SAAM,aAG9CP,KAAC,MAAI,CAAAqJ,UAAU,OACb9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,2DAA2D9I,SAEzE,gBACAP,KAAC,MAAI,CAAAqJ,UAAU,wCACb9I,SAAA,CAAAS,EAAAA,IAAC,UAAOqI,UAAU,uLAChB9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,oCACb9I,SAAA,QAAC,MACC,CAAAA,SAAA,CAACS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,2DAA2D9I,SAAK,UAC5ES,EAAAA,IAAA,IAAA,CAAEqI,UAAU,0DAA2D9I,WAAOo7B,QAC9E36B,EAAAA,IAAA,IAAA,CAAEqI,UAAU,oDAAoD9I,SAAC,WAEpES,IAAC+N,EAAO,CAAA1F,UAAU,wCAIrB,SAAO,CAAAA,UAAU,2KAChB9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,oCACb9I,SAAA,QAAC,MACC,CAAAA,SAAA,CAACS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,uDAAuD9I,SAAM,WACzES,EAAAA,IAAA,IAAA,CAAEqI,UAAU,sDAAuD9I,WAAOq7B,cAC1E56B,EAAAA,IAAA,IAAA,CAAEqI,UAAU,gDAAgD9I,SAAC,WAEhES,IAAC4N,EAAY,CAAAvF,UAAU,sCAI1B,SAAO,CAAAA,UAAU,iLAChB9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,oCACb9I,SAAA,QAAC,MACC,CAAAA,SAAA,CAACS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,yDAAyD9I,SAAQ,aAC7ES,EAAAA,IAAA,IAAA,CAAEqI,UAAU,wDAAyD9I,WAAOs7B,WAC5E76B,EAAAA,IAAA,IAAA,CAAEqI,UAAU,kDAAkD9I,SAAC,WAElES,IAAC86B,GAAiB,CAAAzyB,UAAU,yCAOpCrJ,KAAC,MAAI,CAAAqJ,UAAU,OACb9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,2DAA2D9I,SAEzE,gBACAP,KAAC,MAAI,CAAAqJ,UAAU,wCAEb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,uFACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,+BACb9I,SAAA,GAACS,IAAA+6B,GAAA,CAAO1yB,UAAU,4BACjBrI,EAAAA,IAAA,KAAA,CAAGqI,UAAU,sDAAsD9I,SAAO,qBAE5E,MAAI,CAAA8I,UAAU,YACZ9I,SAAA46B,EAAkBC,cAAc7zB,OAAS,EACxC4zB,EAAkBC,cAAclwB,IAAI,CAAC8B,EAAMnH,IACxC7F,EAAAA,KAAA,MAAA,CAAkCqJ,UAAU,+EAC3C9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,0BACb9I,SAAA,CAACS,EAAAA,IAAA,MAAA,CAAIqI,UAAW,yBACJ,IAAVxD,EAAc,eAA2B,IAAVA,EAAc,gBAAkB,wBAEhE,MACC,CAAAtF,SAAA,CAAAS,EAAAA,IAAC,IAAE,CAAAqI,UAAU,oDAAqD9I,SAAAyM,EAAKJ,QACtE5L,EAAAA,IAAA,IAAA,CAAEqI,UAAU,2CAA4C9I,WAAK86B,iBAGlEr6B,EAAAA,IAAC,OAAIqI,UAAU,2CACZ9I,WAAK+6B,UAAUtjB,mBAAmB,aAX7B,GAAGhL,EAAK1I,QAAQuB,QAgB3B7E,IAAA,IAAA,CAAEqI,UAAU,2CAA2C9I,wCAM9DP,KAAC,MAAI,CAAAqJ,UAAU,uFACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,+BACb9I,SAAA,GAACS,IAAAg7B,GAAA,CAAc3yB,UAAU,4BACxBrI,EAAAA,IAAA,KAAA,CAAGqI,UAAU,sDAAsD9I,SAAO,iBAE7EP,KAAC,MAAI,CAAAqJ,UAAU,YACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,+EACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,0BACb9I,SAAA,GAACS,IAAA+N,EAAA,CAAO1F,UAAU,oBACjBrI,EAAAA,IAAA,OAAA,CAAKqI,UAAU,wCAAwC9I,SAAQ,sBAEjE,OAAK,CAAA8I,UAAU,yDACb9I,SAAA46B,EAAkBI,YAAYC,kBAGnCx7B,KAAC,MAAI,CAAAqJ,UAAU,+EACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,0BACb9I,SAAA,GAACS,IAAA86B,GAAA,CAAiBzyB,UAAU,mBAC3BrI,EAAAA,IAAA,OAAA,CAAKqI,UAAU,wCAAwC9I,SAAQ,sBAEjE,OAAK,CAAA8I,UAAU,uDACb9I,SAAA46B,EAAkBI,YAAYE,yBAGnCz7B,KAAC,MAAI,CAAAqJ,UAAU,+EACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,0BACb9I,SAAA,GAACS,IAAA4N,EAAA,CAAYvF,UAAU,kBACtBrI,EAAAA,IAAA,OAAA,CAAKqI,UAAU,wCAAwC9I,SAAQ,sBAEjE,OAAK,CAAA8I,UAAU,qDACb9I,SAAA46B,EAAkBI,YAAYG,wCC9H3CO,GAA0D,EAC9DC,WACAC,eACAC,gBACAC,kBACAC,gBACAC,iBACAC,mBACA58B,mBAAkB,MAEZ,MAAC68B,EAAkBC,GAAuBl7B,EAAAA,SAC9C,IAAIokB,IAAIsW,EAAShxB,IAAUyxB,GAAAA,EAAG3qB,OAwB9B,SAAAhS,KAAC,MAAI,CAAAqJ,UAAU,YAEb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,mIACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,0BACb9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,kDAAkD9I,SAEhE,iBACC27B,EAAS30B,OAAS,GAChBvH,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,qBACb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAnBI,KACIqxB,EAAA,IAAI9W,IAAIsW,EAAShxB,OAAUyxB,EAAG3qB,QAmBtC3I,UAAU,uEACX9I,SAAA,WAGAS,EAAAA,IAAA,OAAA,CAAKqI,UAAU,gBAAgB9I,SAAC,MACjCR,EAAAiB,IAAC,SAAA,CACCqK,QAtBM,KACEqxB,EAAA,IAAI9W,MAsBZvc,UAAU,uEACX9I,SAAA,gBAMNX,GACCG,EAAAC,KAAC,SAAA,CACCqL,QAAS8wB,EACT9yB,UAAU,8HAEV9I,SAAA,CAAAR,EAAAiB,IAAC0mB,GAAO,IAAE,cAOfwU,EAAS30B,OAAS,QAChB,MAAI,CAAA8B,UAAU,YACZ9I,SACE27B,EAAA7V,KAAK,CAAC9O,EAAG+O,IAAM/O,EAAE+c,MAAQhO,EAAEgO,OAC3BppB,IAAK2a,UACJ,MAAM8B,EAAa8U,EAAiB1W,IAAIF,EAAQ7T,KAC1C4qB,GAAgB,OAAArhB,EAAAsK,EAAQC,gBAAR,EAAAvK,EAAmBhU,SAAU,EAGjD,OAAAxH,EAAAC,KAAC,MAAA,CAECqJ,UAAU,8IAGV9I,SAAA,CAAAS,EAAAA,IAAC,OAAIqI,UAAU,iFACb9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,wCACb9I,SAAA,CAAAR,EAAAC,KAAC,SAAA,CACCqL,QAAS,KAAMuc,OA3EdvF,EA2E4BwD,EAAQ7T,SA1EzD0qB,EAA4B3Z,IACpB,MAAA8Z,EAAS,IAAIjX,IAAI7C,GAMhB,OALH8Z,EAAO9W,IAAI1D,GACbwa,EAAOC,OAAOza,GAEdwa,EAAOl4B,IAAI0d,GAENwa,IARW,IAACxa,GA4EDhZ,UAAU,+EAEV9I,SAAA,CAAAS,EAAAA,IAAC,MAAI,CAAAqI,UAAU,gBACZ9I,SAAAonB,EACE3mB,EAAAA,IAAA6f,EAAA,CAAcxX,UAAU,6CAEzBrI,MAACgnB,GAAe,CAAA3e,UAAU,8BAG9BrJ,KAAC,MAAI,CAAAqJ,UAAU,iBACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,+BACb9I,SAAA,GAACP,KAAA,OAAA,CAAKqJ,UAAU,yGAAyG9I,SAAA,CAAA,WAC9GslB,EAAQyO,MAAQ,KAE1BtzB,EAAAA,IAAA,KAAA,CAAGqI,UAAU,+DACX9I,WAAQqM,aAGb5M,KAAC,IAAE,CAAAqJ,UAAU,2CAA2C9I,SAAA,CAAA,MAClDq8B,EAAc,oBAKvBh9B,GACCG,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,gCACb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAAUiI,IACRA,EAAE8jB,kBACFkF,EAAczW,EAAQ7T,MAExB3I,UAAU,gGACVuD,MAAM,WAENrM,SAAAS,EAAAA,IAAC0mB,GAAO,CAAAre,UAAU,cAEpBtJ,EAAAiB,IAAC,SAAA,CACCqK,QAAUiI,IACRA,EAAE8jB,kBACFgF,EAAcvW,IAEhBxc,UAAU,6FACVuD,MAAM,QAENrM,SAAAS,EAAAA,IAACoiB,EAAO,CAAA/Z,UAAU,cAEpBtJ,EAAAiB,IAAC,SAAA,CACCqK,QAAUiI,IACRA,EAAE8jB,kBACErQ,QAAQ,IAAIlB,EAAQjZ,kCAAkCgwB,kBACxDP,EAAgBxW,IAGpBxc,UAAU,0FACVuD,MAAM,QAENrM,SAAAS,EAAAA,IAACqiB,EAAQ,CAAAha,UAAU,sBAQ5Bse,KACE3mB,IAAA,MAAA,CAAIqI,UAAU,mFACZ9I,WAAgB,IACfS,IAAC,MAAI,CAAAqI,UAAU,YACX9I,UAAQslB,EAAAC,WAAa,IACpBO,KAAK,CAAC9O,EAAG+O,IAAM,IAAIngB,KAAKmgB,EAAE9C,WAAWpL,UAAY,IAAIjS,KAAKoR,EAAEiM,WAAWpL,WACvElN,IAAI,CAACwW,EAAU+Y,IAChB16B,EAAAC,KAAC,MAAA,CAECqJ,UAAU,mIAEV9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,wCACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,iCACb9I,SAAA,GAACP,KAAA,OAAA,CAAKqJ,UAAU,iGAAiG9I,SAAA,CAAA,IAC7Gk6B,EAAM,KAETz5B,EAAAA,IAAA,KAAA,CAAGqI,UAAU,sDACX9I,WAASuiB,WAGbljB,GACCG,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,gCACb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAMkxB,EAAe7a,EAAUmE,EAAQ7T,KAChD3I,UAAU,4FACVuD,MAAM,KAENrM,SAAAS,EAAAA,IAACoiB,EAAO,CAAA/Z,UAAU,kBAEpBtJ,EAAAiB,IAAC,SAAA,CACCqK,QAAS,KACH0b,QAAQ,IAAIrF,EAASoB,4BACN0Z,EAAA9a,EAAUmE,EAAQ7T,MAGvC3I,UAAU,yFACVuD,MAAM,KAENrM,SAAAS,EAAAA,IAACqiB,EAAQ,CAAAha,UAAU,wBAO3BtJ,EAAAiB,IAAC,MAAA,CACCqI,UAAU,gnBAMV+X,wBAAyB,CAAEC,OAAQK,EAASzF,aAG9Cjc,KAAC,MAAI,CAAAqJ,UAAU,qIACb9I,SAAA,QAAC,OAAK,CAAAA,SAAA,CAAA,WAASuX,GAAW4J,EAAS8B,cAClC9B,EAAS4Z,WAAa5Z,EAAS4Z,YAAc5Z,EAAS8B,kBACpD,OAAK,CAAAjjB,SAAA,CAAA,WAASuX,GAAW4J,EAAS4Z,mBAlDlC5Z,EAAS1P,QAyDnBhS,OAAA,MAAA,CAAIqJ,UAAU,mHACb9I,SAAA,GAACS,IAAA+N,EAAA,CAAO1F,UAAU,mDACjBrI,EAAAA,IAAA,IAAA,CAAEqI,UAAU,wCAAwC9I,SAErD,0BACCX,GACCG,EAAAC,KAAC,SAAA,CACCqL,QAAS,IAAMixB,EAAczW,EAAQ7T,KACrC3I,UAAU,iHAEV9I,SAAA,CAAAR,EAAAiB,IAAC0mB,GAAO,IAAE,4BAnJjB7B,EAAQ7T,SAgKtBhS,OAAA,MAAA,CAAIqJ,UAAU,uHACb9I,SAAA,GAACS,IAAA+N,EAAA,CAAO1F,UAAU,wCACjBrI,EAAAA,IAAA,IAAA,CAAEqI,UAAU,4DAA4D9I,SAEzE,iBACCS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,gDAAgD9I,SAE7D,qCACCX,GACCG,EAAAC,KAAC,SAAA,CACCqL,QAAS8wB,EACT9yB,UAAU,6HAEV9I,SAAA,CAAAR,EAAAiB,IAAC0mB,GAAO,IAAE,yBCrQlBqV,GAA8B,EAAGC,QAAOxqB,aAgC1CzS,EAAAC,KAACuJ,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAG3D,GAAG,GAAKkC,MAAO,KACtCxC,QAAS,CAAEiE,QAAS,EAAG3D,EAAG,EAAGkC,MAAO,GACpC6H,KAAM,CAAEpG,QAAS,EAAG3D,GAAG,GAAKkC,MAAO,KACnC0B,WAAY,CAAEtB,SAAU,IACxBgB,UAAW,sFArBI,MACjB,OAAQ2zB,EAAM14B,MACZ,IAAK,UACI,MAAA,0EACT,IAAK,QACI,MAAA,kEACT,IAAK,UACI,MAAA,8EACT,IAAK,OACI,MAAA,sEACT,QACS,MAAA,wEAYL24B,sCAIJ18B,SAAA,CAAAS,EAAAA,IAAC,MAAI,CAAAqI,UAAU,uBACZ9I,SA3CS,MACd,OAAQy8B,EAAM14B,MACZ,IAAK,UACI,SAAAtD,IAACk8B,GAAQ,CAAA7zB,UAAU,mBAC5B,IAAK,QACI,SAAArI,IAACm8B,GAAsB,CAAA9zB,UAAU,iBAC1C,IAAK,UACI,SAAArI,IAACm8B,GAAsB,CAAA9zB,UAAU,oBAG1C,QACS,SAAArI,IAACo8B,GAAO,CAAA/zB,UAAU,oBAgCxBg0B,OAGHr9B,KAAC,MAAI,CAAAqJ,UAAU,iBACb9I,SAAA,CAAAS,EAAAA,IAAC,KAAG,CAAAqI,UAAU,oDACX9I,SAAAy8B,EAAMpwB,QAERowB,EAAMtpB,SACL1S,EAAAA,IAAC,KAAEqI,UAAU,gDACV9I,WAAMmT,aAKb3T,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAMmH,EAAQwqB,EAAM7pB,IAC7B9J,UAAU,4FAEV9I,SAAAS,EAAAA,IAAC4O,EAAQ,CAAAvG,UAAU,+BAWrBi0B,GAAgD,EAAGC,SAAQ/qB,eAE7DxR,IAAC,OAAIqI,UAAU,qCACb9I,eAAC2S,GACE,CAAA3S,SAAAg9B,EAAOryB,IAAK8xB,GACXj9B,EAAAiB,IAAC+7B,GAAA,CAECC,QACAxqB,WAFKwqB,EAAM7pB,SClEjBqqB,GAA0C,EAC9CC,aAAa,MACbC,iBAAiB,GACjBC,uBAAuB,GACvBC,oBAEA,MAAMjC,MAAEA,EAAO97B,UAAAA,EAAAg+B,WAAWA,aAAYC,EAAYC,WAAAA,GAAeC,MAC3D3Q,QAAEA,EAAAxa,MAASA,GAAUqe,MACrB+M,sBAAEA,GAA0BC,MAG5BX,OAAEA,EAAAY,UAAQA,GAAcjN,MAGvBkN,EAAWC,GAAeC,GAAqB,CACpDC,OAAQlrB,MAAOyH,EAAoB0jB,KAIjC,GAAIA,EAAa,OAEMV,EAAWU,EAAYxsB,IAAK8I,GAEjDuS,EAAQ,WAAY,wBAAuB,KACtC,OAEgBwQ,EAAW/iB,GAEhCuS,EAAQ,WAAY,yBACtB,GAEFpL,SAAU5O,MAAOqQ,UACTqa,EAAWra,EAAK1R,KACtBqb,EAAQ,WAAY,GAAG3J,EAAK9W,uBAE9B0M,QAAU9F,IAEFX,EAAA,QAASW,EAAIE,SAAW,0BAMhCoH,KAAMohB,EACNuC,cAAeC,EACfC,qBAAsBC,EACtBC,iBAAkBC,EAClBC,UAAWC,GACTC,GAAkC,KAY/BC,EAAqBC,GAA0B39B,YAAS,IACxD49B,EAAcC,GAAmB79B,WAAsB,OACvD89B,EAAmBC,GAAwB/9B,WAAwB,OAGnEg+B,EAAiBC,GAAsBj+B,YAAS,IAChDk+B,EAAgBC,GAAqBn+B,WAAyB,OAC9Do+B,EAAkBC,GAAuBr+B,YAAS,IAClDs+B,EAAiBC,GAAsBv+B,WAA0B,OACjEw+B,EAAeC,GAAoBz+B,YAAS,GAGnDG,EAAAA,UAAU,KACR,GAAIi8B,GAAiBjC,EAAMp0B,OAAS,IAAMy4B,EAAe,CACvD,MAAME,EAAavE,EAAM/F,KAAalS,GAAAA,EAAK1R,MAAQ4rB,GAC/CsC,IAEF7B,EAAY8B,WAAWD,GACvBD,GAAiB,GAErB,GACC,CAACrC,EAAejC,EAAOqE,EAAe3B,IAGnC,MAAA+B,EAAgBjzB,EAAAA,QAAQ,KACxB,IAAAkzB,EAAW,IAAI1E,GAUnB,GAPmB,cAAf8B,EACF4C,EAAWA,EAAS3d,OAAegB,GAAgB,IAAhBA,EAAK0D,QAChB,aAAfqW,GAA6BE,IACtC0C,EAAWA,EAAS3d,OAAegB,GAAAA,EAAKjX,WAAakxB,IAInDD,EAAgB,CACZ,MAAA4C,EAAc5C,EAAe6C,cACnCF,EAAWA,EAAS3d,OAAOgB,GACzBA,EAAK9W,MAAM2zB,cAAcjvB,SAASgvB,IAClC5c,EAAKuD,OAAOsZ,cAAcjvB,SAASgvB,IACnC5c,EAAKjX,SAAS8zB,cAAcjvB,SAASgvB,GAEzC,CAEA,OAAOD,EAASha,KAAK,CAAC9O,EAAG+O,IAAM,IAAIngB,KAAKmgB,EAAE9C,WAAWpL,UAAY,IAAIjS,KAAKoR,EAAEiM,WAAWpL,YACtF,CAACujB,EAAO8B,EAAYC,EAAgBC,IAGjC6C,EAAwB9yB,cAAY2F,MAAOqQ,UAC/C2b,EAAgB3b,GAChByb,GAAuB,GACvBI,EAAqB,MAEjB,IACF,MAAMkB,EAAkBxC,IAGlByC,QAAyBxc,GAAYC,UAAUT,EAAK1R,KAErDyuB,EAAgBE,OAAOC,SACZ5B,EAAA0B,EAAiB5lB,MAAQ,UAElCtH,IACD,OAAA+H,EAAA/H,EAAcvH,WAAd,EAAAsP,EAAoBjK,SAAS,gBACjCuB,EAAM,YAAa,uBAEvB,GACC,CAACorB,EAAuBe,EAAensB,IAGpCguB,EAAoBnzB,cAAY2F,MAAOytB,IAC3C,GAAK1B,EAED,IACEM,SAEId,EACJc,EAAe1tB,IACf8uB,EACA,IAAM5c,GAAY8G,OAAOoU,EAAaptB,IAAK0tB,EAAe1tB,IAAK8uB,GAAaC,KAAYC,GAAAA,EAAIlmB,OAE9FuS,EAAQ,WAAY,sBACpBoS,GAAmB,GACnBE,EAAkB,cAGZjB,EACJ,IAAKoC,EAAa9uB,IAAK,GAAI8T,UAAW,GAAItC,WAAA,IAAerd,MAAO86B,cAAe3F,WAAA,IAAen1B,MAAO86B,eACrG,IAAM/c,GAAYgd,OAAO9B,EAAaptB,IAAK8uB,GAAaC,KAAYC,GAAAA,EAAIlmB,OAE1EuS,EAAQ,WAAY,oBACpBoS,GAAmB,UAEdjsB,GACPX,EAAM,WAAY,iBACpB,GACC,CAACusB,EAAcM,EAAgBhB,EAAsBE,EAAyBvR,EAASxa,IAEpFsuB,EAAsBzzB,cAAY2F,MAAOwS,IAC7C,GAAKuZ,EAED,UACIN,EACJjZ,EAAQ7T,IACR,IAAMkS,GAAY4Y,OAAOsC,EAAaptB,IAAK6T,EAAQ7T,KAAK+uB,KAAK,SAE/D1T,EAAQ,WAAY,sBACb7Z,GACPX,EAAM,WAAY,iBACpB,GACC,CAACusB,EAAcN,EAAyBzR,EAASxa,IAG9CuuB,EAAyB1zB,cAAa2U,IAC1Ckd,EAAqBld,GACrBwd,GAAoB,GACpBE,EAAmB,OAClB,IAEGsB,EAA0B3zB,EAAAA,YAAY,CAACgU,EAAoBW,KAC/Dkd,EAAqBld,GACrB0d,EAAmBre,GACnBme,GAAoB,IACnB,IAEGyB,EAA4B5zB,EAAAA,YAAY2F,MAAOqO,EAAoBW,KACvE,GAAK+c,EAED,UACImC,GAAaC,iBAAiBpC,EAAaptB,IAAKqQ,EAAWX,EAAS1P,KAG1E,MAAM0uB,QAAyBxc,GAAYC,UAAUib,EAAaptB,KACpDgtB,EAAA0B,EAAiB5lB,MAAQ,IAEvCuS,EAAQ,cAAe,yBAChB7Z,GACPX,EAAM,cAAe,oBACvB,GACC,CAACusB,EAAcJ,EAAe3R,EAASxa,IAEpC4uB,EAAqB/zB,cAAY2F,MAAOquB,IACxC,GAACtC,GAAiBE,EAElB,IACEQ,SAEIyB,GAAaI,iBAAiBvC,EAAaptB,IAAKstB,EAAmBQ,EAAgB9tB,IAAK0vB,GAC9FrU,EAAQ,cAAe,iCAGjBkU,GAAaK,iBAAiBxC,EAAaptB,IAAKstB,EAAmBoC,GACzErU,EAAQ,cAAe,wBAIzB,MAAMqT,QAAyBxc,GAAYC,UAAUib,EAAaptB,KACpDgtB,EAAA0B,EAAiB5lB,MAAQ,IAEvC+kB,GAAoB,GACpBE,EAAmB,MACnBR,EAAqB,YACd/rB,GACPX,EAAM,QAAS,oBACjB,GACC,CAACusB,EAAcE,EAAmBQ,EAAiBd,EAAe3R,EAASxa,IAGxEgvB,EAAgBza,KAEjBpmB,IAAA,MAAA,CAAIqI,UAAU,4BACZ9I,SAAM4a,MAAAyH,KAAK,CAAErb,OAAQ,GAAK,CAAC8f,EAAGxe,IAC7B9I,EAAAiB,IAACsmB,GAAA,CAECje,UAAW,YAAWR,EAAIue,EAAS,kBAAoB,qCADlDve,MASf,OAAIhJ,EAEAE,EAAAiB,IAAC,OAAIqI,UAAU,wCACb9I,eAAC,MAAI,CAAA8I,UAAU,mEAQjBtJ,EAAAC,KAAA2P,WAAA,CAAApP,SAAA,GAACS,IAAAs8B,GAAA,CAAeC,SAAgB/qB,QAAS2rB,MAEzCn+B,KAAC,MAAI,CAAAqJ,UAAU,YAEb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,oCACb9I,SAAA,QAAC,MACC,CAAAA,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,mDAAmD9I,SAAK,YACtEP,KAAC,IAAE,CAAAqJ,UAAU,wCAAwC9I,SAAA,CAAA,KAChD6/B,EAAc74B,OAAO,cAG5BxH,EAAAC,KAAC,SAAA,CACCqL,QAASgzB,EAAYyD,aACrBz4B,UAAU,oHAEV9I,SAAA,CAAAR,EAAAiB,IAAC0mB,GAAO,IAAE,gBAMd1mB,IAAC,MAAI,CAAAqI,UAAU,8DACZ9I,SAAyB,IAAzB6/B,EAAc74B,SACbvH,KAAC,MAAI,CAAAqJ,UAAU,oBACb9I,SAAA,GAACS,IAAA+N,EAAA,CAAO1F,UAAU,wCACjBrI,EAAAA,IAAA,IAAA,CAAEqI,UAAU,gDAAgD9I,SAE7D,iBACCS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,2CAA2C9I,SAExD,8CAGD,MAAI,CAAA8I,UAAU,kBACb9I,WAACP,KAAA,QAAA,CAAMqJ,UAAU,SACf9I,SAAA,CAAAS,MAAC,QACC,CAAAT,SAAAP,EAAAA,KAAC,KAAG,CAAAqJ,UAAU,4EACZ9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,oGAAoG9I,SAElH,UACCS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,oGAAoG9I,SAElH,OACCS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,oGAAoG9I,SAElH,SACCS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,oGAAoG9I,SAElH,OACCS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,oGAAoG9I,SAElH,UACCS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,qGAAqG9I,SAEnH,kBAGH,QAAM,CAAA8I,UAAU,gDACd9I,SAAc6/B,EAAAl1B,IAAKwY,UAClB,OAAA3jB,EAAAC,KAAC,KAAA,CAECqL,QAAS,IAAMm1B,EAAsB9c,GACrCra,UAAU,2EAEV9I,SAAA,CAAAS,EAAAA,IAAC,MAAGqI,UAAU,YACZ9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,0BACZ9I,SAAA,CAAAmjB,EAAK+C,WACJ1mB,EAAAiB,IAAC,MAAA,CACC4X,IAAK8K,EAAK+C,WACV5N,IAAK6K,EAAK9W,MACVvD,UAAU,mDAGX,MAAI,CAAAA,UAAU,2GACb9I,SAACR,EAAAiB,IAAA+N,EAAA,CAAO1F,UAAU,gCAGrB,MACC,CAAA9I,SAAA,CAAAS,EAAAA,IAAC,IAAE,CAAAqI,UAAU,8CACV9I,SAAAmjB,EAAK9W,UAER5M,KAAC,IAAE,CAAAqJ,UAAU,kDACV9I,SAAA,EAAA,OAAAgb,EAAAmI,EAAKoC,gBAAL,EAAAvK,EAAgBhU,SAAU,EAAE,wBAKrCvG,IAAC,KAAG,CAAAqI,UAAU,YACZ9I,SAAAS,EAAAA,IAAC,KAAEqI,UAAU,2CACV9I,SAAKmjB,EAAAuD,aAGVjmB,IAAC,KAAG,CAAAqI,UAAU,YACZ9I,SAAAS,EAAAA,IAAC,QAAKqI,UAAU,wIACb9I,SAAKmjB,EAAAjX,mBAGT,KAAG,CAAApD,UAAU,YACX9I,SAAashC,EAAAne,EAAK0D,UAEpBpmB,EAAAA,IAAA,KAAA,CAAGqI,UAAU,YACZ9I,WAACS,IAAA,IAAA,CAAEqI,UAAU,2CACV9I,SAAWuX,GAAA4L,EAAK8D,oBAGpB,KAAG,CAAAne,UAAU,YACZ9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,sCACb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAAUiI,IACRA,EAAE8jB,kBACFoJ,EAAsB9c,IAExBra,UAAU,0FACVuD,MAAM,OAENrM,eAACwhC,GAAM,MAEThiC,EAAAiB,IAAC,SAAA,CACCqK,QAAUiI,IACRA,EAAE8jB,kBACFiH,EAAY8B,WAAWzc,IAEzBra,UAAU,gGACVuD,MAAM,KAENrM,eAAC6iB,EAAO,MAEVrjB,EAAAiB,IAAC,SAAA,CACCqK,QAAUiI,IACRA,EAAE8jB,kBACFiH,EAAY2D,aAAate,IAE3BtP,SAAUgqB,EAAUlY,WACpB7c,UAAU,2GACVuD,MAAM,KAENrM,eAAC8iB,EAAQ,aA5EVK,EAAK1R,gBAyFvBosB,EAAU6D,UACRjhC,EAAAA,IAAA,MAAA,CAAIqI,UAAU,6EACb9I,eAAC,MAAA,CAAI8I,UAAU,0FACb9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,MACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,yCACb9I,SAAA,CAAAS,MAAC,MAAGqI,UAAU,sDACX9I,SAAU69B,EAAAI,YAAc,QAAU,UAErCz+B,EAAAiB,IAAC,SAAA,CACCqK,QAASgzB,EAAY6D,aACrB74B,UAAU,4EAEV9I,eAACqP,EAAQ,SAGb7P,EAAAiB,IAACmhC,GAAA,CACCrnB,KAAMsjB,EAAUI,YAChBD,OAAQF,EAAY+D,WACpBC,SAAUhE,EAAY6D,aACtBhgB,SAAUkc,EAAUlc,kBAQ7Bgd,GAAuBE,GACrBp+B,EAAAA,IAAA,MAAA,CAAIqI,UAAU,iFACb9I,WAAAP,KAAC,MAAI,CAAAqJ,UAAU,8FAEb9I,SAAA,CAAAS,EAAAA,IAAC,OAAIqI,UAAU,kEACb9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,mCACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,gCACZ9I,SAAA,CAAA6+B,EAAa3Y,WACZ1mB,EAAAiB,IAAC,MAAA,CACC4X,IAAKwmB,EAAa3Y,WAClB5N,IAAKumB,EAAaxyB,MAClBvD,UAAU,iEAGX,MAAI,CAAAA,UAAU,yHACb9I,SAACR,EAAAiB,IAAA+N,EAAA,CAAO1F,UAAU,4BAGtBrJ,KAAC,MAAI,CAAAqJ,UAAU,iBACb9I,SAAA,CAAAS,EAAAA,IAAC,KAAG,CAAAqI,UAAU,iEACX9I,SAAA6+B,EAAaxyB,UAEhB5M,KAAC,IAAE,CAAAqJ,UAAU,wCAAwC9I,SAAA,CAAA,OAC9C6+B,EAAanY,YAEpBjnB,KAAC,MAAI,CAAAqJ,UAAU,oCACb9I,SAAA,CAAAS,EAAAA,IAAC,OAAK,CAAAqI,UAAU,oIACb9I,SAAA6+B,EAAa3yB,WAEfo1B,EAAazC,EAAahY,iBAIjCrnB,EAAAiB,IAAC,SAAA,CACCqK,QAAS,KACP8zB,GAAuB,GACvBI,EAAqB,OAEvBl2B,UAAU,0FAEV9I,SAAAS,EAAAA,IAAC4O,EAAQ,CAAAvG,UAAU,qBAMzBrI,IAAC,MAAI,CAAAqI,UAAU,6BACb9I,SAAAR,EAAAiB,IAACi7B,GAAA,CACCC,WACAC,aAAc,KACZsD,GAAmB,GACnBE,EAAkB,OAEpBvD,cAAgBvW,IACd8Z,EAAkB9Z,GAClB4Z,GAAmB,IAErBpD,gBAAiB8E,EACjB7E,cAAe8E,EACf7E,eAAgB8E,EAChB7E,iBAAkB8E,EAClB1hC,iBAAiB,WAQ1B4/B,SACE,MAAI,CAAAn2B,UAAU,+EACb9I,SAACS,EAAAA,IAAA,MAAA,CAAIqI,UAAU,uEACb9I,SAAAR,EAAAiB,IAACshC,GAAA,CACCzc,QAAS6Z,EACTnB,OAAQsC,EACRwB,SAAU,KACR5C,GAAmB,GACnBE,EAAkB,aAQ3BC,SACE,MAAI,CAAAv2B,UAAU,mFACb9I,SAACS,EAAAA,IAAA,MAAA,CAAIqI,UAAU,gGACb9I,SAAAR,EAAAiB,IAACuhC,GAAA,CACC7gB,SAAUoe,EACVvB,OAAQkD,EACRY,SAAU,KACRxC,GAAoB,GACpBE,EAAmB,MACnBR,EAAqB,oBCnhBjCiD,GAA4D,EAAG5E,oBACnE,MAAMvQ,QAAEA,EAAAxa,MAASA,GAAUqe,MACrBuR,eACJA,EAAA5iC,UACAA,EAAA6iC,oBACAA,EAAAC,oBACAA,EAAAC,oBACAA,GACEC,MAGGC,EAAYC,GAAgBzE,GAA8B,CAC/DC,OAAQlrB,MAAOyH,EAA6B0jB,KAI1C,GAAIA,EAAa,QAEMmE,EAAoBnE,EAAYxsB,IAAK8I,IAE/CuS,SACTA,EAAQ,cAAe,2BACzB,KACK,QAEgBqV,EAAoB5nB,IAE9BuS,SACTA,EAAQ,cAAe,4BAE3B,GAEFpL,SAAU5O,MAAOud,UACTgS,EAAoBhS,EAAM5e,KAChCqb,EAAQ,cAAe,GAAGuD,EAAMhkB,uBAElC0M,QAAU9F,IACFX,EAAA,QAASW,EAAIE,SAAW,0BAK3BsvB,EAAgBC,GAAqBzhC,WAAiB,QACtDw+B,EAAeC,GAAoBz+B,YAAS,GAG7C0hC,EAAsB/1B,EAAAA,QAAQ,ICzBC,CAACwuB,IAChC,MAAAwH,MAAiBvd,IAYvB,OATAud,EAAWx+B,IAAI,OAGTg3B,EAAAh2B,QAAgB+d,IAChBA,EAAKjX,UACP02B,EAAWx+B,IAAI+e,EAAKjX,SAAS8zB,iBAI1BplB,MAAMyH,KAAKugB,GAAY9c,QDa5B+c,CAAwBX,GACxB,CAACA,IAIGY,EAAiBl2B,EAAAA,QAAQ,IACN,QAAnB61B,EAAiCP,EAC9BA,EAAe/f,OAAgBkO,GAAAA,EAAMnkB,WAAau2B,GACxD,CAACP,EAAgBO,IAcpB,OAXArhC,EAAAA,UAAU,KACR,GAAIi8B,GAAiB6E,EAAel7B,OAAS,IAAMy4B,EAAe,CAChE,MAAMsD,EAAcb,EAAe7M,KAAchF,GAAAA,EAAM5e,MAAQ4rB,GAC3D0F,IAEFP,EAAa5C,WAAWmD,GACxBrD,GAAiB,GAErB,GACC,CAACrC,EAAe6E,EAAgBzC,EAAe+C,IAE9CljC,EAEAE,EAAAiB,IAAC,OAAIqI,UAAU,yCACb9I,eAAC,MAAI,CAAA8I,UAAU,6FAMnBrJ,KAAC,MAAI,CAAAqJ,UAAU,YAEb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,oCACb9I,SAAA,QAAC,MACC,CAAAA,SAAA,GAACP,KAAA,KAAA,CAAGqJ,UAAU,2EACZ9I,SAAA,GAACS,IAAAgO,EAAA,CAAQ3F,UAAU,iBAAiB,eAErCrI,EAAAA,IAAA,IAAA,CAAEqI,UAAU,gDAAgD9I,SAE7D,gCAEAuiC,EAAWb,UACXliC,EAAAC,KAAC,SAAA,CACCqL,QAAS03B,EAAajB,aACtBz4B,UAAU,sHAEV9I,SAAA,CAAAR,EAAAiB,IAAC0mB,GAAO,IAAE,kBAMdob,EAAWb,UAAYiB,EAAoB37B,OAAS,GACpDxH,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,uBACb9I,SAAA,CAAAR,EAAAC,KAAC,SAAA,CACCqL,QAAS,IAAM43B,EAAkB,OACjC55B,UAAW,uDACU,QAAnB25B,EACI,4BACA,0GAEPziC,SAAA,CAAA,OACMkiC,EAAel7B,OAAO,OAE5B27B,EAAoBh4B,IAAKgoB,IAClB,MAAAqQ,EAAQd,EAAe/f,UAAYmT,EAAEppB,WAAaymB,GAAK3rB,OAE3D,OAAAxH,EAAAC,KAAC,SAAA,CAECqL,QAAS,IAAM43B,EAAkB/P,GACjC7pB,UAAW,uDACT25B,IAAmB9P,EACf,4BACA,0GAGL3yB,SAAA,CAAA2yB,EAAI,KAAGqQ,EAAM,MARTrQ,QAgBd4P,EAAWb,iBACT,MAAA,CAAI54B,UAAU,iGACb9I,SAAA,CAAAS,MAAC,MAAGqI,UAAU,uDACX9I,SAAWuiC,EAAAtE,YAAc,WAAa,eAEzCz+B,EAAAiB,IAACwiC,GAAA,CACC1oB,KAAMgoB,EAAWtE,kBAAe,EAChCD,OAAQwE,EAAaX,WACrBC,SAAUU,EAAa7d,iBACvBhD,SAAU4gB,EAAW5gB,SACrBghB,4BAMJJ,EAAWb,UACVjhC,EAAAA,IAAA,MAAA,CAAIqI,UAAU,2CACZ9I,SAAA8iC,EAAen4B,IAAK0lB,IACb,MAAAe,EAAUE,GAAiBjB,EAAMgB,UACjC6R,EAAe9R,EAAU+R,GAAoB/R,EAAS,aAAe,KAGzE,OAAA5xB,EAAAC,KAAC,MAAA,CAECqJ,UAAU,+IAGT9I,SAAA,CACCkjC,GAAA1jC,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,qDACb9I,SAAA,CAAAR,EAAAiB,IAAC,MAAA,CACC4X,IAAK6qB,EACL5qB,IAAK+X,EAAMhkB,MACXvD,UAAU,+BAEXrI,EAAAA,IAAA,MAAA,CAAIqI,UAAU,sFAAsF9I,SAErG,iBAKJP,KAAC,MAAI,CAAAqJ,UAAU,MACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,wCACb9I,SAAA,CAAAS,EAAAA,IAAC,OAAK,CAAAqI,UAAU,sGACb9I,SAAAqwB,EAAMnkB,WAERmkB,EAAMxJ,QACJpmB,EAAAA,IAAA,MAAA,CAAIqI,UAAU,0BACZ9I,SAAA4a,MAAMyH,KAAK,CAAErb,OAAQ,GAAK,CAAC8f,EAAGxe,IAC7B9I,EAAAiB,IAACsmB,GAAA,CAECje,UAAW,YACTR,EAAI+nB,EAAMxJ,OAAU,kBAAoB,qCAFrCve,SAUd7H,EAAAA,IAAA,KAAA,CAAGqI,UAAU,4DACX9I,WAAMqM,QAGRgkB,EAAMwD,SACLpzB,EAAAA,IAAC,KAAEqI,UAAU,6DACV9I,WAAM6zB,YAIXp0B,KAAC,MAAI,CAAAqJ,UAAU,wEACb9I,SAAA,CAAAS,EAAAA,IAAC,OAAM,CAAAT,SAAAuX,GAAW8Y,EAAMuD,aACvBvD,EAAMrO,UAAYqO,EAAMrO,SAAShb,OAAS,GAEvCvH,EAAAA,KAAA2P,WAAA,CAAApP,SAAA,GAAAS,IAAC,QAAKT,SAAC,aACN,OAAK,CAAAA,SAAA,CAAA,MAAIqwB,EAAMrO,SAAShb,OAAO,eAMtCvH,KAAC,MAAI,CAAAqJ,UAAU,aACb9I,SAAA,CAAAR,EAAAC,KAAC,SAAA,CACCqL,QAAS,IAAM03B,EAAa5C,WAAWvP,GACvCvnB,UAAU,wJAEV9I,SAAA,CAAAR,EAAAiB,IAACoiB,EAAO,IAAE,SAEZrjB,EAAAC,KAAC,SAAA,CACCqL,QAAS,IAAM03B,EAAaf,aAAapR,GACzCvnB,UAAU,kJAEV9I,SAAA,CAAAR,EAAAiB,IAACqiB,EAAQ,IAAE,iBArEZuN,EAAM5e,UAgFnB8wB,EAAWb,UAAsC,IAA1BoB,EAAe97B,QACtCxH,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,oBACb9I,SAAA,GAACS,IAAAgO,EAAA,CAAQ3F,UAAU,wCACnBrI,EAAAA,IAAC,KAAEqI,UAAU,gDACV9I,SAAmB,UAChB,qBACA,GAAGyiC,wBAETjjC,EAAAC,KAAC,SAAA,CACCqL,QAAS03B,EAAaY,UACtBt6B,UAAU,6HAEV9I,SAAA,CAAAR,EAAAiB,IAAC0mB,GAAO,IAAE,uBE5PhBkc,GAAiC,KACrC,MAAMvW,QAAEA,EAAAxa,MAASA,GAAUqe,MACrB2S,UACJA,EAAAhkC,UACAA,EAAAikC,eACAA,EAAAC,eACAA,EAAAC,eACAA,GACEC,MAEGC,EAAoBC,GAAyB3iC,WAAwB,OACrE4iC,EAAeC,GAAoB7iC,YAAS,IAC5C8iC,EAAcC,GAAmB/iC,WAAc,OAC/CgjC,EAAiBC,GAAsBjjC,YAAS,IAChDkjC,EAAeC,GAAoBnjC,WAAS,KAE3CsZ,KAAM+Z,EAAiB,IAAOC,GAAkBoP,QAAsB,GACxEU,EAAsBC,KACtB7P,EAAsBC,KACtB6P,EAAsBC,MAErBC,EAAeC,GAAmB3G,GAA8B,CACrEC,OAAQlrB,MAAOyH,EAA6B0jB,KAC1C,GAAIA,EAAa,QACMuF,EAAevF,EAAYxsB,IAAK8I,IAC1CuS,SACTA,EAAQ,cAAe,wBACzB,KACK,QACgByW,EAAehpB,IACzBuS,SACTA,EAAQ,cAAe,sBAE3B,GAEFpL,SAAU5O,MAAOshB,UACTqP,EAAerP,EAAS3iB,KAC9Bqb,EAAQ,cAAe,GAAGsH,EAAS/nB,uBAErC0M,QAAU9F,IACFX,EAAA,QAASW,EAAIE,SAAW,yBAiC5BwxB,EAAsB7xB,UAC1B,IAAKqxB,EAAcrqB,SAAW6pB,EAE5B,YADAiB,MAAM,kBAIR,MAAMC,EAAOV,EAAcpqB,MAAM,MAAMpP,IAAWwR,GAAAA,EAAIrC,QAAQqI,OAAQhG,GAAuBuX,QAAQvX,IAEjG,GAAgB,IAAhB0oB,EAAK79B,OAKL,IACF,IAAI89B,EAAe,EAEnB,IAAA,MAAW3oB,KAAO0oB,EAAM,CACtB,IAAK1oB,EAAK,SAEJ,MAAAiV,EAAUE,GAAiBnV,GAEjC,IAAKiV,EAEH,SAGF,MAAM2T,EAAmC,CACvC5P,WAAYwO,EACZvS,UACA/kB,MAAO,MAAMioB,EAAettB,OAAS89B,EAAe,IACpDlS,aAAc,GACdmB,MAAOO,EAAettB,OAAS89B,SAG3BT,EAAoB5d,YAAYse,GACtCD,GACF,CAEAV,EAAiB,IACjBF,GAAmB,GACXpX,EAAA,WAAY,GAAGgY,mDAChB7xB,GACPX,EAAM,WAAY,sBACpB,MAlCEsyB,MAAM,kBAqCV,OAAItlC,EAEAE,EAAAiB,IAAC,OAAIqI,UAAU,yCACb9I,eAAC,MAAI,CAAA8I,UAAU,kGAMlB,MACC,CAAA9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,yCACb9I,SAAA,GAACP,KAAA,KAAA,CAAGqJ,UAAU,2EACZ9I,SAAA,GAACS,IAAAk1B,GAAA,CAAO7sB,UAAU,iBAAiB,cAGrCtJ,EAAAC,KAAC,SAAA,CACCqL,QAAS45B,EAAgBnD,aACzBz4B,UAAU,oHAEV9I,SAAA,CAAAR,EAAAiB,IAAC0mB,GAAO,IAAE,iBAMbsd,EAAc/C,UACZjhC,EAAAA,IAAA,MAAA,CAAIqI,UAAU,6EACb9I,eAAC,MAAA,CAAI8I,UAAU,0FACb9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,MACb9I,SAAA,CAAAS,MAAC,MAAGqI,UAAU,2DACX9I,SAAcykC,EAAAxG,YAAc,WAAa,aAE3CwG,EAAcxG,YACbz+B,EAAAiB,IAACukC,GAAA,CACCzqB,KAAMkqB,EAAcxG,YACpBD,OAAQ0G,EAAgB7C,WACxBC,SAAU4C,EAAgB/C,aAC1BhgB,SAAU8iB,EAAc9iB,WAG1BniB,EAAAiB,IAACukC,GAAA,CACChH,OAAQ0G,EAAgB7C,WACxBC,SAAU4C,EAAgB/C,aAC1BhgB,SAAU8iB,EAAc9iB,kBASnCkiB,GAAiBF,GACfljC,EAAAA,IAAA,MAAA,CAAIqI,UAAU,6EACb9I,eAAC,MAAA,CAAI8I,UAAU,0FACb9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,MACb9I,SAAA,CAAAS,MAAC,KAAG,CAAAqI,UAAU,2DACX9I,SAAA+jC,EAAe,cAAgB,gBAElCvkC,EAAAiB,IAACwkC,GAAA,CACC9P,WAAYwO,EACZppB,KAAMwpB,EACN/F,OAxIUlrB,MAAOyH,IACzB,IACEwpB,SACItP,EAAoBhO,YAAY,CAAE7T,GAAImxB,EAAatyB,IAAK8I,SAC9DuS,EAAQ,WAAY,8BAEduX,EAAoB5d,YAAYlM,GACtCuS,EAAQ,WAAY,2BAEtBgX,GAAiB,GACjBE,EAAgB,YACT/wB,GACPX,EAAM,WAAY,sBACpB,GA4HYwvB,SAAU,KACRgC,GAAiB,GACjBE,EAAgB,OAElBriB,SAAU0iB,EAAoBze,WAAa6O,EAAoB7O,qBAQzEnmB,KAAC,MAAI,CAAAqJ,UAAU,aACZ9I,SAAA,CAAUsjC,EAAA34B,IAAKypB,IACR,MAAAhN,EAAauc,IAAuBvP,EAAS3iB,IAC7CyzB,EAAgB9d,EAAakN,EAAiB,GAGlD,OAAA90B,EAAAC,KAAC,MAAA,CAECqJ,UAAU,qIAGV9I,SAAA,CAAAS,EAAAA,IAAC,OAAIqI,UAAU,MACb9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,mCACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,SACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,+BACb9I,SAAA,CAAAS,EAAAA,IAAC,KAAG,CAAAqI,UAAU,kDACX9I,SAAAo0B,EAAS/nB,QAEZ7M,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAM84B,EAAsBxc,EAAa,KAAOgN,EAAS3iB,KAClE3I,UAAU,uDACVuD,MAAO+a,EAAa,WAAa,YAEhCpnB,SAAaonB,EAAA3mB,EAAAA,IAACm1B,GAAY,CAAA,SAAMtV,EAAc,WAGnD7gB,KAAC,MAAI,CAAAqJ,UAAU,qEAEZ9I,SAAA,CAASo0B,EAAAjO,aAAeiO,EAASjO,YAAYnf,OAAS,EACpDotB,EAASjO,YAAsBxb,IAAKyb,IACnC,MAAMC,EAAgC,iBAAfD,EAA0BA,EAAyB,MAAZA,OAAY,EAAAA,EAAA1a,KAC1E,OAAO2a,EACL7mB,EAAAiB,IAAC,OAAA,CAECqI,UAAU,kFAET9I,SAAAqmB,GAH0B,iBAAfD,EAA0BA,EAAyB,MAAZA,OAAY,EAAAA,EAAA3U,KAK/D,OAIN2iB,EAASloB,UACPzL,EAAAA,IAAC,QAAKqI,UAAU,kFACb9I,WAASkM,WAIfkoB,EAASvN,QACPpmB,EAAAA,IAAA,MAAA,CAAIqI,UAAU,0BACZ9I,SAAA4a,MAAMyH,KAAK,CAAErb,OAAQ,GAAK,CAAC8f,EAAGxe,IAC7B9I,EAAAiB,IAACsmB,GAAA,CAECje,UAAW,YACTR,EAAI8rB,EAASvN,OAAU,kBAAoB,kBAFxCve,aAQZ,OAAK,CAAAtI,SAAA,CAAA,QAAMuX,GAAW6c,EAASR,iBAEjCQ,EAASP,SACRpzB,EAAAA,IAAC,KAAEqI,UAAU,wDAAyD9I,WAAS6zB,eAGnFp0B,KAAC,MAAI,CAAAqJ,UAAU,kBACb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAM45B,EAAgB9E,WAAWxL,GAC1CtrB,UAAU,gGACVuD,MAAM,WAENrM,eAAC6iB,EAAO,MAEVrjB,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAM45B,EAAgBjD,aAAarN,GAC5CvgB,SAAU4wB,EAAc9e,WACxB7c,UAAU,uFACVuD,MAAM,WAENrM,eAAC8iB,EAAQ,cAOhBsE,GACC5nB,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,gFACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,yCACb9I,SAAA,GAACP,KAAA,KAAA,CAAGqJ,UAAU,kEACZ9I,SAAA,CAAAR,EAAAiB,IAACgO,EAAQ,IAAE,WAASy2B,EAAcl+B,OAAO,UAE3CvH,KAAC,MAAI,CAAAqJ,UAAU,aACb9I,SAAA,CAAAR,EAAAC,KAAC,SAAA,CACCqL,QAAS,IAAMo5B,GAAoBD,GACnCn7B,UAAU,oHAEV9I,SAAA,CAAAR,EAAAiB,IAACk1B,GAAO,IAAE,eAEZn2B,EAAAC,KAAC,SAAA,CACCqL,QAAS,KACPk5B,EAAgB,MAChBF,GAAiB,IAEnBh7B,UAAU,kHAEV9I,SAAA,CAAAR,EAAAiB,IAAC0mB,GAAO,IAAE,kBAMf8c,GACCzkC,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,0EACb9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,+CAA+C9I,SAE7D,oBACCS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,gDAAgD9I,SAE7D,uDACAR,EAAAiB,IAAC,WAAA,CACC4S,MAAO8wB,EACP7wB,SAAWP,GAAMqxB,EAAiBrxB,EAAEQ,OAAOF,OAC3CvK,UAAU,2LACV8U,KAAM,EACNpK,YAAY,yIAEd/T,KAAC,MAAI,CAAAqJ,UAAU,aACb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAAS65B,EACT9wB,SAAUwwB,EAAoBze,UAC9B9c,UAAU,yJAET9I,SAAAqkC,EAAoBze,UAAY,UAAY,UAE/CpmB,EAAAiB,IAAC,SAAA,CACCqK,QAAS,KACPo5B,GAAmB,GACnBE,EAAiB,KAEnBt7B,UAAU,sGACX9I,SAAA,aAQNklC,EAAcl+B,OAAS,EACrBvG,EAAAA,IAAA,MAAA,CAAIqI,UAAU,YACZ9I,SAAcklC,EAAAv6B,IAAI,CAAC0lB,EAAO/qB,IACzB9F,EAAAiB,IAAC,MAAA,CAECqI,UAAU,uFAEV9I,SAAAR,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,mCACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,SACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,+BACb9I,SAAA,GAACP,KAAA,OAAA,CAAKqJ,UAAU,2DAA2D9I,SAAA,CAAA,IACvEsF,EAAQ,KAEX7E,EAAAA,IAAA,KAAA,CAAGqI,UAAU,8CACX9I,WAAMqM,aAGX5M,KAAC,IAAE,CAAAqJ,UAAU,2CAA2C9I,SAAA,CAAA,OACjDqwB,EAAMe,WAEZf,EAAMuC,cACLnyB,EAAAA,IAAC,KAAEqI,UAAU,6DACV9I,WAAM4yB,oBAIbnzB,KAAC,MAAI,CAAAqJ,UAAU,kBACb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAAS,KACPk5B,EAAgB3T,GAChByT,GAAiB,IAEnBh7B,UAAU,6FACVuD,MAAM,QAENrM,eAAC6iB,EAAO,MAEVrjB,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAhUbgI,OAAOse,IAC3B,GAAC5K,QAAQ,yBACT,UACI+d,EAAoB9d,YAAY2K,GACtCtE,EAAQ,WAAY,4BACb7Z,GACPX,EAAM,WAAY,sBACpB,GAyT2C6yB,CAAkB9U,EAAM5e,KACvC3I,UAAU,oFACVuD,MAAM,QAENrM,eAAC8iB,EAAQ,aAtCVuN,EAAM5e,QA8ChBhS,OAAA,MAAA,CAAIqJ,UAAU,yFACb9I,SAAA,GAACS,IAAAgO,EAAA,CAAQ3F,UAAU,qCAClBrI,EAAAA,IAAA,IAAA,CAAEqI,UAAU,UAAU9I,SAAqB,0BAC3CS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,eAAe9I,SAAuB,oCApMtDo0B,EAAS3iB,OA6ME,IAArB6xB,EAAUt8B,QACRvH,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,qDACb9I,SAAA,GAACS,IAAAk1B,GAAA,CAAO7sB,UAAU,uCAClBrI,IAAC,KAAET,SAAkB,iCC3Z3BolC,GAA4C,EAAGC,iBAAgB/xB,oBAQhE,MAAI,CAAAxK,UAAU,gEACZ9I,SARqE,CACxE,CAAEuK,KAAM,KAAM+6B,KAAM,OAAQr2B,MAAO,OACnC,CAAE1E,KAAM,KAAM+6B,KAAM,OAAQr2B,MAAO,WACnC,CAAE1E,KAAM,KAAM+6B,KAAM,OAAQr2B,MAAO,QAKtBtE,IAAKN,IACR,MAAAO,EAAWy6B,IAAmBh7B,EAAKE,KAEvC,OAAA/K,EAAAC,KAAC,SAAA,CAECsE,KAAK,SACL+G,QAAS,IAAMwI,EAASjJ,EAAKE,MAC7BzB,UAAW,2FACT8B,EACI,kFACA,4IAGN5K,SAAA,CAAAS,EAAAA,IAAC,OAAK,CAAAqI,UAAU,UAAW9I,SAAAqK,EAAKi7B,SAChC7kC,IAAC,OAAM,CAAAT,SAAAqK,EAAK4E,UAVP5E,EAAKE,UCThBg7B,GAAsD,EAC1DC,mBAAmB,MACnBC,uBAAuB,GACvBC,4BAA4B,GAC5BC,yBAAyB,OAEzB,MAAMtK,YAAEA,EAAa/7B,UAAAA,EAAAsmC,iBAAWA,mBAAkBC,EAAkBC,iBAAAA,GAAqBC,MAClFrE,EAAUsE,GAAe/kC,YAAS,IAClCg9B,EAAagI,GAAkBhlC,WAA4B,OAC3D0gB,EAAUukB,GAAejlC,YAAS,IAClC0kB,EAAYwgB,GAAiBllC,YAAS,GAGvCmlC,EAAsBx5B,EAAAA,QAAQ,KAC9B,IAAAkzB,EAAW,IAAIzE,GAcnB,GAXyB,YAArBmK,GAAkCE,EACpC5F,EAAWA,EAAS3d,OAAc+W,GAAAA,EAAIW,UAAY6L,GACpB,SAArBF,GAA+BG,IAC7B7F,EAAAA,EAAS3d,OAAc+W,IAEjBA,EAAIc,QAAU,IACfjpB,SAAS40B,KAKvBF,EAAsB,CAClB,MAAA1F,EAAc0F,EAAqBzF,cACzCF,EAAWA,EAAS3d,OAAO+W,GACzBA,EAAI7sB,MAAM2zB,cAAcjvB,SAASgvB,IACjC7G,EAAIW,QAAQmG,cAAcjvB,SAASgvB,IAClC7G,EAAIptB,aAAeotB,EAAIptB,YAAYk0B,cAAcjvB,SAASgvB,GAE/D,CAEO,OAAAD,GACN,CAACzE,EAAamK,EAAkBC,EAAsBC,EAA2BC,IAuEpF,OAAIrmC,IAEAG,KAAC,MAAI,CAAAqJ,UAAU,wCACb9I,SAAA,GAACS,IAAA,MAAA,CAAIqI,UAAU,iEACdrI,EAAAA,IAAA,OAAA,CAAKqI,UAAU,OAAO9I,SAAiB,gCAM3C,MACC,CAAAA,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,yCACb9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,qBAAqB9I,SAAK,UACxCR,EAAAC,KAAC,SAAA,CACCqL,QAxBa,KACnBm7B,EAAe,MACfD,GAAY,IAuBNl9B,UAAU,4GAEV9I,SAAA,CAAAR,EAAAiB,IAAC0mB,GAAO,IAAE,eAMS,QAArBqe,GAA8BC,GAAwBC,GAA6BC,IAClFnmC,EAAAiB,IAAA,MAAA,CAAIqI,UAAU,mDACb9I,SAACR,EAAAiB,IAAA,MAAA,CAAIqI,UAAU,oCACb9I,gBAAC,MACC,CAAAA,SAAA,GAACP,KAAA,KAAA,CAAGqJ,UAAU,uDAAuD9I,SAAA,CAAA,SAE7C,QAArBwlC,IAA+BC,GAAwB,YAClC,YAArBD,GAAkCE,GAA6B,OAAOA,OACjD,SAArBF,GAA+BG,GAA0B,OAAOA,KAChEF,GAAwB,QAAQA,aAEnChmC,KAAC,IAAE,CAAAqJ,UAAU,gDACV9I,SAAA,CAAoBomC,EAAAp/B,OAAO,iBAAeq0B,EAAYr0B,OAAO,eAOvE06B,KACCjhC,IAAC,MAAI,CAAAqI,UAAU,OACb9I,SAAAR,EAAAiB,IAAC4lC,GAAA,CACC9rB,KAAM0jB,EACND,OAhGSlrB,MAAOyH,IACpB,IAEF,GADA2rB,GAAY,GACRjI,EAAa,QACM4H,EAAiB5H,EAAYxsB,IAAM8I,IAC7CuS,UACTkZ,GAAY,GACZC,EAAe,MACjB,KACK,QACgBL,EAAiBrrB,IAC3BuS,SACTkZ,GAAY,EAEhB,QACO1zB,GACsB,CAC7B,QACA4zB,GAAY,EACd,GA8EQpE,SA3EW,KACnBkE,GAAY,GACZC,EAAe,WA+EZG,EAAoBp/B,OAAS,QAC3B,MAAI,CAAA8B,UAAU,YACZ9I,SAAoBomC,EAAAz7B,IAAK27B,SACvB,MAAyB,CAAAx9B,UAAU,yFAClC9I,SAACR,EAAAC,KAAA,MAAA,CAAIqJ,UAAU,mCACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,SACb9I,SAAA,CAAAS,EAAAA,IAAC,KAAG,CAAAqI,UAAU,wBAAyB9I,SAAAsmC,EAAWj6B,QACjD5L,EAAAA,IAAA,IAAA,CAAEqI,UAAU,mCAAoC9I,WAAW65B,UAC3Dp5B,EAAAA,IAAA,IAAA,CAAEqI,UAAU,2CACV9I,WAAWg6B,SAEbsM,EAAWx6B,aACVrL,EAAAA,IAAC,KAAEqI,UAAU,6DACV9I,WAAW8L,mBAIlBrM,KAAC,MAAI,CAAAqJ,UAAU,kBACb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IA7ER,CAACw7B,IAClBL,EAAeK,GACfN,GAAY,IA2EmBpG,CAAW0G,GAC1Bx9B,UAAU,yEACV+K,SAAU8N,GAAYgE,EAEtB3lB,eAAC6iB,EAAO,MAEVrjB,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAtGNgI,OAAOwzB,IACtB,GAAA9f,QAAQ,gBACN,IACF2f,GAAc,SACRL,EAAiBQ,EAAW70B,WAC3Ba,GACsB,CAC7B,QACA6zB,GAAc,EAChB,GA6F6B1E,CAAa6E,GAC5Bx9B,UAAU,uEACV+K,SAAU8N,GAAYgE,EAEtB3lB,eAAC8iB,EAAQ,aA3BPwjB,EAAW70B,UAmCzBhS,KAAC,MAAI,CAAAqJ,UAAU,oBACb9I,SAAA,CAACS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,gDACV9I,SAAqB,QAArBwlC,GAA8BC,GAAwBC,GAA6BC,EAChF,sBACA,mBAGiB,QAArBH,GAA8BC,GAAwBC,GAA6BC,IAClFllC,EAAAA,IAAA,IAAA,CAAEqI,UAAU,2CAA2C9I,SAExD,sCCnNNumC,GAAgD,EACpDC,gBAAgB,MAChBC,oBAAoB,GACpBC,0BAA0B,OAE1B,MAAMpL,SAAEA,EAAUh8B,UAAAA,EAAAqnC,cAAWA,gBAAeC,EAAeC,cAAAA,GAAkBC,MACtEpF,EAAUsE,GAAe/kC,YAAS,IAClCg9B,EAAagI,GAAkBhlC,WAAyB,OACxD0gB,EAAUukB,GAAejlC,YAAS,IAClC0kB,EAAYwgB,GAAiBllC,YAAS,GAGvC8lC,EAAmBn6B,EAAAA,QAAQ,KAC3B,IAAAkzB,EAAW,IAAIxE,GAenB,GAZsB,aAAlBkL,GAAgCE,EAClC5G,EAAWA,EAAS3d,OAAkB4T,GAAAA,EAAQ7pB,WAAaw6B,GAChC,aAAlBF,IAET1G,EAAWA,EAAS3d,OAAO4T,GACN,cAAnBA,EAAQY,QACRZ,EAAQyC,qBACRzC,EAAQyC,oBAAoB1e,OAAO9S,OAAS,IAK5Cy/B,EAAmB,CACf,MAAA1G,EAAc0G,EAAkBzG,cACtCF,EAAWA,EAAS3d,UAClB4T,EAAQ1pB,MAAM2zB,cAAcjvB,SAASgvB,IACrChK,EAAQjqB,YAAYk0B,cAAcjvB,SAASgvB,IAC1ChK,EAAQG,cAAgBH,EAAQG,aAAaoD,KAC5C1C,GAAAA,EAAKoJ,cAAcjvB,SAASgvB,KAE7BhK,EAAQ7pB,UAAY6pB,EAAQ7pB,SAAS8zB,cAAcjvB,SAASgvB,GAEjE,CAEO,OAAAD,GACN,CAACxE,EAAUkL,EAAeC,EAAmBC,IAS1CM,EAAwBp6B,EAAAA,QAAQ,IAC7B0uB,EAASnZ,OAAO4T,GACF,cAAnBA,EAAQY,QACRZ,EAAQyC,qBACRzC,EAAQyC,oBAAoB1e,OAAO9S,OAAS,GAC5CA,OACD,CAACs0B,IAwFJ,OAAIh8B,IAEAG,KAAC,MAAI,CAAAqJ,UAAU,wCACb9I,SAAA,GAACS,IAAA,MAAA,CAAIqI,UAAU,iEACdrI,EAAAA,IAAA,OAAA,CAAKqI,UAAU,OAAO9I,SAAmB,kCAM7C,MACC,CAAAA,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,yCACb9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,qBAAqB9I,SAAO,YAC1CR,EAAAC,KAAC,SAAA,CACCqL,QAxBa,KACnBm7B,EAAe,MACfD,GAAY,IAuBNl9B,UAAU,4GAEV9I,SAAA,CAAAR,EAAAiB,IAAC0mB,GAAO,IAAE,iBAMM,QAAlBqf,GAA2BC,GAAqBC,MAC/CjmC,IAAA,MAAA,CAAIqI,UAAU,mDACb9I,eAAC,MAAA,CAAI8I,UAAU,oCACb9I,gBAAC,MACC,CAAAA,SAAA,GAACP,KAAA,KAAA,CAAGqJ,UAAU,uDAAuD9I,SAAA,CAAA,SAEhD,QAAlBwmC,IAA4BC,GAAqB,cAC/B,aAAlBD,GAAgCE,GAA2B,QAAQA,SACjD,aAAlBF,GAAgC,cAChCC,GAAqB,QAAQA,aAEhChnC,KAAC,IAAE,CAAAqJ,UAAU,gDACV9I,SAAA,CAAiB+mC,EAAA//B,OAAO,mBAAiBs0B,EAASt0B,OAAO,KACvC,aAAlBw/B,GAAgC,cAAcQ,gBAOxDtF,KACCjhC,IAAC,MAAI,CAAAqI,UAAU,OACb9I,SAAAR,EAAAiB,IAACwmC,GAAA,CACC1sB,KAAM0jB,EACND,OArISlrB,MAAOyH,kCAKpB,IAIF,GAHA2rB,GAAY,GAGRjI,EAAa,CAEf,MAAMiJ,QAAeN,EAAc3I,EAAYxsB,IAAM8I,GAErD,GAAI2sB,EAAOpa,QACTkZ,GAAY,GACZC,EAAe,MACfrB,MAAM,8BACD,CAGC,MAAAuC,GAAY,OAAA9rB,EAAA,SAAA,WAAO/I,YAAP,EAAA0I,EAAsB0I,eAAU,EAAAvI,EAAAZ,eAAMpH,UAAW,YAC7DyxB,MAAA,iBAAiBuC,KAClB,OAAA3rB,EAAA,OAAOD,EAAA2rB,EAAA50B,YAAe,EAAAiJ,EAAAmI,aAAUnJ,IAGvC,CAAA,KACK,CAEC,MAAA2sB,QAAeP,EAAcpsB,GAEnC,GAAI2sB,EAAOpa,QACTkZ,GAAY,GACZpB,MAAM,8BACD,CAGC,MAAAuC,GAAY,OAAAnrB,EAAA,SAAA,WAAO1J,YAAP,EAAAsJ,EAAsB8H,eAAU,EAAA5H,EAAAvB,eAAMpH,UAAW,YAC7DyxB,MAAA,iBAAiBuC,KAClB,OAAA9qB,EAAA,OAAOJ,EAAAirB,EAAA50B,YAAe,EAAA2J,EAAAyH,aAAUnJ,IAGvC,CACF,QACOjI,GAGD,MAAA60B,GAAW,OAAA5qB,EAAA,0BAAOmH,eAAP,EAAAtH,EAAiB7B,WAAM,EAAAgC,EAAApJ,UAAWb,EAAMa,SAAW,YAC9DyxB,MAAA,iBAAiBuC,KACnB,OAAA1qB,EAAA,MAAAnK,OAAA,EAAAA,EAAOoR,WAAPjH,EAAiBlC,IAGrB,CACA,QAEA2rB,GAAY,EACd,GA+EQpE,SA5EW,KACnBkE,GAAY,GACZC,EAAe,OA2EPtkB,eAMLolB,EAAiB//B,OAAS,EACzBvG,EAAAA,IAAC,OAAIqI,UAAU,uDACZ9I,SAAiB+mC,EAAAp8B,IAAKorB,GACpBv2B,EAAAC,KAAA,MAAA,CAAsBqJ,UAAU,yFAC/B9I,SAAA,CAAAS,EAAAA,IAAC,KAAG,CAAAqI,UAAU,6BAA8B9I,SAAA+1B,EAAQ1pB,QACnD5L,EAAAA,IAAA,IAAA,CAAEqI,UAAU,6DAA8D9I,WAAQ8L,cAClFiqB,EAAQ7pB,UACPzL,EAAAA,IAAC,KAAEqI,UAAU,gDAAiD9I,WAAQkM,WAEvE6pB,EAAQG,cAAgBH,EAAQG,aAAalvB,OAAS,GACrDxH,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,4BACZ9I,SAAA,CAAA+1B,EAAQG,aAAa9Y,MAAM,EAAG,GAAGzS,IAAI,CAACisB,EAAMtxB,UAC1C,OAAiB,CAAAwD,UAAU,0FACzB9I,SAAA42B,GADQtxB,IAIZywB,EAAQG,aAAalvB,OAAS,GAC5BvH,EAAAA,KAAA,OAAA,CAAKqJ,UAAU,2CAA2C9I,SAAA,CAAA,IACvD+1B,EAAQG,aAAalvB,OAAS,UAKxCvH,KAAC,MAAI,CAAAqJ,UAAU,oCACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,0BACb9I,SAAA,GAAAS,IAAC,OAAK,CAAAqI,UAAW,8BACI,cAAnBitB,EAAQY,OACJ,uEACA,4EAEH32B,SAAmB,cAAnB+1B,EAAQY,OAAyB,KAAO,QAEvB,cAAnBZ,EAAQY,QAA0BZ,EAAQyC,qBAAuBzC,EAAQyC,oBAAoB1e,OAAO9S,OAAS,GAC5GvG,EAAAA,IAAC,OAAK,CAAAqI,UAAU,qGAAqG9I,SAErH,eAGJP,KAAC,MAAI,CAAAqJ,UAAU,aACb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IApGR,CAACirB,IAClBkQ,EAAelQ,GACfiQ,GAAY,IAkGmBpG,CAAW7J,GAC1BjtB,UAAU,yEACV+K,SAAU8N,GAAYgE,EAEtB3lB,eAAC6iB,EAAO,MAEVrjB,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IA7HNgI,OAAOijB,IACtB,GAAAvP,QAAQ,gBACN,IACF2f,GAAc,SACRU,EAAc9Q,EAAQtkB,WACrBa,GACsB,CAC7B,QACA6zB,GAAc,EAChB,GAoH6B1E,CAAa1L,GAC5BjtB,UAAU,uEACV+K,SAAU8N,GAAYgE,EAEtB3lB,eAAC8iB,EAAQ,cAhDPiT,EAAQtkB,QAwDrBhS,OAAA,MAAA,CAAIqJ,UAAU,oBACb9I,SAAA,CAACS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,gDACV9I,SAAkB,QAAlBwmC,GAA2BC,GAAqBC,EAC7C,wBACA,qBAGc,QAAlBF,GAA2BC,GAAqBC,UAC/C,IAAE,CAAA59B,UAAU,2CAA2C9I,SAExD,sCCzQNonC,GAA8C,EAClDC,YACA35B,SACAuE,UACAq1B,eACA5lB,WACA6lB,cAEA,MAAOC,EAAcC,GAAmBxmC,YAAS,IAC1CymC,EAAeC,GAAoB1mC,YAAS,IAC5C2mC,EAAcC,GAAmB5mC,WAAS,KAI/CsZ,KAAMpH,EAAA7T,UACNA,EAAA8jB,QACAA,EAAA9Q,MACAA,EAAAw1B,QACAA,GACEC,GAAiBV,EAAW,CAC9BvjC,QAAS4J,KAAY25B,IAwDvB,OAAK35B,EAGDpO,QAECqT,GACC,CAAA3S,SAAAR,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,GACpBjE,QAAS,CAAEiE,QAAS,GACpBoG,KAAM,CAAEpG,QAAS,GACjBL,UAAU,iFACVgC,QAASmH,EAETjS,SAAAR,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAExB,MAAO,GAAKyB,QAAS,GAChCjE,QAAS,CAAEwC,MAAO,EAAGyB,QAAS,GAC9BoG,KAAM,CAAE7H,MAAO,GAAKyB,QAAS,GAC7BL,UAAU,qEACVgC,QAAUiI,GAAMA,EAAE8jB,kBAElB72B,SAAAR,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,4CACb9I,SAAA,GAACS,IAAAunC,GAAA,CAAUl/B,UAAU,gEACpBrI,EAAAA,IAAA,KAAA,CAAGqI,UAAU,2DAA2D9I,SAEzE,gBACCS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,2CAA2C9I,SAExD,wBASRojB,QAECzQ,GACC,CAAA3S,SAAAR,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,GACpBjE,QAAS,CAAEiE,QAAS,GACpBoG,KAAM,CAAEpG,QAAS,GACjBL,UAAU,iFACVgC,QAASmH,EAETjS,SAAAR,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAExB,MAAO,GAAKyB,QAAS,GAChCjE,QAAS,CAAEwC,MAAO,EAAGyB,QAAS,GAC9BoG,KAAM,CAAE7H,MAAO,GAAKyB,QAAS,GAC7BL,UAAU,qEACVgC,QAAUiI,GAAMA,EAAE8jB,kBAElB72B,SAAAR,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,cACb9I,SAAA,CAACS,EAAAA,IAAA,MAAA,CAAIqI,UAAU,6BAA6B9I,SAAE,OAC7CS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,2DAA2D9I,SAEzE,0BACC,IAAE,CAAA8I,UAAU,gDACV9I,UAAA,MAAAsS,OAAA,EAAAA,EAAOa,UAAW,yBAErB1T,KAAC,MAAI,CAAAqJ,UAAU,4BACb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAMg9B,IACfh/B,UAAU,kFACX9I,SAAA,UAGDR,EAAAiB,IAAC,SAAA,CACCqK,QAASmH,EACTnJ,UAAU,kFACX9I,SAAA,mBAYVmT,QAuCFR,GACC,CAAA3S,SAAAR,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,GACpBjE,QAAS,CAAEiE,QAAS,GACpBoG,KAAM,CAAEpG,QAAS,GACjBL,UAAU,iFACVgC,QAASmH,EAETjS,SAAAR,EAAAC,KAACuJ,GAAOC,IAAP,CACCC,QAAS,CAAExB,MAAO,GAAKyB,QAAS,GAChCjE,QAAS,CAAEwC,MAAO,EAAGyB,QAAS,GAC9BoG,KAAM,CAAE7H,MAAO,GAAKyB,QAAS,GAC7BL,UAAU,+FACVgC,QAAUiI,GAAMA,EAAE8jB,kBAGlB72B,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,sFACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,0BACb9I,SAAA,GAACS,IAAA0O,EAAA,CAAWrG,UAAU,6CACrBrI,EAAAA,IAAA,KAAA,CAAGqI,UAAU,kDAAkD9I,SAEhE,YACEmT,EAAQ80B,cACP,OAAK,CAAAn/B,UAAU,wDAAwD9I,SAExE,aAGJR,EAAAiB,IAAC,SAAA,CACCqK,QAASmH,EACTnJ,UAAU,4EAEV9I,SAAAS,EAAAA,IAAC4O,EAAQ,CAAAvG,UAAU,4CAKvBrJ,KAAC,MAAI,CAAAqJ,UAAU,+CAEb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,iCACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,YACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,yBACb9I,SAAA,GAACS,IAAA2N,EAAA,CAAOtF,UAAU,iDACjB,MACC,CAAA9I,SAAA,CAACS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,2CAA2C9I,SAAG,QAC1DS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,4CACV9I,WAAQ0L,eAKfjM,KAAC,MAAI,CAAAqJ,UAAU,yBACb9I,SAAA,GAACS,IAAA0O,EAAA,CAAWrG,UAAU,iDACrB,MACC,CAAA9I,SAAA,CAACS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,2CAA2C9I,SAAG,QAC1DS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,4CACV9I,WAAQkoC,gBAKfzoC,KAAC,MAAI,CAAAqJ,UAAU,yBACb9I,SAAA,GAACS,IAAAumB,GAAA,CAAWle,UAAU,iDACrB,MACC,CAAA9I,SAAA,CAACS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,2CAA2C9I,SAAK,UAC7DS,EAAAA,IAAC,KAAEqI,UAAU,4CACV9I,UAtMDwX,EAsMYrE,EAAQ8P,WAAa,GArM5C,IAAIrd,KAAK4R,GAAY2wB,eAAe,QAAS,CAClDC,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,wBAsMC/nC,MAAA,MAAA,CAAIqI,UAAU,YACb9I,gBAAC,MACC,CAAAA,SAAA,CAACS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,gDAAgD9I,SAAE,OAC/DS,EAAAA,IAAC,OAAIqI,UAAU,0BACZ9I,WAAQioC,SACPxoC,KAAC,OAAK,CAAAqJ,UAAU,6DACd9I,SAAA,CAAAR,EAAAiB,IAACk8B,GAAQ,IAAE,SAGbl9B,EAAAA,KAAC,OAAK,CAAAqJ,UAAU,2DACd9I,SAAA,CAAAR,EAAAiB,IAAC0O,EAAW,IAAE,wBAS1B1O,IAAC,MAAI,CAAAqI,UAAU,OACb9I,SAAAS,EAAAA,IAAC,MAAGqI,UAAU,sDACX9I,SAAQmT,EAAAs1B,cAKbhpC,KAAC,MAAI,CAAAqJ,UAAU,OACb9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,4DAA4D9I,SAE1E,aACAS,IAAC,MAAI,CAAAqI,UAAU,6CACb9I,SAAAS,EAAAA,IAAC,KAAEqI,UAAU,oDACV9I,SAAQmT,EAAAA,iBAMf1S,IAACkS,IACE3S,SACC0nC,GAAAloC,EAAAC,KAACuJ,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAGrJ,OAAQ,GAC/BoF,QAAS,CAAEiE,QAAS,EAAGrJ,OAAQ,QAC/ByP,KAAM,CAAEpG,QAAS,EAAGrJ,OAAQ,GAC5BgJ,UAAU,0DAEV9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,2DAA2D9I,SAEzE,YACAP,KAAC,MAAI,CAAAqJ,UAAU,YACb9I,SAAA,QAAC,MACC,CAAAA,SAAA,CAACS,EAAAA,IAAA,QAAA,CAAMqI,UAAU,kEAAkE9I,SAEnF,UACAR,EAAAiB,IAAC,QAAA,CACCsD,KAAK,QACLsP,MAAOF,EAAQ+0B,MACfr0B,UAAQ,EACR/K,UAAU,oJAGb,MACC,CAAA9I,SAAA,CAACS,EAAAA,IAAA,QAAA,CAAMqI,UAAU,kEAAkE9I,SAEnF,UACAR,EAAAiB,IAAC,WAAA,CACC4S,MAAOu0B,EACPt0B,SAAWP,GAAM80B,EAAgB90B,EAAEQ,OAAOF,OAC1CG,YAAY,kBACZoK,KAAM,EACN9U,UAAU,mNAGdrJ,KAAC,MAAI,CAAAqJ,UAAU,aACb9I,SAAA,CAAAR,EAAAC,KAAC,SAAA,CACCqL,QA/RE,KAGtB85B,MAAM,uBACN+C,GAAiB,GACjBE,EAAgB,KA2RIh0B,UAAW+zB,EAAa9tB,OACxBhR,UAAU,2JAEV9I,SAAA,CAAAR,EAAAiB,IAACioC,GAAQ,IAAE,aAEblpC,EAAAiB,IAAC,SAAA,CACCqK,QAAS,KACP68B,GAAiB,GACjBE,EAAgB,KAElB/+B,UAAU,kFACX9I,SAAA,uBAWbP,KAAC,MAAI,CAAAqJ,UAAU,kHACb9I,SAAA,CAAAR,EAAAC,KAAC,SAAA,CACCqL,QAhUQ,KACdy8B,EACFA,EAAQp0B,GAERw0B,GAAiB,IA6TT7+B,UAAU,0GAEV9I,SAAA,CAAAR,EAAAiB,IAACioC,GAAQ,IAAE,WAGbjpC,KAAC,MAAI,CAAAqJ,UAAU,aACZ9I,SAAA,EAACmT,EAAQ80B,QACRzoC,EAAAC,KAAC,SAAA,CACCqL,QApWSgI,UACvB,IAAIK,EAAQ80B,OAER,IACFR,GAAgB,SACVH,EAAan0B,EAAQ1B,WACpBa,GACyB,CAChC,QACAm1B,GAAgB,EAClB,GA2Vc5zB,SAAU2zB,EACV1+B,UAAU,6JAEV9I,SAAA,CAAAR,EAAAiB,IAACk8B,GAAQ,IAAE,IAAE6K,EAAe,UAAY,WAG5ChoC,EAAAC,KAAC,SAAA,CACCqL,QA/VOgI,UACf,GAAC0T,QAAQ,uBAET,IACFihB,GAAgB,SACV/lB,EAASvO,EAAQ1B,eAEhBa,GACsB,CAC7B,QACAm1B,GAAgB,EAClB,GAqVY5zB,SAAU2zB,EACV1+B,UAAU,yJAEV9I,SAAA,CAAAR,EAAAiB,IAACqiB,EAAQ,IAAE,IAAE0kB,EAAe,UAAY,2BAtOjD70B,GACC,CAAA3S,SAAAR,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,GACpBjE,QAAS,CAAEiE,QAAS,GACpBoG,KAAM,CAAEpG,QAAS,GACjBL,UAAU,iFACVgC,QAASmH,EAETjS,SAAAR,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAExB,MAAO,GAAKyB,QAAS,GAChCjE,QAAS,CAAEwC,MAAO,EAAGyB,QAAS,GAC9BoG,KAAM,CAAE7H,MAAO,GAAKyB,QAAS,GAC7BL,UAAU,qEACVgC,QAAUiI,GAAMA,EAAE8jB,kBAElB72B,SAAAR,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,cACb9I,SAAA,GAACS,IAAA0O,EAAA,CAAWrG,UAAU,wCACrBrI,EAAAA,IAAA,KAAA,CAAGqI,UAAU,2DAA2D9I,SAEzE,mBACCS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,gDAAgD9I,SAE7D,gCACAR,EAAAiB,IAAC,SAAA,CACCqK,QAASmH,EACTnJ,UAAU,kFACX9I,SAAA,gBA/GO,KAVD,IAACwX,GC3EhBmxB,GAA2B,KAC/B,MAAMC,SAAEA,EAAUtpC,UAAAA,EAAAupC,WAAWA,EAAYC,cAAAA,GAAkBC,MACpDpjB,EAAYwgB,GAAiBllC,YAAS,IACtC+nC,EAAmBC,GAAwBhoC,EAAAA,cAA6B,IACxEioC,EAAYC,GAAiBloC,YAAS,GAuBvCmoC,EAAoBj2B,IACxB81B,EAAqB91B,EAAQ1B,KAC7B03B,GAAc,IAGVE,EAAoB,KACxBF,GAAc,GACdF,OAAqB,IAYvB,OAAI3pC,IAEAG,KAAC,MAAI,CAAAqJ,UAAU,wCACb9I,SAAA,GAACS,IAAA,MAAA,CAAIqI,UAAU,iEACdrI,EAAAA,IAAA,OAAA,CAAKqI,UAAU,OAAO9I,SAAkB,0BAO3CR,EAAAC,KAAA2P,WAAA,CAAApP,SAAA,QAAC,MACC,CAAAA,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,yCACb9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,qBAAqB9I,SAAM,aACzCP,KAAC,MAAI,CAAAqJ,UAAU,2CAA2C9I,SAAA,CAAA,KACrD4oC,EAAS5hC,OAAO,qBAItB,MAAI,CAAA8B,UAAU,YACZ9I,SAAS4oC,EAAAj+B,IAAKwI,GACb3T,EAAAiB,IAAC,MAAA,CAECqI,UAAU,0IACVgC,QAAS,IAAMs+B,EAAiBj2B,GAEhCnT,SAAAR,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,mCACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,SACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,+BACb9I,SAAA,CAAAS,EAAAA,IAAC,KAAG,CAAAqI,UAAU,wBAAyB9I,SAAAmT,EAAQs1B,WAC7Ct1B,EAAQ80B,cACP,OAAK,CAAAn/B,UAAU,wDAAwD9I,SAExE,aAGJR,EAAAiB,IAAC,IAAA,CACCqI,UAAU,wCACVpJ,MAAO,CACLC,QAAS,cACT2pC,gBAAiB,EACjBC,gBAAiB,WACjBC,SAAU,UAGXxpC,SAAQmT,EAAAA,QAAQnM,OAAS,IAAM,GAAGmM,EAAQA,QAAQmM,UAAU,EAAG,UAAYnM,EAAQA,YAEtF1T,KAAC,MAAI,CAAAqJ,UAAU,2CACb9I,SAAA,QAAC,IAAE,CAAAA,SAAA,CAAA,QAAMmT,EAAQzH,KAAK,KAAGyH,EAAQ+0B,MAAM,cACtC,IAAE,CAAAloC,SAAA,CAAA,UAAQmT,EAAQ8P,UAAY,IAAIrd,KAAKuN,EAAQ8P,WAAWklB,eAAe,SAAW,kBAGzF1oC,EAAAA,KAAC,OAAIqJ,UAAU,kBAAkBgC,QAAUiI,GAAMA,EAAE8jB,kBACjD72B,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAMs+B,EAAiBj2B,GAChCrK,UAAU,yEACVuD,MAAM,QAENrM,eAACwhC,GAAM,OAEPruB,EAAQ80B,QACRzoC,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAtGJgI,OAAOK,IAC1B,UACI01B,EAAW11B,EAAQ1B,WAClBa,GAET,GAiGiCm3B,CAAiBt2B,GAChCrK,UAAU,yFACX9I,SAAA,UAIHR,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IArGNgI,OAAOK,IACtB,GAAAqT,QAAQ,gBACN,IACF2f,GAAc,SACR2C,EAAc31B,EAAQ1B,WACrBa,GACsB,CAC7B,QACA6zB,GAAc,EAChB,GA4F6B1E,CAAatuB,GAC5BrK,UAAU,uEACV+K,SAAU8R,EACVtZ,MAAM,KAENrM,eAAC8iB,EAAQ,aApDV3P,EAAQ1B,WA8DpBy3B,GACC1pC,EAAAiB,IAAC2mC,GAAA,CACCC,UAAW2B,EACXt7B,OAAQw7B,EACRj3B,QAASo3B,EACT/B,aAlGuBx0B,MAAOF,UAC9Bi2B,EAAWj2B,IAkGX8O,SA/FmB5O,MAAOF,UAC1Bk2B,EAAcl2B,cC9BlB82B,GAA4D,EAChEx9B,WACAkb,aACAuiB,WACAC,aACAC,SACAnoB,WACAC,WACAgE,aACA3lB,qBAEM,MAAA8pC,WACJA,EAAAC,UACAA,EAAAC,WACAA,EAAAC,UACAA,EAAA7gC,WACAA,EAAA8gC,WACAA,GACEC,GAAY,CAAEv3B,GAAI1G,EAASuF,MAEzB/R,EAAQ,CACZuqC,UAAWG,GAAIC,UAAUC,SAASL,GAClC7gC,aACAD,QAAS+gC,EAAa,GAAM,GAI5B,OAAA1qC,EAAAC,KAAC,MAAA,CACCsJ,IAAKihC,EACLtqC,QACAoJ,UAAU,qGAEV9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,iEACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,oCACb9I,SAAA,CAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,iCAAiCgC,QAAS,IAAM6+B,EAASz9B,EAASuF,KAE/EzR,SAAA,CAAAR,EAAAiB,IAAC,MAAA,IACKqpC,KACAC,EACJjhC,UAAU,oGACVuD,MAAM,cACNvB,QAAUiI,GAAMA,EAAE8jB,kBAElB72B,eAACsP,EAAO,MAEV9P,EAAAiB,IAAC,MAAA,CACCqI,UAAU,uBACVpJ,MAAO,CAAEK,gBAAiBmM,EAAS3L,SAEpCE,EAAAA,IAAA,KAAA,CAAGqI,UAAU,uCAAwC9I,WAASqM,UAC/D5M,KAAC,OAAK,CAAAqJ,UAAU,2CAA2C9I,SAAA,CAAA,KACvD,OAAAgb,EAAA9O,EAASiZ,aAAT,EAAAnK,EAAiBhU,SAAU,EAAE,gBAGnCvH,KAAC,MAAI,CAAAqJ,UAAU,0BACb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAAUiI,IACRA,EAAE8jB,kBACF+S,EAAW19B,EAASuF,MAEtB3I,UAAU,2EACV+K,SAAU8N,GAAYgE,EAEtB3lB,SAAAS,EAAAA,IAAC0mB,GAAO,CAAAxd,KAAM,OAEhBnK,EAAAiB,IAAC,SAAA,CACCqK,QAAUiI,IACRA,EAAE8jB,kBACFgT,EAAO39B,IAETpD,UAAU,yEACV+K,SAAU8N,GAAYgE,EAEtB3lB,SAAAS,EAAAA,IAACoiB,EAAO,CAAAlZ,KAAM,OAEhBnK,EAAAiB,IAAC,SAAA,CACCqK,QAAUiI,IACRA,EAAE8jB,kBACFnV,EAASxV,IAEXpD,UAAU,uEACV+K,SAAU8N,GAAYgE,EAEtB3lB,SAAAS,EAAAA,IAACqiB,EAAQ,CAAAnZ,KAAM,OAEhByd,QACE9G,EAAc,CAAAxX,UAAU,oBAEzBrI,IAACgnB,GAAe,CAAA3e,UAAU,wBAI/BoD,EAASJ,aACRrL,EAAAA,IAAC,KAAEqI,UAAU,qDACV9I,WAAS8L,iBAMfsb,GAAcpnB,MC/FfuqC,GAAsD,EAC1D9+B,QACA++B,gBACAC,eACAC,aACAC,eACAhpB,WACAgE,aACAilB,gBACAC,cACAhB,SACAnoB,WACAopB,kBACAC,2BAEM,MAAAjB,WACJA,EAAAC,UACAA,EAAAC,WACAA,EAAAC,UACAA,EAAA7gC,WACAA,EAAA8gC,WACAA,GACEC,GAAY,CAAEv3B,GAAInH,EAAMgG,MAEtB/R,EAAQ,CACZuqC,UAAWG,GAAIC,UAAUC,SAASL,GAClC7gC,aACAD,QAAS+gC,EAAa,GAAM,GAI5B,OAAA1qC,EAAAC,KAAC,MAAA,CACCsJ,IAAKihC,EACLtqC,QACAoJ,UAAU,6EAEV9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,iCAEb9I,SAAA,CAAAR,EAAAiB,IAAC,MAAA,IACKqpC,KACAC,EACJjhC,UAAU,oGACVuD,MAAM,cAENrM,eAACsP,EAAO,QAIV7P,KAAC,MAAI,CAAAqJ,UAAU,sBACb9I,SAAA,CAAAP,EAAAA,KAAC,QAAM,CAAAqJ,UAAU,iDAAiDuD,MAAM,gBACtErM,SAAA,CAAAR,EAAAiB,IAAC,QAAA,CACCsD,KAAK,WACLinC,QAASv/B,EAAMw/B,gBAAiB,EAChC33B,SAAU,IAAMw3B,EAAgBr/B,GAChCoI,SAAU8N,GAAYgE,EACtB7c,UAAU,mEAEXrI,EAAAA,IAAA,OAAA,CAAKqI,UAAU,mCAAmC9I,SAAE,UAEtDP,EAAAA,KAAA,QAAA,CAAMqJ,UAAU,iDAAiDuD,MAAM,gBACtErM,SAAA,CAAAR,EAAAiB,IAAC,QAAA,CACCsD,KAAK,WACLinC,QAASv/B,EAAMy/B,qBAAsB,EACrC53B,SAAU,IAAMy3B,EAAqBt/B,GACrCoI,SAAU8N,GAAYgE,EACtB7c,UAAU,qEAEXrI,EAAAA,IAAA,OAAA,CAAKqI,UAAU,mCAAmC9I,SAAE,eAIzDS,IAAC,MAAI,CAAAqI,UAAU,2CACb9I,SAAAS,EAAAA,IAACgJ,GAAY,CAAAC,SAAU+B,EAAMuB,KAAMrD,KAAM,OAE1ClJ,EAAAA,IAAA,OAAA,CAAKqI,UAAU,4BAA6B9I,WAAM0L,SACnDjM,KAAC,MAAI,CAAAqJ,UAAU,0CACb9I,SAAA,CAAAR,EAAAiB,IAAC,QAAA,CACCsD,KAAK,QACLonC,IAAI,IACJlxB,IAAI,MACJmxB,KAAK,IACL/3B,MAAOo3B,EACPn3B,SAAWP,IACT,MAAMs4B,EAAW7X,SAASzgB,EAAEQ,OAAOF,OACrBu3B,EAAAn/B,EAAMgG,IAAM45B,IAE5BviC,UAAU,iGACVpJ,MAAO,CACLuD,WAAY,6BAA6BunC,SAAqBA,KAAiBC,eAA0BA,qBAE3G52B,SAAU8N,GAAYgE,GAAcglB,MAEtClrC,KAAC,OAAK,CAAAqJ,UAAU,+EACb9I,SAAA,CAAAyqC,EAAa,OAEfC,GACClrC,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAM+/B,EAAYp/B,GAC3BoI,SAAU82B,EACV7hC,UAAW,+HACT6hC,EAAe,gCAAkC,IAEnDt+B,MAAM,aAELrM,WAEGP,EAAAA,KAAA2P,EAAAA,SAAA,CAAApP,SAAA,GAACS,IAAA,MAAA,CAAIqI,UAAU,iFAAiF,SAKhGrJ,EAAAA,KAAA2P,EAAAA,SAAA,CAAApP,SAAA,GAACS,IAAAuzB,GAAA,CAAOrqB,KAAM,KAAM,kBAQhClK,KAAC,MAAI,CAAAqJ,UAAU,kBACb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAM++B,EAAOp+B,GACtB3C,UAAU,6EACV+K,SAAU8N,GAAYgE,EAEtB3lB,SAAAS,EAAAA,IAACoiB,EAAO,CAAAlZ,KAAM,OAEhBnK,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAM4W,EAASjW,GACxB3C,UAAU,uEACV+K,SAAU8N,GAAYgE,EAEtB3lB,SAAAS,EAAAA,IAACqiB,EAAQ,CAAAnZ,KAAM,cC/InB2hC,GAA0B,KACxB,MAAAxnB,gBACJA,EAAAxkB,UACAA,EAAAisC,oBACAA,EAAAC,oBACAA,EAAAC,oBACAA,EAAAC,YACAA,EAAAC,YACAA,EAAAC,YACAA,GACEC,MAIGC,EAAYC,GAAiB9qC,WAAsC,OACnE+qC,EAAiBC,GAAsBhrC,WAA+B,OACtEirC,EAAcC,GAAmBlrC,WAAuB,OACxDmrC,EAAoBC,GAAyBprC,WAAwB,OACrEqrC,EAAoBC,GAAyBtrC,EAAAA,SAAsB,IAAIokB,MACvE1D,EAAUukB,GAAejlC,YAAS,IAClC0kB,EAAYwgB,GAAiBllC,YAAS,IAGtCurC,EAAaC,GAAkBxrC,EAAAA,SAA8B,IAAIykB,MAGjEgnB,EAAgBC,GAAqB1rC,EAAAA,SAAsB,IAAIokB,KAGhEunB,EAAoBz/B,EAAAA,YAAY,CAAC+U,EAAiBmpB,KACtDoB,EAAuBjqB,IACf,MAAAqqB,EAAS,IAAInnB,IAAIlD,GAEhB,OADAqqB,EAAAroC,IAAI0d,EAASmpB,GACbwB,KAER,IAGGC,EAAkB3/B,cAAY2F,MAAOrH,IACzC,MAAMyW,EAAUzW,EAAMgG,IAChB45B,EAAWmB,EAAYvqB,IAAIC,GAEjC,QAAiB,IAAbmpB,GAA0BA,IAAa5/B,EAAMuF,MAU7C,IACgB27B,KAAQ,IAAItnB,IAAI7C,GAAMpe,IAAI8d,UAGtCypB,EAAYzpB,EAAS,CACzBxW,KAAMD,EAAMC,KACZsB,KAAMvB,EAAMuB,KACZgE,MAAOq6B,EACPtX,MAAOtoB,EAAMsoB,SACTtoB,EAAMK,aAAe,CAAEA,YAAaL,EAAMK,gBAC1CL,EAAMlL,OAAS,CAAEA,MAAOkL,EAAMlL,eACN,IAAxBkL,EAAMw/B,eAA+B,CAAEA,cAAex/B,EAAMw/B,uBAC/B,IAA7Bx/B,EAAMy/B,oBAAoC,CAAEA,mBAAoBz/B,EAAMy/B,sBAM5EuB,EAAuBjqB,IACf,MAAAqqB,EAAS,IAAInnB,IAAIlD,GAEhB,OADPqqB,EAAOtQ,OAAOra,GACP2qB,UAEFv6B,GAEDsyB,MAAA,UAAUn5B,EAAMC,OAAM,CAC5B,QACAihC,EAA0BnqB,IAClB,MAAA8Z,EAAS,IAAIjX,IAAI7C,GAEhB,OADP8Z,EAAOC,OAAOra,GACPoa,GAEX,MAxCEmQ,EAAuBjqB,IACf,MAAAqqB,EAAS,IAAInnB,IAAIlD,GAEhB,OADPqqB,EAAOtQ,OAAOra,GACP2qB,KAsCV,CAACL,EAAab,IAGXoB,EAAsB5/B,cAAY2F,MAAOrH,IAC7C,GAAKA,EAAMgG,IAEP,IACgBk7B,EAAAnqB,GAAQ,IAAI6C,IAAI7C,GAAMpe,IAAIqH,EAAMgG,MAC5C,MAAAgO,GAAYhU,EAAMw/B,oBAQHU,EAAYlgC,EAAMgG,IAAK,CAC1C/F,KAAMD,EAAMC,KACZsB,KAAMvB,EAAMuB,KACZgE,MAAOvF,EAAMuF,MACb+iB,MAAOtoB,EAAMsoB,MACbkX,cAAexrB,KACXhU,EAAMK,aAAe,CAAEA,YAAaL,EAAMK,gBAC1CL,EAAMlL,OAAS,CAAEA,MAAOkL,EAAMlL,eACD,IAA7BkL,EAAMy/B,oBAAoC,CAAEA,mBAAoBz/B,EAAMy/B,4BAIrE54B,GAEDsyB,MAAA,kBAAkBn5B,EAAMC,OAAM,CACpC,QACAihC,EAA0BnqB,IAClB,MAAA8Z,EAAS,IAAIjX,IAAI7C,GAEhB,OADA8Z,EAAAC,OAAO9wB,EAAMgG,KACb6qB,GAEX,GACC,CAACqP,IAGEqB,EAA2B7/B,cAAY2F,MAAOrH,IAClD,GAAKA,EAAMgG,IAEP,IACgBk7B,EAAAnqB,GAAQ,IAAI6C,IAAI7C,GAAMpe,IAAIqH,EAAMgG,MAC5C,MAAAgO,GAAYhU,EAAMy/B,yBAQHS,EAAYlgC,EAAMgG,IAAK,CAC1C/F,KAAMD,EAAMC,KACZsB,KAAMvB,EAAMuB,KACZgE,MAAOvF,EAAMuF,MACb+iB,MAAOtoB,EAAMsoB,MACbmX,mBAAoBzrB,KAChBhU,EAAMK,aAAe,CAAEA,YAAaL,EAAMK,gBAC1CL,EAAMlL,OAAS,CAAEA,MAAOkL,EAAMlL,eACN,IAAxBkL,EAAMw/B,eAA+B,CAAEA,cAAex/B,EAAMw/B,uBAI3D34B,GAEDsyB,MAAA,mBAAmBn5B,EAAMC,OAAM,CACrC,QACAihC,EAA0BnqB,IAClB,MAAA8Z,EAAS,IAAIjX,IAAI7C,GAEhB,OADA8Z,EAAAC,OAAO9wB,EAAMgG,KACb6qB,GAEX,GACC,CAACqP,IAGEsB,EAAwB9/B,cAAY2F,MAAOo6B,IACzC,MAAAC,OAAEA,EAAQC,KAAAA,GAASF,EAEzB,IAAKE,GAAQD,EAAOv6B,KAAOw6B,EAAKx6B,GAAI,OAE9B,MAAAy6B,EAAWvpB,EAAgB2R,aAAiB9C,EAAIlhB,MAAQ07B,EAAOv6B,IAC/D06B,EAAWxpB,EAAgB2R,aAAiB9C,EAAIlhB,MAAQ27B,EAAKx6B,IAE/D,QAAAy6B,IAAgC,IAAbC,EAAiB,OAGxC,MAAMC,EAAsBC,GAAU1pB,EAAiBupB,EAAUC,GAG7D,IACF,IAAA,IAAShlC,EAAI,EAAGA,EAAIilC,EAAoBvmC,OAAQsB,IAAK,CAC7C,MAAA4D,EAAWqhC,EAAoBjlC,IACtB,MAAV4D,OAAU,EAAAA,EAAAuF,YAET+5B,EAAoBt/B,EAASuF,IAAK,CACtCpF,MAAOH,EAASG,MAChB9L,MAAO2L,EAAS3L,MAChBwzB,MAAOzrB,KACH4D,EAASJ,aAAe,CAAEA,YAAaI,EAASJ,cAExD,QAEOwG,GAEPsyB,MAAM,iBACR,GACC,CAAC9gB,EAAiB0nB,IAGfiC,EAAqBtgC,EAAAA,YAAY2F,MAAOo6B,EAAqBQ,KAC3D,MAAAP,OAAEA,EAAQC,KAAAA,GAASF,EAEzB,IAAKE,GAAQD,EAAOv6B,KAAOw6B,EAAKx6B,GAAI,OAEpC,MAAM1G,EAAW4X,EAAgBuR,KAAY1C,GAAAA,EAAIlhB,MAAQi8B,GACrD,IAACxhC,IAAaA,EAASiZ,OAAQ,OAE7B,MAAAkoB,EAAWnhC,EAASiZ,OAAOsQ,aAAmBhqB,EAAMgG,MAAQ07B,EAAOv6B,IACnE06B,EAAWphC,EAASiZ,OAAOsQ,aAAmBhqB,EAAMgG,MAAQ27B,EAAKx6B,IAEnE,QAAAy6B,IAAgC,IAAbC,EAAiB,OAGxC,MAAMK,EAAkBH,GAAUthC,EAASiZ,OAAQkoB,EAAUC,GAGzD,IACF,IAAA,IAAShlC,EAAI,EAAGA,EAAIqlC,EAAgB3mC,OAAQsB,IAAK,CACzC,MAAAmD,EAAQkiC,EAAgBrlC,IAClB,MAAPmD,OAAO,EAAAA,EAAAgG,YAENk6B,EAAYlgC,EAAMgG,IAAK,CAC3B/F,KAAMD,EAAMC,KACZsB,KAAMvB,EAAMuB,KACZgE,MAAOvF,EAAMuF,MACb+iB,MAAOzrB,KACHmD,EAAMK,aAAe,CAAEA,YAAaL,EAAMK,gBAC1CL,EAAMlL,OAAS,CAAEA,MAAOkL,EAAMlL,QAEtC,QAEO+R,GAEPsyB,MAAM,iBACR,GACC,CAAC9gB,EAAiB6nB,IAEfiC,EAAkBF,IACtBnB,EAA8B/pB,IACtB,MAAA8Z,EAAS,IAAIjX,IAAI7C,GAMhB,OALH8Z,EAAO9W,IAAIkoB,GACbpR,EAAOC,OAAOmR,GAEdpR,EAAOl4B,IAAIspC,GAENpR,KASLuR,EAAsB3hC,IAC1B+/B,EAAmB//B,GACnB6/B,EAAc,aAsCV+B,EAAuBh7B,MAAO5G,IAC9B,GAAAsa,QAAQ,wCACN,IACF2f,GAAc,SACRsF,EAAoBv/B,EAASuF,WAC5Ba,GAC2B,CAClC,QACA6zB,GAAc,EAChB,GAIE4H,EAAkBL,IACtBrB,EAAsBqB,GACtBvB,EAAgB,MAChBJ,EAAc,UAGViC,EAAmBviC,IACvB0gC,EAAgB1gC,GAChB4gC,EAAsB5gC,EAAMiiC,YAC5B3B,EAAc,UA+BVkC,EAAoBn7B,MAAOrH,IAC3B,GAAA+a,QAAQ,gBACN,IACF2f,GAAc,SACRyF,EAAYngC,EAAMgG,WACjBa,GACyB,CAChC,QACA6zB,GAAc,EAChB,GAIExE,EAAe,KACnBoK,EAAc,MACdE,EAAmB,MACnBE,EAAgB,MAChBE,EAAsB,OAGxB,OAAI/sC,IAEAG,KAAC,MAAI,CAAAqJ,UAAU,wCACb9I,SAAA,GAACS,IAAA,MAAA,CAAIqI,UAAU,iEACdrI,EAAAA,IAAA,OAAA,CAAKqI,UAAU,OAAO9I,SAAiB,gCAM3C,MACC,CAAAA,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,yCACb9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,qBAAqB9I,SAAK,UACxCR,EAAAC,KAAC,SAAA,CACCqL,QApIkB,KACxBmhC,EAAmB,MACnBF,EAAc,aAmIRjjC,UAAU,4GAEV9I,SAAA,CAAAR,EAAAiB,IAAC0mB,GAAO,IAAE,gBAME,aAAf2kB,GACCtsC,EAAAiB,IAACytC,GAAA,CACCC,YAAanC,EACbhO,OAtImBlrB,MAAOyH,IAC5B,IAIF,GAHA2rB,GAAY,GAGR8F,EAAiB,CAEnB,MAAM9E,QAAesE,EAAoBQ,EAAgBv6B,IAAM8I,GAE3D2sB,EAAOpa,SACTif,EAAc,MACdE,EAAmB,MACnBrH,MAAM,yBAENA,MAAM,eAAesC,EAAO50B,OAAS,cACvC,KACK,CAEC,MAAA40B,QAAeqE,EAAoBhxB,GAErC2sB,EAAOpa,SACTif,EAAc,MACdnH,MAAM,yBAENA,MAAM,eAAesC,EAAO50B,OAAS,cAEzC,QACOA,GAEDsyB,MAAA,yBAAyBtyB,IAAO,CACtC,QACA4zB,GAAY,EACd,GAuGMpE,SAAUH,EACVhgB,aAKY,UAAfmqB,GACCtsC,EAAAiB,IAAC2tC,GAAA,CACCD,YAAajC,EACbwB,WAAYtB,QAAsB,EAClCpO,OArFgBlrB,MAAOyH,IACzB,GAAC6xB,GAAuBF,EAExB,IACFhG,GAAY,GACN,MAAAwH,SAAaxB,WAAcwB,aAActB,EAE/C,GAAIF,EAAc,QACKP,EAAYO,EAAaz6B,IAAM8I,IACzCuS,UACTif,EAAc,MACdI,EAAgB,MAChBE,EAAsB,MACxB,KACK,QACgBX,EAAYgC,EAAYnzB,IAClCuS,UACTif,EAAc,MACdM,EAAsB,MAE1B,QACO/5B,GACyB,CAChC,QACA4zB,GAAY,EACd,GA6DMpE,SAAUH,EACVhgB,aAKJlhB,EAAAA,IAAC4tC,GAAW,CAAAC,mBAAoBC,GAAeC,UAAWvB,EACxDjtC,WAACS,IAAAguC,GAAA,CAAgBnzB,MAAOwI,EAAgBnZ,IAAIgoB,GAAOA,EAAIlhB,KAAOi9B,SAAUC,GACtE3uC,SAACS,EAAAA,IAAA,MAAA,CAAIqI,UAAU,YACZ9I,SAAA8jB,EAAgBnZ,IAAKuB,IACpB,MAAMkb,EAAaklB,EAAmB9mB,IAAItZ,EAASuF,KAEjD,OAAAjS,EAAAiB,IAACipC,GAAA,CAECx9B,WACAkb,aACAuiB,SAAUiE,EACVhE,WAAYmE,EACZlE,OAAQgE,EACRnsB,SAAUosB,EACVnsB,WACAgE,aAIA3lB,SAAAS,EAAAA,IAAC,OAAIqI,UAAU,6EACZ9I,WAASmlB,QAAUjZ,EAASiZ,OAAOne,OAAS,EAC3CxH,EAAAiB,IAAC4tC,GAAA,CACCC,mBAAoBC,GACpBC,UAAYtB,GAAUO,EAAmBP,EAAOhhC,EAASuF,KAEzDzR,SAAAR,EAAAiB,IAACguC,GAAA,CACCnzB,MAAOpP,EAASiZ,OAAOxa,IAAIc,GAASA,EAAMgG,KAC1Ci9B,SAAUC,GAEV3uC,eAAC,MAAI,CAAA8I,UAAU,gBACZ9I,SAAAkM,EAASiZ,OACPW,KAAK,CAAC9O,EAAG+O,IAAM/O,EAAE+c,MAAQhO,EAAEgO,OAC3BppB,IAAKc,IACJ,MAAMg/B,EAAe+B,EAAYvqB,IAAIxW,EAAMgG,MAAShG,EAAMuF,MACpD05B,EAAa8B,EAAYhnB,IAAI/Z,EAAMgG,MAAS+6B,EAAYvqB,IAAIxW,EAAMgG,OAAUhG,EAAMuF,MAClF25B,EAAe+B,EAAelnB,IAAI/Z,EAAMgG,KAG5C,OAAAjS,EAAAiB,IAAC8pC,GAAA,CAEC9+B,QACA++B,cAAet+B,EAAS3L,OAAS,UACjCkqC,eACAC,aACAC,eACAhpB,WACAgE,aACAilB,cAAegC,EACf/B,YAAaiC,EACbjD,OAAQmE,EACRtsB,SAAUusB,EACVnD,gBAAiBiC,EACjBhC,qBAAsBiC,GAbjBvhC,EAAMgG,aAqBzBjS,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,mDACb9I,SAAA,CAAAS,EAAAA,IAAC0mB,GAAO,CAAAxd,KAAM,GAAIb,UAAU,kDAC3BrI,EAAAA,IAAA,IAAA,CAAEqI,UAAU,UAAU9I,SAAY,iBAClCS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,eAAe9I,SAAgC,2CAxD7DkM,EAASuF,aAmEE,IAA3BqS,EAAgB9c,QACdvH,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,oDACb9I,SAAA,CAACS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,eAAe9I,SAAkB,yBAC9CS,IAAC,KAAET,SAAwC,oDChe/C0pC,GAA4D,EAChEx9B,WACA29B,SACAnoB,WACAiE,iBAEM,MAAAmkB,WAAEA,YAAYC,EAAWC,WAAAA,EAAAC,UAAYA,aAAW7gC,EAAY8gC,WAAAA,GAAeC,GAAY,CAC3Fv3B,GAAI1G,EAASuF,MAGT/R,EAAQ,CACZuqC,UAAWG,GAAIC,UAAUC,SAASL,GAClC7gC,aACAD,QAAS+gC,EAAa,GAAM,IAItB3vB,KAAMq0B,GAAcC,GAAiB3iC,EAASuF,KAGpD,OAAAjS,EAAAiB,IAAC,MAAA,CACCsI,IAAKihC,EACLtqC,QACAoJ,UAAU,yHAEV9I,SAAAR,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,mCACb9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,gCAEb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,IACKqpC,KACAC,EACJjhC,UAAU,yGACVuD,MAAM,cAENrM,eAACsP,EAAO,QAGV7P,KAAC,MAAI,CAAAqJ,UAAU,SACb9I,SAAA,CAAAS,EAAAA,IAAC,KAAG,CAAAqI,UAAU,uDACX9I,SAAAkM,EAASR,OAIXkjC,GACCpvC,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,+BACZ9I,SAAA,CAAA4uC,EAAUE,MAAM1T,MAAQ,GACtB37B,EAAAA,KAAA,OAAA,CAAKqJ,UAAU,kFAAkF9I,SAAA,CAAA,SACzF4uC,EAAUE,MAAM1T,MAAM,OAGhCwT,EAAUE,MAAMxT,SAAW,GACzB77B,EAAAA,KAAA,OAAA,CAAKqJ,UAAU,sFAAsF9I,SAAA,CAAA,WAC3F4uC,EAAUE,MAAMxT,SAAS,OAGrCsT,EAAUE,MAAM5M,eAAiB,GAC/BziC,EAAAA,KAAA,OAAA,CAAKqJ,UAAU,0FAA0F9I,SAAA,CAAA,SACjG4uC,EAAUE,MAAM5M,eAAe,OAGzC0M,EAAUE,MAAMC,eAAiB,GAC/BtvC,EAAAA,KAAA,OAAA,CAAKqJ,UAAU,8EAA8E9I,SAAA,CAAA,YAClF4uC,EAAUE,MAAMC,eAAe,OAGlB,IAA1BH,EAAUE,MAAME,aACd,OAAK,CAAAlmC,UAAU,2CAA2C9I,SAE3D,yBAOVP,KAAC,MAAI,CAAAqJ,UAAU,kBACb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAAS++B,EACT/gC,UAAU,gGACVuD,MAAM,KAENrM,eAAC6iB,EAAO,MAEVrjB,EAAAiB,IAAC,SAAA,CACCqK,QAAS4W,EACT7N,SAAU8R,EACV7c,UAAU,2GACVuD,MAAM,KAENrM,eAAC8iB,EAAQ,eAQfmsB,GAA4B,KAChC,MAAMniB,QAAEA,EAAAxa,MAASA,GAAUqe,MACrBiS,WACJA,EAAAtjC,UACAA,EAAA4vC,eACAA,EAAAC,eACAA,EAAAC,eACAA,GACEC,MAEGC,EAAeC,GAAmBxR,GAAyB,CAChEC,OAAQlrB,MAAOyH,EAAwB0jB,KACrC,GAAIA,EAAa,CACf,MAAMiJ,QAAeiI,EAAelR,EAAYxsB,IAAK8I,GACrD,IAAI2sB,EAAOpa,QAGT,MAAMoa,EAAO50B,MAFbwa,EAAQ,aAAc,uBAGxB,KACK,CACC,MAAAoa,QAAegI,EAAe30B,GACpC,IAAI2sB,EAAOpa,QAGT,MAAMoa,EAAO50B,MAFbwa,EAAQ,aAAc,qBAI1B,GAEFpL,SAAU5O,MAAO5G,oBACf,MAAMg7B,QAAekI,EAAeljC,EAASuF,KAC7C,IAAIy1B,EAAOpa,QAEJ,CAEC,MAAAqa,GAAW,OAAA9rB,EAAA,SAAA,WAAO/I,YAAP,EAAA0I,EAAc0I,eAAU,EAAAvI,EAAAZ,eAAMpH,UAAW,kBACpD27B,EAAQ,OAAAlzB,EAAA,OAAOJ,EAAP,OAAOD,EAAA2rB,EAAA50B,gBAAOoR,eAAd,EAAAlI,EAAwBjB,WAAM,EAAAqB,EAAAkzB,MAE5C,GAAIA,EAAO,CACT,MAAMU,EAAe,GACjBV,EAAM1T,MAAQ,GAAGoU,EAAa5nC,KAAK,MAAMknC,EAAM1T,UAC/C0T,EAAMxT,SAAW,GAAGkU,EAAa5nC,KAAK,QAAQknC,EAAMxT,aACpDwT,EAAM5M,eAAiB,GAAGsN,EAAa5nC,KAAK,MAAMknC,EAAM5M,mBACxD4M,EAAMC,eAAiB,GAAGS,EAAa5nC,KAAK,SAASknC,EAAMC,mBAE/Dz8B,EAAM,QAAS,WAAWk9B,EAAat0B,KAAK,4CAA2C,MAEvF5I,EAAM,QAAS60B,GAEjB,MAAMD,EAAO50B,KACf,CAlBEwa,EAAQ,aAAc,GAAG5gB,EAASR,sBAoBtCqN,QAAU9F,IACFX,EAAA,QAASW,EAAIE,SAAW,yBAwBlC,OAAI7T,EAEAE,EAAAiB,IAAC,OAAIqI,UAAU,yCACb9I,eAAC,MAAI,CAAA8I,UAAU,kGAMlB,MACC,CAAA9I,SAAA,GAACP,KAAA,MAAA,CAAIqJ,UAAU,yCACb9I,SAAA,GAACP,KAAA,KAAA,CAAGqJ,UAAU,2EACZ9I,SAAA,GAACS,IAAAgvC,GAAA,CAAS3mC,UAAU,oBAAoB,aAG1CtJ,EAAAC,KAAC,SAAA,CACCqL,QAASykC,EAAgBhO,aACzBz4B,UAAU,oHAEV9I,SAAA,CAAAR,EAAAiB,IAAC0mB,GAAO,IAAE,gBAMbmoB,EAAc5N,UACZjhC,EAAAA,IAAA,MAAA,CAAIqI,UAAU,6EACb9I,eAAC,MAAA,CAAI8I,UAAU,4DACb9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,MACb9I,SAAA,CAAAS,MAAC,MAAGqI,UAAU,2DACX9I,SAAcsvC,EAAArR,YAAc,UAAY,YAE1CqR,EAAcrR,YACbz+B,EAAAiB,IAACivC,GAAA,CACCn1B,KAAM+0B,EAAcrR,YACpBD,OAAQuR,EAAgB1N,WACxBC,SAAUyN,EAAgB5N,aAC1BhgB,SAAU2tB,EAAc3tB,WAG1BniB,EAAAiB,IAACivC,GAAA,CACC1R,OAAQuR,EAAgB1N,WACxBC,SAAUyN,EAAgB5N,aAC1BhgB,SAAU2tB,EAAc3tB,kBASpClhB,EAAAA,IAAC4tC,GAAW,CAAAC,mBAAoBC,GAAeC,UAvE7B17B,MAAOo6B,IACrB,MAAAC,OAAEA,EAAQC,KAAAA,GAASF,EAEzB,IAAKE,GAAQD,EAAOv6B,KAAOw6B,EAAKx6B,GAAI,OAE9B,MAAAy6B,EAAWzK,EAAWnN,aAAiB9C,EAAIlhB,MAAQ07B,EAAOv6B,IAC1D06B,EAAW1K,EAAWnN,aAAiB9C,EAAIlhB,MAAQ27B,EAAKx6B,IAExD26B,EAAsBC,GAAU5K,EAAYyK,EAAUC,GAG5D,IAAA,IAAShlC,EAAI,EAAGA,EAAIilC,EAAoBvmC,OAAQsB,IAAK,CAC7C,MAAA4D,EAAWqhC,EAAoBjlC,GACjC4D,EAAS6nB,QAAUzrB,SACf6mC,EAAejjC,EAASuF,IAAK,CAAE/F,KAAMQ,EAASR,KAAMqoB,MAAOzrB,GAErE,GAwDItI,WAACS,IAAAguC,GAAA,CAAgBnzB,MAAOsnB,EAAWj4B,IAAIsS,GAAKA,EAAExL,KAAMi9B,SAAUC,GAC5D3uC,WAACS,IAAA,MAAA,CAAIqI,UAAU,aACZ9I,SAAA4iC,EAAWj4B,IAAKuB,GACf1M,EAAAiB,IAACipC,GAAA,CAECx9B,WACA29B,OAAQ,IAAM0F,EAAgB3P,WAAW1zB,GACzCwV,SAAU,IAAM6tB,EAAgB9N,aAAav1B,GAC7CyZ,WAAY2pB,EAAc3pB,YAJrBzZ,EAASuF,YAWD,IAAtBmxB,EAAW57B,QACTvH,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,qDACb9I,SAAA,GAACS,IAAAgvC,GAAA,CAAS3mC,UAAU,uCACpBrI,IAAC,KAAET,SAAiB,sBACnBS,EAAAA,IAAA,IAAA,CAAEqI,UAAU,eAAe9I,SAAoC,gDCvPpE2vC,GAA4D,EAChEC,gBACAC,oBACAlG,WACAmG,0BAEA,MAAMC,EAA6B,IAC1BH,EAAcztB,OAAO6tB,IAAMA,EAAEC,MAAMjpC,OAI1C,SAAAvH,KAAC,MAAI,CAAAqJ,UAAU,WACb9I,SAAA,CAAAR,EAAAC,KAAC,SAAA,CACCqL,QAAS6+B,EACT7gC,UAAU,4GAEV9I,SAAA,CAAAR,EAAAiB,IAACyvC,GAAO,IAAE,KAETH,IAA+B,GAC9BtvC,EAAAA,IAAC,QAAKqI,UAAU,+GACb9I,kBAKN6vC,SACE,MAAI,CAAA/mC,UAAU,sIACb9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,MACb9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,mDAAmD9I,SAEjE,OAC0B,IAAzB4vC,EAAc5oC,SACbvG,IAAC,IAAE,CAAAqI,UAAU,2CAA2C9I,SAAA,yBAIvD,MAAI,CAAA8I,UAAU,YACZ9I,SAAA,CAAA4vC,EAAcxyB,MAAM,EAAG,GAAGzS,IAAKwlC,GAC9B3wC,EAAAC,KAAC,MAAA,CAECqL,QAAS,IAAM,MAAAglC,OAAA,EAAAA,EAAsBK,EAAav9B,IAClD9J,UAAW,wEACRqnC,EAAaF,KAEV,4GADA,mHAINjwC,SAAA,CAAAS,EAAAA,IAAC,IAAE,CAAAqI,UAAU,wCACV9I,SAAAmwC,EAAah9B,UAEhB1S,EAAAA,IAAC,IAAE,CAAAqI,UAAU,gDACV9I,SAAA,IAAI4F,KAAKuqC,EAAaltB,WAAWklB,eAAe,aAZ9CgI,EAAav9B,KAgBrBg9B,EAAc5oC,OAAS,GACrBvH,EAAAA,KAAA,IAAA,CAAEqJ,UAAU,0GAA0G9I,SAAA,CAAA,IACnH4vC,EAAc5oC,OAAS,EAAE,wBClEzCopC,GAAgD,EAAGC,cAAarN,YACpE,MAAMhd,MAAEA,EAAAsqB,QAAOA,EAAS/1B,KAAAA,GAAS81B,GAG1BE,EAAgBC,GAAqBvvC,YAAS,GAWnD,SAAAxB,KAAC,MAAI,CAAAqJ,UAAU,OACb9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,4DAA4D9I,SAE1E,YACAP,KAAC,MAAI,CAAAqJ,UAAU,YAEb9I,SAAA,CAAAR,EAAAC,KAAC,SAAA,CACCqL,QAAS,KACPwlC,EAAQG,UAAU,OAClBH,EAAQI,cAAc,IACtBF,GAAkB,GAClBF,EAAQK,oBAAoB,KAE9B7nC,UAAW,oEACQ,QAAjBkd,EAAM7D,QAAqB6D,EAAM4qB,YAAe5qB,EAAM6qB,iBAElD,4EADA,iEAGP7wC,SAAA,CAAA,aACYgjC,EAAM,OAInBxjC,EAAAiB,IAAC,SAAA,CACCqK,QAAS,KACPwlC,EAAQG,UAAU,aAClBH,EAAQI,cAAc,IACtBF,GAAkB,GAClBF,EAAQK,oBAAoB,KAE9B7nC,UAAW,oEACQ,cAAjBkd,EAAM7D,OACF,wEACA,6EAEPniB,SAAA,eAKDR,EAAAiB,IAAC,SAAA,CACCqK,QAAS,KACPwlC,EAAQG,UAAU,YAClBH,EAAQI,cAAc,IACtBF,GAAkB,IAEpB1nC,UAAW,oEACQ,aAAjBkd,EAAM7D,OACF,wEACA,6EAEPniB,SAAA,gBAKiB,aAAjBgmB,EAAM7D,QACJ3iB,EAAAiB,IAAA,MAAA,CAAIqI,UAAU,YACb9I,SAAAR,EAAAC,KAAC,SAAA,CACC4T,MAAO2S,EAAM6qB,iBACbv9B,SAAWP,GAAMu9B,EAAQK,oBAAoB59B,EAAEQ,OAAOF,OACtDvK,UAAU,uIAEV9I,SAAA,CAACS,EAAAA,IAAA,SAAA,CAAO4S,MAAM,GAAGrT,SAAO,YACvBua,EAAKqoB,WAAWj4B,IAAKuB,GACnBzL,EAAAA,IAAA,SAAA,CAAsB4S,MAAOnH,EAC3BlM,SADUkM,GAAAA,SASrB1M,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAM0lC,GAAmBD,GAClCznC,UAAW,oEACTynC,EACI,oEACA,6EAEPvwC,SAAA,aAKAuwC,KACC9vC,IAAC,MAAI,CAAAqI,UAAU,YACb9I,SAAAR,EAAAiB,IAAC,QAAA,CACCsD,KAAK,OACLyP,YAAY,qBACZH,MAAO2S,EAAM4qB,WACbt9B,SAAWP,GAAMu9B,EAAQI,cAAc39B,EAAEQ,OAAOF,OAChDvK,UAAU,2LAMG,QAAjBkd,EAAM7D,QAAoB6D,EAAM4qB,YAAc5qB,EAAM6qB,mBACpDrxC,EAAAiB,IAAC,SAAA,CACCqK,QA7Gc,KACtBwlC,EAAQG,UAAU,OAClBH,EAAQI,cAAc,IACtBJ,EAAQK,oBAAoB,IAC5BH,GAAkB,IA0GV1nC,UAAU,0IACX9I,SAAA,qBCtHL8wC,GAA4D,EAAGT,cAAarN,YAChF,MAAMhd,MAAEA,EAAAsqB,QAAOA,EAAS/1B,KAAAA,GAAS81B,GAG1BU,EAAsBC,GAA2B/vC,YAAS,GAY/D,SAAAxB,KAAC,MAAI,CAAAqJ,UAAU,OACb9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,4DAA4D9I,SAE1E,YACAP,KAAC,MAAI,CAAAqJ,UAAU,YAEb9I,SAAA,CAAAR,EAAAC,KAAC,SAAA,CACCqL,QAAS,KACPwlC,EAAQG,UAAU,OAClBH,EAAQI,cAAc,IACtBM,GAAwB,GACxBV,EAAQW,mBAAmB,IAC3BX,EAAQY,gBAAgB,KAE1BpoC,UAAW,oEACQ,QAAjBkd,EAAM7D,QAAqB6D,EAAM4qB,YAAe5qB,EAAMmrB,iBAAoBnrB,EAAMorB,aAE5E,4EADA,iEAGPpxC,SAAA,CAAA,aACYgjC,EAAM,OAInBxjC,EAAAiB,IAAC,SAAA,CACCqK,QAAS,KACPwlC,EAAQG,UAAU,WAClBH,EAAQI,cAAc,IACtBM,GAAwB,GACxBV,EAAQY,gBAAgB,KAE1BpoC,UAAW,oEACQ,YAAjBkd,EAAM7D,OACF,oEACA,6EAEPniB,SAAA,cAKiB,YAAjBgmB,EAAM7D,QACJ3iB,EAAAiB,IAAA,MAAA,CAAIqI,UAAU,YACb9I,SAAAR,EAAAC,KAAC,SAAA,CACC4T,MAAO2S,EAAMmrB,gBACb79B,SAAWP,GAAMu9B,EAAQW,mBAAmBl+B,EAAEQ,OAAOF,OACrDvK,UAAU,uIAEV9I,SAAA,CAACS,EAAAA,IAAA,SAAA,CAAO4S,MAAM,GAAGrT,SAAK,UACrBua,EAAK82B,UAAU1mC,IAAKkvB,GAClBp5B,EAAAA,IAAA,SAAA,CAAqB4S,MAAOwmB,EAC1B75B,SADU65B,GAAAA,SASrBr6B,EAAAiB,IAAC,SAAA,CACCqK,QAAS,KACPwlC,EAAQG,UAAU,QAClBH,EAAQI,cAAc,IACtBM,GAAwB,GACxBV,EAAQW,mBAAmB,KAE7BnoC,UAAW,oEACQ,SAAjBkd,EAAM7D,OACF,wEACA,6EAEPniB,SAAA,cAKiB,SAAjBgmB,EAAM7D,QACJ3iB,EAAAiB,IAAA,MAAA,CAAIqI,UAAU,YACb9I,SAAAR,EAAAC,KAAC,SAAA,CACC4T,MAAO2S,EAAMorB,aACb99B,SAAWP,GAAMu9B,EAAQY,gBAAgBn+B,EAAEQ,OAAOF,OAClDvK,UAAU,uIAEV9I,SAAA,CAACS,EAAAA,IAAA,SAAA,CAAO4S,MAAM,GAAGrT,SAAK,UACrBua,EAAK+2B,MAAM3mC,IAAKy9B,UACd,SAAA,CAAkB/0B,MAAO+0B,EACvBpoC,SAAA,CAAAooC,EAAK,MADKA,SASrB5oC,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAMkmC,GAAyBD,GACxCjoC,UAAW,oEACTioC,EACI,oEACA,6EAEP/wC,SAAA,aAKA+wC,KACCtwC,IAAC,MAAI,CAAAqI,UAAU,YACb9I,SAAAR,EAAAiB,IAAC,QAAA,CACCsD,KAAK,OACLyP,YAAY,mBACZH,MAAO2S,EAAM4qB,WACbt9B,SAAWP,GAAMu9B,EAAQI,cAAc39B,EAAEQ,OAAOF,OAChDvK,UAAU,2LAMG,QAAjBkd,EAAM7D,QAAoB6D,EAAM4qB,YAAc5qB,EAAMmrB,iBAAmBnrB,EAAMorB,eAC7E5xC,EAAAiB,IAAC,SAAA,CACCqK,QAlIc,KACtBwlC,EAAQG,UAAU,OAClBH,EAAQI,cAAc,IACtBJ,EAAQW,mBAAmB,IAC3BX,EAAQY,gBAAgB,IACxBF,GAAwB,IA8HhBloC,UAAU,0IACX9I,SAAA,qBC3ILuxC,GAAsD,EAAGlB,cAAarN,YAC1E,MAAMhd,MAAEA,EAAAsqB,QAAOA,EAAS/1B,KAAAA,GAAS81B,GAG1BmB,EAAmBC,GAAwBxwC,YAAS,GAWzD,SAAAxB,KAAC,MAAI,CAAAqJ,UAAU,OACb9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,4DAA4D9I,SAE1E,cACAP,KAAC,MAAI,CAAAqJ,UAAU,YAEb9I,SAAA,CAAAR,EAAAC,KAAC,SAAA,CACCqL,QAAS,KACPwlC,EAAQG,UAAU,OAClBH,EAAQI,cAAc,IACtBe,GAAqB,GACrBnB,EAAQK,oBAAoB,KAE9B7nC,UAAW,oEACQ,QAAjBkd,EAAM7D,QAAqB6D,EAAM4qB,YAAe5qB,EAAM6qB,iBAElD,4EADA,iEAGP7wC,SAAA,CAAA,eACcgjC,EAAM,OAIrBxjC,EAAAiB,IAAC,SAAA,CACCqK,QAAS,KACPwlC,EAAQG,UAAU,YAClBH,EAAQI,cAAc,IACtBe,GAAqB,IAEvB3oC,UAAW,oEACQ,aAAjBkd,EAAM7D,OACF,wEACA,6EAEPniB,SAAA,iBAKiB,aAAjBgmB,EAAM7D,QACJ3iB,EAAAiB,IAAA,MAAA,CAAIqI,UAAU,YACb9I,SAAAR,EAAAC,KAAC,SAAA,CACC4T,MAAO2S,EAAM6qB,iBACbv9B,SAAWP,GAAMu9B,EAAQK,oBAAoB59B,EAAEQ,OAAOF,OACtDvK,UAAU,uIAEV9I,SAAA,CAACS,EAAAA,IAAA,SAAA,CAAO4S,MAAM,GAAGrT,SAAO,YACvBua,EAAKqoB,WAAWj4B,IAAKuB,GACnBzL,EAAAA,IAAA,SAAA,CAAsB4S,MAAOnH,EAC3BlM,SADUkM,GAAAA,SASrB1M,EAAAiB,IAAC,SAAA,CACCqK,QAAS,KACPwlC,EAAQG,UAAU,YAClBH,EAAQI,cAAc,IACtBe,GAAqB,GACrBnB,EAAQK,oBAAoB,KAE9B7nC,UAAW,oEACQ,aAAjBkd,EAAM7D,OACF,wEACA,6EAEPniB,SAAA,eAKDR,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAM2mC,GAAsBD,GACrC1oC,UAAW,oEACT0oC,EACI,oEACA,6EAEPxxC,SAAA,eAKAwxC,KACC/wC,IAAC,MAAI,CAAAqI,UAAU,YACb9I,SAAAR,EAAAiB,IAAC,QAAA,CACCsD,KAAK,OACLyP,YAAY,qBACZH,MAAO2S,EAAM4qB,WACbt9B,SAAWP,GAAMu9B,EAAQI,cAAc39B,EAAEQ,OAAOF,OAChDvK,UAAU,2LAMG,QAAjBkd,EAAM7D,QAAoB6D,EAAM4qB,YAAc5qB,EAAM6qB,mBACpDrxC,EAAAiB,IAAC,SAAA,CACCqK,QA7Gc,KACtBwlC,EAAQG,UAAU,OAClBH,EAAQI,cAAc,IACtBJ,EAAQK,oBAAoB,IAC5Bc,GAAqB,IA0Gb3oC,UAAU,0IACX9I,SAAA,qBCvHL0xC,GAA4C,EAChDC,wBACAC,gCAYEnyC,KAAC,MAAI,CAAAqJ,UAAU,YACb9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,4DAA4D9I,SAE1E,iBAEC,MAAI,CAAA8I,UAAU,YACZ9I,SAhBiB,CACtB,CAAE4S,GAAI,UAAW3D,MAAO,WAAYnD,YAAa,aACjD,CAAE8G,GAAI,aAAc3D,MAAO,WAAYnD,YAAa,YACpD,CAAE8G,GAAI,MAAO3D,MAAO,YAAanD,YAAa,aAC9C,CAAE8G,GAAI,SAAU3D,MAAO,YAAanD,YAAa,eACjD,CAAE8G,GAAI,YAAa3D,MAAO,WAAYnD,YAAa,sBACnD,CAAE8G,GAAI,WAAY3D,MAAO,WAAYnD,YAAa,YAU7BnB,IAAKknC,GACpBryC,EAAAiB,IAAC,SAAA,CAECqK,QAAS,IAAM8mC,EAAyBC,EAAOj/B,IAC/C9J,UAAW,oEACT6oC,IAA0BE,EAAOj/B,GAC7B,gEACA,6EAGN5S,SAAAR,EAAAC,KAAC,MAAI,CAAAqJ,UAAU,gBACb9I,SAAA,CAAAS,EAAAA,IAAC,OAAK,CAAAqI,UAAU,cAAe9I,SAAA6xC,EAAO5iC,QACrCxO,EAAAA,IAAA,OAAA,CAAKqI,UAAU,kDACb9I,WAAO8L,kBAXP+lC,EAAOj/B,OAmBjB++B,GACCnyC,EAAAiB,IAAC,SAAA,CACCqK,QAAS,IAAM8mC,EAAyB,MACxC9oC,UAAU,4IACX9I,SAAA,qBCfH8xC,GAA4C,EAChDC,YACAC,eACAL,wBACAC,2BACAjX,SACAsX,gBACAC,cACAC,oBACAC,0BAGG,MAAI,CAAAtpC,UAAU,mFACb9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,eACb9I,SAAA,CAACS,EAAAA,IAAA,KAAA,CAAGqI,UAAU,2DAA2D9I,SAEzE,YAGAS,IAAC,MAAI,CAAAqI,UAAU,OACb9I,SAAAR,EAAAC,KAAC,SAAA,CACCqL,QAAS,KACPknC,EAAa,YACbJ,EAAyB,OAE3B9oC,UAAW,gGACK,aAAdipC,GAAsD,OAA1BJ,EACxB,yBACA,6EAGN3xC,SAAA,CAACS,EAAAA,IAAA,OAAA,CAAKqI,UAAU,UAAU9I,SAAE,OAAO,kBAMvCP,KAAC,MAAI,CAAAqJ,UAAU,iBACb9I,SAAA,CAAAR,EAAAC,KAAC,SAAA,CACCqL,QAAS,IAAMknC,EAAa,SAC5BlpC,UAAW,4FACK,UAAdipC,EACI,wEACA,6EAGN/xC,SAAA,GAAAS,IAAC,QAAKT,SAAQ,aACbS,EAAAA,IAAA,OAAA,CAAKqI,UAAU,8DACb9I,WAAOo7B,WAIZ57B,EAAAC,KAAC,SAAA,CACCqL,QAAS,KACP8mC,EAAyB,MACzBI,EAAa,mBAEflpC,UAAW,4FACK,mBAAdipC,EACI,4DACA,6EAGN/xC,SAAA,GAAAS,IAAC,QAAKT,SAAQ,mBACb,OAAK,CAAA8I,UAAU,8DACb9I,SAAA26B,EAAOuH,gBAAkB,OAI9B1iC,EAAAC,KAAC,SAAA,CACCqL,QAAS,KACP8mC,EAAyB,MACzBI,EAAa,mBAEflpC,UAAW,4FACK,mBAAdipC,EACI,4DACA,6EAGN/xC,SAAA,GAAAS,IAAC,QAAKT,SAAS,oBACd,OAAK,CAAA8I,UAAU,8DACb9I,SAAA26B,EAAOoU,gBAAkB,OAI9BvvC,EAAAC,KAAC,SAAA,CACCqL,QAAS,IAAMknC,EAAa,eAC5BlpC,UAAW,4FACK,gBAAdipC,EACI,oEACA,6EAGN/xC,SAAA,GAAAS,IAAC,QAAKT,SAAQ,aACbS,EAAAA,IAAA,OAAA,CAAKqI,UAAU,8DACb9I,WAAOq7B,iBAIZ77B,EAAAC,KAAC,SAAA,CACCqL,QAAS,IAAMknC,EAAa,YAC5BlpC,UAAW,4FACK,aAAdipC,EACI,wEACA,6EAGN/xC,SAAA,GAAAS,IAAC,QAAKT,SAAU,eACfS,EAAAA,IAAA,OAAA,CAAKqI,UAAU,8DACb9I,WAAOs7B,cAIZ97B,EAAAC,KAAC,SAAA,CACCqL,QAAS,IAAMknC,EAAa,YAC5BlpC,UAAW,4FACK,aAAdipC,EACI,4DACA,6EAGN/xC,SAAA,GAAAS,IAAC,QAAKT,SAAS,cACdS,EAAAA,IAAA,OAAA,CAAKqI,UAAU,8DACb9I,WAAO4oC,cAIZppC,EAAAC,KAAC,SAAA,CACCqL,QAAS,IAAMknC,EAAa,UAC5BlpC,UAAW,4FACK,WAAdipC,EACI,wEACA,6EAGN/xC,SAAA,GAAAS,IAAC,QAAKT,SAAO,YACZS,EAAAA,IAAA,OAAA,CAAKqI,UAAU,8DACb9I,WAAOmlB,YAIZ3lB,EAAAC,KAAC,SAAA,CACCqL,QAAS,KACP8mC,EAAyB,MACzBI,EAAa,eAEflpC,UAAW,4FACK,eAAdipC,EACI,wEACA,6EAGN/xC,SAAA,GAAAS,IAAC,QAAKT,SAAU,qBACf,OAAK,CAAA8I,UAAU,8DACb9I,SAAA26B,EAAOiI,YAAc,UAMb,UAAdmP,GACCvyC,EAAAiB,IAAC2vC,GAAA,CACCC,YAAa6B,EACblP,MAAOrI,EAAOS,QAIH,gBAAd2W,GACCvyC,EAAAiB,IAACqwC,GAAA,CACCT,YAAa8B,EACbnP,MAAOrI,EAAOU,cAIH,aAAd0W,GACCvyC,EAAAiB,IAAC8wC,GAAA,CACClB,YAAa+B,EACbpP,MAAOrI,EAAOW,WAIH,aAAdyW,GACCvyC,EAAAiB,IAACixC,GAAA,CACCC,wBACAC,mCAKH,MAAI,CAAA9oC,UAAU,0DACb9I,SAACP,EAAAA,KAAA,MAAA,CAAIqJ,UAAU,YACb9I,SAAA,CAAAR,EAAAC,KAAC,SAAA,CACCqL,QAASmnC,EACTnpC,UAAU,0JAEV9I,SAAA,GAAAS,IAAC,QAAKT,SAAE,OAAO,gBAIjBP,KAAC,MAAI,CAAAqJ,UAAU,uDAAuD9I,SAAA,CAAA,cAAA,IACrD4F,MAAOysC,mBAAmB,sBC1O1CC,GAAgC,CAC3C1iC,SAAU,GAAIJ,UAAW,GAAIO,KAAM,GAAIG,SAAU,GAAI5O,SAAU,GAAIiP,UAAW,GAC9EG,kBAAmB,GAAIw3B,MAAO,GAAIqK,MAAO,GAAIC,UAAW,GAAIC,YAAa,GACzEh8B,UAAW,GAAII,aAAc,GAAI67B,WAAY,GAAIC,cAAe,GAAIC,kBAAmB,GACvFC,kBAAmB,GAAIC,YAAa,GAAIC,eAAgB,GAAIC,cAAe,GAC3EC,iBAAkB,GAAIC,WAAY,GAAIC,cAAe,GAAIC,aAAc,GACvEC,gBAAiB,GAAIh+B,YAAa,GAAIC,WAAY,GAAII,YAAa,GAAIC,WAAY,GACnF29B,gBAAiB,GAAIC,mBAAoB,GAEzCC,mBAAoB,aACpBC,yBAA0B,uFAC1BC,kBAAmB,CAAC,WAAY,gBAAiB,SAAU,UAAW,iBAEtEC,UAAW,GAAIC,gBAAiB,GAAIC,aAAc,GAAIC,WAAY,GAAIC,aAAc,KACpFC,QAAS,GAAIC,QAAS,GAAIC,cAAe,GAAIC,QAAS,GAAIC,OAAQ,UAClEC,YAAa,sBAAuBC,YAAa,GAAIC,eAAgB,GACrEC,aAAa,EAAMC,cAAc,EAAMC,kBAAmB,GAAIC,uBAAwB,GAEtFC,aAAc,GAAIC,WAAY,GAAIC,YAAa,GAAIC,WAAY,GAAIC,UAAW,GAC9EC,WAAY,GAAIC,YAAa,GAAIC,UAAW,GAAIC,YAAa,GAAIC,WAAY,GAC7EC,aAAc,GAAIC,aAAc,GAAIC,WAAY,GAAIC,SAAU,GAAIC,UAAW,GAE7EC,mBAAoB,GAAIC,gBAAiB,GAAIC,iBAAkB,GAAIC,aAAc,GACjFC,SAAU,GAAIC,cAAe,GAAIC,gBAAiB,GAAIC,UAAW,GACjEC,YAAa,GAAIC,eAAgB,GAAIC,cAAe,GAAIC,iBAAkB,GAC1EC,eAAgB,GAAIC,iBAAkB,GAAIC,gBAAiB,GAAIC,YAAa,GAE5EC,aAAa,EAAMC,WAAW,EAAMC,cAAe,wLACnDC,YAAY,EAAMC,WAAY,WAAYC,qBAAqB,EAAMC,0BAA0B,EAC/FC,oBAAoB,EAAMC,kBAAmB,OAAQC,sBAAsB,EAAMC,oBAAqB,kCACtGC,yBAAyB,EAAMC,uBAAwB,uDAAwDC,oBAAoB,EAAMC,sBAAuB,KAChKC,iBAAiB,EAAMC,oBAAqB,OAAQC,qBAAqB,EAAOC,mBAAmB,EAAOC,mBAAoB,GAC9HC,gBAAgB,EAAMC,cAAc,EAAMC,gBAAiB,SAIhDC,GAAmC,CAC9C,CACE7rC,MAAO,WACP8rC,OAAQ,CACN,CAAEtwB,IAAK,WAAY5Y,MAAO,QAASlL,KAAM,OAAQyP,YAAa,MAAO4kC,gBAAgB,GACrF,CAAEvwB,IAAK,YAAa5Y,MAAO,KAAMlL,KAAM,OAAQyP,YAAa,KAAM4kC,gBAAgB,GAClF,CAAEvwB,IAAK,OAAQ5Y,MAAO,QAASlL,KAAM,OAAQyP,YAAa,YAAa4kC,gBAAgB,GACvF,CAAEvwB,IAAK,WAAY5Y,MAAO,MAAOlL,KAAM,OAAQyP,YAAa,kBAAmB4kC,gBAAgB,GAC/F,CAAEvwB,IAAK,WAAY5Y,MAAO,KAAMlL,KAAM,OAAQyP,YAAa,KAAM4kC,gBAAgB,GACjF,CAAEvwB,IAAK,YAAa5Y,MAAO,KAAMlL,KAAM,OAAQyP,YAAa,UAAW4kC,gBAAgB,GACvF,CAAEvwB,IAAK,oBAAqB5Y,MAAO,QAASlL,KAAM,OAAQyP,YAAa,KAAM4kC,gBAAgB,GAC7F,CAAEvwB,IAAK,QAAS5Y,MAAO,MAAOlL,KAAM,QAASyP,YAAa,kBAC1D,CAAEqU,IAAK,QAAS5Y,MAAO,OAAQlL,KAAM,MAAOyP,YAAa,sBAG7D,CACEnH,MAAO,WACP8rC,OAAQ,CACN,CAAEtwB,IAAK,YAAa5Y,MAAO,aAAclL,KAAM,MAAOyP,YAAa,+BACnE,CAAEqU,IAAK,cAAe5Y,MAAO,eAAgBlL,KAAM,MAAOyP,YAAa,sCAG3E,CACEnH,MAAO,aACP8rC,OAAQ,CACN,CAAEtwB,IAAK,oBAAqB5Y,MAAO,kBAAmBlL,KAAM,SAAUonC,IAAK,EAAGlxB,IAAK,EAAGzG,YAAa,KACnG,CAAEqU,IAAK,yBAA0B5Y,MAAO,kBAAmBlL,KAAM,SAAUonC,IAAK,EAAGlxB,IAAK,EAAGzG,YAAa,OAG5G,CACEnH,MAAO,sBACP8rC,OAAQ,CACN,CAAEtwB,IAAK,YAAa5Y,MAAO,UAAWlL,KAAM,OAAQyP,YAAa,YAAa4kC,gBAAgB,GAC9F,CAAEvwB,IAAK,eAAgB5Y,MAAO,WAAYlL,KAAM,WAAY6Z,KAAM,EAAGpK,YAAa,oBAAqB4kC,gBAAgB,GACvH,CAAEvwB,IAAK,UAAW5Y,MAAO,UAAWlL,KAAM,OAAQyP,YAAa,aAAc4kC,gBAAgB,KAGjG,CACE/rC,MAAO,cACP8rC,OAAQ,CACN,CAAEtwB,IAAK,aAAc5Y,MAAO,WAAYlL,KAAM,OAAQyP,YAAa,QAAS4kC,gBAAgB,GAC5F,CAAEvwB,IAAK,gBAAiB5Y,MAAO,YAAalL,KAAM,OAAQyP,YAAa,kBAAmB4kC,gBAAgB,GAC1G,CAAEvwB,IAAK,oBAAqB5Y,MAAO,aAAclL,KAAM,WAAY6Z,KAAM,EAAGpK,YAAa,aAAc4kC,gBAAgB,GACvH,CAAEvwB,IAAK,oBAAqB5Y,MAAO,aAAclL,KAAM,WAAY6Z,KAAM,EAAGpK,YAAa,aAAc4kC,gBAAgB,GACvH,CAAEvwB,IAAK,iBAAkB5Y,MAAO,WAAYlL,KAAM,OAAQyP,YAAa,kBAAmB4kC,gBAAgB,GAC1G,CAAEvwB,IAAK,oBAAqB5Y,MAAO,WAAYlL,KAAM,OAAQyP,YAAa,QAAS4kC,gBAAgB,KAGvG,CACE/rC,MAAO,mBACP8rC,OAAQ,CACN,CAAEtwB,IAAK,kBAAmB5Y,MAAO,gBAAiBlL,KAAM,OAAQyP,YAAa,UAAW4kC,gBAAgB,GACxG,CAAEvwB,IAAK,qBAAsB5Y,MAAO,iBAAkBlL,KAAM,OAAQyP,YAAa,qBAAsB4kC,gBAAgB,KAG3H,CACE/rC,MAAO,gBACP8rC,OAAQ,CACN,CAAEtwB,IAAK,cAAe5Y,MAAO,YAAalL,KAAM,OAAQyP,YAAa,QAAS4kC,gBAAgB,GAC9F,CAAEvwB,IAAK,iBAAkB5Y,MAAO,aAAclL,KAAM,OAAQyP,YAAa,oBAAqB4kC,gBAAgB,KAGlH,CACE/rC,MAAO,wBACP8rC,OAAQ,CACN,CAAEtwB,IAAK,qBAAsB5Y,MAAO,WAAYlL,KAAM,OAAQyP,YAAa,aAAc4kC,gBAAgB,GACzG,CAAEvwB,IAAK,2BAA4B5Y,MAAO,WAAYlL,KAAM,WAAYyP,YAAa,iBAAkB4kC,gBAAgB,GACvH,CAAEvwB,IAAK,oBAAqB5Y,MAAO,cAAelL,KAAM,QAASyP,YAAa,0BAGlF,CACEnH,MAAO,iBACP8rC,OAAQ,CACN,CAAEtwB,IAAK,gBAAiB5Y,MAAO,cAAelL,KAAM,OAAQyP,YAAa,OAAQ4kC,gBAAgB,GACjG,CAAEvwB,IAAK,mBAAoB5Y,MAAO,eAAgBlL,KAAM,OAAQyP,YAAa,kBAAmB4kC,gBAAgB,GAChH,CAAEvwB,IAAK,sBAAuB5Y,MAAO,aAAclL,KAAM,OAAQyP,YAAa,eAAgB4kC,gBAAgB,GAC9G,CAAEvwB,IAAK,4BAA6B5Y,MAAO,aAAclL,KAAM,WAAYyP,YAAa,4CAA6C4kC,gBAAgB,GACrJ,CAAEvwB,IAAK,yBAA0B5Y,MAAO,gBAAiBlL,KAAM,QAASyP,YAAa,0BAGzF,CACEnH,MAAO,cACP8rC,OAAQ,CACN,CAAEtwB,IAAK,aAAc5Y,MAAO,WAAYlL,KAAM,OAAQyP,YAAa,gBAAiB4kC,gBAAgB,GACpG,CAAEvwB,IAAK,gBAAiB5Y,MAAO,YAAalL,KAAM,OAAQyP,YAAa,eAAgB4kC,gBAAgB,KAG3G,CACE/rC,MAAO,gBACP8rC,OAAQ,CACN,CAAEtwB,IAAK,eAAgB5Y,MAAO,aAAclL,KAAM,OAAQyP,YAAa,MAAO4kC,gBAAgB,GAC9F,CAAEvwB,IAAK,kBAAmB5Y,MAAO,cAAelL,KAAM,OAAQyP,YAAa,eAAgB4kC,gBAAgB,KAG/G,CACE/rC,MAAO,WACP8rC,OAAQ,CACN,CAAEtwB,IAAK,cAAe5Y,MAAO,UAAWlL,KAAM,OAAQyP,YAAa,MACnE,CAAEqU,IAAK,aAAc5Y,MAAO,UAAWlL,KAAM,OAAQyP,YAAa,OAAQ4kC,gBAAgB,GAC1F,CAAEvwB,IAAK,cAAe5Y,MAAO,UAAWlL,KAAM,OAAQyP,YAAa,OACnE,CAAEqU,IAAK,aAAc5Y,MAAO,UAAWlL,KAAM,OAAQyP,YAAa,QAAS4kC,gBAAgB,GAC3F,CAAEvwB,IAAK,cAAe5Y,MAAO,UAAWlL,KAAM,OAAQyP,YAAa,MACnE,CAAEqU,IAAK,aAAc5Y,MAAO,UAAWlL,KAAM,OAAQyP,YAAa,UAAW4kC,gBAAgB,KAIjG,CACE/rC,MAAO,eACP8rC,OAAQ,CACN,CAAEtwB,IAAK,YAAa5Y,MAAO,SAAUlL,KAAM,OAAQyP,YAAa,eAChE,CAAEqU,IAAK,kBAAmB5Y,MAAO,SAAUlL,KAAM,WAAY6Z,KAAM,EAAGpK,YAAa,qEACnF,CAAEqU,IAAK,eAAgB5Y,MAAO,eAAgBlL,KAAM,OAAQyP,YAAa,6BACzE,CAAEqU,IAAK,aAAc5Y,MAAO,MAAOlL,KAAM,OAAQyP,YAAa,OAC9D,CAAEqU,IAAK,eAAgB5Y,MAAO,SAAUlL,KAAM,SAAUyP,YAAa,QAAS6kC,QAAS,CACrF,CAAEhlC,MAAO,KAAMpE,MAAO,YACtB,CAAEoE,MAAO,KAAMpE,MAAO,gBACtB,CAAEoE,MAAO,KAAMpE,MAAO,YACtB,CAAEoE,MAAO,KAAMpE,MAAO,aAExB,CAAE4Y,IAAK,UAAW5Y,MAAO,UAAWlL,KAAM,MAAOyP,YAAa,+BAGlE,CACEnH,MAAO,qCACP8rC,OAAQ,CACN,CAAEtwB,IAAK,UAAW5Y,MAAO,QAASlL,KAAM,OAAQyP,YAAa,eAC7D,CAAEqU,IAAK,gBAAiB5Y,MAAO,QAASlL,KAAM,WAAY6Z,KAAM,EAAGpK,YAAa,iCAChF,CAAEqU,IAAK,UAAW5Y,MAAO,aAAclL,KAAM,MAAOyP,YAAa,0CACjE,CAAEqU,IAAK,SAAU5Y,MAAO,QAASlL,KAAM,SAAUyP,YAAa,QAAS6kC,QAAS,CAC9E,CAAEhlC,MAAO,UAAWpE,MAAO,kBAC3B,CAAEoE,MAAO,UAAWpE,MAAO,iBAC3B,CAAEoE,MAAO,UAAWpE,MAAO,oBAIjC,CACE5C,MAAO,kBACP8rC,OAAQ,CACN,CAAEtwB,IAAK,cAAe5Y,MAAO,kBAAmBlL,KAAM,SAAUyP,YAAa,WAAY6kC,QAAS,CAChG,CAAEhlC,MAAO,UAAWpE,MAAO,gBAC3B,CAAEoE,MAAO,sBAAuBpE,MAAO,kCACvC,CAAEoE,MAAO,MAAOpE,MAAO,WACvB,CAAEoE,MAAO,SAAUpE,MAAO,mBAE5B,CAAE4Y,IAAK,cAAe5Y,MAAO,iBAAkBlL,KAAM,OAAQyP,YAAa,eAC1E,CAAEqU,IAAK,iBAAkB5Y,MAAO,iBAAkBlL,KAAM,OAAQyP,YAAa,iBAGjF,CACEnH,MAAO,cACP8rC,OAAQ,CACN,CAAEtwB,IAAK,cAAe5Y,MAAO,eAAgBlL,KAAM,WAAYyP,YAAa,mCAC5E,CAAEqU,IAAK,eAAgB5Y,MAAO,YAAalL,KAAM,WAAYyP,YAAa,wCAG9E,CACEnH,MAAO,eACP8rC,OAAQ,CACN,CAAEtwB,IAAK,oBAAqB5Y,MAAO,sBAAuBlL,KAAM,OAAQyP,YAAa,gBACrF,CAAEqU,IAAK,yBAA0B5Y,MAAO,mBAAoBlL,KAAM,OAAQyP,YAAa,kCAI3F,CACEnH,MAAO,gBACP8rC,OAAQ,CACN,CAAEtwB,IAAK,eAAgB5Y,MAAO,gBAAiBlL,KAAM,MAAOyP,YAAa,oCACzE,CAAEqU,IAAK,aAAc5Y,MAAO,cAAelL,KAAM,MAAOyP,YAAa,kCACrE,CAAEqU,IAAK,cAAe5Y,MAAO,eAAgBlL,KAAM,MAAOyP,YAAa,iCACvE,CAAEqU,IAAK,aAAc5Y,MAAO,cAAelL,KAAM,MAAOyP,YAAa,oCACrE,CAAEqU,IAAK,YAAa5Y,MAAO,aAAclL,KAAM,MAAOyP,YAAa,oCAGvE,CACEnH,MAAO,iBACP8rC,OAAQ,CACN,CAAEtwB,IAAK,aAAc5Y,MAAO,cAAelL,KAAM,MAAOyP,YAAa,mCACrE,CAAEqU,IAAK,cAAe5Y,MAAO,eAAgBlL,KAAM,MAAOyP,YAAa,qCAG3E,CACEnH,MAAO,eACP8rC,OAAQ,CACN,CAAEtwB,IAAK,YAAa5Y,MAAO,aAAclL,KAAM,MAAOyP,YAAa,kCACnE,CAAEqU,IAAK,WAAY5Y,MAAO,YAAalL,KAAM,MAAOyP,YAAa,gCACjE,CAAEqU,IAAK,aAAc5Y,MAAO,cAAelL,KAAM,MAAOyP,YAAa,gCACrE,CAAEqU,IAAK,eAAgB5Y,MAAO,cAAelL,KAAM,MAAOyP,YAAa,qCAG3E,CACEnH,MAAO,kBACP8rC,OAAQ,CACN,CAAEtwB,IAAK,cAAe5Y,MAAO,eAAgBlL,KAAM,MAAOyP,YAAa,2BACvE,CAAEqU,IAAK,aAAc5Y,MAAO,cAAelL,KAAM,MAAOyP,YAAa,iCACrE,CAAEqU,IAAK,eAAgB5Y,MAAO,WAAYlL,KAAM,MAAOyP,YAAa,wCAGxE,CACEnH,MAAO,iBACP8rC,OAAQ,CACN,CAAEtwB,IAAK,YAAa5Y,MAAO,oBAAqBlL,KAAM,MAAOyP,YAAa,qCAI9E,CACEnH,MAAO,aACP8rC,OAAQ,CACN,CAAEtwB,IAAK,qBAAsB5Y,MAAO,wBAAyBlL,KAAM,OAAQyP,YAAa,eACxF,CAAEqU,IAAK,kBAAmB5Y,MAAO,oBAAqBlL,KAAM,OAAQyP,YAAa,mBACjF,CAAEqU,IAAK,mBAAoB5Y,MAAO,iBAAkBlL,KAAM,OAAQyP,YAAa,+BAC/E,CAAEqU,IAAK,eAAgB5Y,MAAO,YAAalL,KAAM,OAAQyP,YAAa,gBAG1E,CACEnH,MAAO,eACP8rC,OAAQ,CACN,CAAEtwB,IAAK,WAAY5Y,MAAO,iBAAkBlL,KAAM,OAAQyP,YAAa,WACvE,CAAEqU,IAAK,gBAAiB5Y,MAAO,yBAA0BlL,KAAM,OAAQyP,YAAa,mBACpF,CAAEqU,IAAK,kBAAmB5Y,MAAO,oBAAqBlL,KAAM,OAAQyP,YAAa,qBAGrF,CACEnH,MAAO,kBACP8rC,OAAQ,CACN,CAAEtwB,IAAK,YAAa5Y,MAAO,aAAclL,KAAM,OAAQyP,YAAa,mCACpE,CAAEqU,IAAK,cAAe5Y,MAAO,mBAAoBlL,KAAM,OAAQyP,YAAa,gBAC5E,CAAEqU,IAAK,iBAAkB5Y,MAAO,mBAAoBlL,KAAM,OAAQyP,YAAa,YAGnF,CACEnH,MAAO,gBACP8rC,OAAQ,CACN,CAAEtwB,IAAK,gBAAiB5Y,MAAO,kBAAmBlL,KAAM,OAAQyP,YAAa,aAC7E,CAAEqU,IAAK,mBAAoB5Y,MAAO,qBAAsBlL,KAAM,OAAQyP,YAAa,mBACnF,CAAEqU,IAAK,iBAAkB5Y,MAAO,mBAAoBlL,KAAM,OAAQyP,YAAa,qBAGnF,CACEnH,MAAO,cACP8rC,OAAQ,CACN,CAAEtwB,IAAK,mBAAoB5Y,MAAO,sBAAuBlL,KAAM,OAAQyP,YAAa,mBACpF,CAAEqU,IAAK,kBAAmB5Y,MAAO,0BAA2BlL,KAAM,OAAQyP,YAAa,YACvF,CAAEqU,IAAK,cAAe5Y,MAAO,gBAAiBlL,KAAM,OAAQyP,YAAa,qBAI7E,CACEnH,MAAO,cACP8rC,OAAQ,CACN,CAAEtwB,IAAK,cAAe5Y,MAAO,cAAelL,KAAM,WAAYyP,YAAa,gCAC3E,CAAEqU,IAAK,YAAa5Y,MAAO,oCAAqClL,KAAM,WAAYyP,YAAa,kCAC/F,CAAEqU,IAAK,gBAAiB5Y,MAAO,UAAWlL,KAAM,WAAY6Z,KAAM,EAAGpK,YAAa,uCAClF,CAAEqU,IAAK,aAAc5Y,MAAO,4CAA6ClL,KAAM,WAAYyP,YAAa,kCACxG,CAAEqU,IAAK,aAAc5Y,MAAO,iBAAkBlL,KAAM,OAAQyP,YAAa,mBAG7E,CACEnH,MAAO,eACP8rC,OAAQ,CACN,CAAEtwB,IAAK,sBAAuB5Y,MAAO,aAAclL,KAAM,WAAYyP,YAAa,yBAClF,CAAEqU,IAAK,2BAA4B5Y,MAAO,sBAAuBlL,KAAM,WAAYyP,YAAa,0BAChG,CAAEqU,IAAK,qBAAsB5Y,MAAO,sBAAuBlL,KAAM,WAAYyP,YAAa,mBAC1F,CAAEqU,IAAK,oBAAqB5Y,MAAO,oBAAqBlL,KAAM,SAAUyP,YAAa,UAAW6kC,QAAS,CACvG,CAAEhlC,MAAO,OAAQpE,MAAO,oBACxB,CAAEoE,MAAO,aAAcpE,MAAO,2BAC9B,CAAEoE,MAAO,aAAcpE,MAAO,4BAEhC,CAAE4Y,IAAK,uBAAwB5Y,MAAO,sBAAuBlL,KAAM,WAAYyP,YAAa,qBAC5F,CAAEqU,IAAK,sBAAuB5Y,MAAO,oBAAqBlL,KAAM,SAAUyP,YAAa,UAAW6kC,QAAS,CACzG,CAAEhlC,MAAO,cAAepE,MAAO,8BAC/B,CAAEoE,MAAO,kCAAmCpE,MAAO,kDACnD,CAAEoE,MAAO,cAAepE,MAAO,6BAIrC,CACE5C,MAAO,aACP8rC,OAAQ,CACN,CAAEtwB,IAAK,0BAA2B5Y,MAAO,yBAA0BlL,KAAM,WAAYyP,YAAa,sBAClG,CAAEqU,IAAK,yBAA0B5Y,MAAO,uBAAwBlL,KAAM,WAAY6Z,KAAM,EAAGpK,YAAa,0DAG5G,CACEnH,MAAO,WACP8rC,OAAQ,CACN,CAAEtwB,IAAK,qBAAsB5Y,MAAO,gBAAiBlL,KAAM,WAAYyP,YAAa,mCACpF,CAAEqU,IAAK,wBAAyB5Y,MAAO,eAAgBlL,KAAM,OAAQyP,YAAa,iBAGtF,CACEnH,MAAO,YACP8rC,OAAQ,CACN,CAAEtwB,IAAK,kBAAmB5Y,MAAO,aAAclL,KAAM,WAAYyP,YAAa,+BAC9E,CAAEqU,IAAK,sBAAuB5Y,MAAO,kBAAmBlL,KAAM,OAAQyP,YAAa,cACnF,CAAEqU,IAAK,sBAAuB5Y,MAAO,aAAclL,KAAM,WAAYyP,YAAa,2BAClF,CAAEqU,IAAK,oBAAqB5Y,MAAO,gBAAiBlL,KAAM,WAAYyP,YAAa,8BACnF,CAAEqU,IAAK,qBAAsB5Y,MAAO,qBAAsBlL,KAAM,OAAQyP,YAAa,2BAGzF,CACEnH,MAAO,aACP8rC,OAAQ,CACN,CAAEtwB,IAAK,iBAAkB5Y,MAAO,YAAalL,KAAM,WAAYyP,YAAa,8BAC5E,CAAEqU,IAAK,eAAgB5Y,MAAO,YAAalL,KAAM,WAAYyP,YAAa,qBAC1E,CAAEqU,IAAK,kBAAmB5Y,MAAO,QAASlL,KAAM,SAAUyP,YAAa,WAAY6kC,QAAS,CAC1F,CAAEhlC,MAAO,SAAUpE,MAAO,gBAC1B,CAAEoE,MAAO,QAASpE,MAAO,cACzB,CAAEoE,MAAO,SAAUpE,MAAO,eAC1B,CAAEoE,MAAO,UAAWpE,MAAO,qBClVtBqpC,GAAqB,CAACC,EAAiBluC,IACrC,OAATA,EAAsBkuC,EACb,OAATluC,EAAsB,GAAGkuC,MAChB,OAATluC,EAAsB,GAAGkuC,MACtBA,EAkCIC,GAAyB7rC,IACpC,OAAQA,GACN,IAAK,UAAkB,MAAA,WACvB,IAAK,aAAqB,MAAA,WAC1B,IAAK,MAAc,MAAA,YACnB,IAAK,SAAiB,MAAA,YACtB,IAAK,YAAoB,MAAA,WACzB,IAAK,WAAmB,MAAA,WACxB,QAAgB,MAAA,WASP8rC,GAA+B9rC,IAC1C,OAAQA,GACN,IAAK,UAAkB,MAAA,4BACvB,IAAK,aAAqB,MAAA,uBAC1B,IAAK,MAAc,MAAA,uBACnB,IAAK,SAAiB,MAAA,4BACtB,IAAK,YAAoB,MAAA,mCACzB,IAAK,WAAmB,MAAA,qBACxB,QAAgB,MAAA,+BASP+rC,GAAuB/rC,IAClC,IAAKA,EAAsB,OAAAurC,GAE3B,OAAQvrC,GACN,IAAK,UAEH,OAAOurC,GAAY/1B,OACjBw2B,GAAAA,EAAQtsC,MAAM0E,SAAS,UACvB4nC,EAAQtsC,MAAM0E,SAAS,UACvB4nC,EAAQtsC,MAAM0E,SAAS,YAG3B,IAAK,aAEH,OAAOmnC,GAAY/1B,OAAOw2B,GACxBA,EAAQtsC,MAAM0E,SAAS,SACvB4nC,EAAQtsC,MAAM0E,SAAS,UACvB4nC,EAAQtsC,MAAM0E,SAAS,eACvB4nC,EAAQtsC,MAAM0E,SAAS,WACvB4nC,EAAQtsC,MAAM0E,SAAS,UACvB4nC,EAAQtsC,MAAM0E,SAAS,aACvB4nC,EAAQtsC,MAAM0E,SAAS,UACvB4nC,EAAQtsC,MAAM0E,SAAS,YACvB4nC,EAAQtsC,MAAM0E,SAAS,OAG3B,IAAK,MAEH,OAAOmnC,GAAY/1B,OAAOw2B,GACxBA,EAAQtsC,MAAM0E,SAAS,QACvB4nC,EAAQtsC,MAAM0E,SAAS,eACvB4nC,EAAQtsC,MAAM0E,SAAS,iBACvB4nC,EAAQtsC,MAAM0E,SAAS,UACvB4nC,EAAQtsC,MAAM0E,SAAS,WAG3B,IAAK,SAEH,OAAOmnC,GAAY/1B,OACjBw2B,GAAAA,EAAQtsC,MAAM0E,SAAS,UACvB4nC,EAAQtsC,MAAM0E,SAAS,eACvB4nC,EAAQtsC,MAAM0E,SAAS,gBACvB4nC,EAAQtsC,MAAM0E,SAAS,cACvB4nC,EAAQtsC,MAAM0E,SAAS,iBACvB4nC,EAAQtsC,MAAM0E,SAAS,gBAG3B,IAAK,YAEH,OAAOmnC,GAAY/1B,OAAOw2B,GACxBA,EAAQtsC,MAAM0E,SAAS,YACvB4nC,EAAQtsC,MAAM0E,SAAS,cACvB4nC,EAAQtsC,MAAM0E,SAAS,UACvB4nC,EAAQtsC,MAAM0E,SAAS,UACvB4nC,EAAQtsC,MAAM0E,SAAS,aAG3B,IAAK,WAEH,OAAOmnC,GAAY/1B,OACjBw2B,GAAAA,EAAQtsC,MAAM0E,SAAS,aACvB4nC,EAAQtsC,MAAM0E,SAAS,aACvB4nC,EAAQtsC,MAAM0E,SAAS,YACvB4nC,EAAQtsC,MAAM0E,SAAS,WACvB4nC,EAAQtsC,MAAM0E,SAAS,WACvB4nC,EAAQtsC,MAAM0E,SAAS,YAG3B,QACS,OAAAmnC,KC9IPU,GAA6C,EACjDC,QACAxlC,QACAC,WACAtI,cAAc,KACd8C,eAGA,MAAMgrC,EAA0B,KAC1B,IAACD,EAAMT,iBAAmBtqC,EAAiB,OAAA,KAEzC,MAAA7C,EAAU6C,EAAS+qC,EAAMhxB,KACzB3c,EAAU4C,EAASwqC,GAAmBO,EAAMhxB,IAAe,OAC3D1c,EAAU2C,EAASwqC,GAAmBO,EAAMhxB,IAAe,OAG/D,SAAApoB,KAAC,MAAI,CAAAqJ,UAAU,0BACb9I,SAAA,CAAAP,OAAC,QAAKqJ,UAAW,sBAAqBmC,EAAU,oEAAsE,8CAAgDjL,SAAA,CAAA,QAC9JiL,EAAU,IAAM,cAEvB,OAAK,CAAAnC,UAAW,sBAAqBoC,EAAU,oEAAsE,8CAAgDlL,SAAA,CAAA,QAC9JkL,EAAU,IAAM,cAEvB,OAAK,CAAApC,UAAW,sBAAqBqC,EAAU,oEAAsE,8CAAgDnL,SAAA,CAAA,QAC9JmL,EAAU,IAAM,WAgI9B,cACG,MACE,CAAAnL,SAAA,CAAe,aAAf64C,EAAM90C,MACLvE,EAAAiB,IAAC,QAAA,CACC2S,QAASylC,EAAMhxB,IACf/e,UAAU,kEAET9I,SAAM64C,EAAA5pC,QAhIK,YAClB,OAAQ4pC,EAAM90C,MACZ,IAAK,WACH,OAEKvE,EAAAC,KAAA2P,WAAA,CAAApP,SAAA,CAAwB84C,IACzBt5C,EAAAiB,IAAC,WAAA,CACCmS,GAAIimC,EAAMhxB,IACVxU,MAAQA,GAAoB,GAC5BC,SAAWP,GAAMO,EAASP,EAAEQ,OAAOF,OACnCuK,KAAMi7B,EAAMj7B,MAAQ,EACpBpK,YAAaqlC,EAAMrlC,YACnB1K,UAAU,oNAKlB,IAAK,SAED,OAAAtJ,EAAAiB,IAAC,SAAA,CACCmS,GAAIimC,EAAMhxB,IACVxU,MAAQA,GAAoB,GAC5BC,SAAWP,GAAMO,EAASP,EAAEQ,OAAOF,OACnCvK,UAAU,+LAET9I,SAAM,OAAAgb,EAAA69B,EAAAR,kBAAS1tC,IAAKknC,GAClBryC,EAAAiB,IAAA,SAAA,CAA0B4S,MAAOw+B,EAAOx+B,MACtCrT,SAAA6xC,EAAO5iC,OADG4iC,EAAOx+B,UAO5B,IAAK,WAED,SAAA5T,KAAC,MAAI,CAAAqJ,UAAU,8BACb9I,SAAA,CAAAR,EAAAiB,IAAC,QAAA,CACCmS,GAAIimC,EAAMhxB,IACV9jB,KAAK,WACLinC,QAAU33B,IAAqB,EAC/BC,SAAWP,GAAMO,EAASP,EAAEQ,OAAOy3B,SACnCliC,UAAU,wLAEZrI,EAAAA,IAAC,SAAM2S,QAASylC,EAAMhxB,IAAK/e,UAAU,2CAClC9I,WAAMwT,iBAKf,IAAK,SAED,OAAAhU,EAAAiB,IAAC,QAAA,CACCmS,GAAIimC,EAAMhxB,IACV9jB,KAAK,SACLsP,MAAQA,GAAoB,GAC5BC,SAAWP,GAAMO,EAASkgB,SAASzgB,EAAEQ,OAAOF,QAAU,GACtD83B,IAAK0N,EAAM1N,IACXlxB,IAAK4+B,EAAM5+B,IACXzG,YAAaqlC,EAAMrlC,YACnB1K,UAAU,iMAIhB,IAAK,QAED,SAAArJ,KAAC,MAAI,CAAAqJ,UAAU,YACV9I,SAAA,EAAsBqT,GAAA,IAAI1I,IAAI,CAAC8B,EAAMnH,IACtC7F,EAAAA,KAAC,MAAgB,CAAAqJ,UAAU,0BACzB9I,SAAA,CAAAR,EAAAiB,IAAC,QAAA,CACCsD,KAAK,OACLsP,MAAO5G,EACP6G,SAAWP,IACH,MAAAgmC,EAAW,IAAK1lC,GACb/N,EAAAA,GAASyN,EAAEQ,OAAOF,MAC3BC,EAASylC,IAEXjwC,UAAU,sKACV0K,YAAaqlC,EAAMrlC,cAErBhU,EAAAiB,IAAC,SAAA,CACCsD,KAAK,SACL+G,QAAS,KACP,MAAMiuC,EAAY1lC,EAAmB8O,OAAO,CAAC2E,EAAGxe,IAAMA,IAAMhD,GAC5DgO,EAASylC,IAEXjwC,UAAU,0EACX9I,SAAA,SAnBOsF,IAwBZ9F,EAAAC,KAAC,SAAA,CACCsE,KAAK,SACL+G,QAAS,KACP,MAAMiuC,EAAW,IAAM1lC,GAAsB,GAAK,IAClDC,EAASylC,IAEXjwC,UAAU,4GAEV9I,SAAA,GAACS,IAAA0mB,GAAA,CAAOxd,KAAM,KAAM,eAK5B,QACE,OAEKnK,EAAAC,KAAA2P,WAAA,CAAApP,SAAA,CAAwB84C,IACzBt5C,EAAAiB,IAAC,QAAA,CACCmS,GAAIimC,EAAMhxB,IACV9jB,KAAM80C,EAAM90C,KACZsP,MAAQA,GAAoB,GAC5BC,SAAWP,GAAMO,EAASP,EAAEQ,OAAOF,OACnCG,YAAaqlC,EAAMrlC,YACnB1K,UAAU,sMAiBjBkwC,GACe,aAAfH,EAAM90C,MACLvE,EAAAiB,IAAC,QAAA,CACC2S,QAASylC,EAAMhxB,IACf/e,UAAU,kEAET9I,SAAM64C,EAAA5pC,YCzJXgqC,GAAkD,EACtDN,UACAvxB,aACAuiB,WACA3+B,cACA8C,WACAwF,WACA4lC,sBAGEz5C,KAAC,MAAI,CAAAqJ,UAAU,6GAEb9I,SAAA,CAAAR,EAAAiB,IAAC,SAAA,CACCqK,QAAS6+B,EACT7gC,UAAU,iFAEV9I,SAAAR,EAAAC,KAAC,KAAG,CAAAqJ,UAAU,0EACZ9I,SAAA,CAAAS,EAAAA,IAACoiB,EAAO,CAAA/Z,UAAU,mBAAmBa,KAAM,KAC1CgvC,EAAQtsC,MACR+a,EACC5nB,EAAAiB,IAAC6f,EAAc,CAAAxX,UAAU,wBAAwBa,KAAM,KAEtDlJ,EAAAA,IAAAgnB,GAAA,CAAe3e,UAAU,wBAAwBa,KAAM,YAM9DlJ,IAACkS,IACE3S,SACConB,GAAA5nB,EAAAiB,IAACuI,GAAOC,IAAP,CACCC,QAAS,CAAEpJ,OAAQ,EAAGqJ,QAAS,GAC/BjE,QAAS,CAAEpF,OAAQ,OAAQqJ,QAAS,GACpCoG,KAAM,CAAEzP,OAAQ,EAAGqJ,QAAS,GAC5BC,WAAY,CAAEtB,SAAU,GAAKE,KAAM,aACnCc,UAAU,kBAEV9I,SAAAP,EAAAA,KAAC,MAAI,CAAAqJ,UAAW,2DACd6vC,EAAQtsC,MAAM0E,SAAS,WAAa,OAAS,IAG5C/Q,SAAA,CAAA24C,EAAQR,OAAO7e,KAAU6f,GAAAA,EAAEf,iBAC1B54C,EAAAiB,IAAC2kC,GAAA,CACCC,eAAgBr6B,EAChBsI,SAAU4lC,IAKdz4C,EAAAA,IAAC,OAAIqI,UAAW,eACd6vC,EAAQtsC,MAAM0E,SAAS,aACvB4nC,EAAQtsC,MAAM0E,SAAS,YACvB4nC,EAAQtsC,MAAM0E,SAAS,kBACvB4nC,EAAQtsC,MAAM0E,SAAS,cACvB4nC,EAAQtsC,MAAM0E,SAAS,gBACvB4nC,EAAQtsC,MAAM0E,SAAS,aACvB4nC,EAAQtsC,MAAM0E,SAAS,UACvB4nC,EAAQtsC,MAAM0E,SAAS,cACnB,cACA,6CAEH/Q,SAAQ24C,EAAAR,OAAOxtC,IAAKkuC,IAEb,MAAAO,EAAYP,EAAMT,eACpBE,GAAmBO,EAAMhxB,IAAe7c,GACxC6tC,EAAMhxB,IAGR,OAAAroB,EAAAiB,IAACm4C,GAAA,CAECC,QACAxlC,MAAOvF,EAASsrC,IAA8B,aAAfP,EAAM90C,OAA6C,UAAf80C,EAAM90C,KAAmB,GAAK,IACjGuP,SAAWD,GAAUC,EAAS8lC,EAAW/lC,GACzCrI,cACA8C,YALK+qC,EAAMhxB"}